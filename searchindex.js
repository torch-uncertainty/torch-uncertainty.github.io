Search.setIndex({"docnames": ["api", "auto_tutorials/index", "auto_tutorials/sg_execution_times", "auto_tutorials/tutorial_bayesian", "auto_tutorials/tutorial_der_cubic", "auto_tutorials/tutorial_pe_cifar10", "auto_tutorials/tutorial_scaler", "contributing", "generated/torch_uncertainty.baselines.classification.ResNet", "generated/torch_uncertainty.baselines.classification.VGG", "generated/torch_uncertainty.baselines.classification.WideResNet", "generated/torch_uncertainty.baselines.regression.MLP", "generated/torch_uncertainty.layers.BatchConv2d", "generated/torch_uncertainty.layers.BatchLinear", "generated/torch_uncertainty.layers.MaskedConv2d", "generated/torch_uncertainty.layers.MaskedLinear", "generated/torch_uncertainty.layers.PackedConv2d", "generated/torch_uncertainty.layers.PackedLinear", "generated/torch_uncertainty.layers.bayesian.BayesConv1d", "generated/torch_uncertainty.layers.bayesian.BayesConv2d", "generated/torch_uncertainty.layers.bayesian.BayesConv3d", "generated/torch_uncertainty.layers.bayesian.BayesLinear", "generated/torch_uncertainty.losses.ELBOLoss", "generated/torch_uncertainty.losses.KLDiv", "generated/torch_uncertainty.metrics.BrierScore", "generated/torch_uncertainty.metrics.Disagreement", "generated/torch_uncertainty.metrics.Entropy", "generated/torch_uncertainty.metrics.MutualInformation", "generated/torch_uncertainty.metrics.NegativeLogLikelihood", "generated/torch_uncertainty.post_processing.MatrixScaler", "generated/torch_uncertainty.post_processing.TemperatureScaler", "generated/torch_uncertainty.post_processing.VectorScaler", "index", "installation", "introduction_uncertainty", "quickstart", "references"], "filenames": ["api.rst", "auto_tutorials/index.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/tutorial_bayesian.rst", "auto_tutorials/tutorial_der_cubic.rst", "auto_tutorials/tutorial_pe_cifar10.rst", "auto_tutorials/tutorial_scaler.rst", "contributing.rst", "generated/torch_uncertainty.baselines.classification.ResNet.rst", "generated/torch_uncertainty.baselines.classification.VGG.rst", "generated/torch_uncertainty.baselines.classification.WideResNet.rst", "generated/torch_uncertainty.baselines.regression.MLP.rst", "generated/torch_uncertainty.layers.BatchConv2d.rst", "generated/torch_uncertainty.layers.BatchLinear.rst", "generated/torch_uncertainty.layers.MaskedConv2d.rst", "generated/torch_uncertainty.layers.MaskedLinear.rst", "generated/torch_uncertainty.layers.PackedConv2d.rst", "generated/torch_uncertainty.layers.PackedLinear.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv1d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv2d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv3d.rst", "generated/torch_uncertainty.layers.bayesian.BayesLinear.rst", "generated/torch_uncertainty.losses.ELBOLoss.rst", "generated/torch_uncertainty.losses.KLDiv.rst", "generated/torch_uncertainty.metrics.BrierScore.rst", "generated/torch_uncertainty.metrics.Disagreement.rst", "generated/torch_uncertainty.metrics.Entropy.rst", "generated/torch_uncertainty.metrics.MutualInformation.rst", "generated/torch_uncertainty.metrics.NegativeLogLikelihood.rst", "generated/torch_uncertainty.post_processing.MatrixScaler.rst", "generated/torch_uncertainty.post_processing.TemperatureScaler.rst", "generated/torch_uncertainty.post_processing.VectorScaler.rst", "index.rst", "installation.rst", "introduction_uncertainty.rst", "quickstart.rst", "references.rst"], "titles": ["API reference", "Tutorials", "Computation times", "Train a Bayesian Neural Network in Three Minutes", "Deep Evidential Regression on a Toy Example", "From a Vanilla Classifier to a Packed-Ensemble", "Improve Top-label Calibration with Temperature Scaling", "Contributing", "ResNet", "VGG", "WideResNet", "MLP", "BatchConv2d", "BatchLinear", "MaskedConv2d", "MaskedLinear", "PackedConv2d", "PackedLinear", "BayesConv1d", "BayesConv2d", "BayesConv3d", "BayesLinear", "ELBOLoss", "KLDiv", "BrierScore", "Disagreement", "Entropy", "MutualInformation", "NegativeLogLikelihood", "MatrixScaler", "TemperatureScaler", "VectorScaler", "Torch Uncertainty", "Installation", "Introduction to Classification Uncertainty", "Quickstart", "References"], "terms": {"thi": [0, 1, 3, 4, 5, 6, 7, 15, 16, 17, 22, 24, 25, 26, 27, 28, 32, 34, 35, 36], "provid": [0, 3, 4, 6, 8, 9, 10, 11, 24, 25, 26, 27, 28, 35], "lightn": [0, 6, 32], "base": [0, 3, 4, 24, 25, 26, 27, 28, 32, 34, 36], "model": [0, 5, 7, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34], "can": [0, 3, 6, 7, 12, 24, 25, 26, 27, 28, 32, 33, 35], "easili": [0, 6], "train": [0, 1, 2, 6, 8, 9, 10, 14, 15, 22, 34, 35, 36], "evalu": [0, 5, 6, 8, 9, 10, 24, 25, 26, 27, 28], "On": [1, 6, 29, 30, 31, 34, 36], "page": [1, 7, 32, 34], "you": [1, 4, 5, 6, 7, 14, 15, 16, 17, 22, 33, 35], "find": [1, 36], "insight": 1, "torchuncertainti": [1, 32], "don": 1, "t": [1, 5, 13, 24, 25, 26, 27, 28], "hesit": [1, 35], "open": [1, 7], "an": [1, 3, 4, 7, 12, 13, 24, 25, 26, 27, 28, 35, 36], "issu": [1, 35], "have": [1, 3, 4, 7, 24, 25, 26, 27, 28, 33, 34], "ani": [1, 6, 7, 8, 9, 10, 24, 25, 26, 27, 28, 35], "question": 1, "suggest": [1, 3], "improv": [1, 2, 34], "top": [1, 2], "label": [1, 2, 3, 4, 5, 28, 29, 30, 31, 36], "calibr": [1, 2, 29, 30, 31, 34], "temperatur": [1, 2, 7, 29, 30, 31], "scale": [1, 2, 7, 8, 9, 10, 14, 15, 29, 30, 31], "bayesian": [1, 2, 6, 7, 18, 19, 20, 21, 22, 23], "neural": [1, 2, 4, 5, 6, 21, 22, 23, 29, 30, 31, 32], "network": [1, 2, 4, 5, 6, 16, 17, 21, 22, 23, 29, 30, 31, 32], "three": [1, 2, 13], "minut": [1, 2, 4, 5, 6], "deep": [1, 2, 3, 7], "evidenti": [1, 2], "regress": [1, 2, 11], "toi": [1, 2], "exampl": [1, 2, 3, 5, 6, 12, 13, 36], "from": [1, 2, 3, 4, 7, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36], "vanilla": [1, 2, 8, 9, 10, 35], "classifi": [1, 2, 3], "pack": [1, 2, 8, 9, 10, 16, 17, 35], "ensembl": [1, 2, 7, 8, 9, 10, 12, 13, 14, 16, 17, 25, 27, 35], "download": [1, 3, 4, 5, 6], "all": [1, 3, 4, 5, 6, 8, 10, 12, 14, 16, 24, 25, 26, 27, 28], "python": [1, 3, 4, 5, 6, 33], "sourc": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "code": [1, 3, 4, 5, 6, 7, 35], "auto_tutorials_python": 1, "zip": 1, "jupyt": [1, 3, 4, 5, 6], "notebook": [1, 3, 4, 5, 6], "auto_tutorials_jupyt": 1, "galleri": [1, 3, 4, 5, 6], "gener": [1, 3, 4, 5, 6, 7, 27, 36], "sphinx": [1, 3, 4, 5, 6], "04": [2, 6], "17": [2, 6], "009": 2, "total": [2, 3, 4, 5, 6], "execut": [2, 17, 33, 35], "auto_tutori": 2, "file": [2, 3, 4, 5, 6, 33, 35], "tutorial_pe_cifar10": [2, 5], "py": [2, 3, 4, 5, 6, 35], "02": [2, 5, 6], "42": [2, 5], "208": [2, 5], "0": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35], "mb": 2, "tutorial_bayesian": [2, 3], "00": [2, 3, 5, 6], "58": [2, 3], "959": [2, 3], "tutorial_scal": [2, 6], "28": [2, 6], "701": [2, 6], "tutorial_der_cub": [2, 4], "07": 2, "140": [2, 4], "go": [3, 4, 5, 6, 35], "end": [3, 4, 5, 6], "full": [3, 4, 5, 6, 32, 35], "In": [3, 4, 5, 6, 12, 29, 30, 31, 34, 35], "tutori": [3, 4, 5, 6, 32, 34], "we": [3, 4, 5, 6, 7, 12, 13, 24, 25, 26, 27, 28, 34, 35], "bnn": 3, "mnist": 3, "dataset": [3, 4, 6, 29, 30, 31, 32, 35], "ar": [3, 5, 6, 7, 12, 13, 16, 17, 24, 25, 26, 27, 28, 33, 34, 35, 36], "class": [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35], "estim": [3, 4, 8, 9, 10, 12, 13, 14, 15, 16, 17, 24, 25, 26, 27, 32, 34, 36], "uncertainti": [3, 4, 5, 7, 14, 15, 21, 27, 33, 35], "predict": [3, 4, 5, 6, 8, 9, 10, 25, 28, 34, 36], "via": [3, 33, 35], "weight": [3, 6, 7, 8, 10, 12, 13, 16, 17, 21, 22, 29, 31, 36], "i": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 17, 24, 25, 26, 27, 28, 34, 35], "achiev": 3, "consid": [3, 36], "random": [3, 5], "learn": [3, 4, 7, 12, 13, 29, 30, 31, 36], "posterior": [3, 18, 19, 20, 21], "distribut": [3, 4, 6, 7, 21, 24, 25, 26, 27, 28, 34, 36], "contrast": 3, "standard": [3, 21, 24, 25, 26, 27, 28], "which": [3, 4, 8, 9, 10, 24, 25, 26, 27, 28, 32, 35], "onli": [3, 5, 7, 8, 9, 10, 16, 17, 24, 25, 26, 27, 28], "singl": [3, 26], "set": [3, 4, 5, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35], "seen": 3, "dirac": 3, "For": [3, 7, 33, 35, 36], "more": [3, 6, 34, 36], "inform": [3, 8, 9, 10, 27], "reader": 3, "follow": [3, 4, 7, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36], "resourc": 3, "icml2015": 3, "hand": 3, "user": [3, 24, 25, 26, 27, 28], "ieee": [3, 36], "comput": [3, 15, 17, 22, 23, 24, 25, 26, 27, 28, 36], "intellig": 3, "magazin": 3, "part": [3, 4, 24, 25, 26, 27, 28], "alreadi": [3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 35], "implement": [3, 4, 7, 12, 13, 27, 32, 36], "tu": [3, 4], "To": [3, 4, 6, 32, 33, 34, 35], "cli": [3, 4, 32], "handler": [3, 4], "cli_main": [3, 4, 35], "argument": [3, 4, 24, 25, 26, 27, 28, 35], "parser": [3, 4], "init_arg": [3, 4, 35], "bayesian_lenet": 3, "li": [3, 4, 36], "torch_uncertainti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35], "modul": [3, 4, 5, 6, 8, 9, 10, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35], "classif": [3, 5, 8, 9, 10, 32, 36], "object": [3, 4, 6, 7, 22, 24, 25, 26, 27, 28], "elboloss": 3, "datamodul": [3, 4, 35], "handl": [3, 6], "dataload": [3, 4, 5], "mnistdatamodul": 3, "import": [3, 4, 5, 6, 7, 35], "classificationsingl": 3, "also": [3, 4, 6, 24, 25, 26, 27, 28, 32, 34], "need": [3, 4, 6], "defin": [3, 4, 6], "torch": [3, 4, 5, 6, 7, 12, 13, 24, 25, 26, 27, 28, 33, 35], "well": [3, 4, 6, 36], "withing": [3, 4], "nn": [3, 4, 5, 6, 8, 9, 10, 22, 23, 29, 30, 31, 35], "partial": [3, 4], "modifi": [3, 4, 5], "default": [3, 4, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31], "elbo": [3, 22], "argvcontext": [3, 4], "avoid": [3, 4, 6, 27], "therefor": [3, 4, 16, 17, 34], "error": [3, 4, 6, 33], "o": [3, 4], "functool": [3, 4], "pathlib": [3, 4, 35], "path": [3, 4, 5, 35], "cli_test_help": [3, 4], "adam": [3, 4, 36], "rate": [3, 4, 29, 30, 31], "001": [3, 4, 5], "def": [3, 4, 5, 35], "optim_lenet": 3, "dict": [3, 4, 24, 25, 26, 27, 28], "paramet": [3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34], "lr": [3, 4, 5, 29, 30, 31], "1e": [3, 4], "return": [3, 4, 5, 8, 9, 10, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35], "root": [3, 4, 5, 6, 35], "log": [3, 4, 28, 35], "fake": [3, 4], "pars": [3, 4], "trainer": [3, 4, 6, 35], "transform": [3, 5, 13], "final": [3, 7, 24, 32, 34, 35], "blueprint": 3, "abspath": [3, 4], "mock": [3, 4], "max_epoch": [3, 4, 35], "enable_progress_bar": [3, 4], "fals": [3, 4, 5, 6, 8, 9, 10, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 35], "arg": [3, 4, 24, 25, 26, 27, 28, 35], "net_nam": [3, 4, 35], "str": [3, 8, 9, 10, 12, 14, 16, 24, 25, 26, 27, 28, 35], "data": [3, 6, 12, 13, 21, 29, 30, 31, 35], "dm": [3, 6, 35], "var": [3, 4, 35], "num_channel": 3, "num_class": [3, 6, 8, 9, 10, 24, 29, 31, 35], "Then": [3, 4], "just": [3, 6], "dure": [3, 4, 22], "do": [3, 4, 5, 6, 7, 35], "redefin": [3, 4], "function": [3, 4, 22, 24, 25, 26, 27, 28, 34, 35], "hyperparamet": 3, "propos": 3, "blitz": 3, "librari": [3, 7, 35, 36], "As": 3, "crossentropyloss": [3, 5, 35], "likelihood": [3, 4, 6, 27, 28, 34], "criterion": [3, 5, 8, 9, 10, 22], "kl_weight": [3, 22], "50000": [3, 5], "num_sampl": [3, 4, 22], "baselin": [3, 4, 8, 9, 10, 11, 32, 35], "in_channel": [3, 6, 8, 9, 10, 12, 14, 16, 18, 19, 20, 35], "optimization_procedur": [3, 4, 8, 9, 10, 11, 35], "now": [3, 7, 33], "prepar": 3, "main": [3, 6], "specif": [3, 7, 24, 25, 26, 27, 28, 35], "includ": [3, 7, 32, 33, 34], "name": [3, 24, 25, 26, 27, 28, 35], "automat": 3, "folder": [3, 33, 35], "save": [3, 5, 24, 25, 26, 27, 28, 29, 30, 31], "result": [3, 4, 5, 27], "http": [3, 5, 6, 33], "yann": [3, 36], "lecun": [3, 36], "com": [3, 33], "exdb": 3, "imag": [3, 12, 14, 16, 36], "idx3": 3, "ubyt": 3, "gz": [3, 5, 6], "home": [3, 4], "runner": [3, 4], "work": [3, 4, 34], "auto_tutorials_sourc": 3, "raw": 3, "9912422": 3, "": [3, 5, 12, 13, 18, 19, 20, 21, 24, 34, 35], "100": [3, 5, 6, 29, 30, 31, 35], "127133516": 3, "94it": 3, "extract": [3, 5, 6], "idx1": 3, "28881": 3, "165485920": 3, "52it": 3, "t10k": 3, "1648877": 3, "57824211": 3, "4542": 3, "26132412": 3, "58it": 3, "venv": [3, 4], "lib": [3, 4], "python3": [3, 4, 33, 35], "10": [3, 4, 5, 6, 20, 33, 35], "site": [3, 4], "packag": [3, 4, 5, 7, 32, 33, 35], "557": 3, "userwarn": 3, "worker": 3, "process": [3, 5, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "our": [3, 5, 35], "max": [3, 5, 24, 25, 26, 27, 28], "number": [3, 4, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31], "current": [3, 6, 7, 24, 25, 26, 27, 28, 34], "system": [3, 33], "smaller": [3, 4], "than": [3, 4, 6], "what": [3, 5, 8, 9, 10], "pleas": [3, 7, 24, 25, 26, 27, 28, 34, 36], "awar": 3, "excess": 3, "creation": 3, "might": [3, 35], "get": [3, 5, 6, 7, 24, 25, 26, 27, 28, 35], "run": [3, 4, 5, 6, 24, 25, 26, 27, 28, 33, 35], "slow": 3, "even": 3, "freez": [3, 18, 19, 20, 21], "lower": [3, 4, 25, 26], "potenti": 3, "warn": 3, "_create_warning_msg": 3, "metric": [3, 4, 6, 24, 25, 26, 27, 28, 32, 35], "hp": [3, 4], "test_acc": 3, "944100022315979": 3, "test_brier": 3, "08489806205034256": 3, "test_ec": 3, "014873393811285496": 3, "test_entropy_id": 3, "219742551445961": 3, "test_nll": 3, "1797366887331009": 3, "let": [3, 5, 7, 34, 35], "matplotlib": [3, 4, 5], "pyplot": [3, 4, 5], "plt": [3, 4, 5], "torchvis": [3, 5], "numpi": [3, 5], "np": [3, 5], "imshow": [3, 5], "img": [3, 5], "npimg": [3, 5], "transpos": [3, 5], "show": [3, 5, 29, 30, 31], "datait": [3, 5], "iter": [3, 5, 29, 30, 31], "val_dataload": 3, "next": [3, 4, 5], "print": [3, 5, 6, 12, 13], "make_grid": [3, 5], "ground": [3, 4, 28], "truth": [3, 4, 28], "join": [3, 5], "f": [3, 4, 5, 6, 35, 36], "j": [3, 5], "rang": [3, 5, 35], "logit": [3, 4, 5, 6, 8, 9, 10, 29, 30, 31, 34, 36], "prob": [3, 24, 25, 26, 27, 28], "softmax": [3, 5, 6, 34], "dim": [3, 4, 5, 24, 25, 26, 27, 28], "_": [3, 5, 24, 25, 26, 27, 28], "digit": [3, 36], "clip": 3, "input": [3, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 34], "valid": [3, 7, 35], "rgb": 3, "float": [3, 4, 8, 9, 10, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31], "255": 3, "integ": 3, "7": [3, 4, 6, 21], "y": [3, 4, 6, 13, 29, 30, 31, 34, 36], "bottou": [3, 36], "l": [3, 36], "bengio": [3, 36], "haffner": [3, 36], "p": [3, 6], "1998": [3, 36], "gradient": [3, 5, 36], "appli": [3, 12, 13, 14, 15, 24, 25, 26, 27, 28, 36], "document": [3, 7, 32, 36], "recognit": [3, 36], "proceed": [3, 36], "blundel": [3, 21, 36], "c": [3, 5, 6, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35], "cornebis": [3, 36], "kavukcuoglu": [3, 36], "k": [3, 4, 6, 12, 13, 29, 30, 31, 34], "wierstra": [3, 36], "d": 3, "2015": [3, 6, 21, 36], "icml": [3, 6, 21, 29, 30, 31, 34, 36], "kingma": 3, "ba": [3, 36], "2014": 3, "A": [3, 24, 25, 26, 27], "method": [3, 4, 6, 8, 9, 10, 12, 13, 24, 25, 26, 27, 28, 32], "stochast": 3, "iclr": [3, 36], "time": [3, 4, 5, 6, 8, 10, 12, 16, 17, 24, 25, 26, 27, 28], "script": [3, 4, 5, 6, 35], "second": [3, 4, 5, 6, 21], "ipynb": [3, 4, 5, 6], "aim": 4, "introductori": 4, "overview": 4, "practic": 4, "demonstr": 4, "applic": [4, 7], "tackl": 4, "problem": 4, "fit": [4, 29, 30, 31], "x": [4, 5, 13, 35], "multi": [4, 35], "layer": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 32, 34, 36], "perceptron": 4, "output": [4, 5, 12, 13, 14, 15, 16, 17, 21, 24, 25, 26, 27, 28, 34], "ha": [4, 6, 24, 25, 26, 27, 28], "four": [4, 12, 14, 16], "minim": [4, 6, 22], "normal": [4, 18, 19, 20, 21, 24, 25, 27, 28, 34], "invers": 4, "gamma": [4, 5, 8, 9, 10, 11, 16, 17, 35], "nig": 4, "repres": [4, 6, 34], "approach": [4, 12, 13, 36], "quantifi": 4, "involv": 4, "introduc": [4, 12, 13], "prior": [4, 18, 19, 20, 21], "over": [4, 5, 12, 24, 25, 26, 27, 28], "gaussian": 4, "nigloss": 4, "sampl": [4, 6, 12, 13, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28], "noisi": [4, 36], "cubic": 4, "pytorch_lightn": 4, "lightningdatamodul": 4, "regressionsingl": 4, "optim_regress": 4, "learning_r": 4, "5e": 4, "weight_decai": 4, "same": [4, 6, 8, 10, 24, 25, 26, 27, 28], "synthet": 4, "task": [4, 6], "origin": [4, 6, 8, 9, 10, 24, 25, 26, 27, 28], "paper": [4, 7, 12, 13, 21, 32, 36], "50": [4, 6, 8], "train_d": 4, "1000": [4, 6], "val_d": 4, "300": 4, "test_d": 4, "from_dataset": 4, "val_dataset": 4, "test_dataset": [4, 6], "batch_siz": [4, 5, 6, 17], "32": [4, 6, 8, 12], "training_task": 4, "in_featur": [4, 11, 13, 15, 17, 21], "num_output": [4, 11], "hidden_dim": [4, 11], "64": [4, 16], "after": [4, 6, 24, 25, 26, 27, 28], "along": 4, "dist_estim": [4, 11], "reg_weight": 4, "1609": 4, "possibleuserwarn": 4, "batch": [4, 5, 8, 9, 10, 13, 14, 15, 24, 25, 26, 27, 28], "interv": 4, "log_every_n_step": 4, "valu": [4, 8, 9, 10, 12, 13, 22, 24, 25, 26, 27, 28, 29, 30, 31, 34], "want": [4, 33], "see": [4, 5, 6, 16, 17, 24, 25, 26, 27, 28, 34], "epoch": [4, 5], "rank_zero_warn": 4, "test_gnll": 4, "697": 4, "3701782226562": 4, "test_ms": 4, "70263671875": 4, "no_grad": 4, "linspac": 4, "unsqueez": 4, "mean": [4, 5, 21, 24, 25, 26, 27, 28], "v": 4, "alpha": [4, 5, 8, 9, 10, 11, 16, 17, 35], "beta": 4, "split": [4, 6], "softplu": 4, "sqrt": [4, 12, 13], "squeeze_": 4, "fig": 4, "ax": 4, "subplot": 4, "plot": [4, 24, 25, 26, 27, 28], "r": [4, 5, 12, 13], "zorder": 4, "fill_between": 4, "linewidth": 4, "edgecolor": 4, "none": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 35], "facecolor": 4, "blue": 4, "epistem": [4, 27], "els": 4, "gca": 4, "set_ylim": 4, "150": 4, "set_xlim": 4, "legend": 4, "loc": 4, "upper": 4, "left": [4, 12], "grid": 4, "alexand": [4, 36], "amini": [4, 36], "wilko": [4, 36], "schwart": [4, 36], "ava": [4, 36], "soleimani": [4, 36], "daniela": [4, 36], "ru": [4, 36], "2022": [4, 36], "neurip": [4, 36], "heavili": [5, 12, 13], "inspir": [5, 7, 12, 13], "pytorch": [5, 6, 7, 12, 13, 32], "dive": 5, "step": [5, 7], "us": [5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36], "avail": [5, 33, 35], "The": [5, 6, 12, 13, 14, 15, 16, 17, 22, 24, 25, 26, 27, 28, 32, 35, 36], "consist": [5, 12, 13], "60000": 5, "32x32": 5, "colour": 5, "6000": 5, "per": [5, 16, 24, 25, 26, 27, 28], "There": [5, 6], "10000": 5, "here": [5, 6, 12, 13, 32, 33], "look": [5, 6, 7], "like": [5, 7, 24, 25, 26, 27, 28, 35], "outlin": 5, "its": [5, 6, 12, 13, 16, 17, 24, 25, 26, 27, 28, 34, 35], "perform": [5, 24, 25, 26, 27, 28], "w": [5, 13, 35], "quantif": [5, 7], "ood": [5, 8, 9, 10], "detect": [5, 7], "set_num_thread": 5, "pilimag": 5, "them": [5, 35], "tensor": [5, 12, 13, 22, 24, 25, 26, 27, 28], "If": [5, 7, 8, 9, 10, 12, 13, 14, 16, 24, 25, 26, 27, 28, 33, 35], "window": 5, "brokenpipeerror": 5, "try": [5, 7], "num_work": 5, "util": 5, "compos": [5, 12, 24, 25, 26, 27, 28], "totensor": 5, "trainset": 5, "true": [5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35], "trainload": 5, "shuffl": 5, "testset": 5, "testload": 5, "plane": [5, 12], "car": 5, "bird": 5, "cat": [5, 24, 25, 26, 27, 28], "deer": 5, "dog": 5, "frog": 5, "hors": 5, "ship": 5, "truck": 5, "www": [5, 6], "toronto": [5, 6], "edu": [5, 6], "kriz": [5, 6], "cifar": [5, 6, 35], "tar": [5, 6], "170498071": 5, "917504": [5, 6], "20": [5, 6, 13], "8256380": 5, "51it": 5, "6": [5, 18, 19, 35], "10158080": 5, "55473273": 5, "77it": [5, 6], "12": [5, 6], "20807680": 5, "01": [5, 6], "78142363": 5, "21it": 5, "18": [5, 6, 8, 35], "31391744": 5, "88828632": 5, "19it": [5, 6], "24": [5, 6], "41648128": 5, "93693314": 5, "80it": 5, "31": [5, 6], "52133888": 5, "97308568": 5, "39it": 5, "37": 5, "62291968": 5, "98618356": 5, "02it": [5, 6], "72220672": 5, "98282966": 5, "92it": 5, "48": [5, 6], "82083840": 5, "97518437": 5, "35it": [5, 6], "54": 5, "91881472": 5, "97170331": 5, "34it": 5, "60": 5, "101613568": 5, "96538224": 5, "20it": [5, 6], "66": [5, 6], "111804416": 5, "98148346": 5, "82it": 5, "72": [5, 6], "122322944": 5, "100195865": 5, "44it": 5, "78": [5, 6], "132808704": 5, "101525989": 5, "13it": 5, "84": [5, 6, 35], "143196160": 5, "102226748": 5, "22it": [5, 6], "90": 5, "153616384": 5, "102761282": 5, "08it": 5, "96": [5, 6], "164036608": 5, "103184196": 5, "73it": 5, "95629754": 5, "85it": 5, "verifi": [5, 6], "u": [5, 7, 12, 13, 33], "some": 5, "fun": 5, "unnorm": 5, "first": [5, 6, 7, 16, 17, 21, 35], "refer": [5, 7, 12, 13, 14, 15, 21, 29, 30, 31, 32, 35], "convolut": [5, 8, 9, 10, 12, 14, 16, 17, 36], "net": 5, "__init__": [5, 35], "self": [5, 24, 25, 26, 27, 28, 35], "super": [5, 35], "conv1": [5, 35], "conv2d": [5, 12, 14, 16, 19], "pool": [5, 35], "maxpool2d": [5, 35], "conv2": [5, 35], "16": [5, 6, 9, 12, 35], "fc1": [5, 35], "linear": [5, 13, 15, 17, 21], "120": [5, 35], "fc2": [5, 35], "fc3": [5, 35], "forward": [5, 12, 13, 22, 23, 24, 25, 26, 27, 28, 35], "relu": [5, 35], "flatten": [5, 35], "m": [5, 6, 12, 13, 35, 36], "text": [5, 12, 13, 16, 17], "einop": [5, 35], "rearrang": [5, 17, 35], "packedconv2d": [5, 35], "packedlinear": [5, 35], "packednet": [5, 35], "num_estim": [5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 35], "last": [5, 16, 17, 24, 25, 26, 27, 28, 34, 35], "e": [5, 7, 24, 25, 26, 27, 28, 33, 35], "h": [5, 35], "packed_net": [5, 35], "cross": [5, 6], "entropi": [5, 6, 8, 9, 10], "sgd": 5, "momentum": 5, "9": [5, 6], "loop": 5, "multipl": [5, 24, 25, 26, 27, 28, 36], "running_loss": 5, "enumer": 5, "list": [5, 6, 24, 25, 26, 27, 28, 32, 33, 35, 36], "zero": [5, 16, 18, 19, 20, 27], "zero_grad": 5, "backward": 5, "repeat": [5, 8, 10, 14, 15], "statist": [5, 24, 25, 26, 27, 28], "item": 5, "2000": [5, 6], "1999": 5, "everi": [5, 7, 33], "mini": 5, "5d": 5, "3f": 5, "finish": 5, "916": 5, "4000": 5, "179": 5, "027": 5, "8000": 5, "935": 5, "852": 5, "12000": 5, "796": 5, "732": 5, "708": 5, "676": 5, "648": 5, "627": 5, "614": 5, "cifar_packed_net": 5, "pth": 5, "state_dict": [5, 24, 25, 26, 27, 28], "displai": 5, "familiar": 5, "groundtruth": 5, "back": [5, 24, 25, 26, 27, 28], "note": [5, 16, 17, 24, 25, 26, 27, 28], "re": 5, "wasn": 5, "necessari": [5, 17], "did": 5, "illustr": 5, "how": [5, 6, 24, 25, 26, 27, 28, 32], "so": [5, 16, 17, 24, 25, 26, 27, 28, 33, 35], "load_state_dict": [5, 6], "kei": [5, 6, 24, 25, 26, 27, 28], "match": [5, 6, 36], "successfulli": [5, 6], "think": [5, 35], "abov": [5, 24, 25, 26, 27, 28], "n": [5, 12, 13, 24, 25, 26, 27, 33], "b": [5, 6, 12, 13, 24, 25, 26, 27, 28], "probs_per_est": 5, "seem": 5, "pretti": 5, "good": [5, 34], "reliabl": 6, "underli": [6, 16, 17], "outsid": 6, "resnet": [6, 10, 35], "start": [6, 14, 15, 35], "torchmetr": 6, "calibrationerror": 6, "cifar100datamodul": 6, "resnet18": [6, 35], "post_process": [6, 29, 30, 31], "temperaturescal": 6, "load_hf": 6, "scratch": 6, "hug": [6, 7], "face": [6, 7, 36], "done": 6, "one": [6, 24, 25, 26, 27, 28, 35], "liner": 6, "build": [6, 7, 35], "group": [6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28], "style": [6, 7, 8, 9, 10, 14, 15, 16, 17, 35], "config": 6, "resnet18_c100": 6, "pre": [6, 7], "built": [6, 34], "ckpt": 6, "45": 6, "0m": 6, "23": 6, "5m": 6, "52": 6, "1mb": 6, "70": 6, "61": 6, "6mb": 6, "34": 6, "5mb": 6, "38": 6, "lve": 6, "yaml": 6, "30k": 6, "25mb": 6, "call": [6, 12, 13, 24, 25, 26, 27, 28, 34], "prepare_data": 6, "setup": 6, "element": [6, 12, 14, 16, 24, 25, 26, 27, 28], "test": [6, 35], "attr": 6, "ood_detect": 6, "unus": 6, "test_dataload": 6, "169001437": 6, "8327038": 6, "10it": 6, "10846208": 6, "59646433": 6, "31it": 6, "13": [6, 9], "22544384": 6, "85217100": 6, "65it": 6, "34275328": 6, "97667140": 6, "67it": 6, "27": 6, "46006272": 6, "104597389": 6, "57737216": 6, "108793419": 6, "47it": 6, "41": 6, "69468160": 6, "111330520": 6, "81231872": 6, "113320996": 6, "55": 6, "92930048": 6, "114436794": 6, "75it": 6, "62": 6, "104660992": 6, "115320597": 6, "69": 6, "116391936": 6, "115849775": 6, "76": 6, "128122880": 6, "116147865": 6, "57it": 6, "83": 6, "139755520": 6, "109931768": 6, "89": 6, "150831104": 6, "108311483": 6, "71it": 6, "162529280": 6, "110817623": 6, "95it": 6, "106115314": 6, "48it": 6, "proper": 6, "when": [6, 12, 13, 16, 17, 24, 25, 26, 27, 28], "associ": [6, 24, 25, 26, 27, 28], "lengthi": 6, "without": 6, "gpu": [6, 35], "restrict": 6, "subset": 6, "random_split": 6, "cal_dataset": 6, "other": [6, 32], "len": 6, "initi": [6, 12, 13, 21, 24, 25, 26, 27, 28, 29, 30, 31, 35], "multiclass": 6, "target": [6, 22, 24, 25, 28], "updat": [6, 24, 25, 26, 27, 28, 33], "cal": 6, "befor": [6, 7], "91": 6, "temper": 6, "contain": [6, 7, 24, 25, 26, 27, 28, 32, 35], "detail": [6, 32, 34], "calibration_set": [6, 29, 30, 31], "05": 6, "29it": 6, "32it": 6, "24it": 6, "14it": 6, "16it": 6, "19": [6, 9], "22": 6, "23it": 6, "25": 6, "8": [6, 12, 13], "15it": 6, "11": [6, 9], "17it": 6, "03": 6, "18it": 6, "44": 6, "14": [6, 12], "47": 6, "15": 6, "53": 6, "25it": 6, "56": 6, "27it": 6, "59": 6, "30it": 6, "21": 6, "26it": 6, "75": [6, 35], "33it": 6, "81": 6, "26": 6, "88": 6, "29": 6, "94": 6, "30": [6, 13], "97": 6, "06": 6, "creat": [6, 24, 25, 26, 27, 28, 33, 35], "wrapper": 6, "sequenti": 6, "possibl": [6, 7, 16], "becaus": 6, "deriv": 6, "reset": [6, 24, 25, 26, 27, 28], "mix": 6, "score": [6, 24, 25, 26, 27, 28], "previou": [6, 17], "cal_model": 6, "should": [6, 16, 17, 24, 25, 26, 27, 28, 35], "veri": [6, 36], "effici": [6, 12, 13, 32, 36], "case": [6, 12, 34, 35], "sai": 6, "drawn": 6, "howev": [6, 7, 16, 17, 24, 25, 26, 27, 28, 34], "mai": [6, 7, 33, 34, 35], "hold": 6, "real": [6, 36], "world": [6, 24, 25, 26, 27, 28, 36], "where": [6, 12, 13, 24, 25, 26, 27, 28], "shift": 6, "could": [6, 27], "happen": 6, "expect": [6, 8, 9, 10, 24, 25, 26, 27, 28], "naeini": [6, 36], "cooper": [6, 36], "g": [6, 7, 29, 30, 31, 34], "hauskrecht": [6, 36], "obtain": [6, 36], "probabl": [6, 8, 10, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36], "bin": [6, 36], "aaai": [6, 36], "guo": [6, 29, 30, 31, 34, 36], "pleiss": [6, 29, 30, 31, 34, 36], "sun": [6, 29, 30, 31, 34, 36], "weinberg": [6, 29, 30, 31, 34, 36], "q": [6, 29, 30, 31, 34, 36], "2017": [6, 29, 30, 31, 34, 36], "modern": [6, 29, 30, 31, 34, 36], "earli": 7, "develop": [7, 33], "stage": 7, "contributor": 7, "help": 7, "comprehens": [7, 32], "particularli": 7, "comment": 7, "would": [7, 24, 25, 26, 27, 28, 35], "project": [7, 33], "chang": [7, 16, 17, 24, 25, 26, 27, 28], "evolv": 7, "host": 7, "link": 7, "roughli": 7, "field": 7, "mont": 7, "carlo": 7, "dropout": 7, "etc": [7, 35], "out": [7, 12, 13, 35, 36], "segment": 7, "interest": [7, 35], "advis": 7, "reproduc": 7, "clean": 7, "environ": [7, 33], "ensur": [7, 35], "continu": [7, 24, 25, 26, 27, 28], "integr": 7, "doe": 7, "break": 7, "instal": [7, 32], "poetri": [7, 32], "your": [7, 33, 35], "workstat": 7, "clone": [7, 24, 25, 26, 27, 28, 33], "repositori": [7, 33, 35], "edit": [7, 33], "mode": [7, 24, 25, 26, 27, 28, 33], "dev": [7, 33], "commit": 7, "hook": 7, "black": 7, "format": [7, 24, 25, 26, 27, 28], "flake8": 7, "lint": 7, "isort": 7, "properli": 7, "submit": 7, "pull": [7, 33], "request": 7, "review": 7, "best": 7, "reduc": [7, 16, 17, 24, 25, 26, 27, 28], "coverag": 7, "add": [7, 12, 13, 14, 15, 16, 17, 24, 25, 26, 27, 28, 33, 35], "correspond": [7, 8, 9, 10, 12, 13, 24, 25, 26, 27, 28, 34, 35], "intend": 7, "most": 7, "popular": 7, "scikit": 7, "api": [7, 32, 35], "except": 7, "feel": [7, 35], "obstacl": 7, "know": 7, "reconsid": 7, "stai": 7, "apach": 7, "2": [7, 12, 35], "loss": [8, 9, 10, 11, 22, 23, 32, 35], "version": [8, 9, 10, 11, 24, 25, 26, 27, 28, 35], "arch": [8, 9, 35], "imagenet": [8, 9, 10, 35], "dropout_r": 8, "1": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 29, 30, 31, 34, 35], "rho": [8, 10], "batch_repeat": [8, 10], "use_entropi": [8, 9, 10], "use_logit": [8, 9, 10], "use_mi": [8, 9, 10], "use_variation_ratio": [8, 9, 10], "pretrain": [8, 10], "kwarg": [8, 9, 10, 11, 24, 25, 26, 27, 28], "backbon": [8, 9, 10, 35], "support": [8, 9, 10, 11, 35], "variou": [8, 9, 10, 11], "architectur": [8, 9, 32, 35], "int": [8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 22, 29, 30, 31], "channel": [8, 9, 10, 12, 14, 15, 16, 17], "optim": [8, 9, 10, 29, 30, 31, 35], "procedur": [8, 9, 10], "lightningmodul": [8, 9, 10], "configure_optim": [8, 9, 10], "determin": [8, 9, 10, 24, 25, 26, 27, 28], "batchensembl": [8, 9, 10, 12, 13], "mask": [8, 9, 10, 14, 15], "masksembl": [8, 10, 14, 15], "mimo": [8, 10], "101": 8, "152": 8, "option": [8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33], "either": [8, 9, 10, 24, 25, 26, 27, 28], "expans": [8, 9, 10], "factor": [8, 9, 10], "affect": [8, 9, 10], "width": [8, 9, 10, 17], "within": [8, 9, 10], "each": [8, 9, 10, 12, 13, 14, 16, 17, 24, 25, 26, 27, 28, 35], "share": [8, 10, 12, 13], "bool": [8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 29, 30, 31], "indic": [8, 9, 10], "whether": [8, 9, 10, 21, 24, 25, 26, 27, 28, 29, 30, 31], "mutual": [8, 9, 10, 27], "variat": [8, 9, 10], "ratio": [8, 9, 10], "rais": [8, 9, 10, 24, 25, 26, 27, 28, 35], "valueerror": [8, 9, 10, 24, 25, 26, 27, 28], "readi": [8, 9, 10, 35], "type": [8, 9, 10, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31], "wide": 10, "resnet28x10": 10, "out_channel": [12, 14, 16, 18, 19, 20], "kernel_s": [12, 14, 16, 18, 19, 20], "stride": [12, 14, 16, 18, 19, 20], "pad": [12, 14, 16, 18, 19, 20], "dilat": [12, 14, 16, 18, 19, 20], "bia": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 31], "devic": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 35], "dtype": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28], "2d": 12, "signal": 12, "sever": 12, "incom": [12, 13], "simplest": 12, "size": [12, 13, 14, 16, 17, 24, 25, 26, 27, 28], "c_": 12, "h_": [12, 13], "w_": 12, "precis": [12, 35], "describ": [12, 35], "n_i": 12, "_j": 12, "hat": [12, 13], "n_": 12, "sum_": [12, 24], "star": 12, "altern": [12, 13, 36], "lifelong": [12, 13, 36], "present": [12, 13, 35], "offici": [12, 13, 32], "tensorflow": [12, 13], "produc": [12, 14, 15, 16, 17], "tupl": [12, 14, 16], "convolv": [12, 14, 16], "kernel": [12, 14, 16], "ad": [12, 14, 16, 24, 25, 26, 27, 28, 35], "side": [12, 14, 16], "space": [12, 14, 16], "between": [12, 13, 14, 16], "block": [12, 14, 15, 16, 17], "connect": [12, 15, 17], "learnabl": [12, 13, 14, 15, 16, 17], "variabl": [12, 13, 21, 24, 25, 26, 27, 28], "shape": [12, 13, 24, 25, 26, 27, 28], "frac": [12, 13, 16, 17, 24], "mathcal": [12, 13], "prod_": 12, "matric": [12, 13], "row": [12, 13], "vector": [12, 13, 31, 34], "r_": [12, 13], "th": [12, 13], "member": [12, 13, 16, 17], "5": [12, 13, 35], "s_": [12, 13], "lfloor": 12, "right": 12, "rfloor": 12, "make": [12, 13, 16, 17, 24, 25, 26, 27, 28, 36], "sure": [12, 13, 14, 15, 16, 17, 24, 25, 26, 27, 28], "With": [12, 13], "squar": 12, "equal": [12, 34], "conv2db": 12, "3": [12, 13, 33, 35], "4": [12, 21, 35], "randn": [12, 13], "out_featur": [13, 15, 17, 21], "circ": 13, "linearb": 13, "connexion": [14, 16], "Be": [14, 15], "nikita": [14, 15, 36], "durasov": [14, 15, 36], "timur": [14, 15, 36], "bagautdinov": [14, 15, 36], "pierr": [14, 15, 36], "baqu": [14, 15, 36], "pascal": [14, 15, 36], "fua": [14, 15, 36], "fulli": [15, 17], "oper": [15, 17], "given": [15, 17, 22, 34], "featur": [15, 17, 21, 36], "It": [15, 17, 34, 35], "minimum_channels_per_group": 16, "padding_mod": [16, 18, 19, 20], "multipli": [16, 17], "smallest": 16, "explan": [16, 17, 35], "increas": [16, 17], "represent": [16, 17], "capac": [16, 17], "both": [16, 17, 24, 25, 26, 27, 28], "divis": [16, 17], "compli": [16, 17], "constraint": [16, 17], "properti": [16, 17, 24, 25, 26, 27, 28], "1x1": 17, "compat": 17, "later": 17, "n_estim": 17, "often": 17, "prior_sigma_1": [18, 19, 20, 21], "prior_sigma_2": [18, 19, 20, 21], "002": [18, 19, 20], "prior_pi": [18, 19, 20, 21], "mu_init": [18, 19, 20, 21], "sigma_init": [18, 19, 20, 21], "frozen": [18, 19, 20, 21], "conv1d": 18, "mixtur": [18, 19, 20, 21], "attribut": [18, 19, 20, 21, 24, 25, 26, 27, 28], "unfreez": [18, 19, 20, 21], "conv3d": 20, "deviat": 21, "control": [21, 24, 25, 26, 27, 28], "term": [21, 22], "charl": [21, 36], "et": [21, 36], "al": [21, 36], "seek": 22, "kl": [22, 23], "diverg": [22, 23, 27], "gather": [22, 23], "aggreg": [22, 24, 25, 26, 27, 28], "pass": [23, 24, 25, 26, 27, 28], "reduct": [24, 25, 26, 27, 28], "brier": 24, "dimens": [24, 25, 26, 27, 28], "averag": [24, 25, 26, 27, 28], "across": [24, 25, 26, 27, 28], "sum": [24, 25, 26, 27, 28, 34], "addit": [24, 25, 26, 27, 28], "keyword": [24, 25, 26, 27, 28], "advanc": [24, 25, 26, 27, 28], "3d": 24, "ie": 24, "add_stat": [24, 25, 26, 27, 28], "dist_reduce_fx": [24, 25, 26, 27, 28], "persist": [24, 25, 26, 27, 28], "state": [24, 25, 26, 27, 28], "subclass": [24, 25, 26, 27, 28], "empti": [24, 25, 26, 27, 28], "append": [24, 25, 26, 27, 28], "must": [24, 25, 26, 27, 28], "uniqu": [24, 25, 26, 27, 28], "access": [24, 25, 26, 27, 28, 33], "my_stat": [24, 25, 26, 27, 28], "instanc": [24, 25, 26, 27, 28, 35], "behav": [24, 25, 26, 27, 28], "buffer": [24, 25, 26, 27, 28], "thei": [24, 25, 26, 27, 28, 33], "unlik": [24, 25, 26, 27, 28], "min": [24, 25, 26, 27, 28], "respect": [24, 25, 26, 27, 28], "sens": [24, 25, 26, 27, 28], "custom": [24, 25, 26, 27, 28], "synchron": [24, 25, 26, 27, 28], "differ": [24, 25, 26, 27, 28, 35], "won": [24, 25, 26, 27, 28], "sync": [24, 25, 26, 27, 28], "stack": [24, 25, 26, 27, 28], "wa": [24, 25, 26, 27, 28], "retain": [24, 25, 26, 27, 28], "henc": [24, 25, 26, 27, 28], "num_process": [24, 25, 26, 27, 28], "combin": [24, 25, 26, 27, 28], "discuss": [24, 25, 26, 27, 28], "callabl": [24, 25, 26, 27, 28], "copi": [24, 25, 26, 27, 28], "doubl": [24, 25, 26, 27, 28], "overrid": [24, 25, 26, 27, 28], "prevent": [24, 25, 26, 27, 28], "cast": [24, 25, 26, 27, 28], "set_dtyp": [24, 25, 26, 27, 28], "instead": [24, 25, 26, 27, 28], "directli": [24, 25, 26, 27, 28, 32, 33, 35], "serv": [24, 25, 26, 27, 28], "dual": [24, 25, 26, 27, 28], "purpos": [24, 25, 26, 27, 28], "overal": [24, 25, 26, 27, 28], "accumulul": [24, 25, 26, 27, 28], "exact": [24, 25, 26, 27, 28], "requir": [24, 25, 26, 27, 28, 35], "torchmetricsusererror": [24, 25, 26, 27, 28], "again": [24, 25, 26, 27, 28, 35], "half": [24, 25, 26, 27, 28], "metric_st": [24, 25, 26, 27, 28], "post": [24, 25, 26, 27, 28, 29, 30, 31, 32], "init": [24, 25, 26, 27, 28], "__": [24, 25, 26, 27, 28], "dst_type": [24, 25, 26, 27, 28], "transfer": [24, 25, 26, 27, 28], "special": [24, 25, 26, 27, 28], "desir": [24, 25, 26, 27, 28, 35], "string": [24, 25, 26, 27, 28], "destin": [24, 25, 26, 27, 28], "prefix": [24, 25, 26, 27, 28], "keep_var": [24, 25, 26, 27, 28], "dictionari": [24, 25, 26, 27, 28, 35], "otherwis": [24, 25, 26, 27, 28], "ordereddict": [24, 25, 26, 27, 28], "detach": [24, 25, 26, 27, 28], "autograd": [24, 25, 26, 27, 28], "dist_sync_fn": [24, 25, 26, 27, 28], "process_group": [24, 25, 26, 27, 28], "should_sync": [24, 25, 26, 27, 28], "distributed_avail": [24, 25, 26, 27, 28], "manual": [24, 25, 26, 27, 28, 33], "specifi": [24, 25, 26, 27, 28], "select": [24, 25, 26, 27, 28], "entir": [24, 25, 26, 27, 28], "impact": [24, 25, 26, 27, 28], "insid": [24, 25, 26, 27, 28], "sync_context": [24, 25, 26, 27, 28], "should_unsync": [24, 25, 26, 27, 28], "context": [24, 25, 26, 27, 28], "manag": [24, 25, 26, 27, 28], "local": [24, 25, 26, 27, 28], "cach": [24, 25, 26, 27, 28], "restor": [24, 25, 26, 27, 28], "yield": [24, 25, 26, 27, 28], "syncron": [24, 25, 26, 27, 28], "accumul": [24, 25, 26, 27, 28], "unsync": [24, 25, 26, 27, 28], "revert": [24, 25, 26, 27, 28], "new": [24, 26, 27, 33], "update_cal": [24, 25, 26, 27, 28], "been": [24, 25, 26, 27, 28], "update_count": [24, 25, 26, 27, 28], "sinc": [24, 25, 26, 27, 28], "confid": [25, 26], "higher": [25, 26, 27], "shannon": [26, 27], "accross": 26, "previous": [26, 27, 28], "interpret": 27, "computation": 27, "equival": 27, "jensen": 27, "gjsd": 27, "clamp": 27, "neg": [27, 28], "appear": 27, "due": 27, "numer": 27, "instabl": 27, "nll": 28, "init_w": [29, 31], "init_b": [29, 31], "max_it": [29, 30, 31], "200": [29, 31, 35], "matrix": 29, "maximum": [29, 30, 31], "liter": [29, 30, 31], "cpu": [29, 30, 31], "cuda": [29, 30, 31], "save_logit": [29, 30, 31], "progress": [29, 30, 31, 34], "bar": [29, 30, 31], "scaler": [29, 30, 31], "set_temperatur": [29, 30, 31], "val_w": [29, 31], "val_b": [29, 31], "fix": [29, 30, 31], "init_v": 30, "init_valu": 30, "val": 30, "welcom": 32, "websit": 32, "contribut": [32, 33], "pypi": 32, "pip": 32, "mind": 32, "check": [32, 33, 35], "explain": 32, "author": [32, 36], "olivi": [32, 36], "laurent": [32, 36], "adrien": [32, 36], "lafag": [32, 36], "enzo": [32, 36], "tartaglion": [32, 36], "geoffrei": [32, 36], "daniel": [32, 36], "jean": [32, 36], "marc": [32, 36], "martinez": [32, 36], "andrei": [32, 36], "bursuc": [32, 36], "gianni": [32, 36], "franchi": [32, 36], "quickstart": 32, "tool": 32, "usag": 32, "introduct": [32, 35], "short": [32, 35], "background": 32, "overconfid": 32, "scope": 32, "common": [32, 36], "guidelin": [32, 33], "licens": 32, "index": [32, 34], "search": 32, "choos": [33, 35], "latter": 33, "experi": [33, 35], "boil": 33, "down": 33, "command": 33, "curl": 33, "ssl": 33, "org": 33, "git": 33, "github": [33, 35], "ensta": 33, "u2i": 33, "cd": 33, "conda": 33, "activ": [33, 34], "depend": [33, 34], "encount": 33, "kill": 33, "python_keyring_backend": 33, "keyr": 33, "backend": 33, "null": 33, "begin": 33, "pyproject": 33, "toml": 33, "IN": 34, "wait": 34, "while": 34, "recal": 34, "take": [34, 35], "pointwis": 34, "exponenti": 34, "categor": 34, "multinoulli": 34, "belong": 34, "conceptu": 34, "known": 34, "idea": 34, "trust": 34, "why": 34, "come": 35, "level": 35, "highest": 35, "fledg": 35, "routin": 35, "own": 35, "logic": 35, "schedul": 35, "mani": [35, 36], "below": [35, 36], "move": 35, "directori": 35, "acceler": 35, "benchmark": [35, 36], "cudnn": 35, "cifar10": 35, "cifar10datamodul": 35, "get_procedur": 35, "__file__": 35, "parent": 35, "absolut": 35, "imagenet_structur": 35, "replac": 35, "prefer": 35, "classic": 35, "pipelin": 35, "under": 35, "section": [35, 36], "choic": 35, "packed_resnet18": 35, "actual": 35, "better": 35, "free": 35, "exhaust": 36, "through": 36, "cite": 36, "2020": 36, "julien": 36, "korai": 36, "daan": 36, "simpl": 36, "scalabl": 36, "balaji": 36, "lakshminarayanan": 36, "pritzel": 36, "yeme": 36, "wen": 36, "dustin": 36, "tran": 36, "jimmi": 36, "cvpr": 36, "2021": 36, "independ": 36, "subnetwork": 36, "robust": 36, "marton": 36, "havasi": 36, "rodolph": 36, "jenatton": 36, "stanislav": 36, "fort": 36, "jeremiah": 36, "zhe": 36, "liu": 36, "jasper": 36, "snoek": 36, "andrew": 36, "dai": 36, "2023": 36, "chuan": 36, "geoff": 36, "yu": 36, "kilian": 36, "mahdi": 36, "pakdaman": 36, "gregori": 36, "milo": 36, "leon": 36, "yoshua": 36, "patrick": 36, "vision": 36, "norman": 36, "mu": 36, "justin": 36, "gilmer": 36, "icmlw": 36, "2019": 36, "yaroslav": 36, "bulatov": 36, "alex": 36, "krizhevski": 36, "mit": 36, "tech": 36, "report": 36, "corrupt": 36, "perturb": 36, "dan": 36, "hendryck": 36, "thoma": 36, "dietterich": 36, "human": 36, "joshua": 36, "peterson": 36, "ruairidh": 36, "battledai": 36, "griffith": 36, "olga": 36, "russakovski": 36, "iccv": 36, "revisit": 36, "studi": 36, "annot": 36, "jiaheng": 36, "wei": 36, "zhaowei": 36, "zhu": 36, "hao": 36, "cheng": 36, "tongliang": 36, "gang": 36, "niu": 36, "yang": 36, "read": 36, "natur": 36, "unsupervis": 36, "yuval": 36, "netzer": 36, "tao": 36, "wang": 36, "coat": 36, "alessandro": 36, "bissacco": 36, "bo": 36, "wu": 36, "ng": 36, "workshop": 36, "2011": 36, "larg": 36, "hierarch": 36, "databas": 36, "jia": 36, "deng": 36, "dong": 36, "richard": 36, "socher": 36, "kai": 36, "fei": 36, "2009": 36, "adversari": 36, "kevin": 36, "zhao": 36, "steven": 36, "basart": 36, "jacob": 36, "steinhardt": 36, "dawn": 36, "song": 36, "critic": 36, "analysi": 36, "saurav": 36, "kadavath": 36, "frank": 36, "evan": 36, "dorundo": 36, "rahul": 36, "desai": 36, "tyler": 36, "samyak": 36, "parajuli": 36, "mike": 36, "vim": 36, "virtual": 36, "haoqi": 36, "zhizhong": 36, "litong": 36, "feng": 36, "wayn": 36, "zhang": 36, "residu": 36, "kaim": 36, "he": 36, "xiangyu": 36, "shaoq": 36, "ren": 36, "jian": 36, "2016": 36, "sergei": 36, "zagoruyko": 36, "niko": 36, "komodaki": 36, "bmvc": 36, "karen": 36, "simonyan": 36, "zisserman": 36}, "objects": {"torch_uncertainty.baselines.classification": [[8, 0, 1, "", "ResNet"], [9, 0, 1, "", "VGG"], [10, 0, 1, "", "WideResNet"]], "torch_uncertainty.baselines.regression": [[11, 0, 1, "", "MLP"]], "torch_uncertainty.layers": [[12, 0, 1, "", "BatchConv2d"], [13, 0, 1, "", "BatchLinear"], [14, 0, 1, "", "MaskedConv2d"], [15, 0, 1, "", "MaskedLinear"], [16, 0, 1, "", "PackedConv2d"], [17, 0, 1, "", "PackedLinear"]], "torch_uncertainty.layers.PackedConv2d": [[16, 1, 1, "", "bias"], [16, 1, 1, "", "weight"]], "torch_uncertainty.layers.PackedLinear": [[17, 1, 1, "", "bias"], [17, 1, 1, "", "weight"]], "torch_uncertainty.layers.bayesian": [[18, 0, 1, "", "BayesConv1d"], [19, 0, 1, "", "BayesConv2d"], [20, 0, 1, "", "BayesConv3d"], [21, 0, 1, "", "BayesLinear"]], "torch_uncertainty.layers.bayesian.BayesConv1d": [[18, 2, 1, "", "freeze"], [18, 2, 1, "", "sample"], [18, 2, 1, "", "unfreeze"]], "torch_uncertainty.layers.bayesian.BayesConv2d": [[19, 2, 1, "", "freeze"], [19, 2, 1, "", "sample"], [19, 2, 1, "", "unfreeze"]], "torch_uncertainty.layers.bayesian.BayesConv3d": [[20, 2, 1, "", "freeze"], [20, 2, 1, "", "sample"], [20, 2, 1, "", "unfreeze"]], "torch_uncertainty.layers.bayesian.BayesLinear": [[21, 2, 1, "", "freeze"], [21, 2, 1, "", "sample"], [21, 2, 1, "", "unfreeze"]], "torch_uncertainty.losses": [[22, 0, 1, "", "ELBOLoss"], [23, 0, 1, "", "KLDiv"]], "torch_uncertainty.losses.ELBOLoss": [[22, 2, 1, "", "forward"]], "torch_uncertainty.metrics": [[24, 0, 1, "", "BrierScore"], [25, 0, 1, "", "Disagreement"], [26, 0, 1, "", "Entropy"], [27, 0, 1, "", "MutualInformation"], [28, 0, 1, "", "NegativeLogLikelihood"]], "torch_uncertainty.metrics.BrierScore": [[24, 2, 1, "", "add_state"], [24, 2, 1, "", "clone"], [24, 2, 1, "", "compute"], [24, 1, 1, "", "device"], [24, 2, 1, "", "double"], [24, 2, 1, "", "float"], [24, 2, 1, "", "forward"], [24, 2, 1, "", "half"], [24, 1, 1, "", "metric_state"], [24, 2, 1, "", "persistent"], [24, 2, 1, "", "plot"], [24, 2, 1, "", "reset"], [24, 2, 1, "", "set_dtype"], [24, 2, 1, "", "state_dict"], [24, 2, 1, "", "sync"], [24, 2, 1, "", "sync_context"], [24, 2, 1, "", "type"], [24, 2, 1, "", "unsync"], [24, 2, 1, "", "update"], [24, 1, 1, "", "update_called"], [24, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.Disagreement": [[25, 2, 1, "", "add_state"], [25, 2, 1, "", "clone"], [25, 2, 1, "", "compute"], [25, 1, 1, "", "device"], [25, 2, 1, "", "double"], [25, 2, 1, "", "float"], [25, 2, 1, "", "forward"], [25, 2, 1, "", "half"], [25, 1, 1, "", "metric_state"], [25, 2, 1, "", "persistent"], [25, 2, 1, "", "plot"], [25, 2, 1, "", "reset"], [25, 2, 1, "", "set_dtype"], [25, 2, 1, "", "state_dict"], [25, 2, 1, "", "sync"], [25, 2, 1, "", "sync_context"], [25, 2, 1, "", "type"], [25, 2, 1, "", "unsync"], [25, 2, 1, "", "update"], [25, 1, 1, "", "update_called"], [25, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.Entropy": [[26, 2, 1, "", "add_state"], [26, 2, 1, "", "clone"], [26, 2, 1, "", "compute"], [26, 1, 1, "", "device"], [26, 2, 1, "", "double"], [26, 2, 1, "", "float"], [26, 2, 1, "", "forward"], [26, 2, 1, "", "half"], [26, 1, 1, "", "metric_state"], [26, 2, 1, "", "persistent"], [26, 2, 1, "", "plot"], [26, 2, 1, "", "reset"], [26, 2, 1, "", "set_dtype"], [26, 2, 1, "", "state_dict"], [26, 2, 1, "", "sync"], [26, 2, 1, "", "sync_context"], [26, 2, 1, "", "type"], [26, 2, 1, "", "unsync"], [26, 2, 1, "", "update"], [26, 1, 1, "", "update_called"], [26, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.MutualInformation": [[27, 2, 1, "", "add_state"], [27, 2, 1, "", "clone"], [27, 2, 1, "", "compute"], [27, 1, 1, "", "device"], [27, 2, 1, "", "double"], [27, 2, 1, "", "float"], [27, 2, 1, "", "forward"], [27, 2, 1, "", "half"], [27, 1, 1, "", "metric_state"], [27, 2, 1, "", "persistent"], [27, 2, 1, "", "plot"], [27, 2, 1, "", "reset"], [27, 2, 1, "", "set_dtype"], [27, 2, 1, "", "state_dict"], [27, 2, 1, "", "sync"], [27, 2, 1, "", "sync_context"], [27, 2, 1, "", "type"], [27, 2, 1, "", "unsync"], [27, 2, 1, "", "update"], [27, 1, 1, "", "update_called"], [27, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.NegativeLogLikelihood": [[28, 2, 1, "", "add_state"], [28, 2, 1, "", "clone"], [28, 2, 1, "", "compute"], [28, 1, 1, "", "device"], [28, 2, 1, "", "double"], [28, 2, 1, "", "float"], [28, 2, 1, "", "forward"], [28, 2, 1, "", "half"], [28, 1, 1, "", "metric_state"], [28, 2, 1, "", "persistent"], [28, 2, 1, "", "plot"], [28, 2, 1, "", "reset"], [28, 2, 1, "", "set_dtype"], [28, 2, 1, "", "state_dict"], [28, 2, 1, "", "sync"], [28, 2, 1, "", "sync_context"], [28, 2, 1, "", "type"], [28, 2, 1, "", "unsync"], [28, 2, 1, "", "update"], [28, 1, 1, "", "update_called"], [28, 1, 1, "", "update_count"]], "torch_uncertainty.post_processing": [[29, 0, 1, "", "MatrixScaler"], [30, 0, 1, "", "TemperatureScaler"], [31, 0, 1, "", "VectorScaler"]], "torch_uncertainty.post_processing.MatrixScaler": [[29, 2, 1, "", "fit"], [29, 2, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.TemperatureScaler": [[30, 2, 1, "", "fit"], [30, 2, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.VectorScaler": [[31, 2, 1, "", "fit"], [31, 2, 1, "", "set_temperature"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": [0, 3, 4, 6, 34, 36], "baselin": 0, "classif": [0, 34], "regress": [0, 4, 36], "layer": [0, 35], "ensembl": [0, 5, 32, 36], "bayesian": [0, 3, 36], "metric": [0, 36], "loss": [0, 3, 4, 5], "post": [0, 7, 36], "process": [0, 7, 36], "method": [0, 7, 36], "tutori": 1, "comput": [2, 6], "time": 2, "train": [3, 4, 5], "neural": [3, 34, 36], "network": [3, 34, 36], "three": 3, "minut": 3, "foreword": 3, "lenet": 3, "us": [3, 4, 35], "torchuncertainti": [3, 4, 6, 7], "model": [3, 4, 6, 35, 36], "pytorch": [3, 4, 35], "lightn": [3, 4, 35], "1": [3, 4, 5, 6], "load": [3, 4, 5, 6], "util": [3, 4, 6], "2": [3, 4, 5, 6], "creat": [3, 4], "optim": [3, 4, 5], "wrapper": [3, 4], "3": [3, 4, 5, 6], "necessari": [3, 4], "variabl": [3, 4], "4": [3, 4, 5, 6], "The": [3, 4, 7, 34], "routin": [3, 4], "5": [3, 4, 5, 6], "gather": [3, 4], "everyth": [3, 4], "6": [3, 4, 6], "test": [3, 4, 5], "deep": [4, 36], "evidenti": [4, 36], "toi": 4, "exampl": [4, 35], "mlp": [4, 11], "der": 4, "from": [5, 6, 33], "vanilla": 5, "classifi": 5, "pack": [5, 32, 36], "dataset": [5, 7, 36], "an": 5, "imag": 5, "normal": 5, "cifar10": 5, "defin": 5, "function": 5, "data": 5, "improv": 6, "top": 6, "label": 6, "calibr": [6, 36], "temperatur": [6, 36], "scale": [6, 36], "": 6, "hf": 6, "set": 6, "up": 6, "datamodul": [6, 7], "dataload": 6, "iter": 6, "ec": 6, "fit": 6, "scaler": 6, "again": 6, "note": 6, "contribut": 7, "scope": 7, "common": 7, "guidelin": 7, "licens": 7, "resnet": [8, 36], "vgg": [9, 36], "wideresnet": 10, "batchconv2d": 12, "batchlinear": 13, "maskedconv2d": 14, "maskedlinear": 15, "packedconv2d": 16, "packedlinear": 17, "bayesconv1d": 18, "bayesconv2d": 19, "bayesconv3d": 20, "bayeslinear": 21, "elboloss": 22, "kldiv": 23, "brierscor": 24, "disagr": 25, "entropi": 26, "mutualinform": 27, "negativeloglikelihood": 28, "matrixscal": 29, "temperaturescal": 30, "vectorscal": 31, "torch": 32, "uncertainti": [32, 34, 36], "content": 32, "indic": 32, "tabl": 32, "instal": 33, "pypi": 33, "sourc": 33, "With": 33, "poetri": 33, "pip": 33, "introduct": 34, "short": 34, "background": 34, "overconfid": 34, "quickstart": 35, "base": 35, "cli": 35, "tool": 35, "procedur": 35, "other": 35, "usag": 35, "batchensembl": 36, "masksembl": 36, "mimo": 36, "vector": 36, "matrix": 36, "expect": 36, "error": 36, "mnist": 36, "c": 36, "Not": 36, "cifar": 36, "10": 36, "100": 36, "tini": 36, "imagenet": 36, "h": 36, "n": 36, "svhn": 36, "A": 36, "0": 36, "r": 36, "textur": 36, "architectur": 36, "wide": 36}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API reference": [[0, "api-reference"]], "Baselines": [[0, "baselines"]], "Classification": [[0, "classification"]], "Regression": [[0, "regression"]], "Layers": [[0, "layers"]], "Ensemble layers": [[0, "ensemble-layers"]], "Bayesian layers": [[0, "bayesian-layers"]], "Metrics": [[0, "metrics"], [36, "metrics"]], "Losses": [[0, "losses"]], "Post-Processing Methods": [[0, "post-processing-methods"], [36, "post-processing-methods"]], "Tutorials": [[1, "tutorials"]], "Computation times": [[2, "computation-times"]], "Train a Bayesian Neural Network in Three Minutes": [[3, "train-a-bayesian-neural-network-in-three-minutes"]], "Foreword on Bayesian Neural Networks": [[3, "foreword-on-bayesian-neural-networks"]], "Training a Bayesian LeNet using TorchUncertainty models and PyTorch Lightning": [[3, "training-a-bayesian-lenet-using-torchuncertainty-models-and-pytorch-lightning"]], "1. Loading the utilities": [[3, "loading-the-utilities"], [4, "loading-the-utilities"]], "2. Creating the Optimizer Wrapper": [[3, "creating-the-optimizer-wrapper"], [4, "creating-the-optimizer-wrapper"]], "3. Creating the necessary variables": [[3, "creating-the-necessary-variables"], [4, "creating-the-necessary-variables"]], "4. The Loss and the Training Routine": [[3, "the-loss-and-the-training-routine"], [4, "the-loss-and-the-training-routine"]], "5. Gathering Everything and Training the Model": [[3, "gathering-everything-and-training-the-model"], [4, "gathering-everything-and-training-the-model"]], "6. Testing the Model": [[3, "testing-the-model"], [4, "testing-the-model"]], "References": [[3, "references"], [4, "references"], [6, "references"], [34, "references"], [36, "references"]], "Deep Evidential Regression on a Toy Example": [[4, "deep-evidential-regression-on-a-toy-example"]], "Training a MLP with DER using TorchUncertainty models and PyTorch Lightning": [[4, "training-a-mlp-with-der-using-torchuncertainty-models-and-pytorch-lightning"]], "From a Vanilla Classifier to a Packed-Ensemble": [[5, "from-a-vanilla-classifier-to-a-packed-ensemble"]], "Dataset": [[5, "dataset"]], "Training an image Packed-Ensemble classifier": [[5, "training-an-image-packed-ensemble-classifier"]], "1. Load and normalize CIFAR10": [[5, "load-and-normalize-cifar10"]], "2. Define a Packed-Ensemble from a vanilla classifier": [[5, "define-a-packed-ensemble-from-a-vanilla-classifier"]], "3. Define a Loss function and optimizer": [[5, "define-a-loss-function-and-optimizer"]], "4. Train the Packed-Ensemble on the training data": [[5, "train-the-packed-ensemble-on-the-training-data"]], "5. Test the Packed-Ensemble on the test data": [[5, "test-the-packed-ensemble-on-the-test-data"]], "Improve Top-label Calibration with Temperature Scaling": [[6, "improve-top-label-calibration-with-temperature-scaling"]], "1. Loading the Utilities": [[6, "loading-the-utilities"]], "2. Loading a model from TorchUncertainty\u2019s HF": [[6, "loading-a-model-from-torchuncertainty-s-hf"]], "3. Setting up the Datamodule and Dataloaders": [[6, "setting-up-the-datamodule-and-dataloaders"]], "4. Iterating on the Dataloader and Computing the ECE": [[6, "iterating-on-the-dataloader-and-computing-the-ece"]], "5. Fitting the Scaler to Improve the Calibration": [[6, "fitting-the-scaler-to-improve-the-calibration"]], "6. Iterating Again to Compute the Improved ECE": [[6, "iterating-again-to-compute-the-improved-ece"]], "Notes": [[6, "notes"]], "Contributing": [[7, "contributing"]], "The scope of TorchUncertainty": [[7, "the-scope-of-torchuncertainty"]], "Common guidelines": [[7, "common-guidelines"]], "Datasets & Datamodules": [[7, "datasets-datamodules"]], "Post-processing methods": [[7, "post-processing-methods"]], "License": [[7, "license"]], "ResNet": [[8, "resnet"], [36, "resnet"]], "VGG": [[9, "vgg"], [36, "vgg"]], "WideResNet": [[10, "wideresnet"]], "MLP": [[11, "mlp"]], "BatchConv2d": [[12, "batchconv2d"]], "BatchLinear": [[13, "batchlinear"]], "MaskedConv2d": [[14, "maskedconv2d"]], "MaskedLinear": [[15, "maskedlinear"]], "PackedConv2d": [[16, "packedconv2d"]], "PackedLinear": [[17, "packedlinear"]], "BayesConv1d": [[18, "bayesconv1d"]], "BayesConv2d": [[19, "bayesconv2d"]], "BayesConv3d": [[20, "bayesconv3d"]], "BayesLinear": [[21, "bayeslinear"]], "ELBOLoss": [[22, "elboloss"]], "KLDiv": [[23, "kldiv"]], "BrierScore": [[24, "brierscore"]], "Disagreement": [[25, "disagreement"]], "Entropy": [[26, "entropy"]], "MutualInformation": [[27, "mutualinformation"]], "NegativeLogLikelihood": [[28, "negativeloglikelihood"]], "MatrixScaler": [[29, "matrixscaler"]], "TemperatureScaler": [[30, "temperaturescaler"]], "VectorScaler": [[31, "vectorscaler"]], "Torch Uncertainty": [[32, "torch-uncertainty"]], "Packed-Ensembles": [[32, "packed-ensembles"], [36, "packed-ensembles"]], "Contents:": [[32, null]], "Indices and tables": [[32, "indices-and-tables"]], "Installation": [[33, "installation"]], "From PyPI": [[33, "from-pypi"]], "From source": [[33, "from-source"]], "With poetry": [[33, "with-poetry"]], "With pip": [[33, "with-pip"]], "Introduction to Classification Uncertainty": [[34, "introduction-to-classification-uncertainty"]], "Short Background": [[34, "short-background"]], "The Overconfidence of Neural Networks": [[34, "the-overconfidence-of-neural-networks"]], "Quickstart": [[35, "quickstart"]], "Using the Lightning-based CLI tool": [[35, "using-the-lightning-based-cli-tool"]], "Procedure": [[35, "procedure"], [35, "id1"], [35, "id3"]], "Example": [[35, "example"], [35, "id2"], [35, "id4"]], "Using the PyTorch-based models": [[35, "using-the-pytorch-based-models"]], "Using the PyTorch-based layers": [[35, "using-the-pytorch-based-layers"]], "Other usage": [[35, "other-usage"]], "Uncertainty Models": [[36, "uncertainty-models"]], "Deep Evidential Regression": [[36, "deep-evidential-regression"]], "Bayesian Neural Networks": [[36, "bayesian-neural-networks"]], "Deep Ensembles": [[36, "deep-ensembles"]], "BatchEnsemble": [[36, "batchensemble"]], "Masksembles": [[36, "masksembles"]], "MIMO": [[36, "mimo"]], "Temperature, Vector, & Matrix scaling": [[36, "temperature-vector-matrix-scaling"]], "Expected Calibration Error": [[36, "expected-calibration-error"]], "Datasets": [[36, "datasets"]], "MNIST": [[36, "mnist"]], "MNIST-C": [[36, "mnist-c"]], "Not-MNIST": [[36, "not-mnist"]], "CIFAR-10 & CIFAR-100": [[36, "cifar-10-cifar-100"]], "CIFAR-C, Tiny-ImageNet-C, ImageNet-C": [[36, "cifar-c-tiny-imagenet-c-imagenet-c"]], "CIFAR-10 H": [[36, "cifar-10-h"]], "CIFAR-10 N / CIFAR-100 N": [[36, "cifar-10-n-cifar-100-n"]], "SVHN": [[36, "svhn"]], "ImageNet": [[36, "imagenet"]], "ImageNet-A & ImageNet-0": [[36, "imagenet-a-imagenet-0"]], "ImageNet-R": [[36, "imagenet-r"]], "Textures": [[36, "textures"]], "Architectures": [[36, "architectures"]], "Wide-ResNet": [[36, "wide-resnet"]]}, "indexentries": {"resnet (class in torch_uncertainty.baselines.classification)": [[8, "torch_uncertainty.baselines.classification.ResNet"]], "vgg (class in torch_uncertainty.baselines.classification)": [[9, "torch_uncertainty.baselines.classification.VGG"]], "wideresnet (class in torch_uncertainty.baselines.classification)": [[10, "torch_uncertainty.baselines.classification.WideResNet"]], "mlp (class in torch_uncertainty.baselines.regression)": [[11, "torch_uncertainty.baselines.regression.MLP"]], "batchconv2d (class in torch_uncertainty.layers)": [[12, "torch_uncertainty.layers.BatchConv2d"]], "batchlinear (class in torch_uncertainty.layers)": [[13, "torch_uncertainty.layers.BatchLinear"]], "maskedconv2d (class in torch_uncertainty.layers)": [[14, "torch_uncertainty.layers.MaskedConv2d"]], "maskedlinear (class in torch_uncertainty.layers)": [[15, "torch_uncertainty.layers.MaskedLinear"]], "packedconv2d (class in torch_uncertainty.layers)": [[16, "torch_uncertainty.layers.PackedConv2d"]], "bias (torch_uncertainty.layers.packedconv2d property)": [[16, "torch_uncertainty.layers.PackedConv2d.bias"]], "weight (torch_uncertainty.layers.packedconv2d property)": [[16, "torch_uncertainty.layers.PackedConv2d.weight"]], "packedlinear (class in torch_uncertainty.layers)": [[17, "torch_uncertainty.layers.PackedLinear"]], "bias (torch_uncertainty.layers.packedlinear property)": [[17, "torch_uncertainty.layers.PackedLinear.bias"]], "weight (torch_uncertainty.layers.packedlinear property)": [[17, "torch_uncertainty.layers.PackedLinear.weight"]], "bayesconv1d (class in torch_uncertainty.layers.bayesian)": [[18, "torch_uncertainty.layers.bayesian.BayesConv1d"]], "freeze() (torch_uncertainty.layers.bayesian.bayesconv1d method)": [[18, "torch_uncertainty.layers.bayesian.BayesConv1d.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayesconv1d method)": [[18, "torch_uncertainty.layers.bayesian.BayesConv1d.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayesconv1d method)": [[18, "torch_uncertainty.layers.bayesian.BayesConv1d.unfreeze"]], "bayesconv2d (class in torch_uncertainty.layers.bayesian)": [[19, "torch_uncertainty.layers.bayesian.BayesConv2d"]], "freeze() (torch_uncertainty.layers.bayesian.bayesconv2d method)": [[19, "torch_uncertainty.layers.bayesian.BayesConv2d.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayesconv2d method)": [[19, "torch_uncertainty.layers.bayesian.BayesConv2d.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayesconv2d method)": [[19, "torch_uncertainty.layers.bayesian.BayesConv2d.unfreeze"]], "bayesconv3d (class in torch_uncertainty.layers.bayesian)": [[20, "torch_uncertainty.layers.bayesian.BayesConv3d"]], "freeze() (torch_uncertainty.layers.bayesian.bayesconv3d method)": [[20, "torch_uncertainty.layers.bayesian.BayesConv3d.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayesconv3d method)": [[20, "torch_uncertainty.layers.bayesian.BayesConv3d.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayesconv3d method)": [[20, "torch_uncertainty.layers.bayesian.BayesConv3d.unfreeze"]], "bayeslinear (class in torch_uncertainty.layers.bayesian)": [[21, "torch_uncertainty.layers.bayesian.BayesLinear"]], "freeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[21, "torch_uncertainty.layers.bayesian.BayesLinear.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[21, "torch_uncertainty.layers.bayesian.BayesLinear.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[21, "torch_uncertainty.layers.bayesian.BayesLinear.unfreeze"]], "elboloss (class in torch_uncertainty.losses)": [[22, "torch_uncertainty.losses.ELBOLoss"]], "forward() (torch_uncertainty.losses.elboloss method)": [[22, "torch_uncertainty.losses.ELBOLoss.forward"]], "kldiv (class in torch_uncertainty.losses)": [[23, "torch_uncertainty.losses.KLDiv"]], "brierscore (class in torch_uncertainty.metrics)": [[24, "torch_uncertainty.metrics.BrierScore"]], "add_state() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.add_state"]], "clone() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.clone"]], "compute() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.compute"]], "device (torch_uncertainty.metrics.brierscore property)": [[24, "torch_uncertainty.metrics.BrierScore.device"]], "double() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.double"]], "float() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.float"]], "forward() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.forward"]], "half() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.half"]], "metric_state (torch_uncertainty.metrics.brierscore property)": [[24, "torch_uncertainty.metrics.BrierScore.metric_state"]], "persistent() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.persistent"]], "plot() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.plot"]], "reset() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.reset"]], "set_dtype() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.set_dtype"]], "state_dict() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.state_dict"]], "sync() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.sync"]], "sync_context() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.sync_context"]], "type() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.type"]], "unsync() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.unsync"]], "update() (torch_uncertainty.metrics.brierscore method)": [[24, "torch_uncertainty.metrics.BrierScore.update"]], "update_called (torch_uncertainty.metrics.brierscore property)": [[24, "torch_uncertainty.metrics.BrierScore.update_called"]], "update_count (torch_uncertainty.metrics.brierscore property)": [[24, "torch_uncertainty.metrics.BrierScore.update_count"]], "disagreement (class in torch_uncertainty.metrics)": [[25, "torch_uncertainty.metrics.Disagreement"]], "add_state() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.add_state"]], "clone() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.clone"]], "compute() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.compute"]], "device (torch_uncertainty.metrics.disagreement property)": [[25, "torch_uncertainty.metrics.Disagreement.device"]], "double() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.double"]], "float() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.float"]], "forward() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.forward"]], "half() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.half"]], "metric_state (torch_uncertainty.metrics.disagreement property)": [[25, "torch_uncertainty.metrics.Disagreement.metric_state"]], "persistent() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.persistent"]], "plot() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.plot"]], "reset() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.reset"]], "set_dtype() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.set_dtype"]], "state_dict() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.state_dict"]], "sync() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.sync"]], "sync_context() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.sync_context"]], "type() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.type"]], "unsync() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.unsync"]], "update() (torch_uncertainty.metrics.disagreement method)": [[25, "torch_uncertainty.metrics.Disagreement.update"]], "update_called (torch_uncertainty.metrics.disagreement property)": [[25, "torch_uncertainty.metrics.Disagreement.update_called"]], "update_count (torch_uncertainty.metrics.disagreement property)": [[25, "torch_uncertainty.metrics.Disagreement.update_count"]], "entropy (class in torch_uncertainty.metrics)": [[26, "torch_uncertainty.metrics.Entropy"]], "add_state() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.add_state"]], "clone() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.clone"]], "compute() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.compute"]], "device (torch_uncertainty.metrics.entropy property)": [[26, "torch_uncertainty.metrics.Entropy.device"]], "double() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.double"]], "float() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.float"]], "forward() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.forward"]], "half() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.half"]], "metric_state (torch_uncertainty.metrics.entropy property)": [[26, "torch_uncertainty.metrics.Entropy.metric_state"]], "persistent() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.persistent"]], "plot() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.plot"]], "reset() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.reset"]], "set_dtype() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.set_dtype"]], "state_dict() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.state_dict"]], "sync() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.sync"]], "sync_context() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.sync_context"]], "type() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.type"]], "unsync() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.unsync"]], "update() (torch_uncertainty.metrics.entropy method)": [[26, "torch_uncertainty.metrics.Entropy.update"]], "update_called (torch_uncertainty.metrics.entropy property)": [[26, "torch_uncertainty.metrics.Entropy.update_called"]], "update_count (torch_uncertainty.metrics.entropy property)": [[26, "torch_uncertainty.metrics.Entropy.update_count"]], "mutualinformation (class in torch_uncertainty.metrics)": [[27, "torch_uncertainty.metrics.MutualInformation"]], "add_state() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.add_state"]], "clone() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.clone"]], "compute() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.compute"]], "device (torch_uncertainty.metrics.mutualinformation property)": [[27, "torch_uncertainty.metrics.MutualInformation.device"]], "double() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.double"]], "float() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.float"]], "forward() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.forward"]], "half() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.half"]], "metric_state (torch_uncertainty.metrics.mutualinformation property)": [[27, "torch_uncertainty.metrics.MutualInformation.metric_state"]], "persistent() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.persistent"]], "plot() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.plot"]], "reset() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.reset"]], "set_dtype() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.set_dtype"]], "state_dict() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.state_dict"]], "sync() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.sync"]], "sync_context() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.sync_context"]], "type() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.type"]], "unsync() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.unsync"]], "update() (torch_uncertainty.metrics.mutualinformation method)": [[27, "torch_uncertainty.metrics.MutualInformation.update"]], "update_called (torch_uncertainty.metrics.mutualinformation property)": [[27, "torch_uncertainty.metrics.MutualInformation.update_called"]], "update_count (torch_uncertainty.metrics.mutualinformation property)": [[27, "torch_uncertainty.metrics.MutualInformation.update_count"]], "negativeloglikelihood (class in torch_uncertainty.metrics)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood"]], "add_state() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.add_state"]], "clone() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.clone"]], "compute() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.compute"]], "device (torch_uncertainty.metrics.negativeloglikelihood property)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.device"]], "double() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.double"]], "float() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.float"]], "forward() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.forward"]], "half() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.half"]], "metric_state (torch_uncertainty.metrics.negativeloglikelihood property)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.metric_state"]], "persistent() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.persistent"]], "plot() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.plot"]], "reset() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.reset"]], "set_dtype() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.set_dtype"]], "state_dict() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.state_dict"]], "sync() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.sync"]], "sync_context() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.sync_context"]], "type() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.type"]], "unsync() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.unsync"]], "update() (torch_uncertainty.metrics.negativeloglikelihood method)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.update"]], "update_called (torch_uncertainty.metrics.negativeloglikelihood property)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.update_called"]], "update_count (torch_uncertainty.metrics.negativeloglikelihood property)": [[28, "torch_uncertainty.metrics.NegativeLogLikelihood.update_count"]], "matrixscaler (class in torch_uncertainty.post_processing)": [[29, "torch_uncertainty.post_processing.MatrixScaler"]], "fit() (torch_uncertainty.post_processing.matrixscaler method)": [[29, "torch_uncertainty.post_processing.MatrixScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.matrixscaler method)": [[29, "torch_uncertainty.post_processing.MatrixScaler.set_temperature"]], "temperaturescaler (class in torch_uncertainty.post_processing)": [[30, "torch_uncertainty.post_processing.TemperatureScaler"]], "fit() (torch_uncertainty.post_processing.temperaturescaler method)": [[30, "torch_uncertainty.post_processing.TemperatureScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.temperaturescaler method)": [[30, "torch_uncertainty.post_processing.TemperatureScaler.set_temperature"]], "vectorscaler (class in torch_uncertainty.post_processing)": [[31, "torch_uncertainty.post_processing.VectorScaler"]], "fit() (torch_uncertainty.post_processing.vectorscaler method)": [[31, "torch_uncertainty.post_processing.VectorScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.vectorscaler method)": [[31, "torch_uncertainty.post_processing.VectorScaler.set_temperature"]]}})