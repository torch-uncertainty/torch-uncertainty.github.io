Search.setIndex({"docnames": ["api", "auto_tutorials/index", "auto_tutorials/sg_execution_times", "auto_tutorials/tutorial_bayesian", "auto_tutorials/tutorial_corruptions", "auto_tutorials/tutorial_der_cubic", "auto_tutorials/tutorial_evidential_classification", "auto_tutorials/tutorial_mc_batch_norm", "auto_tutorials/tutorial_mc_dropout", "auto_tutorials/tutorial_pe_cifar10", "auto_tutorials/tutorial_scaler", "cli_guide", "contributing", "generated/torch_uncertainty.baselines.classification.ResNetBaseline", "generated/torch_uncertainty.baselines.classification.VGGBaseline", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline", "generated/torch_uncertainty.baselines.depth.BTSBaseline", "generated/torch_uncertainty.baselines.regression.MLPBaseline", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline", "generated/torch_uncertainty.datamodules.CIFAR100DataModule", "generated/torch_uncertainty.datamodules.CIFAR10DataModule", "generated/torch_uncertainty.datamodules.ImageNetDataModule", "generated/torch_uncertainty.datamodules.MNISTDataModule", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule", "generated/torch_uncertainty.datamodules.UCIDataModule", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule", "generated/torch_uncertainty.layers.BatchConv2d", "generated/torch_uncertainty.layers.BatchLinear", "generated/torch_uncertainty.layers.MaskedConv2d", "generated/torch_uncertainty.layers.MaskedLinear", "generated/torch_uncertainty.layers.PackedConv2d", "generated/torch_uncertainty.layers.PackedLinear", "generated/torch_uncertainty.layers.bayesian.BayesConv1d", "generated/torch_uncertainty.layers.bayesian.BayesConv2d", "generated/torch_uncertainty.layers.bayesian.BayesConv3d", "generated/torch_uncertainty.layers.bayesian.BayesLinear", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear", "generated/torch_uncertainty.losses.BetaNLL", "generated/torch_uncertainty.losses.DECLoss", "generated/torch_uncertainty.losses.DistributionNLLLoss", "generated/torch_uncertainty.losses.ELBOLoss", "generated/torch_uncertainty.losses.KLDiv", "generated/torch_uncertainty.metrics.classification.AURC", "generated/torch_uncertainty.metrics.classification.AUSE", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError", "generated/torch_uncertainty.metrics.classification.BrierScore", "generated/torch_uncertainty.metrics.classification.CalibrationError", "generated/torch_uncertainty.metrics.classification.CategoricalNLL", "generated/torch_uncertainty.metrics.classification.CovAt5Risk", "generated/torch_uncertainty.metrics.classification.Disagreement", "generated/torch_uncertainty.metrics.classification.Entropy", "generated/torch_uncertainty.metrics.classification.FPR95", "generated/torch_uncertainty.metrics.classification.GroupingLoss", "generated/torch_uncertainty.metrics.classification.MeanIntersectionOverUnion", "generated/torch_uncertainty.metrics.classification.MutualInformation", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov", "generated/torch_uncertainty.metrics.classification.VariationRatio", "generated/torch_uncertainty.metrics.regression.DistributionNLL", "generated/torch_uncertainty.metrics.regression.Log10", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError", "generated/torch_uncertainty.metrics.regression.SILog", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy", "generated/torch_uncertainty.models.deep_ensembles", "generated/torch_uncertainty.models.mc_dropout", "generated/torch_uncertainty.post_processing.MCBatchNorm", "generated/torch_uncertainty.post_processing.MatrixScaler", "generated/torch_uncertainty.post_processing.TemperatureScaler", "generated/torch_uncertainty.post_processing.VectorScaler", "generated/torch_uncertainty.routines.ClassificationRoutine", "generated/torch_uncertainty.routines.PixelRegressionRoutine", "generated/torch_uncertainty.routines.RegressionRoutine", "generated/torch_uncertainty.routines.SegmentationRoutine", "index", "installation", "introduction_uncertainty", "quickstart", "references", "sg_execution_times"], "filenames": ["api.rst", "auto_tutorials/index.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/tutorial_bayesian.rst", "auto_tutorials/tutorial_corruptions.rst", "auto_tutorials/tutorial_der_cubic.rst", "auto_tutorials/tutorial_evidential_classification.rst", "auto_tutorials/tutorial_mc_batch_norm.rst", "auto_tutorials/tutorial_mc_dropout.rst", "auto_tutorials/tutorial_pe_cifar10.rst", "auto_tutorials/tutorial_scaler.rst", "cli_guide.rst", "contributing.rst", "generated/torch_uncertainty.baselines.classification.ResNetBaseline.rst", "generated/torch_uncertainty.baselines.classification.VGGBaseline.rst", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline.rst", "generated/torch_uncertainty.baselines.depth.BTSBaseline.rst", "generated/torch_uncertainty.baselines.regression.MLPBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline.rst", "generated/torch_uncertainty.datamodules.CIFAR100DataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR10DataModule.rst", "generated/torch_uncertainty.datamodules.ImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.MNISTDataModule.rst", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.UCIDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule.rst", "generated/torch_uncertainty.layers.BatchConv2d.rst", "generated/torch_uncertainty.layers.BatchLinear.rst", "generated/torch_uncertainty.layers.MaskedConv2d.rst", "generated/torch_uncertainty.layers.MaskedLinear.rst", "generated/torch_uncertainty.layers.PackedConv2d.rst", "generated/torch_uncertainty.layers.PackedLinear.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv1d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv2d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv3d.rst", "generated/torch_uncertainty.layers.bayesian.BayesLinear.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear.rst", "generated/torch_uncertainty.losses.BetaNLL.rst", "generated/torch_uncertainty.losses.DECLoss.rst", "generated/torch_uncertainty.losses.DistributionNLLLoss.rst", "generated/torch_uncertainty.losses.ELBOLoss.rst", "generated/torch_uncertainty.losses.KLDiv.rst", "generated/torch_uncertainty.metrics.classification.AURC.rst", "generated/torch_uncertainty.metrics.classification.AUSE.rst", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError.rst", "generated/torch_uncertainty.metrics.classification.BrierScore.rst", "generated/torch_uncertainty.metrics.classification.CalibrationError.rst", "generated/torch_uncertainty.metrics.classification.CategoricalNLL.rst", "generated/torch_uncertainty.metrics.classification.CovAt5Risk.rst", "generated/torch_uncertainty.metrics.classification.Disagreement.rst", "generated/torch_uncertainty.metrics.classification.Entropy.rst", "generated/torch_uncertainty.metrics.classification.FPR95.rst", "generated/torch_uncertainty.metrics.classification.GroupingLoss.rst", "generated/torch_uncertainty.metrics.classification.MeanIntersectionOverUnion.rst", "generated/torch_uncertainty.metrics.classification.MutualInformation.rst", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov.rst", "generated/torch_uncertainty.metrics.classification.VariationRatio.rst", "generated/torch_uncertainty.metrics.regression.DistributionNLL.rst", "generated/torch_uncertainty.metrics.regression.Log10.rst", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError.rst", "generated/torch_uncertainty.metrics.regression.SILog.rst", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy.rst", "generated/torch_uncertainty.models.deep_ensembles.rst", "generated/torch_uncertainty.models.mc_dropout.rst", "generated/torch_uncertainty.post_processing.MCBatchNorm.rst", "generated/torch_uncertainty.post_processing.MatrixScaler.rst", "generated/torch_uncertainty.post_processing.TemperatureScaler.rst", "generated/torch_uncertainty.post_processing.VectorScaler.rst", "generated/torch_uncertainty.routines.ClassificationRoutine.rst", "generated/torch_uncertainty.routines.PixelRegressionRoutine.rst", "generated/torch_uncertainty.routines.RegressionRoutine.rst", "generated/torch_uncertainty.routines.SegmentationRoutine.rst", "index.rst", "installation.rst", "introduction_uncertainty.rst", "quickstart.rst", "references.rst", "sg_execution_times.rst"], "titles": ["API Reference", "Tutorials", "Computation times", "Train a Bayesian Neural Network in Three Minutes", "Image Corruptions", "Deep Evidential Regression on a Toy Example", "Deep Evidential Classification on a Toy Example", "Training a LeNet with Monte Carlo Batch Normalization", "Training a LeNet with Monte-Carlo Dropout", "From a Standard Classifier to a Packed-Ensemble", "Improve Top-label Calibration with Temperature Scaling", "CLI Guide", "Contributing", "ResNetBaseline", "VGGBaseline", "WideResNetBaseline", "BTSBaseline", "MLPBaseline", "DeepLabBaseline", "SegFormerBaseline", "CIFAR100DataModule", "CIFAR10DataModule", "ImageNetDataModule", "MNISTDataModule", "TinyImageNetDataModule", "UCIDataModule", "CamVidDataModule", "CityscapesDataModule", "MUADDataModule", "BatchConv2d", "BatchLinear", "MaskedConv2d", "MaskedLinear", "PackedConv2d", "PackedLinear", "BayesConv1d", "BayesConv2d", "BayesConv3d", "BayesLinear", "LPBNNConv2d", "LPBNNLinear", "BetaNLL", "DECLoss", "DistributionNLLLoss", "ELBOLoss", "KLDiv", "AURC", "AUSE", "AdaptiveCalibrationError", "BrierScore", "CalibrationError", "CategoricalNLL", "CovAt5Risk", "Disagreement", "Entropy", "FPR95", "GroupingLoss", "MeanIntersectionOverUnion", "MutualInformation", "RiskAt80Cov", "VariationRatio", "DistributionNLL", "Log10", "MeanAbsoluteErrorInverse", "MeanGTRelativeAbsoluteError", "MeanGTRelativeSquaredError", "MeanSquaredErrorInverse", "MeanSquaredLogError", "SILog", "ThresholdAccuracy", "deep_ensembles", "mc_dropout", "MCBatchNorm", "MatrixScaler", "TemperatureScaler", "VectorScaler", "ClassificationRoutine", "PixelRegressionRoutine", "RegressionRoutine", "SegmentationRoutine", "Welcome to Torch Uncertainty", "Installation", "Introduction to Classification Uncertainty", "Quickstart", "References", "Computation times"], "terms": {"The": [0, 9, 10, 11, 25, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 46, 47, 49, 51, 53, 54, 55, 56, 58, 61, 62, 68, 69, 70, 76, 77, 78, 79, 80, 83, 84], "ar": [0, 3, 7, 9, 10, 11, 12, 19, 29, 30, 33, 34, 49, 51, 52, 53, 56, 58, 60, 61, 63, 66, 76, 82, 83, 84], "main": [0, 3, 12, 46], "build": [0, 10, 70], "block": [0, 29, 31, 32, 33, 39], "librari": [0, 3, 4, 12, 83, 84], "thei": [0, 11, 47], "defin": [0, 3, 5, 6, 7, 8, 10, 70, 76, 78, 79], "framework": 0, "which": [0, 3, 5, 6, 7, 8, 13, 14, 15, 19, 20, 21, 22, 23, 39, 40, 55, 60, 83], "train": [0, 1, 2, 4, 10, 11, 13, 14, 15, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 44, 72, 76, 78, 79, 80, 82, 84, 85], "evalu": [0, 9, 10, 11, 13, 14, 15, 20, 21, 22, 23, 46, 76, 83], "allow": 0, "easi": [0, 83], "comput": [0, 3, 8, 32, 34, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 76, 79, 83, 84], "differ": [0, 4, 7, 11, 83], "crucial": 0, "uncertainti": [0, 3, 5, 6, 8, 9, 12, 31, 32, 38, 39, 40, 41, 42, 46, 47, 58, 70, 72, 81], "context": 0, "name": [0, 11, 12, 25, 46], "torchuncertainti": [0, 1, 4, 80], "provid": [0, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 19, 27, 28, 46, 47, 50, 58, 83], "lightn": [0, 6, 10, 80], "base": [0, 3, 5, 6, 7, 8, 11, 46, 47, 49, 51, 53, 54, 56, 57, 58, 61, 80, 81, 82, 84], "can": [0, 3, 5, 7, 10, 11, 12, 26, 27, 28, 29, 58, 76, 78, 79, 81, 83, 84], "easili": [0, 10, 83], "These": [0, 4, 83], "inherit": [0, 11], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 26, 27, 28, 29, 30, 31, 32, 33, 39, 40, 41, 44, 45, 47, 51, 53, 54, 58, 63, 64, 65, 66, 67, 68, 76, 79, 80, 83, 84, 85], "specif": [0, 3, 5, 12, 83], "design": 0, "benchmark": [0, 4, 80, 83, 84], "similar": [0, 13, 14, 15, 76], "set": [0, 3, 5, 9, 11, 13, 14, 15, 20, 21, 22, 23, 24, 38, 44, 47, 49, 51, 53, 54, 56, 58, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 82, 83], "here": [0, 7, 9, 10, 11, 29, 30, 76, 78, 79, 80, 83], "constant": 0, "architectur": [0, 11, 13, 14, 19, 80, 83], "mont": [0, 1, 2, 12, 13, 14, 15, 72, 85], "carlo": [0, 1, 2, 12, 13, 14, 15, 72, 85], "dropout": [0, 1, 2, 12, 13, 14, 15, 71, 85], "On": [1, 10, 41, 73, 74, 75, 82, 84], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 26, 27, 28, 29, 30, 32, 33, 34, 44, 46, 47, 52, 72, 80, 82, 83, 84], "page": [1, 12, 80, 82, 83], "you": [1, 5, 7, 9, 10, 11, 12, 31, 32, 33, 34, 44, 76, 78, 79, 81, 83], "find": [1, 76, 78, 79, 83, 84], "insight": 1, "don": [1, 7, 8], "t": [1, 7, 8, 9, 30, 49], "hesit": [1, 83], "open": [1, 12, 84], "an": [1, 3, 4, 5, 6, 7, 8, 11, 12, 27, 28, 29, 30, 41, 46, 47, 53, 58, 83, 84], "issu": [1, 12, 83], "have": [1, 3, 5, 6, 7, 8, 11, 12, 81, 82, 83], "ani": [1, 10, 12, 13, 15, 29, 30, 31, 32, 83], "question": 1, "suggest": [1, 7, 12], "bayesian": [1, 2, 6, 7, 8, 10, 12, 35, 36, 37, 38, 39, 40, 44, 45, 50, 72, 80, 85], "neural": [1, 2, 4, 5, 6, 7, 8, 9, 10, 38, 39, 40, 41, 44, 45, 46, 56, 73, 74, 75, 80, 85], "network": [1, 2, 4, 5, 6, 7, 8, 9, 10, 33, 34, 38, 39, 40, 41, 44, 45, 46, 56, 68, 72, 73, 74, 75, 80, 85], "three": [1, 2, 30, 83, 85], "minut": [1, 2, 4, 5, 6, 7, 8, 9, 10, 85], "lenet": [1, 2, 85], "improv": [1, 2, 3, 5, 6, 7, 8, 82, 84, 85], "top": [1, 2, 48, 49, 50, 56, 85], "label": [1, 2, 3, 5, 6, 7, 8, 9, 46, 48, 49, 50, 51, 55, 56, 60, 61, 68, 73, 74, 75, 84, 85], "calibr": [1, 2, 13, 14, 15, 46, 48, 50, 56, 73, 74, 75, 76, 79, 82, 83, 85], "temperatur": [1, 2, 12, 73, 74, 75, 83, 85], "scale": [1, 2, 12, 13, 14, 15, 26, 27, 28, 31, 32, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 83, 85], "batch": [1, 2, 5, 9, 11, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 47, 49, 51, 53, 54, 56, 58, 61, 62, 68, 72, 76, 78, 79, 85], "normal": [1, 2, 5, 27, 28, 35, 36, 37, 38, 46, 49, 51, 53, 56, 58, 61, 72, 82, 85], "imag": [1, 2, 3, 6, 7, 8, 20, 21, 22, 23, 26, 27, 28, 29, 31, 33, 68, 81, 84, 85], "corrupt": [1, 2, 20, 21, 84, 85], "deep": [1, 2, 3, 8, 12, 42, 46, 48, 68, 70, 72, 83, 85], "evidenti": [1, 2, 42, 85], "regress": [1, 2, 11, 17, 25, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 77, 78, 83, 85], "toi": [1, 2, 85], "exampl": [1, 2, 3, 4, 7, 8, 9, 10, 11, 29, 30, 81, 84, 85], "classif": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 76, 83, 85], "standard": [1, 2, 3, 11, 13, 14, 15, 38, 39, 40, 76, 83, 85], "classifi": [1, 2, 3, 7, 8, 85], "pack": [1, 2, 11, 13, 14, 15, 33, 34, 83, 85], "ensembl": [1, 2, 12, 13, 14, 15, 19, 29, 30, 31, 33, 34, 53, 58, 70, 76, 78, 79, 83, 85], "download": [1, 3, 4, 5, 6, 7, 8, 9, 10, 23, 25], "all": [1, 3, 4, 6, 8, 9, 10, 11, 13, 15, 29, 31, 33, 72, 81, 83, 85], "python": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 81, 83], "sourc": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "code": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 83], "auto_tutorials_python": 1, "zip": [1, 4], "jupyt": [1, 3, 4, 5, 6, 7, 8, 9, 10], "notebook": [1, 3, 4, 5, 6, 7, 8, 9, 10], "auto_tutorials_jupyt": 1, "galleri": [1, 3, 4, 5, 6, 7, 8, 9, 10, 85], "gener": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 58, 84], "sphinx": [1, 3, 4, 5, 6, 7, 8, 9, 10, 81], "05": [2, 7, 10, 11, 85], "45": [2, 5, 6, 85], "367": [2, 5, 85], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 85], "execut": [2, 11, 34, 85], "8": [2, 5, 6, 7, 8, 10, 11, 29, 30, 85], "file": [2, 3, 4, 9, 10, 13, 14, 15, 22, 80, 81, 83, 85], "auto_tutori": 2, "mem": [2, 85], "mb": [2, 85], "tutorial_pe_cifar10": [2, 9, 85], "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 83, 85], "01": [2, 4, 10, 18, 39, 40, 79, 85], "47": [2, 5, 8, 9, 10, 85], "693": [2, 5, 9, 85], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 46, 49, 68, 72, 73, 74, 75, 76, 79, 82, 85], "tutorial_evidential_classif": [2, 6, 85], "00": [2, 3, 4, 5, 10, 85], "55": [2, 6, 85], "116": [2, 6, 85], "tutorial_mc_dropout": [2, 8, 85], "909": [2, 8, 85], "tutorial_mc_batch_norm": [2, 7, 85], "37": [2, 4, 5, 7, 85], "552": [2, 7, 85], "tutorial_bayesian": [2, 3, 85], "35": [2, 3, 5, 85], "443": [2, 3, 85], "tutorial_scal": [2, 10, 85], "31": [2, 5, 10, 85], "320": [2, 5, 10, 85], "tutorial_corrupt": [2, 4, 85], "24": [2, 4, 5, 10, 85], "804": [2, 4, 85], "tutorial_der_cub": [2, 5, 85], "530": [2, 5, 85], "go": [3, 4, 5, 6, 7, 8, 9, 10, 83], "end": [3, 4, 5, 6, 7, 8, 9, 10], "full": [3, 4, 5, 6, 7, 8, 9, 10, 11], "In": [3, 5, 6, 7, 8, 9, 10, 11, 29, 46, 47, 48, 50, 56, 70, 72, 73, 74, 75, 82, 83], "tutori": [3, 4, 5, 6, 7, 8, 9, 10, 12, 80, 82, 83], "we": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 29, 30, 82, 83], "variat": [3, 13, 14, 15, 60, 76], "infer": [3, 7, 8, 11, 27, 28], "bnn": 3, "mnist": [3, 6, 7, 8, 23], "dataset": [3, 4, 5, 6, 7, 8, 10, 11, 20, 21, 22, 23, 25, 26, 27, 28, 72, 73, 74, 75, 76, 80, 83], "class": [3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83], "estim": [3, 5, 6, 7, 8, 11, 13, 14, 15, 19, 29, 30, 31, 32, 33, 34, 41, 46, 47, 49, 53, 54, 56, 58, 60, 64, 65, 67, 68, 70, 71, 72, 76, 78, 79, 80, 82, 83, 84], "predict": [3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 19, 43, 46, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 82, 84], "via": [3, 81, 83], "weight": [3, 5, 10, 11, 12, 13, 29, 30, 33, 34, 38, 41, 42, 44, 73, 75, 84], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 27, 28, 29, 30, 33, 34, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 77, 78, 81, 82, 83], "achiev": 3, "consid": [3, 5, 6, 7, 8, 84], "random": [3, 9], "learn": [3, 6, 8, 11, 12, 29, 30, 42, 48, 73, 74, 75, 84], "posterior": [3, 8, 35, 36, 37, 38, 39, 40, 80, 84], "distribut": [3, 5, 6, 8, 10, 12, 17, 20, 21, 22, 23, 24, 38, 43, 61, 78, 82, 83, 84], "contrast": [3, 27, 28, 46], "onli": [3, 4, 6, 9, 12, 13, 14, 15, 33, 34, 49, 71, 72, 83], "singl": [3, 6, 19, 54, 68, 76, 77, 78, 79], "seen": [3, 11], "dirac": 3, "For": [3, 4, 8, 11, 12, 68, 81, 83, 84], "more": [3, 5, 7, 8, 10, 11, 76, 78, 79, 82, 84], "inform": [3, 8, 13, 14, 15, 58, 76], "reader": [3, 8], "follow": [3, 5, 6, 7, 8, 11, 12, 26, 27, 28, 46, 63, 64, 65, 66, 67, 81, 82, 83, 84], "resourc": [3, 8], "icml2015": 3, "hand": 3, "user": [3, 11, 83], "ieee": [3, 80, 84], "intellig": 3, "magazin": 3, "part": [3, 5, 6, 7, 8, 12], "alreadi": [3, 4, 5, 6, 7, 8, 9, 10, 12, 81], "implement": [3, 5, 6, 7, 8, 11, 12, 29, 30, 58, 84], "tu": [3, 5, 6, 7, 8], "To": [3, 5, 6, 8, 10, 11, 12, 80, 81, 82, 83], "modul": [3, 5, 6, 7, 8, 9, 13, 14, 15, 19, 29, 30, 44, 45, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83], "trainer": [3, 5, 6, 7, 8, 10, 11, 83], "bayesian_lenet": 3, "li": [3, 6, 7, 8, 84], "torch_uncertainti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83], "object": [3, 5, 6, 12, 44, 46, 47, 84], "elboloss": 3, "datamodul": [3, 5, 6, 7, 8, 11, 20, 21, 22, 23, 24, 25, 26, 27, 28, 80, 83], "handl": [3, 6, 7, 8, 10, 83], "dataload": [3, 5, 6, 7, 8, 9, 20, 21, 22, 23, 24, 26, 27, 28, 83], "mnistdatamodul": [3, 6, 7, 8], "also": [3, 4, 5, 6, 7, 8, 10, 12, 58, 80, 82, 83], "need": [3, 4, 5, 6, 7, 8, 10, 11, 12, 83], "torch": [3, 5, 6, 7, 8, 9, 10, 11, 12, 26, 27, 28, 29, 30, 33, 34, 39, 40, 53, 54, 56, 58, 61, 72, 76, 78, 79, 81, 83], "nn": [3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 44, 45, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83], "well": [3, 6, 8, 10, 50, 83, 84], "partial": [3, 6], "modifi": [3, 6, 9, 26, 27, 28], "default": [3, 6, 8, 11, 13, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 43, 46, 47, 49, 51, 53, 54, 58, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79], "argument": [3, 5, 6, 7, 8, 11, 22, 23, 46, 47, 49, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 83], "elbo": [3, 44], "pathlib": [3, 6, 7, 8], "import": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 26, 27, 28, 83], "path": [3, 6, 7, 8, 9, 22, 26, 27, 28], "pytorch": [3, 6, 9, 10, 11, 12, 29, 30, 78, 80, 81], "classificationroutin": [3, 6, 7, 8, 11, 44, 83], "adam": [3, 5, 6, 83, 84], "rate": [3, 5, 6, 8, 11, 13, 14, 15, 46, 55, 73, 74, 75, 79], "001": [3, 6, 9], "def": [3, 4, 5, 6, 7, 8, 9, 11, 83], "optim_lenet": [3, 6], "dict": [3, 5, 6, 76, 78, 79, 83], "paramet": [3, 5, 6, 9, 10, 13, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83], "lr": [3, 5, 6, 9, 11, 73, 74, 75, 83], "1e": [3, 5, 6, 7, 39, 40, 79, 83], "return": [3, 4, 5, 6, 9, 11, 13, 14, 15, 20, 21, 22, 23, 24, 31, 32, 44, 46, 47, 49, 51, 52, 53, 54, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 83], "root": [3, 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 68, 83], "log": [3, 5, 6, 7, 8, 10, 13, 14, 15, 41, 42, 43, 51, 61, 67, 68, 76, 79], "transform": [3, 4, 6, 7, 8, 9, 26, 27, 28, 30], "pleas": [3, 5, 12, 82, 84], "note": [3, 5, 9, 11, 33, 34], "ood": [3, 9, 13, 14, 15, 76], "detect": [3, 9, 12, 13, 14, 15, 76, 83, 84], "eval_ood": [3, 10, 13, 14, 15, 20, 21, 22, 23, 24, 76, 83], "true": [3, 4, 5, 6, 7, 9, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 50, 57, 60, 65, 66, 67, 68, 73, 74, 75, 78, 82, 83], "final": [3, 5, 10, 49, 56, 82, 83], "blueprint": [3, 8], "acceler": [3, 5, 6, 7, 8, 11], "cpu": [3, 5, 6, 7, 8, 72, 73, 74, 75, 81], "enable_progress_bar": [3, 5, 6, 7, 8], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 49, 50, 55, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 79, 83], "max_epoch": [3, 5, 6, 7, 8, 11, 83], "data": [3, 4, 6, 7, 8, 10, 11, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 38, 39, 40, 41, 73, 74, 75, 80, 83], "batch_siz": [3, 5, 6, 7, 8, 9, 10, 11, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 83], "128": [3, 6, 7, 8, 11], "num_channel": [3, 6, 7, 8], "num_class": [3, 6, 7, 8, 10, 11, 13, 14, 15, 18, 19, 48, 49, 50, 56, 57, 73, 75, 76, 79, 83], "Then": [3, 5, 6, 11, 12, 81], "just": [3, 10, 83], "dure": [3, 5, 6, 27, 28, 44, 83], "do": [3, 5, 6, 8, 9, 10, 11, 12, 76, 78, 79, 83], "redefin": [3, 6], "function": [3, 5, 6, 7, 8, 10, 11, 12, 44, 50, 76, 78, 79, 82, 83, 84], "functool": [3, 6], "hyperparamet": [3, 11], "propos": [3, 4], "blitz": 3, "As": [3, 46, 63, 64, 65, 66, 67, 83], "crossentropyloss": [3, 7, 8, 9, 11, 83], "likelihood": [3, 5, 6, 7, 8, 10, 41, 43, 51, 58, 61, 82], "inner_loss": [3, 44], "kl_weight": [3, 44], "50000": [3, 9], "num_sampl": [3, 5, 44], "optim_recip": [3, 5, 6, 7, 8, 13, 15, 76, 77, 78, 79, 83], "now": [3, 5, 6, 7, 8, 10, 11, 12], "prepar": 3, "includ": [3, 12, 81, 82], "eval": [3, 6, 7, 8, 72], "logic": 3, "automat": [3, 10, 11, 44, 77, 78, 81, 83], "folder": [3, 12, 80, 81, 83], "save": [3, 7, 9, 11, 13, 14, 15, 57, 73, 74, 75, 76], "fit": [3, 5, 6, 7, 8, 11, 72, 73, 74, 75, 83], "http": [3, 4, 10, 41, 42, 81, 84], "yann": [3, 84], "lecun": [3, 84], "com": [3, 81, 84], "exdb": 3, "idx3": 3, "ubyt": 3, "gz": [3, 4, 10], "fail": 3, "try": [3, 9, 12], "next": [3, 5, 6, 7, 8, 9], "error": [3, 6, 10, 12, 41, 46, 47, 48, 50, 63, 64, 65, 66, 67, 68], "403": 3, "forbidden": 3, "ossci": 3, "s3": 3, "amazonaw": 3, "raw": 3, "9912422": 3, "": [3, 4, 5, 6, 7, 8, 9, 11, 33, 34, 38, 49, 56, 80, 82, 84], "20": [3, 5, 10, 30], "1966080": 3, "19660396": 3, "88it": [3, 5], "64": [3, 5, 33], "6389760": 3, "34069650": 3, "69it": [3, 5], "100": [3, 4, 5, 10, 73, 74, 75, 83], "40498018": 3, "47it": [3, 5, 10], "extract": [3, 4, 10], "idx1": 3, "28881": 3, "5529038": 3, "01it": [3, 5, 10], "t10k": 3, "1648877": 3, "45595876": 3, "77it": [3, 5], "4542": 3, "24330177": 3, "23it": [3, 5], "opt": [3, 5, 6, 7, 8], "hostedtoolcach": [3, 5, 6, 7, 8], "10": [3, 4, 5, 6, 7, 8, 9, 10, 11, 37, 48, 50, 62, 81, 83], "14": [3, 5, 6, 7, 8, 10, 29], "x64": [3, 5, 6, 7, 8], "lib": [3, 5, 6, 7, 8], "python3": [3, 5, 6, 7, 8, 12], "site": [3, 5, 6, 7, 8], "packag": [3, 5, 6, 7, 8, 9, 12, 81, 83], "connector": [3, 5, 6, 7, 8], "data_connector": [3, 5, 6, 7, 8], "441": [3, 5, 6, 7, 8], "val_dataload": [3, 5, 6, 7, 8, 24], "doe": [3, 5, 6, 7, 8, 12], "mani": [3, 5, 6, 7, 8, 25, 83, 84], "worker": [3, 5, 6, 7, 8, 20, 21, 22, 23, 25, 26, 27, 28], "mai": [3, 5, 6, 7, 8, 10, 12, 82], "bottleneck": [3, 5, 6, 7, 8], "increas": [3, 5, 6, 7, 8, 12, 33, 34], "valu": [3, 5, 6, 7, 8, 11, 13, 14, 15, 29, 30, 43, 44, 46, 47, 49, 52, 56, 58, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 82], "num_work": [3, 5, 6, 7, 8, 9, 20, 21, 22, 23, 24, 25, 26, 27, 28], "perform": [3, 5, 6, 7, 8, 9, 11, 20, 22, 46, 76], "train_dataload": [3, 5, 6, 7, 8, 20, 21, 24], "test_dataload": [3, 5, 6, 7, 8, 10, 20, 21, 22, 23, 24], "metric": [3, 5, 6, 7, 8, 10, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 79, 80], "cal": [3, 6, 7, 8], "ec": [3, 6, 7, 8], "013426906429231167": 3, "aec": [3, 6, 7, 8], "012531302869319916": 3, "cl": [3, 6, 7, 8], "acc": [3, 6, 7, 8], "9527000188827515": 3, "brier": [3, 6, 7, 8, 49, 56], "07212904095649719": 3, "nll": [3, 5, 6, 7, 8, 43, 51, 61], "1496974676847458": 3, "entropi": [3, 6, 7, 8, 9, 10, 13, 14, 15, 76, 83], "18723346292972565": 3, "sc": [3, 6, 7, 8, 46], "aurc": [3, 6, 7, 8], "0044894787055490635": 3, "covat5risk": [3, 6, 7, 8], "riskat80cov": [3, 6, 7, 8], "005499999970197678": 3, "let": [3, 6, 7, 8, 9, 11, 12, 82, 83], "matplotlib": [3, 4, 5, 6, 7, 8, 9, 46, 47], "pyplot": [3, 4, 5, 6, 7, 8, 9], "plt": [3, 4, 5, 6, 7, 8, 9], "numpi": [3, 4, 6, 7, 8, 9, 12], "np": [3, 6, 7, 8, 9], "torchvis": [3, 4, 6, 7, 8, 9, 26, 27, 28], "imshow": [3, 4, 6, 7, 8, 9], "img": [3, 6, 7, 8, 9], "npimg": [3, 6, 7, 8, 9], "transpos": [3, 6, 7, 8, 9], "axi": [3, 4, 6, 7, 8, 9, 46, 47], "off": [3, 4, 6, 7, 8, 9], "tight_layout": [3, 7, 8], "show": [3, 4, 6, 7, 8, 9, 10, 73, 74, 75], "datait": [3, 6, 7, 8, 9], "iter": [3, 6, 7, 8, 9, 73, 74, 75], "print": [3, 6, 7, 8, 9, 10, 29, 30, 46], "make_grid": [3, 6, 7, 8, 9], "ground": [3, 5, 6, 7, 8, 46, 49, 51, 56, 61, 63, 64, 65, 66, 67, 68], "truth": [3, 5, 6, 7, 8, 46, 49, 51, 56, 61, 63, 64, 65, 66, 67, 68], "join": [3, 6, 7, 8, 9], "f": [3, 4, 6, 7, 8, 9, 10, 56, 83, 84], "j": [3, 4, 6, 7, 8, 9], "rang": [3, 4, 6, 7, 8, 9, 41], "logit": [3, 7, 8, 9, 10, 13, 14, 15, 73, 74, 75, 76, 82, 83, 84], "prob": [3, 6, 7, 8, 10, 46, 49, 51, 53, 54, 56, 58, 61], "softmax": [3, 7, 8, 9, 10, 13, 14, 15, 76, 82], "dim": [3, 5, 6, 7, 8, 9], "_": [3, 4, 9], "max": [3, 7, 8, 9, 69], "digit": [3, 6, 7, 8, 84], "clip": [3, 6, 7, 8], "input": [3, 6, 7, 8, 9, 10, 13, 14, 15, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 43, 44, 46, 47, 49, 51, 53, 54, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 82], "valid": [3, 5, 6, 7, 8, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 76], "rgb": [3, 6, 7, 8], "float": [3, 5, 6, 7, 8, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 38, 39, 40, 41, 42, 44, 46, 52, 55, 73, 74, 75, 76, 79], "255": [3, 6, 7, 8], "integ": [3, 6, 7, 8], "got": [3, 6, 7, 8], "42421296": [3, 6, 7, 8], "8214867": [3, 6, 7, 8], "7": [3, 5, 6, 7, 8, 10, 11, 38], "y": [3, 5, 10, 30, 63, 64, 65, 66, 67, 73, 74, 75, 82, 84], "bottou": [3, 84], "l": [3, 42, 84], "bengio": [3, 84], "haffner": [3, 84], "p": [3, 10], "1998": [3, 84], "gradient": [3, 9, 84], "appli": [3, 13, 14, 15, 20, 21, 23, 29, 30, 31, 32, 41, 42, 43, 71, 84], "document": [3, 80, 81, 84], "recognit": [3, 84], "proceed": [3, 84], "blundel": [3, 38, 70, 84], "c": [3, 4, 9, 10, 20, 21, 46, 49, 51, 53, 54, 56, 58, 61, 73, 74, 75, 82, 83], "cornebis": [3, 84], "kavukcuoglu": [3, 84], "k": [3, 5, 10, 29, 30, 69, 72, 73, 74, 75, 82, 84], "wierstra": [3, 84], "d": [3, 4, 41, 84], "2015": [3, 10, 38, 50, 84], "icml": [3, 8, 10, 38, 72, 73, 74, 75, 82, 84], "kingma": 3, "ba": [3, 84], "2014": [3, 68], "A": [3, 12, 41, 46, 47, 49, 53, 54, 56, 58, 63, 64, 65, 66, 67, 68, 80, 83], "method": [3, 5, 6, 7, 8, 10, 11, 13, 15, 22, 29, 30, 72, 80, 83], "stochast": [3, 7, 72], "iclr": [3, 4, 56, 80, 83, 84], "run": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 81, 83], "time": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 27, 28, 29, 33, 34], "script": [3, 4, 5, 6, 7, 8, 9, 10, 83], "second": [3, 4, 5, 6, 7, 8, 9, 10, 38], "ipynb": [3, 4, 5, 6, 7, 8, 9, 10], "impact": [4, 46], "avail": [4, 9, 10, 11, 76], "were": 4, "first": [4, 7, 8, 9, 10, 12, 33, 34, 38], "paper": [4, 5, 6, 12, 29, 30, 38, 47, 80, 83, 84], "robust": [4, 84], "common": [4, 80, 84], "perturb": [4, 84], "dan": [4, 84], "hendryck": [4, 84], "thoma": [4, 84], "dietterich": [4, 84], "load": [4, 20, 21, 22, 23, 25], "util": [4, 9, 11], "cifar10": [4, 11, 21, 83], "compos": [4, 6, 9, 26, 27, 28, 29], "totensor": [4, 9], "resiz": [4, 22, 26, 27, 28], "get_imag": 4, "main_corrupt": 4, "index": [4, 80, 82], "int": [4, 6, 11, 13, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 44, 46, 49, 55, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83], "creat": [4, 11, 12, 81, 83], "6": [4, 8, 9, 11, 35, 36, 83], "level": [4, 55, 83], "given": [4, 32, 34, 43, 44, 52, 63, 66, 82], "sever": [4, 20, 21, 29], "ds_transform": 4, "256": [4, 5, 7, 11], "antialia": [4, 27, 28], "append": 4, "permut": 4, "show_imag": 4, "effect": [4, 7], "num_corrupt": 4, "len": [4, 10], "ax": [4, 5, 10, 46, 47], "subplot": [4, 5], "figsiz": [4, 9], "5": [4, 11, 13, 14, 15, 19, 27, 28, 29, 30, 41, 52, 76, 83], "enumer": [4, 9], "text": [4, 9, 27, 28, 29, 30, 33, 34, 62, 63, 64, 65, 66, 67, 68], "__name__": [4, 11], "transax": 4, "rotat": [4, 6], "vertic": 4, "horizontalalign": 4, "right": [4, 29, 68], "verticalalign": 4, "center": [4, 83], "fontsiz": 4, "12": [4, 5, 6, 10], "set_titl": 4, "origin": [4, 5, 6, 10, 12, 13, 14, 15, 19, 50, 70, 84], "elif": 4, "www": [4, 10], "toronto": [4, 10], "edu": [4, 10], "kriz": [4, 10], "cifar": [4, 9, 10, 11], "tar": [4, 10], "170498071": 4, "851968": 4, "21": [4, 5, 10], "7736451": 4, "49it": [4, 5], "9928704": 4, "02": [4, 10], "54606719": 4, "66it": [4, 5], "11": [4, 5, 6, 10, 14], "18153472": 4, "66928208": 4, "98it": [4, 5, 10], "17": [4, 5, 10], "28442624": 4, "80917276": 4, "48it": [4, 5], "36634624": 4, "79979642": 4, "59it": [4, 5], "27": [4, 5, 10], "45973504": 4, "84394130": 4, "63it": [4, 5, 10], "32": [4, 5, 7, 10, 13, 29, 39, 40, 72, 83], "54493184": 4, "83255512": 4, "83it": [4, 5], "63635456": 4, "85761419": 4, "22it": [4, 5], "42": [4, 5, 25], "72253440": 4, "85297144": 4, "89it": [4, 5], "48": [4, 5], "81035264": 4, "86034362": 4, "02it": [4, 5, 10], "53": [4, 5, 10], "89686016": 4, "85785645": 4, "14it": [4, 5, 10], "58": [4, 12], "98304000": 4, "85417133": 4, "19it": [4, 5], "63": 4, "107085824": 4, "86108528": 4, "64it": [4, 5], "68": 4, "116260864": 4, "87718873": 4, "50it": [4, 5], "73": [4, 10], "125042688": 4, "85640508": 4, "46it": [4, 5], "79": 4, "134381568": 4, "87859162": 4, "26it": [4, 5], "84": [4, 5, 7, 9, 10, 83], "143196160": 4, "86136714": 4, "73it": [4, 5], "89": 4, "152272896": 4, "87435319": 4, "27it": [4, 5], "94": [4, 5, 10], "161054720": 4, "84817049": 4, "28it": [4, 5], "170360832": 4, "87055607": 4, "57it": [4, 5], "82915702": 4, "90it": [4, 5], "gaussiannois": 4, "shotnois": 4, "impulsenois": 4, "specklenois": 4, "gaussianblur": 4, "glassblur": 4, "defocusblur": 4, "jpegcompress": 4, "pixel": 4, "frost": 4, "zenodo": 4, "org": [4, 41, 42, 84], "record": 4, "10438904": 4, "1780178": 4, "4": [4, 11, 19, 29, 38, 77, 83], "65536": 4, "04": [4, 10], "344312": 4, "15": [4, 5, 10, 13, 18, 76, 79], "262144": 4, "838817": 4, "70it": [4, 5], "33": [4, 5, 10], "589824": 4, "1515771": 4, "3122392": 4, "21it": [4, 5], "verifi": [4, 9, 10], "2019": [4, 48, 84], "introduct": [5, 80], "probabilist": [5, 41, 60, 70, 77, 78, 84], "present": [5, 29, 30], "practic": [5, 6, 11], "demonstr": [5, 6], "applic": [5, 6, 12, 83], "tackl": [5, 6], "problem": [5, 6, 7, 8, 12], "x": [5, 9, 30, 83], "multi": [5, 6, 47, 64, 65, 67, 68], "layer": [5, 6, 7, 8, 9, 13, 14, 15, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 71, 72, 80, 82], "perceptron": [5, 6], "output": [5, 6, 7, 9, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 46, 63, 64, 65, 66, 67, 77, 78, 82], "normalinversegamma": 5, "through": [5, 8, 10], "its": [5, 9, 29, 30, 33, 34, 46, 69, 82, 83], "neg": [5, 41, 43, 51, 58, 61], "repres": [5, 6, 8, 10, 82, 84], "approach": [5, 6, 29, 30, 84], "quantifi": [5, 6, 42, 84], "epistem": [5, 58], "aleator": 5, "involv": [5, 6], "introduc": [5, 6, 29, 30], "prior": [5, 6, 35, 36, 37, 38], "over": [5, 6, 9, 11, 29, 49, 51, 53, 54, 57, 58, 61, 63, 64, 67], "gaussian": 5, "derloss": 5, "contain": [5, 10, 11, 12, 22, 46, 77, 78, 80, 83], "classic": [5, 11, 83], "regular": [5, 6, 42, 68, 84], "term": [5, 6, 38, 42, 44], "sampl": [5, 8, 9, 10, 20, 21, 22, 23, 25, 26, 27, 28, 29, 38, 39, 40, 44, 46, 49, 51, 53, 54, 58, 61], "noisi": [5, 84], "cubic": 5, "within": [5, 6, 7, 8, 13, 14, 15, 44], "lightningdatamodul": [5, 11], "regressionroutin": 5, "normalinversegammalay": 5, "5e": 5, "optim_regress": 5, "learning_r": 5, "weight_decai": [5, 6], "same": [5, 6, 7, 10, 11, 13, 15], "synthet": 5, "simpl": [5, 70, 83, 84], "hidden": [5, 39, 40], "neuron": 5, "each": [5, 11, 12, 13, 14, 15, 29, 30, 31, 33, 34, 46], "finish": [5, 9, 12], "interpret": [5, 27, 28, 58], "invers": [5, 63, 66, 69], "gamma": [5, 6, 9, 13, 14, 15, 17, 33, 34, 39, 83], "50": [5, 10, 11, 13], "train_d": 5, "1000": [5, 10], "val_d": 5, "300": 5, "from_dataset": 5, "val_dataset": 5, "test_dataset": [5, 10], "training_task": 5, "in_featur": [5, 7, 17, 30, 32, 34, 38, 40], "num_output": [5, 65, 66], "hidden_dim": [5, 17], "final_lay": 5, "final_layer_arg": 5, "after": [5, 6, 10, 11, 26, 27, 28], "reg_weight": [5, 6, 42], "output_dim": [5, 17, 77, 78], "saniti": 5, "check": [5, 11, 12, 80, 81, 83], "462": 5, "541": 5, "03it": [5, 10], "loop": [5, 9], "fit_loop": 5, "298": 5, "number": [5, 7, 8, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 44, 46, 49, 51, 53, 54, 56, 58, 61, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83], "smaller": [5, 27, 28], "than": [5, 10, 70], "interv": 5, "log_every_n_step": 5, "lower": [5, 44, 47, 53, 54], "want": [5, 7, 11, 81], "see": [5, 7, 8, 9, 10, 11, 12, 33, 34, 47, 49, 50, 51, 53, 54, 56, 58, 61, 62, 64, 65, 67, 68, 69, 82], "epoch": [5, 6, 9, 11], "245": 5, "233": 5, "15it": 5, "v_num": 5, "291": 5, "37it": 5, "283": 5, "45it": 5, "9": [5, 6, 7, 8, 9, 10, 11], "316": 5, "310": 5, "29it": 5, "330": [5, 10], "11it": [5, 10], "324": 5, "16": [5, 6, 7, 8, 9, 10, 14, 29, 83], "338": 5, "87it": 5, "334": 5, "19": [5, 10, 14], "344": 5, "341": 5, "09it": [5, 10], "22": [5, 6, 10], "349": 5, "38it": 5, "346": 5, "10it": [5, 10], "25": [5, 7, 10, 11, 69], "353": 5, "350": 5, "28": [5, 10], "356": 5, "43it": [5, 10], "76it": 5, "358": 5, "99it": 5, "56it": 5, "34": [5, 10, 11], "361": 5, "38": [5, 10], "362": 5, "360": [5, 26], "52it": 5, "41": [5, 7, 10], "13": [5, 10, 14], "363": 5, "93it": [5, 10], "00it": [5, 10], "44": [5, 10], "365": 5, "61it": 5, "82it": [5, 10], "366": 5, "86it": [5, 10], "79it": 5, "18it": 5, "369": 5, "16it": [5, 10], "65it": 5, "56": [5, 10], "18": [5, 10, 11, 13], "368": 5, "36it": 5, "59": [5, 6, 10], "370": 5, "58it": 5, "62": [5, 10], "371": 5, "20it": 5, "66": [5, 10], "69": [5, 10], "372": 5, "91it": 5, "72": [5, 10], "23": [5, 10], "60it": 5, "75": [5, 10, 11], "78": [5, 10], "373": 5, "34it": 5, "97it": [5, 10], "81": [5, 10], "26": [5, 10], "374": 5, "04it": [5, 10], "06it": [5, 10], "88": [5, 10], "42it": 5, "91": [5, 10], "29": [5, 10], "30": [5, 10, 30], "375": 5, "97": [5, 10], "376": 5, "05it": [5, 10], "702": 5, "665": 5, "08it": [5, 10], "654": 5, "40": [5, 10], "653": [5, 9], "62it": 5, "60": [5, 10], "649": 5, "70": 5, "651": 5, "80": [5, 10, 59], "650": 5, "07it": 5, "90": [5, 6], "51it": [5, 10], "306": 5, "95it": [5, 10], "305": 5, "357": 5, "72it": 5, "331": 5, "67it": [5, 10], "75it": 5, "377": 5, "378": 5, "17it": 5, "81it": 5, "32it": 5, "92it": 5, "379": 5, "30it": 5, "13it": 5, "80it": [5, 10], "55it": 5, "678": 5, "643": 5, "640": 5, "644": 5, "74it": 5, "647": 5, "645": 5, "307": 5, "296": 5, "33it": 5, "276": 5, "288": 5, "301": 5, "295": 5, "309": 5, "321": 5, "317": 5, "31it": [5, 10], "44it": 5, "327": 5, "336": 5, "333": 5, "339": 5, "40it": 5, "343": 5, "351": 5, "25it": 5, "355": 5, "354": 5, "359": 5, "12it": 5, "364": 5, "84it": 5, "39it": 5, "684": 5, "54it": 5, "41it": 5, "646": 5, "302": 5, "322": 5, "85it": [5, 10], "78it": 5, "35it": 5, "380": 5, "24it": 5, "71it": 5, "652": 5, "615": 5, "603": 5, "598": 5, "597": 5, "595": 5, "572": 5, "558": 5, "561": 5, "297": 5, "241": 5, "226": 5, "251": 5, "243": 5, "250": 5, "258": 5, "254": 5, "260": 5, "257": 5, "261": 5, "96it": 5, "263": 5, "264": 5, "262": 5, "265": 5, "53it": 5, "266": 5, "267": 5, "268": 5, "269": 5, "272": 5, "271": 5, "275": 5, "274": 5, "277": 5, "280": 5, "279": 5, "282": 5, "285": 5, "287": 5, "290": 5, "292": 5, "294": 5, "705": 5, "659": 5, "656": 5, "648": 5, "249": 5, "345": 5, "323": 5, "348": 5, "68it": 5, "381": 5, "382": 5, "696": 5, "661": 5, "311": 5, "340": 5, "699": 5, "655": 5, "308": 5, "352": 5, "383": 5, "384": 5, "314": 5, "663": 5, "658": [5, 6], "318": 5, "342": 5, "701": 5, "657": 5, "94it": [5, 10], "709": 5, "676": 5, "328": 5, "679": 5, "660": 5, "724": 5, "666": 5, "337": 5, "325": 5, "332": 5, "335": 5, "347": 5, "677": 5, "681": 5, "312": 5, "671": 5, "667": 5, "662": 5, "690": 5, "689": 5, "642": 5, "712": 5, "680": 5, "664": 5, "706": 5, "668": 5, "551": 5, "560": 5, "584": 5, "607": 5, "612": 5, "618": 5, "621": [5, 9], "626": 5, "632": 5, "329": 5, "675": 5, "637": 5, "634": 5, "638": 5, "636": 5, "639": 5, "641": 5, "700": 5, "708": 5, "672": 5, "385": 5, "386": 5, "670": 5, "326": 5, "304": 5, "722": 5, "673": 5, "633": 5, "692": 5, "687": 5, "36": 5, "731": 5, "683": 5, "39": 5, "688": 5, "732": 5, "691": [5, 9], "628": 5, "601": 5, "589": 5, "579": 5, "575": 5, "299": 5, "43": 5, "725": 5, "313": 5, "46": [5, 10], "49": 5, "303": 5, "682": 5, "685": 5, "523": 5, "mae": 5, "208158493041992": 5, "mse": [5, 42, 66], "113880157470703": 5, "7527453899383545": 5, "rmse": [5, 66], "371942520141602": 5, "plot": [5, 7, 10, 13, 14, 15, 46, 47, 50, 76, 79], "case": [5, 10, 11, 29, 82, 83], "reproduc": [5, 12, 83], "result": [5, 7, 9, 11, 13, 14, 15, 58, 76, 83], "no_grad": [5, 6], "linspac": 5, "dist": [5, 43, 61], "unsqueez": 5, "mean": [5, 8, 9, 13, 14, 15, 27, 28, 38, 41, 42, 43, 47, 49, 51, 53, 54, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 76], "loc": 5, "squeez": [5, 77, 78], "varianc": [5, 7, 8, 68], "sqrt": [5, 29, 30, 68], "variance_loc": 5, "fig": [5, 10], "r": [5, 9], "zorder": 5, "fill_between": 5, "linewidth": 5, "alpha": [5, 6, 9, 11, 13, 14, 15, 17, 33, 34, 76, 83], "edgecolor": 5, "none": [5, 6, 9, 11, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 61, 70, 72, 73, 74, 75, 76, 77, 78, 79, 83], "facecolor": 5, "blue": 5, "els": [5, 76], "gca": 5, "set_ylim": 5, "150": 5, "set_xlim": 5, "legend": 5, "upper": 5, "left": [5, 29, 68], "grid": 5, "alexand": [5, 70, 84], "amini": [5, 84], "wilko": [5, 84], "schwart": [5, 84], "ava": [5, 84], "soleimani": [5, 84], "daniela": [5, 84], "ru": [5, 84], "neurip": [5, 6, 8, 42, 46, 68, 70, 84], "2020": [5, 84], "aim": 6, "introductori": 6, "overview": 6, "mlp": [6, 11, 17], "dirichlet": [6, 42], "minim": [6, 10, 44, 84], "risk": [6, 46, 52, 59], "squar": [6, 27, 28, 29, 65, 66, 67, 68], "kl": [6, 44, 45], "diverg": [6, 44, 45, 58], "categor": [6, 82], "decloss": 6, "offici": [6, 29, 30], "step": [6, 9, 12, 42, 81], "schedul": [6, 11, 76, 78, 79], "005": 6, "exp_lr_schedul": 6, "lr_schedul": [6, 11], "steplr": 6, "step_siz": 6, "fake": [6, 8], "pars": [6, 8], "sake": 6, "in_channel": [6, 7, 8, 10, 11, 13, 14, 15, 29, 31, 33, 35, 36, 37, 39, 83], "classificationsingl": 6, "0415937565267086": 6, "061168789863586426": 6, "49000000953674316": 6, "5500466227531433": 6, "4877368211746216": 6, "0334022045135498": 6, "2015183175584175": 6, "nan": [6, 52], "4151250123977661": 6, "rotated_mnist": 6, "angl": 6, "confid": [6, 53, 54], "arg": 6, "degre": 6, "rotated_imag": 6, "evid": [6, 44], "relu": [6, 9, 83], "strength": 6, "sum": [6, 7, 41, 42, 43, 49, 51, 53, 54, 56, 58, 61, 82], "keepdim": 6, "argmax": 6, "756": 6, "71": 6, "murat": [6, 84], "sensoi": [6, 42, 84], "lanc": [6, 84], "kaplan": [6, 42, 84], "melih": [6, 84], "kandemir": [6, 42, 84], "2018": [6, 42, 47, 72, 84], "post": [7, 73, 74, 75, 76, 80], "hoc": [7, 76], "approxim": [7, 8, 84], "mc": [7, 13, 14, 15, 71, 72], "wrapper": [7, 8, 11, 50, 71, 72, 83], "mc_batch_norm": 7, "post_process": [7, 10, 72, 73, 74, 75], "optim": [7, 8, 11, 13, 15, 46, 73, 74, 75, 76, 78, 79, 83], "recip": [7, 8, 13, 15, 83], "optim_cifar10_resnet18": [7, 8], "norm": [7, 48, 50], "batchnorm2d": [7, 72], "011139568872749805": 7, "00955628976225853": 7, "9544000029563904": 7, "06818271428346634": 7, "14299431443214417": 7, "1105421632528305": 7, "004244639319066394": 7, "004749999847263098": 7, "add": [7, 11, 12, 29, 30, 31, 32, 33, 34, 39, 40, 46, 47], "specifi": [7, 8, 12, 41, 42, 43, 70], "batchnorm": [7, 72], "convert": [7, 72], "amount": [7, 60], "control": [7, 38, 41], "mc_batch_siz": [7, 72], "larger": 7, "author": [7, 80, 84], "good": [7, 9, 82], "highlight": 7, "num_estim": [7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 39, 40, 49, 56, 70, 71, 72, 76, 77, 78, 79, 83], "_lenet": 7, "conv1": [7, 9, 83], "conv2d": [7, 9, 29, 31, 33, 36], "kernel_s": [7, 29, 31, 33, 35, 36, 37, 39], "stride": [7, 29, 31, 33, 35, 36, 37, 39], "norm1": 7, "mcbatchnorm2d": [7, 72], "ep": 7, "momentum": [7, 9], "affin": 7, "track_running_stat": 7, "conv2": [7, 9, 83], "norm2": 7, "pool": [7, 9, 83], "adaptiveavgpool2d": 7, "output_s": 7, "fc1": [7, 9, 83], "linear": [7, 9, 30, 32, 34, 38, 40], "out_featur": [7, 30, 32, 34, 38, 40], "120": [7, 9, 83], "bia": [7, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 73, 75], "fc2": [7, 9, 83], "fc3": [7, 9, 83], "format_batch_fn": [7, 76, 77, 78, 79, 83], "ident": [7, 76], "val_cls_metr": 7, "metriccollect": 7, "multiclasscalibrationerror": 7, "multiclassadaptivecalibrationerror": 7, "multiclassaccuraci": 7, "brierscor": 7, "categoricalnl": 7, "prefix": [7, 11], "val": [7, 10, 25, 74, 76, 83], "test_cls_metr": 7, "test_id_entropi": 7, "mixup": [7, 13, 14, 15, 76], "forget": [7, 8], "call": [7, 8, 10, 11, 29, 30, 82], "enabl": [7, 8, 11], "most": [7, 12, 83], "uncertain": 7, "e": [7, 9, 11, 12, 27, 28, 47, 64, 65, 67, 78, 81, 83], "highest": 7, "reshap": [7, 8], "most_uncertain": 7, "sort": 7, "var": 7, "topk": 7, "indic": [7, 13, 14, 15, 76, 79], "str": [7, 8, 13, 14, 15, 19, 20, 21, 22, 23, 26, 27, 28, 29, 31, 33, 39, 41, 42, 43, 46, 49, 51, 53, 54, 58, 61, 76], "image_id": [7, 8], "item": [7, 8, 9], "92": 7, "95": [7, 55], "mostli": [7, 12], "erron": 7, "expect": [7, 10, 13, 15], "sinc": 7, "select": [7, 46, 84], "depend": [7, 11, 63, 66, 81, 82, 84], "computation": [8, 58], "effici": [8, 10, 29, 30, 80, 83, 84], "multipl": [8, 9, 52, 80, 84], "forward": [8, 9, 29, 30, 43, 44, 45, 46, 63, 64, 65, 66, 67, 76, 77, 78, 79, 83], "pass": [8, 11, 12, 45, 46, 47, 49, 51, 53, 54, 55, 56, 58, 61, 76, 77, 78, 79, 83], "mode": [8, 12, 13, 14, 15, 72, 76, 81], "refer": [8, 9, 12, 29, 30, 31, 32, 38, 39, 40, 41, 42, 46, 47, 48, 50, 56, 64, 65, 67, 68, 70, 72, 73, 74, 75, 80, 83], "2016": [8, 84], "what": [8, 9, 11, 13, 15], "vision": [8, 84], "2017": [8, 10, 46, 70, 73, 74, 75, 82, 84], "mc_dropout": 8, "wrap": [8, 71, 83], "It": [8, 11, 32, 34, 44, 46, 81, 82, 83], "dropout_r": [8, 13, 14, 15, 17], "mc_model": 8, "last_lay": [8, 71], "channel": [8, 13, 14, 15, 29, 31, 32, 33, 34, 39], "16778354346752167": 8, "16776160895824432": 8, "9311000108718872": 8, "15288327634334564": 8, "3797769546508789": 8, "8301590085029602": 8, "ens_disagr": 8, "19476580619812012": 8, "ens_entropi": 8, "6067119240760803": 8, "ens_mi": 8, "22344718873500824": 8, "009992497913812874": 8, "9625999927520752": 8, "014999999664723873": 8, "some": [8, 9, 11], "disagr": [8, 60], "between": [8, 29, 30, 31, 33, 41, 46, 60], "heavili": [9, 29, 30], "inspir": [9, 12, 29, 30], "dive": 9, "process": [9, 73, 74, 75, 80, 81], "us": [9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 43, 44, 50, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84], "consist": [9, 29, 30], "60000": 9, "32x32": 9, "colour": 9, "6000": 9, "per": [9, 20, 21, 22, 23, 26, 27, 28, 33, 49, 51, 53, 54, 58, 61], "There": [9, 10], "10000": 9, "look": [9, 10, 12, 83], "like": [9, 11, 12, 27, 28, 83], "outlin": 9, "w": [9, 27, 28, 30, 83], "quantif": [9, 12, 39, 40, 80, 84], "set_num_thread": 9, "pilimag": 9, "them": [9, 11, 83], "tensor": [9, 11, 29, 30, 31, 32, 43, 44, 46, 47, 49, 51, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 77, 78, 79], "If": [9, 10, 11, 12, 13, 14, 15, 27, 28, 29, 30, 31, 33, 39, 40, 46, 47, 49, 51, 52, 53, 54, 56, 58, 61, 65, 66, 67, 68, 70, 76, 78, 81, 83], "window": 9, "get": [9, 10, 12, 20, 21, 22, 23, 24, 44, 83], "brokenpipeerror": 9, "trainset": 9, "trainload": 9, "shuffl": 9, "testset": 9, "testload": 9, "plane": [9, 29], "car": 9, "bird": 9, "cat": 9, "deer": 9, "dog": 9, "frog": 9, "hors": 9, "ship": 9, "truck": 9, "u": [9, 12, 29, 30, 81, 83], "fun": 9, "unnorm": 9, "figur": [9, 10, 46, 47], "pad_valu": 9, "convolut": [9, 13, 14, 15, 29, 31, 33, 34, 39, 84], "net": 9, "__init__": [9, 11, 83], "self": [9, 11, 26, 27, 28, 76, 83], "super": [9, 83], "maxpool2d": [9, 83], "flatten": [9, 83], "m": [9, 10, 12, 29, 30, 41, 42, 63, 66, 72, 83, 84], "einop": [9, 83], "rearrang": [9, 34, 83], "packedconv2d": [9, 83], "packedlinear": [9, 83], "packednet": [9, 83], "last": [9, 11, 13, 14, 15, 33, 34, 71, 82, 83], "h": [9, 27, 28, 72, 83], "packed_net": [9, 83], "cross": [9, 10], "sgd": [9, 11], "criterion": [9, 13, 14, 15, 76], "running_loss": 9, "list": [9, 10, 12, 20, 21, 22, 23, 24, 70, 80, 83, 84], "zero": [9, 33, 35, 36, 37, 39, 58], "zero_grad": 9, "backward": 9, "repeat": [9, 11, 13, 15, 31, 32], "statist": 9, "2000": [9, 10], "1999": 9, "everi": 9, "mini": 9, "5d": 9, "3f": 9, "004": 9, "4000": 9, "213": 9, "092": 9, "8000": 9, "992": 9, "912": 9, "12000": 9, "815": 9, "755": 9, "719": 9, "620": 9, "our": [9, 11, 50, 83], "model": [9, 11, 12, 19, 39, 40, 44, 45, 46, 51, 53, 54, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82], "cifar_packed_net": 9, "pth": 9, "state_dict": 9, "displai": [9, 11], "familiar": 9, "groundtruth": 9, "back": 9, "re": 9, "wasn": 9, "necessari": [9, 34], "did": 9, "illustr": 9, "how": [9, 10, 11, 25, 47, 49, 51, 53, 54, 58, 61, 83], "so": [9, 11, 33, 34], "load_state_dict": [9, 10], "kei": [9, 10], "match": [9, 10, 11, 27, 28, 84], "successfulli": [9, 10], "think": [9, 83], "abov": [9, 11], "n": [9, 29, 30, 46, 49, 53, 54, 56, 58, 62, 63, 64, 65, 66, 67, 68, 81], "b": [9, 29, 30, 47, 49, 51, 53, 54, 56, 58, 61], "probs_per_est": 9, "seem": 9, "pretti": 9, "reliabl": 10, "underli": [10, 33, 34], "extens": 10, "detail": [10, 11, 50, 76, 78, 79, 80, 82], "temperaturescal": 10, "howev": [10, 11, 12, 33, 34, 82], "done": 10, "routin": [10, 11, 76, 77, 78, 79, 80], "when": [10, 11, 12, 29, 30, 33, 34, 46, 70, 76, 83], "calibration_set": [10, 13, 14, 15, 73, 74, 75, 76, 83], "test": [10, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 76, 78, 79, 83], "outsid": 10, "diagram": 10, "resnet": [10, 11, 13, 15, 83], "start": [10, 12, 31, 32], "tensorboard": 10, "log_plot": [10, 13, 14, 15, 18, 76, 79, 83], "flag": [10, 12, 72], "cifar100datamodul": 10, "calibrationerror": 10, "load_hf": 10, "avoid": [10, 12, 58], "scratch": 10, "hug": [10, 12], "face": [10, 12, 84], "one": [10, 11, 49, 51, 53, 54, 56, 58, 61, 63, 66, 77, 78, 83], "liner": 10, "arch": [10, 11, 13, 14, 16, 18, 19], "style": [10, 11, 12, 13, 14, 15, 18, 29, 30, 31, 32, 33, 34, 39, 40], "conv_bia": 10, "config": [10, 11, 83], "resnet18_c100": 10, "pre": [10, 12, 81], "built": [10, 82], "prepare_data": [10, 23, 25], "setup": [10, 25], "element": [10, 29, 31, 33], "out": [10, 11, 12, 20, 21, 22, 23, 24, 29, 30, 70, 83, 84], "otherwis": 10, "dm": [10, 83], "unus": 10, "169001437": 10, "917504": 10, "8341947": 10, "10944512": 10, "60203071": 10, "21954560": 10, "82436352": 10, "33226752": 10, "94191806": 10, "44564480": 10, "100973331": 10, "55672832": 10, "104335976": 10, "66977792": 10, "107169899": 10, "78118912": 10, "108506297": 10, "89325568": 10, "109557358": 10, "100728832": 10, "110873234": 10, "111837184": 10, "110821030": 10, "122945536": 10, "109763597": 10, "134709248": 10, "112027210": 10, "86": 10, "145948672": 10, "111644339": 10, "93": 10, "157122560": 10, "111338373": 10, "168493056": 10, "111986240": 10, "104155671": 10, "split": [10, 22, 23, 25, 83], "proper": [10, 83], "associ": [10, 46, 47], "lengthi": 10, "without": 10, "gpu": [10, 11, 25, 81, 83], "restrict": 10, "subset": 10, "random_split": 10, "cal_dataset": 10, "other": [10, 26, 27, 28, 80], "initi": [10, 26, 27, 28, 29, 30, 38, 50, 73, 74, 75, 83], "task": [10, 11, 48, 50, 70, 76, 78, 79, 80, 83], "multiclass": 10, "target": [10, 43, 44, 46, 49, 51, 53, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69], "updat": [10, 46, 47, 49, 51, 53, 54, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81], "befor": [10, 12], "ha": [10, 46], "temper": 10, "scaled_model": 10, "08": 10, "07": 10, "06": 10, "03": 10, "directli": [10, 11, 81, 83], "reset": [10, 70, 72], "mix": 10, "score": [10, 46, 47, 49, 51, 53, 54, 56, 57, 58, 61, 83], "previou": [10, 11, 34], "current": [10, 12, 49, 54, 58, 82], "764": 10, "better": [10, 11, 83], "should": [10, 11, 33, 34, 83], "veri": [10, 83, 84], "sai": 10, "drawn": 10, "hold": 10, "real": [10, 84], "world": [10, 84], "where": [10, 29, 30, 41, 47, 49, 51, 53, 54, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68], "shift": [10, 83], "could": [10, 58], "happen": 10, "naeini": [10, 50, 84], "cooper": [10, 84], "g": [10, 11, 12, 41, 64, 65, 67, 73, 74, 75, 82], "hauskrecht": [10, 84], "obtain": [10, 50, 84], "probabl": [10, 13, 14, 15, 46, 49, 50, 51, 53, 54, 56, 58, 61, 73, 74, 75, 76, 82, 84], "bin": [10, 13, 50, 76, 79, 84], "aaai": [10, 50, 84], "guo": [10, 73, 74, 75, 82, 84], "pleiss": [10, 73, 74, 75, 82, 84], "sun": [10, 73, 74, 75, 82, 84], "weinberg": [10, 73, 74, 75, 82, 84], "q": [10, 73, 74, 75, 82, 84], "modern": [10, 56, 73, 74, 75, 82, 84], "tool": [11, 80], "eas": 11, "instanci": 11, "around": [11, 50, 83], "subcommand": 11, "lightningmodul": [11, 13, 14, 15, 76, 78, 79, 83], "lightningcli": 11, "tulightningcli": 11, "new": [11, 49, 54, 58, 81], "eval_after_fit": 11, "know": [11, 12], "whether": [11, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 28, 33, 34, 38, 46, 47, 70, 71, 72, 73, 74, 75, 76, 78, 79], "phase": 11, "lightningargumentpars": 11, "baselin": [11, 13, 14, 15, 16, 17, 18, 19, 80], "resnetbaselin": 11, "cifar10datamodul": [11, 83], "resnetcli": 11, "add_arguments_to_pars": 11, "parser": 11, "add_optimizer_arg": 11, "add_lr_scheduler_arg": 11, "multisteplr": 11, "cli_main": 11, "__main__": 11, "fast_dev_run": 11, "_get": 11, "ckpt_path": 11, "best": [11, 12], "both": [11, 33, 34, 39, 63, 66], "take": [11, 82, 83], "instanc": 11, "subclass": 11, "seemlessli": 11, "version": [11, 13, 14, 15, 16, 17, 18, 19, 50, 81], "either": [11, 13, 14, 15, 76, 81, 83], "But": 11, "help": [11, 12], "command": [11, 81, 83], "your": [11, 12, 81], "whichev": 11, "up": 11, "line": 11, "devic": [11, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 72, 73, 74, 75], "1": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 46, 49, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83], "std": [11, 13, 14, 15, 19, 27, 28], "3": [11, 19, 29, 30, 69, 81, 83], "loss": [11, 13, 14, 15, 16, 17, 18, 19, 41, 42, 43, 44, 45, 56, 68, 76, 77, 78, 79, 80, 83], "mileston": 11, "respect": 11, "larg": [11, 84], "conveni": 11, "store": [11, 39, 40, 46, 47, 76], "burden": 11, "support": [11, 13, 14, 15, 17, 19, 46, 83], "would": [11, 12, 83], "eventu": 11, "By": 11, "yaml": [11, 22, 83], "format": [11, 12, 76, 78, 79], "about": 11, "content": [11, 84], "directori": [11, 20, 21, 22, 23, 25, 26, 27, 28], "lightning_log": 11, "state": [11, 12, 51, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69], "version_": 11, "checkpoint": 11, "addit": [11, 22, 23, 46, 47, 49, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69], "advis": [11, 12, 83], "ensur": [11, 12, 83], "filenam": 11, "ckpt": 11, "explor": [11, 80], "mainli": 11, "organ": 11, "vgg": [11, 14], "wideresnet": 11, "cifar100": [11, 20], "uci_dataset": 11, "segment": [11, 12, 18, 19, 26, 27, 28, 70, 79, 83], "cityscap": [11, 27], "segform": [11, 19], "muad": [11, 28, 80], "uci": [11, 25], "backbon": [11, 13, 14, 15, 19, 83], "predefin": 11, "resnet18": [11, 83], "interest": [11, 12, 83], "choos": [11, 81, 83], "overrid": [11, 26, 27, 28], "size": [11, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 39, 40, 47, 49, 51, 53, 54, 56, 58, 61, 62, 68, 72], "dict_kwarg": 11, "2": [11, 12, 19, 27, 28, 29, 39, 40, 65, 66, 67, 68, 69, 70, 79, 83], "yet": [11, 83], "purpos": 11, "miss": 11, "doc": [11, 12, 81], "earli": 12, "stage": [12, 25], "contributor": 12, "comprehens": [12, 80], "particularli": 12, "comment": 12, "project": [12, 81], "chang": [12, 33, 34], "evolv": 12, "host": 12, "possibl": [12, 33], "link": 12, "roughli": 12, "field": 12, "etc": [12, 83], "environ": [12, 81], "continu": 12, "integr": 12, "break": 12, "system": [12, 81], "clone": [12, 81], "repositori": [12, 81, 83], "edit": [12, 81], "dev": [12, 81], "pip": [12, 80, 81], "commit": [12, 81], "hook": [12, 81], "reinstal": 12, "group": [12, 13, 14, 15, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 56, 76, 83], "navig": 12, "make": [12, 29, 30, 33, 34, 49, 51, 53, 56, 58, 61, 83, 84], "html": 12, "option": [12, 13, 14, 15, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 46, 47, 49, 51, 53, 54, 58, 61, 71, 72, 73, 74, 75, 76, 78, 79, 80], "noplot": 12, "instead": [12, 27, 28], "ruff": [12, 81], "lint": 12, "drop": 12, "replac": [12, 72], "black": 12, "isort": 12, "flake8": 12, "properli": 12, "machin": 12, "push": 12, "pr": 12, "multipli": [12, 33, 34, 39, 40], "featureless": 12, "pytest": 12, "emoji": 12, "messag": 12, "pull": 12, "request": 12, "branch": 12, "person": 12, "fork": 12, "compli": [12, 33, 34], "condit": 12, "nor": 12, "reduc": [12, 33, 34, 49, 51, 53, 54, 58, 61], "coverag": [12, 46, 52, 59], "signatur": 12, "type": [12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 38, 39, 40, 42, 44, 46, 47, 49, 56, 60, 70, 73, 74, 75, 76, 77, 78, 80], "clear": 12, "docstr": 12, "come": 12, "explicitli": 12, "correspond": [12, 13, 15, 29, 30, 41, 46, 47, 52, 82, 83], "rememb": 12, "paperswithcod": 12, "solv": 12, "rais": [12, 13, 14, 15, 49, 51, 53, 54, 56, 58, 61, 69, 70, 72, 83], "explain": 12, "maintain": 12, "intend": 12, "popular": 12, "scikit": [12, 81], "api": [12, 80, 83], "except": 12, "arrai": 12, "feel": [12, 83], "obstacl": 12, "reconsid": 12, "remain": 12, "apach": 12, "imagenet": [13, 14, 15, 22], "mixtyp": [13, 14, 15, 76], "erm": [13, 14, 15, 76], "mixmod": [13, 14, 15, 76], "elem": [13, 14, 15, 76], "dist_sim": [13, 14, 15, 76], "emb": [13, 14, 15, 76], "kernel_tau_max": [13, 14, 15, 76], "kernel_tau_std": [13, 14, 15, 76], "mixup_alpha": [13, 14, 15, 76], "cutmix_alpha": [13, 14, 15, 76], "last_layer_dropout": [13, 14, 15], "rho": [13, 15], "batch_repeat": [13, 15], "ood_criterion": [13, 14, 15, 76, 83], "msp": [13, 14, 15, 76, 83], "save_in_csv": [13, 14, 15, 76, 83], "eval_grouping_loss": [13, 14, 15, 76, 83], "num_calibration_bin": [13, 18, 76, 79], "pretrain": 13, "variou": [13, 14, 15, 17, 19, 83], "configure_optim": [13, 15, 76, 78, 79], "determin": [13, 14, 15, 19, 49, 51, 53, 54, 58, 61], "batchensembl": [13, 15, 29, 30], "mask": [13, 14, 15, 26, 27, 28, 31, 32], "masksembl": [13, 15, 31, 32, 83], "mimo": [13, 15, 83], "101": 13, "152": 13, "distanc": [13, 14, 15, 76], "maximum": [13, 14, 15, 52, 73, 74, 75, 76], "kernel": [13, 14, 15, 29, 31, 33, 39, 76, 84], "tau": [13, 14, 15, 76], "deviat": [13, 14, 15, 38, 39, 40, 76], "cutmix": [13, 14, 15, 76], "expans": [13, 14, 15], "factor": [13, 14, 15, 39, 40, 63, 66], "affect": [13, 14, 15], "width": [13, 14, 15, 27, 28, 34], "bool": [13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 46, 47, 49, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83], "share": [13, 15, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30], "mi": [13, 14, 15, 76, 83], "mutual": [13, 14, 15, 58, 76], "vr": [13, 14, 15, 76, 83], "ratio": [13, 14, 15, 60, 69, 76], "csv": [13, 14, 15, 76], "callabl": [13, 14, 15], "valueerror": [13, 14, 15, 49, 51, 53, 54, 56, 58, 61, 70], "readi": [13, 14, 15, 83], "wide": 15, "resnet28x10": 15, "depth": [16, 64, 65, 67, 68], "max_depth": 16, "pretrained_backbon": [16, 18], "output_strid": 18, "separ": 18, "metric_subsampling_r": [18, 79], "b0": 19, "b1": 19, "b2": 19, "b3": 19, "b4": 19, "b5": 19, "val_split": [20, 21, 22, 23, 24, 25, 26, 27, 28], "cutout": [20, 21, 23], "randaug": [20, 21, 22], "auto_aug": [20, 21], "test_alt": [20, 21, 22, 23], "corruption_sever": [20, 21], "num_dataload": [20, 21], "pin_memori": [20, 21, 22, 23, 24, 25, 26, 27, 28], "persistent_work": [20, 21, 22, 23, 24, 25, 26, 27, 28], "auto": [20, 21], "augment": [20, 21, 80], "pin": [20, 21, 22, 23, 25, 26, 27, 28], "memori": [20, 21, 22, 23, 25, 26, 27, 28, 79], "persist": [20, 21, 22, 23, 25, 26, 27, 28], "ood_d": [22, 23, 24], "openimag": 22, "o": [22, 83], "procedur": 22, "train_siz": 22, "224": [22, 27, 28], "interpol": [22, 24], "bilinear": [22, 24], "rand_augment_opt": [22, 24], "id": 22, "crop": [22, 27, 28], "kwarg": [22, 23, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "textur": 22, "fashion": 23, "stand": 23, "fashionmnist": 23, "notmnist": 23, "svhn": 24, "tinyimagenet": 24, "dataset_nam": 25, "input_shap": 25, "split_se": 25, "string": 25, "One": 25, "boston": 25, "hous": [25, 80], "concret": 25, "energi": [25, 76, 83], "kin8nm": 25, "naval": 25, "propuls": 25, "plant": 25, "power": [25, 69], "protein": 25, "wine": 25, "qualiti": [25, 46, 47], "red": 25, "yacht": 25, "subprocess": 25, "tupl": [25, 29, 31, 33, 39, 46, 47], "shape": [25, 29, 30, 34, 46, 47, 49, 56, 58, 68], "seed": 25, "camvid": 26, "inject": [26, 27, 28], "v2": [26, 27, 28], "480": 26, "todtyp": [26, 27, 28], "dtype": [26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "tv_tensor": [26, 27, 28], "float32": [26, 27, 28], "int64": [26, 27, 28], "behavior": [26, 27, 28], "train_transform": [26, 27, 28], "test_transform": [26, 27, 28], "crop_siz": [27, 28], "1024": [27, 28], "inference_s": [27, 28], "2048": [27, 28], "sequenc": [27, 28], "desir": [27, 28, 31, 32, 83], "made": [27, 28], "length": [27, 28, 70], "edg": [27, 28], "height": [27, 28], "rescal": [27, 28], "toimag": [27, 28], "randomrescal": [27, 28], "min_scal": [27, 28], "max_scal": [27, 28], "randomcrop": [27, 28], "pad_if_need": [27, 28], "colorjitt": [27, 28], "bright": [27, 28], "satur": [27, 28], "randomhorizontalflip": [27, 28], "485": [27, 28], "456": [27, 28], "406": [27, 28], "229": [27, 28], "225": [27, 28], "out_channel": [29, 31, 33, 35, 36, 37, 39], "pad": [29, 31, 33, 35, 36, 37, 39], "dilat": [29, 31, 33, 35, 36, 37], "2d": [29, 39], "signal": 29, "incom": [29, 30], "simplest": 29, "c_": 29, "h_": [29, 30], "w_": 29, "precis": 29, "describ": [29, 83], "n_i": 29, "_j": 29, "widehat": [29, 30], "s_": [29, 30], "n_": 29, "sum_": [29, 49, 62, 68], "star": 29, "r_": [29, 30], "altern": [29, 30, 84], "lifelong": [29, 30, 84], "tensorflow": [29, 30], "produc": [29, 31, 32, 33, 34], "convolv": [29, 31, 33, 39], "ad": [29, 31, 33, 39, 83], "four": [29, 31, 33], "side": [29, 31, 33, 39], "space": [29, 31, 33], "connect": [29, 32, 34, 39], "learnabl": [29, 30, 31, 32, 33, 34, 39, 40], "buffer": [29, 30], "variabl": [29, 30, 38], "frac": [29, 30, 33, 34, 49, 62, 63, 64, 65, 66, 67, 68], "mathcal": [29, 30], "prod_": 29, "r_group": [29, 30], "matric": [29, 30], "row": [29, 30], "vector": [29, 30, 75, 82], "th": [29, 30], "member": [29, 30, 33, 34], "s_group": [29, 30], "lfloor": 29, "rfloor": 29, "sure": [29, 30, 31, 32, 33, 34, 49, 51, 53, 56, 58, 61], "divid": [29, 30], "With": [29, 30, 83], "equal": [29, 41, 82], "conv2db": 29, "randn": [29, 30], "circ": 30, "featur": [30, 32, 34, 38, 40, 56, 76, 84], "linearb": 30, "connexion": [31, 33], "Be": [31, 32], "nikita": [31, 32, 84], "durasov": [31, 32, 84], "timur": [31, 32, 84], "bagautdinov": [31, 32, 84], "pierr": [31, 32, 84], "baqu": [31, 32, 84], "pascal": [31, 32, 84], "fua": [31, 32, 84], "fulli": [32, 34], "oper": [32, 34], "minimum_channels_per_group": 33, "padding_mod": [33, 35, 36, 37, 39], "smallest": 33, "reflect": [33, 39], "replic": [33, 39], "circular": [33, 39], "explan": [33, 34, 83], "represent": [33, 34], "capac": [33, 34], "therefor": [33, 34, 82], "divis": [33, 34], "constraint": [33, 34], "properti": [33, 34], "1x1": 34, "compat": 34, "later": [34, 46, 47], "n_estim": 34, "often": [34, 69], "prior_sigma_1": [35, 36, 37, 38], "prior_sigma_2": [35, 36, 37, 38], "002": [35, 36, 37], "prior_pi": [35, 36, 37, 38], "mu_init": [35, 36, 37, 38], "sigma_init": [35, 36, 37, 38], "frozen": [35, 36, 37, 38], "conv1d": 35, "mixtur": [35, 36, 37, 38], "conv3d": 37, "freez": 38, "charl": [38, 70, 84], "et": [38, 48, 50, 83, 84], "al": [38, 48, 50, 83, 84], "attribut": [38, 76], "unfreez": 38, "hidden_s": [39, 40], "std_factor": [39, 40], "lpbnn": [39, 40], "latent": [39, 40, 80, 84], "nois": [39, 40], "encod": [39, 40, 80, 84], "beta": 41, "reduct": [41, 42, 43, 49, 51, 53, 54, 56, 58, 60, 61], "tparamet": 41, "rel": [41, 64, 65, 67], "point": 41, "high": 41, "low": 41, "seitzer": [41, 84], "tavakoli": [41, 84], "antic": [41, 84], "martiu": [41, 84], "2022": [41, 80, 84], "pitfal": [41, 84], "heteroscedast": [41, 84], "arxiv": [41, 42, 84], "ab": [41, 42], "2203": [41, 84], "09168": 41, "annealing_step": 42, "loss_typ": 42, "anneal": 42, "fix": [42, 73, 74, 75], "digamma": 42, "1806": 42, "01768": 42, "bound": 44, "seek": 44, "fill": 44, "gather": [44, 45], "aggreg": 44, "area": [46, 47], "under": [46, 47, 83], "curv": [46, 47], "assess": 46, "measur": [46, 48, 83, 84], "abil": [46, 83], "discrimin": 46, "correct": 46, "incorrect": 46, "rank": 46, "accept": [46, 63, 64, 65, 66, 67], "pred": [46, 62, 63, 64, 65, 66, 67, 68, 69], "observ": 46, "scalar": 46, "keyword": [46, 47, 49, 51, 53, 54, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69], "geifman": [46, 84], "el": [46, 84], "yaniv": [46, 84], "wa": 46, "small": [46, 64, 65, 67, 68], "partial_comput": 46, "rc": 46, "oracl": [46, 47], "plot_valu": [46, 47], "cov": 46, "sparsif": 47, "much": 47, "coincid": 47, "advanc": [47, 49, 51, 53, 54, 56, 58, 61, 62, 64, 65, 67, 68, 69], "hypothes": 47, "optic": 47, "flow": 47, "eccv": 47, "higher": [47, 53, 54, 58], "binari": [47, 56], "plot_oracl": 47, "num_bin": [48, 50], "l1": [48, 50], "ignore_index": [48, 50, 57], "validate_arg": [48, 50, 57], "adapt": [48, 50], "nixon": [48, 84], "cvprw": [48, 84], "top_class": 49, "dimens": [49, 51, 53, 54, 58, 61], "averag": [49, 51, 53, 54, 58, 61], "across": [49, 51, 53, 54, 58, 61], "3d": 49, "ie": 49, "previous": [51, 54, 58, 61], "shannon": [54, 58], "pos_label": 55, "posit": 55, "recal": [55, 82], "recall_level": 55, "fpr": 55, "perez": [56, 84], "lebel": [56, 84], "alexandr": [56, 84], "le": [56, 84], "morvan": [56, 84], "marin": [56, 84], "varoquaux": [56, 84], "ga\u00ebl": [56, 84], "beyond": [56, 84], "2023": [56, 80, 83, 84], "accumul": [56, 72], "num_featur": 56, "top_k": 57, "multidim_averag": 57, "global": 57, "meanintersect": 57, "union": 57, "iou": 57, "intersect": 57, "miou": 57, "equival": 58, "jensen": 58, "gjsd": 58, "clamp": 58, "appear": 58, "due": 58, "numer": 58, "instabl": 58, "proport": 60, "chosen": 60, "log_": 62, "y_i": [62, 63, 64, 65, 66, 67, 68], "hat": [62, 63, 64, 65, 66, 67, 68], "unit": [63, 66], "km": [63, 66], "absolut": [63, 64, 67], "ima": 63, "sum_i": [63, 64, 65, 66, 67], "unit_factor": [63, 66], "mean_absolute_inverse_error": 63, "must": [63, 66, 76, 78, 79], "mm": [63, 66], "defaut": [63, 66], "maerel": 64, "arerel": 64, "rel_mean_absolute_error": 64, "big": [64, 65, 67, 68], "local": [64, 65, 67, 68], "planar": [64, 65, 67, 68], "guidanc": [64, 65, 67, 68], "monocular": [64, 65, 67, 68], "mserel": 65, "sre": 65, "rel_mean_squared_error": 65, "rmserel": 65, "multioutput": [65, 66], "ims": 66, "mean_squared_error": 66, "mselog": 67, "mse_log": 67, "emselog": 67, "lmbda": [68, 69], "invari": 68, "logarithm": 68, "map": 68, "david": [68, 80, 84], "eigen": 68, "christian": 68, "puhrsch": 68, "rob": 68, "fergu": 68, "jin": 68, "han": 68, "lee": 68, "myung": 68, "kyu": 68, "dong": [68, 84], "wook": 68, "ko": 68, "il": 68, "hong": 68, "suh": 68, "threshold": 69, "accuraci": [69, 84], "d1": 69, "d2": 69, "d3": 69, "compar": 69, "reset_model_paramet": 70, "liter": [70, 72, 73, 74, 75, 83], "pixel_regress": 70, "attr": 70, "_deepensembl": 70, "singleton": 70, "less": 70, "while": [70, 82, 83], "non": 70, "balaji": [70, 84], "lakshminarayanan": [70, 84], "pritzel": [70, 84], "scalabl": [70, 84], "cuda": [72, 73, 74, 75], "tey": [72, 84], "azizpour": [72, 84], "smith": [72, 84], "popul": 72, "raise_count": 72, "counter": 72, "replace_lay": 72, "reset_count": 72, "set_accumul": 72, "init_w": [73, 75], "init_b": [73, 75], "max_it": [73, 74, 75], "200": [73, 75], "matrix": 73, "save_logit": [73, 74, 75], "progress": [73, 74, 75, 82], "bar": [73, 74, 75], "scaler": [73, 74, 75], "set_temperatur": [73, 74, 75], "val_w": [73, 75], "val_b": [73, 75], "init_v": 74, "logsumexp": 76, "cli": [76, 78, 79, 80], "anyth": [76, 78, 79], "save_feat": 76, "num_image_plot": 77, "dimension": [77, 78], "subsampl": 79, "consum": 79, "websit": 80, "contribut": [80, 81], "mind": 80, "major": 80, "confer": 80, "journal": 80, "symmetri": 80, "awar": 80, "olivi": [80, 84], "laurent": [80, 83, 84], "emanuel": [80, 84], "aldea": [80, 84], "gianni": [80, 84], "franchi": [80, 84], "2024": [80, 84], "andrei": [80, 84], "bursuc": [80, 84], "severin": [80, 84], "dubuisson": [80, 84], "isabel": [80, 84], "bloch": [80, 84], "tpami": [80, 84], "adrien": [80, 84], "lafag": [80, 83, 84], "enzo": [80, 84], "tartaglion": [80, 84], "geoffrei": [80, 84], "daniel": [80, 84], "jean": [80, 84], "marc": [80, 84], "martinez": [80, 84], "autonom": [80, 84], "drive": [80, 84], "xuanlong": [80, 84], "yu": [80, 84], "angel": 80, "tena": 80, "r\u00e9mi": 80, "kazmierczak": 80, "s\u00e9verin": 80, "filliat": 80, "bmvc": [80, 84], "pypi": 80, "quickstart": 80, "usag": 80, "guid": [80, 83], "configur": [80, 83], "experi": [80, 81, 83], "scope": 80, "guidelin": 80, "licens": 80, "search": 80, "latter": 81, "access": [81, 83], "again": 81, "git": 81, "github": [81, 83], "ensta": 81, "u2i": 81, "ai": 81, "cd": 81, "conda": 81, "activ": [81, 82], "latest": 81, "develop": 81, "opencv": 81, "tabular": 81, "panda": 81, "aforement": 81, "mandatori": 81, "work": 82, "IN": 82, "wait": 82, "pointwis": 82, "exponenti": 82, "multinoulli": 82, "belong": 82, "conceptu": 82, "known": 82, "idea": [82, 83], "trust": 82, "why": 82, "monitor": 83, "leverag": 83, "account": 83, "benefit": 83, "structur": 83, "ligthn": 83, "custom": 83, "along": 83, "mymodel": 83, "uncalibr": 83, "begin": 83, "ts_": 83, "wai": 83, "insur": 83, "cover": 83, "particular": 83, "prefer": 83, "pipelin": 83, "requir": 83, "section": [83, 84], "choic": 83, "packed_resnet18": 83, "might": 83, "actual": 83, "free": 83, "exhaust": 84, "below": 84, "cite": 84, "maximilian": 84, "arash": 84, "dimitrij": 84, "georg": 84, "julien": 84, "korai": 84, "daan": 84, "yarin": 84, "gal": 84, "zoubin": 84, "ghahramani": 84, "yeme": 84, "wen": 84, "dustin": 84, "tran": 84, "jimmi": 84, "cvpr": 84, "2021": 84, "independ": 84, "subnetwork": 84, "marton": 84, "havasi": 84, "rodolph": 84, "jenatton": 84, "stanislav": 84, "fort": 84, "jeremiah": 84, "zhe": 84, "liu": 84, "jasper": 84, "snoek": 84, "andrew": 84, "dai": 84, "empir": 84, "hongyi": 84, "zhang": 84, "moustapha": 84, "ciss": 84, "dauphin": 84, "lopez": 84, "paz": 84, "surprisingli": 84, "francesco": 84, "pinto": 84, "harri": 84, "yang": 84, "ser": 84, "nam": 84, "lim": 84, "philip": 84, "torr": 84, "puneet": 84, "dokania": 84, "deng": 84, "bao": 84, "wang": 84, "lanq": 84, "peilin": 84, "zhao": 84, "pheng": 84, "ann": 84, "heng": 84, "min": 84, "ling": 84, "openaccess": 84, "thecvf": 84, "cvpr2023": 84, "wang_on_the_pitfall_of_mixup_for_uncertainty_calibration_cvpr_2023_pap": 84, "pdf": 84, "__": 84, "tailor": 84, "quentin": 84, "bouniot": 84, "pavlo": 84, "mozharovskyi": 84, "florenc": 84, "alch\u00e9": 84, "buc": 84, "chuan": 84, "geoff": 84, "kilian": 84, "mathia": 84, "hossein": 84, "kevin": 84, "mahdi": 84, "pakdaman": 84, "gregori": 84, "milo": 84, "jeremi": 84, "mike": 84, "dusenberri": 84, "ghassen": 84, "jerfel": 84, "timothi": 84, "nguyen": 84, "linchuan": 84, "yonatan": 84, "ran": 84, "leon": 84, "yoshua": 84, "patrick": 84, "norman": 84, "mu": 84, "justin": 84, "gilmer": 84, "icmlw": 84, "yaroslav": 84, "bulatov": 84, "alex": 84, "krizhevski": 84, "mit": 84, "tech": 84, "report": 84, "human": 84, "joshua": 84, "peterson": 84, "ruairidh": 84, "battledai": 84, "griffith": 84, "olga": 84, "russakovski": 84, "iccv": 84, "revisit": 84, "studi": 84, "annot": 84, "jiaheng": 84, "wei": 84, "zhaowei": 84, "zhu": 84, "hao": 84, "cheng": 84, "tongliang": 84, "gang": 84, "niu": 84, "read": 84, "natur": 84, "unsupervis": 84, "yuval": 84, "netzer": 84, "tao": 84, "coat": 84, "alessandro": 84, "bissacco": 84, "bo": 84, "wu": 84, "ng": 84, "workshop": 84, "2011": 84, "hierarch": 84, "databas": 84, "jia": 84, "richard": 84, "socher": 84, "kai": 84, "fei": 84, "2009": 84, "adversari": 84, "steven": 84, "basart": 84, "jacob": 84, "steinhardt": 84, "dawn": 84, "song": 84, "critic": 84, "analysi": 84, "saurav": 84, "kadavath": 84, "frank": 84, "evan": 84, "dorundo": 84, "rahul": 84, "desai": 84, "tyler": 84, "samyak": 84, "parajuli": 84, "vim": 84, "virtual": 84, "haoqi": 84, "zhizhong": 84, "litong": 84, "feng": 84, "wayn": 84, "curat": 84, "v4": 84, "unifi": 84, "visual": 84, "relationship": 84, "alina": 84, "kuznetsova": 84, "hassan": 84, "rom": 84, "neil": 84, "alldrin": 84, "uijl": 84, "ivan": 84, "krasin": 84, "jordi": 84, "pont": 84, "tuset": 84, "shahab": 84, "kamali": 84, "ijcv": 84, "01437": 84, "residu": 84, "kaim": 84, "he": 84, "xiangyu": 84, "shaoq": 84, "ren": 84, "jian": 84, "sergei": 84, "zagoruyko": 84, "niko": 84, "komodaki": 84, "karen": 84, "simonyan": 84, "zisserman": 84, "filter": 84, "respons": 84, "elimin": 84, "saurabh": 84, "singh": 84, "shankar": 84, "krishnan": 84, "auto_tutorials_sourc": 85}, "objects": {"torch_uncertainty.baselines.classification": [[13, 0, 1, "", "ResNetBaseline"], [14, 0, 1, "", "VGGBaseline"], [15, 0, 1, "", "WideResNetBaseline"]], "torch_uncertainty.baselines.depth": [[16, 0, 1, "", "BTSBaseline"]], "torch_uncertainty.baselines.regression": [[17, 0, 1, "", "MLPBaseline"]], "torch_uncertainty.baselines.segmentation": [[18, 0, 1, "", "DeepLabBaseline"], [19, 0, 1, "", "SegFormerBaseline"]], "torch_uncertainty.datamodules": [[20, 0, 1, "", "CIFAR100DataModule"], [21, 0, 1, "", "CIFAR10DataModule"], [22, 0, 1, "", "ImageNetDataModule"], [23, 0, 1, "", "MNISTDataModule"], [24, 0, 1, "", "TinyImageNetDataModule"], [25, 0, 1, "", "UCIDataModule"]], "torch_uncertainty.datamodules.CIFAR100DataModule": [[20, 1, 1, "", "test_dataloader"], [20, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.CIFAR10DataModule": [[21, 1, 1, "", "test_dataloader"], [21, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.ImageNetDataModule": [[22, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.MNISTDataModule": [[23, 1, 1, "", "prepare_data"], [23, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.TinyImageNetDataModule": [[24, 1, 1, "", "test_dataloader"], [24, 1, 1, "", "train_dataloader"], [24, 1, 1, "", "val_dataloader"]], "torch_uncertainty.datamodules.UCIDataModule": [[25, 1, 1, "", "prepare_data"], [25, 1, 1, "", "setup"]], "torch_uncertainty.datamodules.segmentation": [[26, 0, 1, "", "CamVidDataModule"], [27, 0, 1, "", "CityscapesDataModule"], [28, 0, 1, "", "MUADDataModule"]], "torch_uncertainty.layers": [[29, 0, 1, "", "BatchConv2d"], [30, 0, 1, "", "BatchLinear"], [31, 0, 1, "", "MaskedConv2d"], [32, 0, 1, "", "MaskedLinear"], [33, 0, 1, "", "PackedConv2d"], [34, 0, 1, "", "PackedLinear"]], "torch_uncertainty.layers.PackedConv2d": [[33, 2, 1, "", "bias"], [33, 2, 1, "", "weight"]], "torch_uncertainty.layers.PackedLinear": [[34, 2, 1, "", "bias"], [34, 2, 1, "", "weight"]], "torch_uncertainty.layers.bayesian": [[35, 0, 1, "", "BayesConv1d"], [36, 0, 1, "", "BayesConv2d"], [37, 0, 1, "", "BayesConv3d"], [38, 0, 1, "", "BayesLinear"], [39, 0, 1, "", "LPBNNConv2d"], [40, 0, 1, "", "LPBNNLinear"]], "torch_uncertainty.layers.bayesian.BayesLinear": [[38, 1, 1, "", "freeze"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "unfreeze"]], "torch_uncertainty.losses": [[41, 0, 1, "", "BetaNLL"], [42, 0, 1, "", "DECLoss"], [43, 0, 1, "", "DistributionNLLLoss"], [44, 0, 1, "", "ELBOLoss"], [45, 0, 1, "", "KLDiv"]], "torch_uncertainty.losses.DistributionNLLLoss": [[43, 1, 1, "", "forward"]], "torch_uncertainty.losses.ELBOLoss": [[44, 1, 1, "", "forward"]], "torch_uncertainty.metrics.classification": [[46, 0, 1, "", "AURC"], [47, 0, 1, "", "AUSE"], [48, 0, 1, "", "AdaptiveCalibrationError"], [49, 0, 1, "", "BrierScore"], [50, 0, 1, "", "CalibrationError"], [51, 0, 1, "", "CategoricalNLL"], [52, 0, 1, "", "CovAt5Risk"], [53, 0, 1, "", "Disagreement"], [54, 0, 1, "", "Entropy"], [55, 0, 1, "", "FPR95"], [56, 0, 1, "", "GroupingLoss"], [57, 0, 1, "", "MeanIntersectionOverUnion"], [58, 0, 1, "", "MutualInformation"], [59, 0, 1, "", "RiskAt80Cov"], [60, 0, 1, "", "VariationRatio"]], "torch_uncertainty.metrics.classification.AURC": [[46, 1, 1, "", "compute"], [46, 1, 1, "", "partial_compute"], [46, 1, 1, "", "plot"], [46, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.AUSE": [[47, 1, 1, "", "compute"], [47, 1, 1, "", "plot"], [47, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.BrierScore": [[49, 1, 1, "", "compute"], [49, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CategoricalNLL": [[51, 1, 1, "", "compute"], [51, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Disagreement": [[53, 1, 1, "", "compute"], [53, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Entropy": [[54, 1, 1, "", "compute"], [54, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.GroupingLoss": [[56, 1, 1, "", "compute"], [56, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion": [[57, 1, 1, "", "compute"]], "torch_uncertainty.metrics.classification.MutualInformation": [[58, 1, 1, "", "compute"], [58, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.VariationRatio": [[60, 1, 1, "", "compute"]], "torch_uncertainty.metrics.regression": [[61, 0, 1, "", "DistributionNLL"], [62, 0, 1, "", "Log10"], [63, 0, 1, "", "MeanAbsoluteErrorInverse"], [64, 0, 1, "", "MeanGTRelativeAbsoluteError"], [65, 0, 1, "", "MeanGTRelativeSquaredError"], [66, 0, 1, "", "MeanSquaredErrorInverse"], [67, 0, 1, "", "MeanSquaredLogError"], [68, 0, 1, "", "SILog"], [69, 0, 1, "", "ThresholdAccuracy"]], "torch_uncertainty.metrics.regression.DistributionNLL": [[61, 1, 1, "", "compute"], [61, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.Log10": [[62, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse": [[63, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError": [[64, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError": [[65, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse": [[66, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredLogError": [[67, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.SILog": [[68, 1, 1, "", "compute"], [68, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.ThresholdAccuracy": [[69, 1, 1, "", "compute"], [69, 1, 1, "", "update"]], "torch_uncertainty.models": [[70, 0, 1, "", "deep_ensembles"], [71, 0, 1, "", "mc_dropout"]], "torch_uncertainty.post_processing": [[72, 0, 1, "", "MCBatchNorm"], [73, 0, 1, "", "MatrixScaler"], [74, 0, 1, "", "TemperatureScaler"], [75, 0, 1, "", "VectorScaler"]], "torch_uncertainty.post_processing.MCBatchNorm": [[72, 1, 1, "", "fit"], [72, 1, 1, "", "raise_counters"], [72, 1, 1, "", "replace_layers"], [72, 1, 1, "", "reset_counters"], [72, 1, 1, "", "set_accumulate"]], "torch_uncertainty.post_processing.MatrixScaler": [[73, 1, 1, "", "fit"], [73, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.TemperatureScaler": [[74, 1, 1, "", "fit"], [74, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.VectorScaler": [[75, 1, 1, "", "fit"], [75, 1, 1, "", "set_temperature"]], "torch_uncertainty.routines": [[76, 0, 1, "", "ClassificationRoutine"], [77, 0, 1, "", "PixelRegressionRoutine"], [78, 0, 1, "", "RegressionRoutine"], [79, 0, 1, "", "SegmentationRoutine"]], "torch_uncertainty.routines.ClassificationRoutine": [[76, 1, 1, "", "forward"]], "torch_uncertainty.routines.PixelRegressionRoutine": [[77, 1, 1, "", "forward"]], "torch_uncertainty.routines.RegressionRoutine": [[78, 1, 1, "", "forward"]], "torch_uncertainty.routines.SegmentationRoutine": [[79, 1, 1, "", "forward"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": [0, 3, 4, 5, 6, 10, 82, 84], "routin": [0, 3, 5, 6, 7, 8, 83], "classif": [0, 6, 82, 84], "regress": [0, 5, 84], "segment": 0, "pixelwis": 0, "baselin": 0, "monocular": 0, "depth": 0, "estim": 0, "layer": [0, 83, 84], "ensembl": [0, 9, 80, 84], "bayesian": [0, 3, 84], "model": [0, 3, 5, 6, 7, 8, 10, 83, 84], "deep": [0, 5, 6, 84], "metric": [0, 83, 84], "loss": [0, 3, 5, 6, 7, 8, 9, 84], "post": [0, 12, 84], "process": [0, 12, 84], "method": [0, 12, 84], "datamodul": [0, 10, 12], "tutori": 1, "comput": [2, 10, 85], "time": [2, 85], "train": [3, 5, 6, 7, 8, 9, 83], "neural": [3, 82, 84], "network": [3, 82, 84], "three": 3, "minut": 3, "foreword": 3, "lenet": [3, 6, 7, 8], "us": [3, 5, 6, 7, 8, 83], "torchuncertainti": [3, 5, 6, 7, 8, 10, 12, 83], "lightn": [3, 5, 7, 8, 11, 83], "1": [3, 4, 5, 6, 7, 8, 9, 10], "load": [3, 5, 6, 7, 8, 9, 10], "util": [3, 5, 6, 7, 8, 10], "2": [3, 4, 5, 6, 7, 8, 9, 10], "The": [3, 5, 6, 7, 8, 12, 82], "optim": [3, 5, 6, 9], "recip": [3, 5], "3": [3, 4, 5, 6, 7, 8, 9, 10], "creat": [3, 5, 6, 7, 8], "necessari": [3, 5, 6, 7, 8], "variabl": [3, 5, 6, 7, 8], "4": [3, 5, 6, 7, 8, 9, 10], "5": [3, 5, 6, 7, 8, 9, 10], "gather": [3, 5, 6, 7, 8], "everyth": [3, 5, 6, 7, 8], "6": [3, 5, 6, 7, 10], "test": [3, 5, 6, 7, 8, 9], "imag": [4, 9], "corrupt": 4, "nois": 4, "blur": 4, "other": [4, 83], "evidenti": [5, 6, 84], "toi": [5, 6], "exampl": [5, 6, 83], "mlp": 5, "der": 5, "pytorch": [5, 7, 8, 83], "dec": 6, "wrapper": 6, "mont": [7, 8, 84], "carlo": [7, 8, 84], "batch": [7, 84], "normal": [7, 9, 84], "mcbn": 7, "wrap": 7, "mcbatchnorm": [7, 72], "dropout": [8, 84], "mc": 8, "from": [9, 10, 81], "standard": 9, "classifi": 9, "pack": [9, 80, 84], "dataset": [9, 12, 84], "an": 9, "cifar10": 9, "defin": 9, "function": 9, "data": [9, 84], "improv": 10, "top": 10, "label": 10, "calibr": [10, 84], "temperatur": [10, 84], "scale": [10, 84], "": [10, 83], "hf": 10, "set": 10, "up": 10, "dataload": 10, "iter": 10, "ec": 10, "fit": 10, "scaler": 10, "again": 10, "note": 10, "cli": [11, 83], "guid": 11, "introduct": [11, 82], "configur": 11, "file": 11, "experi": 11, "folder": 11, "usag": [11, 83], "contribut": 12, "scope": 12, "common": 12, "guidelin": 12, "clean": 12, "develop": 12, "instal": [12, 80, 81], "build": [12, 83], "document": 12, "local": 12, "licens": 12, "resnetbaselin": 13, "vggbaselin": 14, "wideresnetbaselin": 15, "btsbaselin": 16, "mlpbaselin": 17, "deeplabbaselin": 18, "segformerbaselin": 19, "cifar100datamodul": 20, "cifar10datamodul": 21, "imagenetdatamodul": 22, "mnistdatamodul": 23, "tinyimagenetdatamodul": 24, "ucidatamodul": 25, "camviddatamodul": 26, "cityscapesdatamodul": 27, "muaddatamodul": 28, "batchconv2d": 29, "batchlinear": 30, "maskedconv2d": 31, "maskedlinear": 32, "packedconv2d": 33, "packedlinear": 34, "bayesconv1d": 35, "bayesconv2d": 36, "bayesconv3d": 37, "bayeslinear": 38, "lpbnnconv2d": 39, "lpbnnlinear": 40, "betanl": 41, "decloss": 42, "distributionnllloss": 43, "elboloss": 44, "kldiv": 45, "aurc": 46, "aus": 47, "adaptivecalibrationerror": 48, "brierscor": 49, "calibrationerror": 50, "categoricalnl": 51, "covat5risk": 52, "disagr": 53, "entropi": 54, "fpr95": 55, "groupingloss": 56, "meanintersectionoverunion": 57, "mutualinform": 58, "riskat80cov": 59, "variationratio": 60, "distributionnl": 61, "log10": 62, "meanabsoluteerrorinvers": 63, "meangtrelativeabsoluteerror": 64, "meangtrelativesquarederror": 65, "meansquarederrorinvers": 66, "meansquaredlogerror": 67, "silog": 68, "thresholdaccuraci": 69, "deep_ensembl": 70, "mc_dropout": 71, "matrixscal": 73, "temperaturescal": 74, "vectorscal": 75, "classificationroutin": 76, "pixelregressionroutin": 77, "regressionroutin": 78, "segmentationroutin": 79, "welcom": 80, "torch": 80, "uncertainti": [80, 82, 83, 84], "offici": 80, "implement": 80, "content": 80, "indic": 80, "tabl": 80, "pypi": 81, "sourc": 81, "option": 81, "short": 82, "background": 82, "overconfid": 82, "quickstart": 83, "awar": 83, "your": 83, "first": 83, "more": 83, "tool": 83, "procedur": 83, "base": 83, "beta": 84, "nll": 84, "batchensembl": 84, "masksembl": 84, "mimo": 84, "lpbnn": 84, "augment": 84, "mixup": 84, "regmixup": 84, "mixupio": 84, "warp": 84, "vector": 84, "matrix": 84, "expect": 84, "error": 84, "adapt": 84, "area": 84, "under": 84, "risk": 84, "coverag": 84, "curv": 84, "group": 84, "mnist": 84, "c": 84, "Not": 84, "cifar": 84, "10": 84, "100": 84, "tini": 84, "imagenet": 84, "h": 84, "n": 84, "svhn": 84, "A": 84, "0": 84, "r": 84, "textur": 84, "openimag": 84, "o": 84, "muad": 84, "architectur": 84, "resnet": 84, "wide": 84, "vgg": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_codeautolink": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Routines": [[0, "routines"]], "Classification": [[0, "classification"], [0, "id1"], [0, "id4"], [0, "id6"]], "Regression": [[0, "regression"], [0, "id2"], [0, "id5"], [0, "id7"]], "Segmentation": [[0, "segmentation"], [0, "id3"], [0, "id8"]], "Pixelwise Regression": [[0, "pixelwise-regression"]], "Baselines": [[0, "baselines"]], "Monocular Depth Estimation": [[0, "monocular-depth-estimation"]], "Layers": [[0, "layers"], [84, "layers"]], "Ensemble layers": [[0, "ensemble-layers"]], "Bayesian layers": [[0, "bayesian-layers"]], "Models": [[0, "models"]], "Deep Ensembles": [[0, "deep-ensembles"], [84, "deep-ensembles"]], "Metrics": [[0, "metrics"], [84, "metrics"]], "Losses": [[0, "losses"]], "Post-Processing Methods": [[0, "post-processing-methods"], [84, "post-processing-methods"]], "Datamodules": [[0, "datamodules"]], "Tutorials": [[1, "tutorials"]], "Computation times": [[2, "computation-times"], [85, "computation-times"]], "Train a Bayesian Neural Network in Three Minutes": [[3, "train-a-bayesian-neural-network-in-three-minutes"]], "Foreword on Bayesian Neural Networks": [[3, "foreword-on-bayesian-neural-networks"]], "Training a Bayesian LeNet using TorchUncertainty models and Lightning": [[3, "training-a-bayesian-lenet-using-torchuncertainty-models-and-lightning"]], "1. Loading the utilities": [[3, "loading-the-utilities"], [5, "loading-the-utilities"], [6, "loading-the-utilities"], [7, "loading-the-utilities"], [8, "loading-the-utilities"]], "2. The Optimization Recipe": [[3, "the-optimization-recipe"], [5, "the-optimization-recipe"]], "3. Creating the necessary variables": [[3, "creating-the-necessary-variables"], [5, "creating-the-necessary-variables"], [6, "creating-the-necessary-variables"]], "4. The Loss and the Training Routine": [[3, "the-loss-and-the-training-routine"], [5, "the-loss-and-the-training-routine"], [6, "the-loss-and-the-training-routine"]], "5. Gathering Everything and Training the Model": [[3, "gathering-everything-and-training-the-model"], [5, "gathering-everything-and-training-the-model"], [6, "gathering-everything-and-training-the-model"]], "6. Testing the Model": [[3, "testing-the-model"], [5, "testing-the-model"], [6, "testing-the-model"], [7, "testing-the-model"]], "References": [[3, "references"], [6, "references"], [10, "references"], [82, "references"], [84, "references"]], "Image Corruptions": [[4, "image-corruptions"]], "1. Noise Corruptions": [[4, "noise-corruptions"]], "2. Blur Corruptions": [[4, "blur-corruptions"]], "3. Other Corruptions": [[4, "other-corruptions"]], "Reference": [[4, "reference"], [5, "reference"]], "Deep Evidential Regression on a Toy Example": [[5, "deep-evidential-regression-on-a-toy-example"]], "Training a MLP with DER using TorchUncertainty models and PyTorch Lightning": [[5, "training-a-mlp-with-der-using-torchuncertainty-models-and-pytorch-lightning"]], "Deep Evidential Classification on a Toy Example": [[6, "deep-evidential-classification-on-a-toy-example"]], "Training a LeNet with DEC using TorchUncertainty models": [[6, "training-a-lenet-with-dec-using-torchuncertainty-models"]], "2. Creating the Optimizer Wrapper": [[6, "creating-the-optimizer-wrapper"]], "Training a LeNet with Monte Carlo Batch Normalization": [[7, "training-a-lenet-with-monte-carlo-batch-normalization"]], "Training a LeNet with MCBN using TorchUncertainty models and PyTorch Lightning": [[7, "training-a-lenet-with-mcbn-using-torchuncertainty-models-and-pytorch-lightning"]], "2. Creating the necessary variables": [[7, "creating-the-necessary-variables"], [8, "creating-the-necessary-variables"]], "3. The Loss and the Training Routine": [[7, "the-loss-and-the-training-routine"], [8, "the-loss-and-the-training-routine"]], "4. Gathering Everything and Training the Model": [[7, "gathering-everything-and-training-the-model"], [8, "gathering-everything-and-training-the-model"]], "5. Wrapping the Model in a MCBatchNorm": [[7, "wrapping-the-model-in-a-mcbatchnorm"]], "Training a LeNet with Monte-Carlo Dropout": [[8, "training-a-lenet-with-monte-carlo-dropout"]], "Training a LeNet with MC Dropout using TorchUncertainty models and PyTorch Lightning": [[8, "training-a-lenet-with-mc-dropout-using-torchuncertainty-models-and-pytorch-lightning"]], "5. Testing the Model": [[8, "testing-the-model"]], "From a Standard Classifier to a Packed-Ensemble": [[9, "from-a-standard-classifier-to-a-packed-ensemble"]], "Dataset": [[9, "dataset"]], "Training an image Packed-Ensemble classifier": [[9, "training-an-image-packed-ensemble-classifier"]], "1. Load and normalize CIFAR10": [[9, "load-and-normalize-cifar10"]], "2. Define a Packed-Ensemble from a standard classifier": [[9, "define-a-packed-ensemble-from-a-standard-classifier"]], "3. Define a Loss function and optimizer": [[9, "define-a-loss-function-and-optimizer"]], "4. Train the Packed-Ensemble on the training data": [[9, "train-the-packed-ensemble-on-the-training-data"]], "5. Test the Packed-Ensemble on the test data": [[9, "test-the-packed-ensemble-on-the-test-data"]], "Improve Top-label Calibration with Temperature Scaling": [[10, "improve-top-label-calibration-with-temperature-scaling"]], "1. Loading the Utilities": [[10, "loading-the-utilities"]], "2. Loading a model from TorchUncertainty\u2019s HF": [[10, "loading-a-model-from-torchuncertainty-s-hf"]], "3. Setting up the Datamodule and Dataloaders": [[10, "setting-up-the-datamodule-and-dataloaders"]], "4. Iterating on the Dataloader and Computing the ECE": [[10, "iterating-on-the-dataloader-and-computing-the-ece"]], "5. Fitting the Scaler to Improve the Calibration": [[10, "fitting-the-scaler-to-improve-the-calibration"]], "6. Iterating Again to Compute the Improved ECE": [[10, "iterating-again-to-compute-the-improved-ece"]], "Notes": [[10, "notes"]], "CLI Guide": [[11, "cli-guide"]], "Introduction to the Lightning CLI": [[11, "introduction-to-the-lightning-cli"]], "Configuration files": [[11, "configuration-files"]], "Experiment folder usage": [[11, "experiment-folder-usage"]], "Contributing": [[12, "contributing"]], "The scope of TorchUncertainty": [[12, "the-scope-of-torchuncertainty"]], "Common guidelines": [[12, "common-guidelines"]], "Clean development install of TorchUncertainty": [[12, "clean-development-install-of-torchuncertainty"]], "Build the documentation locally": [[12, "build-the-documentation-locally"]], "Guidelines": [[12, "guidelines"]], "Datasets & Datamodules": [[12, "datasets-datamodules"]], "Post-processing methods": [[12, "post-processing-methods"]], "License": [[12, "license"]], "ResNetBaseline": [[13, "resnetbaseline"]], "VGGBaseline": [[14, "vggbaseline"]], "WideResNetBaseline": [[15, "wideresnetbaseline"]], "BTSBaseline": [[16, "btsbaseline"]], "MLPBaseline": [[17, "mlpbaseline"]], "DeepLabBaseline": [[18, "deeplabbaseline"]], "SegFormerBaseline": [[19, "segformerbaseline"]], "CIFAR100DataModule": [[20, "cifar100datamodule"]], "CIFAR10DataModule": [[21, "cifar10datamodule"]], "ImageNetDataModule": [[22, "imagenetdatamodule"]], "MNISTDataModule": [[23, "mnistdatamodule"]], "TinyImageNetDataModule": [[24, "tinyimagenetdatamodule"]], "UCIDataModule": [[25, "ucidatamodule"]], "CamVidDataModule": [[26, "camviddatamodule"]], "CityscapesDataModule": [[27, "cityscapesdatamodule"]], "MUADDataModule": [[28, "muaddatamodule"]], "BatchConv2d": [[29, "batchconv2d"]], "BatchLinear": [[30, "batchlinear"]], "MaskedConv2d": [[31, "maskedconv2d"]], "MaskedLinear": [[32, "maskedlinear"]], "PackedConv2d": [[33, "packedconv2d"]], "PackedLinear": [[34, "packedlinear"]], "BayesConv1d": [[35, "bayesconv1d"]], "BayesConv2d": [[36, "bayesconv2d"]], "BayesConv3d": [[37, "bayesconv3d"]], "BayesLinear": [[38, "bayeslinear"]], "LPBNNConv2d": [[39, "lpbnnconv2d"]], "LPBNNLinear": [[40, "lpbnnlinear"]], "BetaNLL": [[41, "betanll"]], "DECLoss": [[42, "decloss"]], "DistributionNLLLoss": [[43, "distributionnllloss"]], "ELBOLoss": [[44, "elboloss"]], "KLDiv": [[45, "kldiv"]], "AURC": [[46, "aurc"]], "AUSE": [[47, "ause"]], "AdaptiveCalibrationError": [[48, "adaptivecalibrationerror"]], "BrierScore": [[49, "brierscore"]], "CalibrationError": [[50, "calibrationerror"]], "CategoricalNLL": [[51, "categoricalnll"]], "CovAt5Risk": [[52, "covat5risk"]], "Disagreement": [[53, "disagreement"]], "Entropy": [[54, "entropy"]], "FPR95": [[55, "fpr95"]], "GroupingLoss": [[56, "groupingloss"]], "MeanIntersectionOverUnion": [[57, "meanintersectionoverunion"]], "MutualInformation": [[58, "mutualinformation"]], "RiskAt80Cov": [[59, "riskat80cov"]], "VariationRatio": [[60, "variationratio"]], "DistributionNLL": [[61, "distributionnll"]], "Log10": [[62, "log10"]], "MeanAbsoluteErrorInverse": [[63, "meanabsoluteerrorinverse"]], "MeanGTRelativeAbsoluteError": [[64, "meangtrelativeabsoluteerror"]], "MeanGTRelativeSquaredError": [[65, "meangtrelativesquarederror"]], "MeanSquaredErrorInverse": [[66, "meansquarederrorinverse"]], "MeanSquaredLogError": [[67, "meansquaredlogerror"]], "SILog": [[68, "silog"]], "ThresholdAccuracy": [[69, "thresholdaccuracy"]], "deep_ensembles": [[70, "deep-ensembles"]], "mc_dropout": [[71, "mc-dropout"]], "MCBatchNorm": [[72, "mcbatchnorm"]], "MatrixScaler": [[73, "matrixscaler"]], "TemperatureScaler": [[74, "temperaturescaler"]], "VectorScaler": [[75, "vectorscaler"]], "ClassificationRoutine": [[76, "classificationroutine"]], "PixelRegressionRoutine": [[77, "pixelregressionroutine"]], "RegressionRoutine": [[78, "regressionroutine"]], "SegmentationRoutine": [[79, "segmentationroutine"]], "Welcome to Torch Uncertainty": [[80, "welcome-to-torch-uncertainty"]], "Installation": [[80, "installation"], [81, "installation"]], "Official Implementations": [[80, "official-implementations"]], "Packed-Ensembles": [[80, "packed-ensembles"], [84, "packed-ensembles"]], "Contents:": [[80, null]], "Indices and tables": [[80, "indices-and-tables"]], "From PyPI": [[81, "from-pypi"]], "From source": [[81, "from-source"]], "Options": [[81, "options"]], "Introduction to Classification Uncertainty": [[82, "introduction-to-classification-uncertainty"]], "Short Background": [[82, "short-background"]], "The Overconfidence of Neural Networks": [[82, "the-overconfidence-of-neural-networks"]], "Quickstart": [[83, "quickstart"]], "Training with TorchUncertainty\u2019s Uncertainty-aware Routines": [[83, "training-with-torchuncertainty-s-uncertainty-aware-routines"]], "Building your First Routine": [[83, "building-your-first-routine"]], "Training with the Routine": [[83, "training-with-the-routine"]], "More metrics": [[83, "more-metrics"]], "Using the Lightning CLI tool": [[83, "using-the-lightning-cli-tool"]], "Procedure": [[83, "procedure"], [83, "id1"], [83, "id3"]], "Example": [[83, "example"], [83, "id2"], [83, "id4"]], "Using the PyTorch-based models": [[83, "using-the-pytorch-based-models"]], "Using the PyTorch-based layers": [[83, "using-the-pytorch-based-layers"]], "Other usage": [[83, "other-usage"]], "Uncertainty Models": [[84, "uncertainty-models"]], "Deep Evidential Classification": [[84, "deep-evidential-classification"]], "Beta NLL in Deep Regression": [[84, "beta-nll-in-deep-regression"]], "Deep Evidential Regression": [[84, "deep-evidential-regression"]], "Bayesian Neural Networks": [[84, "bayesian-neural-networks"]], "Monte-Carlo Dropout": [[84, "monte-carlo-dropout"]], "BatchEnsemble": [[84, "batchensemble"]], "Masksembles": [[84, "masksembles"]], "MIMO": [[84, "mimo"]], "LPBNN": [[84, "lpbnn"]], "Data Augmentation Methods": [[84, "data-augmentation-methods"]], "Mixup": [[84, "mixup"]], "RegMixup": [[84, "regmixup"]], "MixupIO": [[84, "mixupio"]], "Warping Mixup": [[84, "warping-mixup"]], "Temperature, Vector, & Matrix scaling": [[84, "temperature-vector-matrix-scaling"]], "Monte-Carlo Batch Normalization": [[84, "monte-carlo-batch-normalization"]], "Expected Calibration Error": [[84, "expected-calibration-error"]], "Adaptive Calibration Error": [[84, "adaptive-calibration-error"]], "Area Under the Risk-Coverage curve": [[84, "area-under-the-risk-coverage-curve"]], "Grouping Loss": [[84, "grouping-loss"]], "Datasets": [[84, "datasets"]], "MNIST": [[84, "mnist"]], "MNIST-C": [[84, "mnist-c"]], "Not-MNIST": [[84, "not-mnist"]], "CIFAR-10 & CIFAR-100": [[84, "cifar-10-cifar-100"]], "CIFAR-C, Tiny-ImageNet-C, ImageNet-C": [[84, "cifar-c-tiny-imagenet-c-imagenet-c"]], "CIFAR-10 H": [[84, "cifar-10-h"]], "CIFAR-10 N / CIFAR-100 N": [[84, "cifar-10-n-cifar-100-n"]], "SVHN": [[84, "svhn"]], "ImageNet": [[84, "imagenet"]], "ImageNet-A & ImageNet-0": [[84, "imagenet-a-imagenet-0"]], "ImageNet-R": [[84, "imagenet-r"]], "Textures": [[84, "textures"]], "OpenImage-O": [[84, "openimage-o"]], "MUAD": [[84, "muad"]], "Architectures": [[84, "architectures"]], "ResNet": [[84, "resnet"]], "Wide-ResNet": [[84, "wide-resnet"]], "VGG": [[84, "vgg"]]}, "indexentries": {"resnetbaseline (class in torch_uncertainty.baselines.classification)": [[13, "torch_uncertainty.baselines.classification.ResNetBaseline"]], "vggbaseline (class in torch_uncertainty.baselines.classification)": [[14, "torch_uncertainty.baselines.classification.VGGBaseline"]], "wideresnetbaseline (class in torch_uncertainty.baselines.classification)": [[15, "torch_uncertainty.baselines.classification.WideResNetBaseline"]], "btsbaseline (class in torch_uncertainty.baselines.depth)": [[16, "torch_uncertainty.baselines.depth.BTSBaseline"]], "mlpbaseline (class in torch_uncertainty.baselines.regression)": [[17, "torch_uncertainty.baselines.regression.MLPBaseline"]], "deeplabbaseline (class in torch_uncertainty.baselines.segmentation)": [[18, "torch_uncertainty.baselines.segmentation.DeepLabBaseline"]], "segformerbaseline (class in torch_uncertainty.baselines.segmentation)": [[19, "torch_uncertainty.baselines.segmentation.SegFormerBaseline"]], "cifar100datamodule (class in torch_uncertainty.datamodules)": [[20, "torch_uncertainty.datamodules.CIFAR100DataModule"]], "test_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[20, "torch_uncertainty.datamodules.CIFAR100DataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[20, "torch_uncertainty.datamodules.CIFAR100DataModule.train_dataloader"]], "cifar10datamodule (class in torch_uncertainty.datamodules)": [[21, "torch_uncertainty.datamodules.CIFAR10DataModule"]], "test_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[21, "torch_uncertainty.datamodules.CIFAR10DataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[21, "torch_uncertainty.datamodules.CIFAR10DataModule.train_dataloader"]], "imagenetdatamodule (class in torch_uncertainty.datamodules)": [[22, "torch_uncertainty.datamodules.ImageNetDataModule"]], "test_dataloader() (torch_uncertainty.datamodules.imagenetdatamodule method)": [[22, "torch_uncertainty.datamodules.ImageNetDataModule.test_dataloader"]], "mnistdatamodule (class in torch_uncertainty.datamodules)": [[23, "torch_uncertainty.datamodules.MNISTDataModule"]], "prepare_data() (torch_uncertainty.datamodules.mnistdatamodule method)": [[23, "torch_uncertainty.datamodules.MNISTDataModule.prepare_data"]], "test_dataloader() (torch_uncertainty.datamodules.mnistdatamodule method)": [[23, "torch_uncertainty.datamodules.MNISTDataModule.test_dataloader"]], "tinyimagenetdatamodule (class in torch_uncertainty.datamodules)": [[24, "torch_uncertainty.datamodules.TinyImageNetDataModule"]], "test_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[24, "torch_uncertainty.datamodules.TinyImageNetDataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[24, "torch_uncertainty.datamodules.TinyImageNetDataModule.train_dataloader"]], "val_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[24, "torch_uncertainty.datamodules.TinyImageNetDataModule.val_dataloader"]], "ucidatamodule (class in torch_uncertainty.datamodules)": [[25, "torch_uncertainty.datamodules.UCIDataModule"]], "prepare_data() (torch_uncertainty.datamodules.ucidatamodule method)": [[25, "torch_uncertainty.datamodules.UCIDataModule.prepare_data"]], "setup() (torch_uncertainty.datamodules.ucidatamodule method)": [[25, "torch_uncertainty.datamodules.UCIDataModule.setup"]], "camviddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[26, "torch_uncertainty.datamodules.segmentation.CamVidDataModule"]], "cityscapesdatamodule (class in torch_uncertainty.datamodules.segmentation)": [[27, "torch_uncertainty.datamodules.segmentation.CityscapesDataModule"]], "muaddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[28, "torch_uncertainty.datamodules.segmentation.MUADDataModule"]], "batchconv2d (class in torch_uncertainty.layers)": [[29, "torch_uncertainty.layers.BatchConv2d"]], "batchlinear (class in torch_uncertainty.layers)": [[30, "torch_uncertainty.layers.BatchLinear"]], "maskedconv2d (class in torch_uncertainty.layers)": [[31, "torch_uncertainty.layers.MaskedConv2d"]], "maskedlinear (class in torch_uncertainty.layers)": [[32, "torch_uncertainty.layers.MaskedLinear"]], "packedconv2d (class in torch_uncertainty.layers)": [[33, "torch_uncertainty.layers.PackedConv2d"]], "bias (torch_uncertainty.layers.packedconv2d property)": [[33, "torch_uncertainty.layers.PackedConv2d.bias"]], "weight (torch_uncertainty.layers.packedconv2d property)": [[33, "torch_uncertainty.layers.PackedConv2d.weight"]], "packedlinear (class in torch_uncertainty.layers)": [[34, "torch_uncertainty.layers.PackedLinear"]], "bias (torch_uncertainty.layers.packedlinear property)": [[34, "torch_uncertainty.layers.PackedLinear.bias"]], "weight (torch_uncertainty.layers.packedlinear property)": [[34, "torch_uncertainty.layers.PackedLinear.weight"]], "bayesconv1d (class in torch_uncertainty.layers.bayesian)": [[35, "torch_uncertainty.layers.bayesian.BayesConv1d"]], "bayesconv2d (class in torch_uncertainty.layers.bayesian)": [[36, "torch_uncertainty.layers.bayesian.BayesConv2d"]], "bayesconv3d (class in torch_uncertainty.layers.bayesian)": [[37, "torch_uncertainty.layers.bayesian.BayesConv3d"]], "bayeslinear (class in torch_uncertainty.layers.bayesian)": [[38, "torch_uncertainty.layers.bayesian.BayesLinear"]], "freeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[38, "torch_uncertainty.layers.bayesian.BayesLinear.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[38, "torch_uncertainty.layers.bayesian.BayesLinear.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[38, "torch_uncertainty.layers.bayesian.BayesLinear.unfreeze"]], "lpbnnconv2d (class in torch_uncertainty.layers.bayesian)": [[39, "torch_uncertainty.layers.bayesian.LPBNNConv2d"]], "lpbnnlinear (class in torch_uncertainty.layers.bayesian)": [[40, "torch_uncertainty.layers.bayesian.LPBNNLinear"]], "betanll (class in torch_uncertainty.losses)": [[41, "torch_uncertainty.losses.BetaNLL"]], "decloss (class in torch_uncertainty.losses)": [[42, "torch_uncertainty.losses.DECLoss"]], "distributionnllloss (class in torch_uncertainty.losses)": [[43, "torch_uncertainty.losses.DistributionNLLLoss"]], "forward() (torch_uncertainty.losses.distributionnllloss method)": [[43, "torch_uncertainty.losses.DistributionNLLLoss.forward"]], "elboloss (class in torch_uncertainty.losses)": [[44, "torch_uncertainty.losses.ELBOLoss"]], "forward() (torch_uncertainty.losses.elboloss method)": [[44, "torch_uncertainty.losses.ELBOLoss.forward"]], "kldiv (class in torch_uncertainty.losses)": [[45, "torch_uncertainty.losses.KLDiv"]], "aurc (class in torch_uncertainty.metrics.classification)": [[46, "torch_uncertainty.metrics.classification.AURC"]], "compute() (torch_uncertainty.metrics.classification.aurc method)": [[46, "torch_uncertainty.metrics.classification.AURC.compute"]], "partial_compute() (torch_uncertainty.metrics.classification.aurc method)": [[46, "torch_uncertainty.metrics.classification.AURC.partial_compute"]], "plot() (torch_uncertainty.metrics.classification.aurc method)": [[46, "torch_uncertainty.metrics.classification.AURC.plot"]], "update() (torch_uncertainty.metrics.classification.aurc method)": [[46, "torch_uncertainty.metrics.classification.AURC.update"]], "ause (class in torch_uncertainty.metrics.classification)": [[47, "torch_uncertainty.metrics.classification.AUSE"]], "compute() (torch_uncertainty.metrics.classification.ause method)": [[47, "torch_uncertainty.metrics.classification.AUSE.compute"]], "plot() (torch_uncertainty.metrics.classification.ause method)": [[47, "torch_uncertainty.metrics.classification.AUSE.plot"]], "update() (torch_uncertainty.metrics.classification.ause method)": [[47, "torch_uncertainty.metrics.classification.AUSE.update"]], "adaptivecalibrationerror (class in torch_uncertainty.metrics.classification)": [[48, "torch_uncertainty.metrics.classification.AdaptiveCalibrationError"]], "brierscore (class in torch_uncertainty.metrics.classification)": [[49, "torch_uncertainty.metrics.classification.BrierScore"]], "compute() (torch_uncertainty.metrics.classification.brierscore method)": [[49, "torch_uncertainty.metrics.classification.BrierScore.compute"]], "update() (torch_uncertainty.metrics.classification.brierscore method)": [[49, "torch_uncertainty.metrics.classification.BrierScore.update"]], "calibrationerror (class in torch_uncertainty.metrics.classification)": [[50, "torch_uncertainty.metrics.classification.CalibrationError"]], "categoricalnll (class in torch_uncertainty.metrics.classification)": [[51, "torch_uncertainty.metrics.classification.CategoricalNLL"]], "compute() (torch_uncertainty.metrics.classification.categoricalnll method)": [[51, "torch_uncertainty.metrics.classification.CategoricalNLL.compute"]], "update() (torch_uncertainty.metrics.classification.categoricalnll method)": [[51, "torch_uncertainty.metrics.classification.CategoricalNLL.update"]], "covat5risk (class in torch_uncertainty.metrics.classification)": [[52, "torch_uncertainty.metrics.classification.CovAt5Risk"]], "disagreement (class in torch_uncertainty.metrics.classification)": [[53, "torch_uncertainty.metrics.classification.Disagreement"]], "compute() (torch_uncertainty.metrics.classification.disagreement method)": [[53, "torch_uncertainty.metrics.classification.Disagreement.compute"]], "update() (torch_uncertainty.metrics.classification.disagreement method)": [[53, "torch_uncertainty.metrics.classification.Disagreement.update"]], "entropy (class in torch_uncertainty.metrics.classification)": [[54, "torch_uncertainty.metrics.classification.Entropy"]], "compute() (torch_uncertainty.metrics.classification.entropy method)": [[54, "torch_uncertainty.metrics.classification.Entropy.compute"]], "update() (torch_uncertainty.metrics.classification.entropy method)": [[54, "torch_uncertainty.metrics.classification.Entropy.update"]], "fpr95 (class in torch_uncertainty.metrics.classification)": [[55, "torch_uncertainty.metrics.classification.FPR95"]], "groupingloss (class in torch_uncertainty.metrics.classification)": [[56, "torch_uncertainty.metrics.classification.GroupingLoss"]], "compute() (torch_uncertainty.metrics.classification.groupingloss method)": [[56, "torch_uncertainty.metrics.classification.GroupingLoss.compute"]], "update() (torch_uncertainty.metrics.classification.groupingloss method)": [[56, "torch_uncertainty.metrics.classification.GroupingLoss.update"]], "meanintersectionoverunion (class in torch_uncertainty.metrics.classification)": [[57, "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion"]], "compute() (torch_uncertainty.metrics.classification.meanintersectionoverunion method)": [[57, "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion.compute"]], "mutualinformation (class in torch_uncertainty.metrics.classification)": [[58, "torch_uncertainty.metrics.classification.MutualInformation"]], "compute() (torch_uncertainty.metrics.classification.mutualinformation method)": [[58, "torch_uncertainty.metrics.classification.MutualInformation.compute"]], "update() (torch_uncertainty.metrics.classification.mutualinformation method)": [[58, "torch_uncertainty.metrics.classification.MutualInformation.update"]], "riskat80cov (class in torch_uncertainty.metrics.classification)": [[59, "torch_uncertainty.metrics.classification.RiskAt80Cov"]], "variationratio (class in torch_uncertainty.metrics.classification)": [[60, "torch_uncertainty.metrics.classification.VariationRatio"]], "compute() (torch_uncertainty.metrics.classification.variationratio method)": [[60, "torch_uncertainty.metrics.classification.VariationRatio.compute"]], "distributionnll (class in torch_uncertainty.metrics.regression)": [[61, "torch_uncertainty.metrics.regression.DistributionNLL"]], "compute() (torch_uncertainty.metrics.regression.distributionnll method)": [[61, "torch_uncertainty.metrics.regression.DistributionNLL.compute"]], "update() (torch_uncertainty.metrics.regression.distributionnll method)": [[61, "torch_uncertainty.metrics.regression.DistributionNLL.update"]], "log10 (class in torch_uncertainty.metrics.regression)": [[62, "torch_uncertainty.metrics.regression.Log10"]], "update() (torch_uncertainty.metrics.regression.log10 method)": [[62, "torch_uncertainty.metrics.regression.Log10.update"]], "meanabsoluteerrorinverse (class in torch_uncertainty.metrics.regression)": [[63, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse"]], "update() (torch_uncertainty.metrics.regression.meanabsoluteerrorinverse method)": [[63, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.update"]], "meangtrelativeabsoluteerror (class in torch_uncertainty.metrics.regression)": [[64, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError"]], "update() (torch_uncertainty.metrics.regression.meangtrelativeabsoluteerror method)": [[64, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.update"]], "meangtrelativesquarederror (class in torch_uncertainty.metrics.regression)": [[65, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError"]], "update() (torch_uncertainty.metrics.regression.meangtrelativesquarederror method)": [[65, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.update"]], "meansquarederrorinverse (class in torch_uncertainty.metrics.regression)": [[66, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse"]], "update() (torch_uncertainty.metrics.regression.meansquarederrorinverse method)": [[66, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.update"]], "meansquaredlogerror (class in torch_uncertainty.metrics.regression)": [[67, "torch_uncertainty.metrics.regression.MeanSquaredLogError"]], "update() (torch_uncertainty.metrics.regression.meansquaredlogerror method)": [[67, "torch_uncertainty.metrics.regression.MeanSquaredLogError.update"]], "silog (class in torch_uncertainty.metrics.regression)": [[68, "torch_uncertainty.metrics.regression.SILog"]], "compute() (torch_uncertainty.metrics.regression.silog method)": [[68, "torch_uncertainty.metrics.regression.SILog.compute"]], "update() (torch_uncertainty.metrics.regression.silog method)": [[68, "torch_uncertainty.metrics.regression.SILog.update"]], "thresholdaccuracy (class in torch_uncertainty.metrics.regression)": [[69, "torch_uncertainty.metrics.regression.ThresholdAccuracy"]], "compute() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[69, "torch_uncertainty.metrics.regression.ThresholdAccuracy.compute"]], "update() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[69, "torch_uncertainty.metrics.regression.ThresholdAccuracy.update"]], "deep_ensembles (class in torch_uncertainty.models)": [[70, "torch_uncertainty.models.deep_ensembles"]], "mc_dropout (class in torch_uncertainty.models)": [[71, "torch_uncertainty.models.mc_dropout"]], "mcbatchnorm (class in torch_uncertainty.post_processing)": [[72, "torch_uncertainty.post_processing.MCBatchNorm"]], "fit() (torch_uncertainty.post_processing.mcbatchnorm method)": [[72, "torch_uncertainty.post_processing.MCBatchNorm.fit"]], "raise_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[72, "torch_uncertainty.post_processing.MCBatchNorm.raise_counters"]], "replace_layers() (torch_uncertainty.post_processing.mcbatchnorm method)": [[72, "torch_uncertainty.post_processing.MCBatchNorm.replace_layers"]], "reset_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[72, "torch_uncertainty.post_processing.MCBatchNorm.reset_counters"]], "set_accumulate() (torch_uncertainty.post_processing.mcbatchnorm method)": [[72, "torch_uncertainty.post_processing.MCBatchNorm.set_accumulate"]], "matrixscaler (class in torch_uncertainty.post_processing)": [[73, "torch_uncertainty.post_processing.MatrixScaler"]], "fit() (torch_uncertainty.post_processing.matrixscaler method)": [[73, "torch_uncertainty.post_processing.MatrixScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.matrixscaler method)": [[73, "torch_uncertainty.post_processing.MatrixScaler.set_temperature"]], "temperaturescaler (class in torch_uncertainty.post_processing)": [[74, "torch_uncertainty.post_processing.TemperatureScaler"]], "fit() (torch_uncertainty.post_processing.temperaturescaler method)": [[74, "torch_uncertainty.post_processing.TemperatureScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.temperaturescaler method)": [[74, "torch_uncertainty.post_processing.TemperatureScaler.set_temperature"]], "vectorscaler (class in torch_uncertainty.post_processing)": [[75, "torch_uncertainty.post_processing.VectorScaler"]], "fit() (torch_uncertainty.post_processing.vectorscaler method)": [[75, "torch_uncertainty.post_processing.VectorScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.vectorscaler method)": [[75, "torch_uncertainty.post_processing.VectorScaler.set_temperature"]], "classificationroutine (class in torch_uncertainty.routines)": [[76, "torch_uncertainty.routines.ClassificationRoutine"]], "forward() (torch_uncertainty.routines.classificationroutine method)": [[76, "torch_uncertainty.routines.ClassificationRoutine.forward"]], "pixelregressionroutine (class in torch_uncertainty.routines)": [[77, "torch_uncertainty.routines.PixelRegressionRoutine"]], "forward() (torch_uncertainty.routines.pixelregressionroutine method)": [[77, "torch_uncertainty.routines.PixelRegressionRoutine.forward"]], "regressionroutine (class in torch_uncertainty.routines)": [[78, "torch_uncertainty.routines.RegressionRoutine"]], "forward() (torch_uncertainty.routines.regressionroutine method)": [[78, "torch_uncertainty.routines.RegressionRoutine.forward"]], "segmentationroutine (class in torch_uncertainty.routines)": [[79, "torch_uncertainty.routines.SegmentationRoutine"]], "forward() (torch_uncertainty.routines.segmentationroutine method)": [[79, "torch_uncertainty.routines.SegmentationRoutine.forward"]]}})