Search.setIndex({"docnames": ["api", "auto_tutorials/index", "auto_tutorials/sg_execution_times", "auto_tutorials/tutorial_bayesian", "auto_tutorials/tutorial_corruption", "auto_tutorials/tutorial_der_cubic", "auto_tutorials/tutorial_evidential_classification", "auto_tutorials/tutorial_from_de_to_pe", "auto_tutorials/tutorial_mc_batch_norm", "auto_tutorials/tutorial_mc_dropout", "auto_tutorials/tutorial_pe_cifar10", "auto_tutorials/tutorial_probabilistic_regression", "auto_tutorials/tutorial_scaler", "cli_guide", "contributing", "generated/torch_uncertainty.baselines.classification.ResNetBaseline", "generated/torch_uncertainty.baselines.classification.VGGBaseline", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline", "generated/torch_uncertainty.baselines.depth.BTSBaseline", "generated/torch_uncertainty.baselines.regression.MLPBaseline", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline", "generated/torch_uncertainty.datamodules.BankMarketingDataModule", "generated/torch_uncertainty.datamodules.CIFAR100DataModule", "generated/torch_uncertainty.datamodules.CIFAR10DataModule", "generated/torch_uncertainty.datamodules.DOTA2GamesDataModule", "generated/torch_uncertainty.datamodules.HTRU2DataModule", "generated/torch_uncertainty.datamodules.ImageNetDataModule", "generated/torch_uncertainty.datamodules.MNISTDataModule", "generated/torch_uncertainty.datamodules.OnlineShoppersDataModule", "generated/torch_uncertainty.datamodules.SpamBaseDataModule", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule", "generated/torch_uncertainty.datamodules.UCIRegressionDataModule", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule", "generated/torch_uncertainty.datasets.Fractals", "generated/torch_uncertainty.datasets.FrostImages", "generated/torch_uncertainty.datasets.KITTIDepth", "generated/torch_uncertainty.datasets.MUAD", "generated/torch_uncertainty.datasets.NYUv2", "generated/torch_uncertainty.datasets.classification.CIFAR100C", "generated/torch_uncertainty.datasets.classification.CIFAR100N", "generated/torch_uncertainty.datasets.classification.CIFAR10C", "generated/torch_uncertainty.datasets.classification.CIFAR10H", "generated/torch_uncertainty.datasets.classification.CIFAR10N", "generated/torch_uncertainty.datasets.classification.ImageNetA", "generated/torch_uncertainty.datasets.classification.ImageNetC", "generated/torch_uncertainty.datasets.classification.ImageNetO", "generated/torch_uncertainty.datasets.classification.ImageNetR", "generated/torch_uncertainty.datasets.classification.MNISTC", "generated/torch_uncertainty.datasets.classification.NotMNIST", "generated/torch_uncertainty.datasets.classification.OpenImageO", "generated/torch_uncertainty.datasets.classification.TinyImageNet", "generated/torch_uncertainty.datasets.classification.TinyImageNetC", "generated/torch_uncertainty.datasets.classification.uci.BankMarketing", "generated/torch_uncertainty.datasets.classification.uci.DOTA2Games", "generated/torch_uncertainty.datasets.classification.uci.HTRU2", "generated/torch_uncertainty.datasets.classification.uci.OnlineShoppers", "generated/torch_uncertainty.datasets.classification.uci.SpamBase", "generated/torch_uncertainty.datasets.regression.UCIRegression", "generated/torch_uncertainty.datasets.segmentation.CamVid", "generated/torch_uncertainty.datasets.segmentation.Cityscapes", "generated/torch_uncertainty.layers.BatchConv2d", "generated/torch_uncertainty.layers.BatchLinear", "generated/torch_uncertainty.layers.MaskedConv2d", "generated/torch_uncertainty.layers.MaskedLinear", "generated/torch_uncertainty.layers.PackedConv2d", "generated/torch_uncertainty.layers.PackedLayerNorm", "generated/torch_uncertainty.layers.PackedLinear", "generated/torch_uncertainty.layers.PackedMultiheadAttention", "generated/torch_uncertainty.layers.PackedTransformerDecoderLayer", "generated/torch_uncertainty.layers.PackedTransformerEncoderLayer", "generated/torch_uncertainty.layers.bayesian.BayesConv1d", "generated/torch_uncertainty.layers.bayesian.BayesConv2d", "generated/torch_uncertainty.layers.bayesian.BayesConv3d", "generated/torch_uncertainty.layers.bayesian.BayesLinear", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear", "generated/torch_uncertainty.layers.distributions.CauchyConvNd", "generated/torch_uncertainty.layers.distributions.CauchyLinear", "generated/torch_uncertainty.layers.distributions.LaplaceConvNd", "generated/torch_uncertainty.layers.distributions.LaplaceLinear", "generated/torch_uncertainty.layers.distributions.NormalConvNd", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaConvNd", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaLinear", "generated/torch_uncertainty.layers.distributions.NormalLinear", "generated/torch_uncertainty.layers.distributions.StudentTConvNd", "generated/torch_uncertainty.layers.distributions.StudentTLinear", "generated/torch_uncertainty.losses.BCEWithLogitsLSLoss", "generated/torch_uncertainty.losses.BetaNLL", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss", "generated/torch_uncertainty.losses.ConflictualLoss", "generated/torch_uncertainty.losses.DECLoss", "generated/torch_uncertainty.losses.DERLoss", "generated/torch_uncertainty.losses.DistributionNLLLoss", "generated/torch_uncertainty.losses.ELBOLoss", "generated/torch_uncertainty.losses.FocalLoss", "generated/torch_uncertainty.losses.KLDiv", "generated/torch_uncertainty.metrics.AUSE", "generated/torch_uncertainty.metrics.classification.AUGRC", "generated/torch_uncertainty.metrics.classification.AURC", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError", "generated/torch_uncertainty.metrics.classification.BrierScore", "generated/torch_uncertainty.metrics.classification.CalibrationError", "generated/torch_uncertainty.metrics.classification.CategoricalNLL", "generated/torch_uncertainty.metrics.classification.CovAt5Risk", "generated/torch_uncertainty.metrics.classification.CovAtxRisk", "generated/torch_uncertainty.metrics.classification.Disagreement", "generated/torch_uncertainty.metrics.classification.Entropy", "generated/torch_uncertainty.metrics.classification.FPR95", "generated/torch_uncertainty.metrics.classification.FPRx", "generated/torch_uncertainty.metrics.classification.GroupingLoss", "generated/torch_uncertainty.metrics.classification.MeanIntersectionOverUnion", "generated/torch_uncertainty.metrics.classification.MutualInformation", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov", "generated/torch_uncertainty.metrics.classification.RiskAtxCov", "generated/torch_uncertainty.metrics.classification.VariationRatio", "generated/torch_uncertainty.metrics.regression.DistributionNLL", "generated/torch_uncertainty.metrics.regression.Log10", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError", "generated/torch_uncertainty.metrics.regression.SILog", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy", "generated/torch_uncertainty.models.BatchEnsemble", "generated/torch_uncertainty.models.CheckpointEnsemble", "generated/torch_uncertainty.models.EMA", "generated/torch_uncertainty.models.MCDropout", "generated/torch_uncertainty.models.SWA", "generated/torch_uncertainty.models.SWAG", "generated/torch_uncertainty.models.StochasticModel", "generated/torch_uncertainty.models.batch_ensemble", "generated/torch_uncertainty.models.deep_ensembles", "generated/torch_uncertainty.models.mc_dropout", "generated/torch_uncertainty.post_processing.LaplaceApprox", "generated/torch_uncertainty.post_processing.MCBatchNorm", "generated/torch_uncertainty.post_processing.MatrixScaler", "generated/torch_uncertainty.post_processing.TemperatureScaler", "generated/torch_uncertainty.post_processing.VectorScaler", "generated/torch_uncertainty.routines.ClassificationRoutine", "generated/torch_uncertainty.routines.PixelRegressionRoutine", "generated/torch_uncertainty.routines.RegressionRoutine", "generated/torch_uncertainty.routines.SegmentationRoutine", "index", "installation", "introduction_uncertainty", "quickstart", "references", "sg_execution_times"], "filenames": ["api.rst", "auto_tutorials/index.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/tutorial_bayesian.rst", "auto_tutorials/tutorial_corruption.rst", "auto_tutorials/tutorial_der_cubic.rst", "auto_tutorials/tutorial_evidential_classification.rst", "auto_tutorials/tutorial_from_de_to_pe.rst", "auto_tutorials/tutorial_mc_batch_norm.rst", "auto_tutorials/tutorial_mc_dropout.rst", "auto_tutorials/tutorial_pe_cifar10.rst", "auto_tutorials/tutorial_probabilistic_regression.rst", "auto_tutorials/tutorial_scaler.rst", "cli_guide.rst", "contributing.rst", "generated/torch_uncertainty.baselines.classification.ResNetBaseline.rst", "generated/torch_uncertainty.baselines.classification.VGGBaseline.rst", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline.rst", "generated/torch_uncertainty.baselines.depth.BTSBaseline.rst", "generated/torch_uncertainty.baselines.regression.MLPBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline.rst", "generated/torch_uncertainty.datamodules.BankMarketingDataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR100DataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR10DataModule.rst", "generated/torch_uncertainty.datamodules.DOTA2GamesDataModule.rst", "generated/torch_uncertainty.datamodules.HTRU2DataModule.rst", "generated/torch_uncertainty.datamodules.ImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.MNISTDataModule.rst", "generated/torch_uncertainty.datamodules.OnlineShoppersDataModule.rst", "generated/torch_uncertainty.datamodules.SpamBaseDataModule.rst", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.UCIRegressionDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule.rst", "generated/torch_uncertainty.datasets.Fractals.rst", "generated/torch_uncertainty.datasets.FrostImages.rst", "generated/torch_uncertainty.datasets.KITTIDepth.rst", "generated/torch_uncertainty.datasets.MUAD.rst", "generated/torch_uncertainty.datasets.NYUv2.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100N.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10H.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10N.rst", "generated/torch_uncertainty.datasets.classification.ImageNetA.rst", "generated/torch_uncertainty.datasets.classification.ImageNetC.rst", "generated/torch_uncertainty.datasets.classification.ImageNetO.rst", "generated/torch_uncertainty.datasets.classification.ImageNetR.rst", "generated/torch_uncertainty.datasets.classification.MNISTC.rst", "generated/torch_uncertainty.datasets.classification.NotMNIST.rst", "generated/torch_uncertainty.datasets.classification.OpenImageO.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNet.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNetC.rst", "generated/torch_uncertainty.datasets.classification.uci.BankMarketing.rst", "generated/torch_uncertainty.datasets.classification.uci.DOTA2Games.rst", "generated/torch_uncertainty.datasets.classification.uci.HTRU2.rst", "generated/torch_uncertainty.datasets.classification.uci.OnlineShoppers.rst", "generated/torch_uncertainty.datasets.classification.uci.SpamBase.rst", "generated/torch_uncertainty.datasets.regression.UCIRegression.rst", "generated/torch_uncertainty.datasets.segmentation.CamVid.rst", "generated/torch_uncertainty.datasets.segmentation.Cityscapes.rst", "generated/torch_uncertainty.layers.BatchConv2d.rst", "generated/torch_uncertainty.layers.BatchLinear.rst", "generated/torch_uncertainty.layers.MaskedConv2d.rst", "generated/torch_uncertainty.layers.MaskedLinear.rst", "generated/torch_uncertainty.layers.PackedConv2d.rst", "generated/torch_uncertainty.layers.PackedLayerNorm.rst", "generated/torch_uncertainty.layers.PackedLinear.rst", "generated/torch_uncertainty.layers.PackedMultiheadAttention.rst", "generated/torch_uncertainty.layers.PackedTransformerDecoderLayer.rst", "generated/torch_uncertainty.layers.PackedTransformerEncoderLayer.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv1d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv2d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv3d.rst", "generated/torch_uncertainty.layers.bayesian.BayesLinear.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear.rst", "generated/torch_uncertainty.layers.distributions.CauchyConvNd.rst", "generated/torch_uncertainty.layers.distributions.CauchyLinear.rst", "generated/torch_uncertainty.layers.distributions.LaplaceConvNd.rst", "generated/torch_uncertainty.layers.distributions.LaplaceLinear.rst", "generated/torch_uncertainty.layers.distributions.NormalConvNd.rst", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaConvNd.rst", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaLinear.rst", "generated/torch_uncertainty.layers.distributions.NormalLinear.rst", "generated/torch_uncertainty.layers.distributions.StudentTConvNd.rst", "generated/torch_uncertainty.layers.distributions.StudentTLinear.rst", "generated/torch_uncertainty.losses.BCEWithLogitsLSLoss.rst", "generated/torch_uncertainty.losses.BetaNLL.rst", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss.rst", "generated/torch_uncertainty.losses.ConflictualLoss.rst", "generated/torch_uncertainty.losses.DECLoss.rst", "generated/torch_uncertainty.losses.DERLoss.rst", "generated/torch_uncertainty.losses.DistributionNLLLoss.rst", "generated/torch_uncertainty.losses.ELBOLoss.rst", "generated/torch_uncertainty.losses.FocalLoss.rst", "generated/torch_uncertainty.losses.KLDiv.rst", "generated/torch_uncertainty.metrics.AUSE.rst", "generated/torch_uncertainty.metrics.classification.AUGRC.rst", "generated/torch_uncertainty.metrics.classification.AURC.rst", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError.rst", "generated/torch_uncertainty.metrics.classification.BrierScore.rst", "generated/torch_uncertainty.metrics.classification.CalibrationError.rst", "generated/torch_uncertainty.metrics.classification.CategoricalNLL.rst", "generated/torch_uncertainty.metrics.classification.CovAt5Risk.rst", "generated/torch_uncertainty.metrics.classification.CovAtxRisk.rst", "generated/torch_uncertainty.metrics.classification.Disagreement.rst", "generated/torch_uncertainty.metrics.classification.Entropy.rst", "generated/torch_uncertainty.metrics.classification.FPR95.rst", "generated/torch_uncertainty.metrics.classification.FPRx.rst", "generated/torch_uncertainty.metrics.classification.GroupingLoss.rst", "generated/torch_uncertainty.metrics.classification.MeanIntersectionOverUnion.rst", "generated/torch_uncertainty.metrics.classification.MutualInformation.rst", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov.rst", "generated/torch_uncertainty.metrics.classification.RiskAtxCov.rst", "generated/torch_uncertainty.metrics.classification.VariationRatio.rst", "generated/torch_uncertainty.metrics.regression.DistributionNLL.rst", "generated/torch_uncertainty.metrics.regression.Log10.rst", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError.rst", "generated/torch_uncertainty.metrics.regression.SILog.rst", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy.rst", "generated/torch_uncertainty.models.BatchEnsemble.rst", "generated/torch_uncertainty.models.CheckpointEnsemble.rst", "generated/torch_uncertainty.models.EMA.rst", "generated/torch_uncertainty.models.MCDropout.rst", "generated/torch_uncertainty.models.SWA.rst", "generated/torch_uncertainty.models.SWAG.rst", "generated/torch_uncertainty.models.StochasticModel.rst", "generated/torch_uncertainty.models.batch_ensemble.rst", "generated/torch_uncertainty.models.deep_ensembles.rst", "generated/torch_uncertainty.models.mc_dropout.rst", "generated/torch_uncertainty.post_processing.LaplaceApprox.rst", "generated/torch_uncertainty.post_processing.MCBatchNorm.rst", "generated/torch_uncertainty.post_processing.MatrixScaler.rst", "generated/torch_uncertainty.post_processing.TemperatureScaler.rst", "generated/torch_uncertainty.post_processing.VectorScaler.rst", "generated/torch_uncertainty.routines.ClassificationRoutine.rst", "generated/torch_uncertainty.routines.PixelRegressionRoutine.rst", "generated/torch_uncertainty.routines.RegressionRoutine.rst", "generated/torch_uncertainty.routines.SegmentationRoutine.rst", "index.rst", "installation.rst", "introduction_uncertainty.rst", "quickstart.rst", "references.rst", "sg_execution_times.rst"], "titles": ["API Reference", "Tutorials", "Computation times", "Train a Bayesian Neural Network in Three Minutes", "Corrupting Images with TorchUncertainty to Benchmark Robustness", "Deep Evidential Regression on a Toy Example", "Deep Evidential Classification on a Toy Example", "Improved Ensemble parameter-efficiency with Packed-Ensembles", "Training a LeNet with Monte Carlo Batch Normalization", "Training a LeNet with Monte-Carlo Dropout", "From a Standard Classifier to a Packed-Ensemble", "Deep Probabilistic Regression", "Improve Top-label Calibration with Temperature Scaling", "CLI Guide", "Contributing", "ResNetBaseline", "VGGBaseline", "WideResNetBaseline", "BTSBaseline", "MLPBaseline", "DeepLabBaseline", "SegFormerBaseline", "BankMarketingDataModule", "CIFAR100DataModule", "CIFAR10DataModule", "DOTA2GamesDataModule", "HTRU2DataModule", "ImageNetDataModule", "MNISTDataModule", "OnlineShoppersDataModule", "SpamBaseDataModule", "TinyImageNetDataModule", "UCIRegressionDataModule", "CamVidDataModule", "CityscapesDataModule", "MUADDataModule", "Fractals", "FrostImages", "KITTIDepth", "MUAD", "NYUv2", "CIFAR100C", "CIFAR100N", "CIFAR10C", "CIFAR10H", "CIFAR10N", "ImageNetA", "ImageNetC", "ImageNetO", "ImageNetR", "MNISTC", "NotMNIST", "OpenImageO", "TinyImageNet", "TinyImageNetC", "BankMarketing", "DOTA2Games", "HTRU2", "OnlineShoppers", "SpamBase", "UCIRegression", "CamVid", "Cityscapes", "BatchConv2d", "BatchLinear", "MaskedConv2d", "MaskedLinear", "PackedConv2d", "PackedLayerNorm", "PackedLinear", "PackedMultiheadAttention", "PackedTransformerDecoderLayer", "PackedTransformerEncoderLayer", "BayesConv1d", "BayesConv2d", "BayesConv3d", "BayesLinear", "LPBNNConv2d", "LPBNNLinear", "CauchyConvNd", "CauchyLinear", "LaplaceConvNd", "LaplaceLinear", "NormalConvNd", "NormalInverseGammaConvNd", "NormalInverseGammaLinear", "NormalLinear", "StudentTConvNd", "StudentTLinear", "BCEWithLogitsLSLoss", "BetaNLL", "ConfidencePenaltyLoss", "ConflictualLoss", "DECLoss", "DERLoss", "DistributionNLLLoss", "ELBOLoss", "FocalLoss", "KLDiv", "AUSE", "AUGRC", "AURC", "AdaptiveCalibrationError", "BrierScore", "CalibrationError", "CategoricalNLL", "CovAt5Risk", "CovAtxRisk", "Disagreement", "Entropy", "FPR95", "FPRx", "GroupingLoss", "MeanIntersectionOverUnion", "MutualInformation", "RiskAt80Cov", "RiskAtxCov", "VariationRatio", "DistributionNLL", "Log10", "MeanAbsoluteErrorInverse", "MeanGTRelativeAbsoluteError", "MeanGTRelativeSquaredError", "MeanSquaredErrorInverse", "MeanSquaredLogError", "SILog", "ThresholdAccuracy", "BatchEnsemble", "CheckpointEnsemble", "EMA", "MCDropout", "SWA", "SWAG", "StochasticModel", "torch_uncertainty.models.batch_ensemble", "torch_uncertainty.models.deep_ensembles", "torch_uncertainty.models.mc_dropout", "LaplaceApprox", "MCBatchNorm", "MatrixScaler", "TemperatureScaler", "VectorScaler", "ClassificationRoutine", "PixelRegressionRoutine", "RegressionRoutine", "SegmentationRoutine", "Welcome to Torch Uncertainty", "Installation", "Introduction to Classification Uncertainty", "Quickstart", "References", "Computation times"], "terms": {"The": [0, 4, 7, 10, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 43, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 125, 126, 127, 128, 129, 130, 132, 135, 138, 142, 143, 144, 145, 146, 149, 150], "ar": [0, 3, 4, 7, 8, 10, 12, 13, 14, 21, 39, 63, 64, 67, 69, 70, 71, 72, 80, 82, 85, 86, 88, 103, 105, 106, 107, 108, 112, 114, 117, 118, 120, 123, 127, 138, 142, 148, 149, 150], "main": [0, 3, 14, 100, 101], "build": [0, 12, 43, 50, 135, 145], "block": [0, 63, 65, 66, 67, 77, 132], "librari": [0, 3, 4, 7, 14, 137, 149, 150], "thei": [0, 7, 9, 13, 99], "defin": [0, 3, 5, 6, 7, 8, 11, 12, 135, 142, 144, 145], "framework": [0, 8], "which": [0, 3, 5, 6, 7, 8, 9, 11, 15, 16, 17, 21, 23, 24, 27, 28, 62, 63, 64, 70, 77, 78, 107, 111, 116, 117, 128, 149], "train": [0, 1, 2, 12, 13, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 44, 45, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 96, 127, 128, 129, 130, 131, 132, 134, 142, 143, 144, 145, 146, 148, 150, 151], "evalu": [0, 7, 8, 9, 10, 12, 13, 15, 16, 17, 23, 24, 27, 28, 33, 34, 99, 100, 101, 127, 128, 130, 134, 142, 143, 144, 145, 149, 150], "allow": [0, 7, 70], "easi": [0, 149], "comput": [0, 3, 7, 9, 11, 50, 52, 66, 69, 70, 91, 92, 95, 96, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 149, 150], "differ": [0, 4, 7, 8, 13, 55, 56, 57, 58, 59, 60, 70, 128, 132, 149], "crucial": 0, "uncertainti": [0, 3, 5, 6, 9, 10, 14, 65, 66, 76, 77, 78, 90, 92, 93, 99, 100, 101, 114, 132, 135, 137, 138, 147], "context": 0, "name": [0, 13, 14, 32, 43, 50, 60, 100, 101], "torchuncertainti": [0, 1, 2, 55, 56, 57, 58, 59, 60, 146, 151], "provid": [0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 21, 33, 34, 35, 70, 71, 72, 99, 100, 101, 104, 114, 149], "lightn": [0, 6, 7, 11, 12, 142, 146], "base": [0, 3, 5, 6, 7, 8, 9, 13, 23, 24, 27, 28, 33, 34, 80, 82, 84, 85, 86, 87, 88, 99, 100, 101, 103, 105, 108, 109, 112, 113, 114, 118, 131, 132, 142, 143, 144, 145, 146, 147, 148, 150], "can": [0, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 33, 34, 35, 39, 63, 71, 72, 114, 142, 144, 145, 147, 149, 150], "easili": [0, 12, 149], "These": [0, 4, 7, 149], "inherit": [0, 13], "from": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 33, 34, 35, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 77, 78, 90, 96, 98, 99, 105, 108, 109, 111, 114, 120, 121, 122, 123, 124, 125, 128, 132, 137, 142, 143, 145, 146, 149, 150, 151], "specif": [0, 3, 5, 14, 149], "design": 0, "benchmark": [0, 1, 2, 43, 47, 50, 54, 146, 149, 150, 151], "similar": [0, 7, 142], "set": [0, 3, 5, 7, 10, 13, 23, 24, 27, 28, 31, 44, 45, 55, 56, 57, 58, 59, 60, 61, 68, 70, 76, 95, 96, 99, 103, 105, 108, 109, 112, 113, 114, 118, 119, 121, 122, 123, 124, 125, 126, 127, 130, 138, 139, 140, 141, 142, 145, 148, 149], "here": [0, 3, 7, 8, 9, 10, 12, 13, 63, 64, 142, 144, 145, 149], "constant": [0, 97], "architectur": [0, 13, 15, 16, 21, 63, 64, 127, 146, 149], "On": [1, 12, 90, 92, 139, 140, 141, 148, 150], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34, 35, 50, 63, 64, 66, 67, 68, 69, 70, 71, 72, 87, 88, 89, 94, 96, 99, 100, 101, 106, 127, 128, 130, 137, 138, 142, 143, 144, 145, 146, 148, 149, 150], "page": [1, 14, 146, 148, 149], "you": [1, 5, 7, 8, 9, 10, 12, 13, 14, 39, 50, 60, 65, 66, 67, 69, 70, 71, 72, 96, 127, 130, 142, 144, 145, 146, 147, 149], "find": [1, 7, 9, 113, 142, 144, 145, 149, 150], "insight": 1, "don": [1, 7, 8, 9, 127], "t": [1, 7, 8, 9, 10, 11, 61, 64, 87, 88, 97, 103, 127, 131, 150], "hesit": [1, 149], "open": [1, 4, 14, 52, 150], "an": [1, 3, 4, 5, 6, 8, 9, 11, 13, 14, 33, 34, 35, 50, 63, 64, 70, 71, 72, 90, 99, 100, 101, 108, 113, 114, 127, 138, 142, 143, 144, 149, 150], "issu": [1, 14, 50, 149], "have": [1, 3, 5, 6, 7, 8, 9, 13, 14, 70, 127, 138, 146, 147, 148, 149], "ani": [1, 11, 12, 14, 15, 16, 17, 63, 64, 65, 66, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 127, 149], "question": [1, 7], "suggest": [1, 8, 14], "lenet": [1, 2, 7, 151], "mont": [1, 2, 14, 15, 16, 17, 138, 151], "carlo": [1, 2, 14, 15, 16, 17, 138, 151], "dropout": [1, 2, 14, 15, 16, 17, 70, 71, 72, 130, 136, 151], "improv": [1, 2, 3, 5, 6, 8, 9, 111, 148, 150, 151], "top": [1, 2, 3, 7, 102, 103, 104, 112, 151], "label": [1, 2, 3, 5, 6, 7, 8, 9, 10, 43, 50, 89, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 116, 117, 118, 125, 139, 140, 141, 142, 151], "calibr": [1, 2, 3, 6, 7, 8, 9, 15, 23, 24, 27, 28, 92, 100, 101, 102, 104, 112, 139, 140, 141, 142, 145, 148, 149, 151], "temperatur": [1, 2, 14, 139, 140, 141, 149, 151], "scale": [1, 2, 11, 14, 15, 16, 17, 33, 34, 35, 52, 65, 66, 79, 80, 81, 82, 83, 86, 87, 88, 120, 121, 122, 123, 124, 125, 132, 139, 140, 141, 149, 151], "batch": [1, 2, 3, 5, 10, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 63, 64, 65, 66, 70, 71, 72, 79, 81, 83, 84, 87, 89, 99, 103, 105, 108, 109, 112, 114, 118, 119, 125, 127, 130, 134, 138, 142, 143, 144, 145, 151], "normal": [1, 2, 5, 7, 11, 15, 34, 35, 71, 72, 73, 74, 75, 76, 83, 84, 85, 86, 94, 100, 101, 103, 105, 108, 112, 114, 118, 138, 148, 151], "bayesian": [1, 2, 6, 8, 9, 12, 14, 73, 74, 75, 76, 77, 78, 91, 96, 98, 104, 132, 137, 138, 146, 151], "neural": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 43, 47, 54, 76, 77, 78, 90, 91, 96, 98, 100, 101, 112, 139, 140, 141, 146, 151], "network": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 43, 47, 54, 63, 64, 67, 69, 70, 71, 72, 76, 77, 78, 90, 91, 96, 98, 100, 101, 112, 125, 138, 139, 140, 141, 146, 151], "three": [1, 2, 64, 149, 151], "minut": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 151], "deep": [1, 2, 3, 9, 14, 93, 94, 100, 101, 102, 125, 132, 135, 137, 138, 149, 151], "evidenti": [1, 2, 93, 94, 151], "regress": [1, 2, 13, 19, 32, 60, 94, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 137, 143, 144, 149, 151], "toi": [1, 2, 151], "exampl": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 63, 64, 127, 145, 147, 150, 151], "classif": [1, 2, 3, 8, 9, 10, 12, 13, 15, 16, 17, 22, 25, 26, 29, 30, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 93, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 135, 137, 142, 149, 151], "probabilist": [1, 2, 5, 90, 117, 135, 143, 144, 150, 151], "corrupt": [1, 2, 23, 24, 43, 47, 50, 54, 150, 151], "imag": [1, 2, 3, 6, 7, 8, 9, 23, 24, 27, 28, 33, 34, 35, 39, 43, 44, 45, 50, 51, 52, 54, 61, 62, 63, 65, 67, 125, 142, 143, 144, 145, 147, 150, 151], "robust": [1, 2, 43, 47, 50, 54, 150, 151], "standard": [1, 2, 3, 7, 13, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 149, 151], "classifi": [1, 2, 3, 7, 8, 9, 151], "pack": [1, 2, 13, 15, 16, 17, 67, 68, 69, 70, 71, 72, 146, 149, 151], "ensembl": [1, 2, 3, 8, 9, 14, 15, 16, 17, 21, 63, 64, 65, 67, 68, 69, 70, 71, 72, 108, 114, 127, 128, 129, 134, 135, 142, 143, 144, 146, 149, 151], "paramet": [1, 2, 3, 5, 6, 10, 11, 12, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151], "effici": [1, 2, 9, 12, 63, 64, 146, 149, 150, 151], "download": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 28, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61], "all": [1, 3, 4, 6, 7, 10, 12, 13, 15, 17, 41, 43, 50, 54, 63, 65, 67, 70, 71, 72, 80, 82, 85, 86, 88, 127, 134, 138, 142, 147, 149, 151], "python": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 146, 147, 149], "sourc": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "code": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 149], "auto_tutorials_python": 1, "zip": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "jupyt": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "notebook": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "auto_tutorials_jupyt": 1, "galleri": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 151], "gener": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 100, 114, 131], "sphinx": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 147], "05": [2, 3, 7, 10, 12, 13, 68, 71, 72, 151], "27": [2, 5, 7, 10, 12, 151], "752": [2, 7, 151], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 70, 151], "execut": [2, 13, 69, 71, 72, 151], "10": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 40, 43, 75, 102, 104, 119, 127, 146, 147, 149, 151], "file": [2, 3, 15, 16, 17, 27, 44, 45, 146, 147, 149, 151], "auto_tutori": 2, "mem": [2, 151], "mb": [2, 151], "tutorial_from_de_to_p": [2, 7, 151], "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 149, 151], "01": [2, 7, 9, 10, 12, 20, 77, 78, 145, 151], "33": [2, 5, 6, 7, 8, 10, 12, 151], "219": [2, 7, 151], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 40, 50, 55, 56, 57, 58, 59, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 95, 100, 101, 103, 111, 118, 125, 127, 132, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151], "tutorial_pe_cifar10": [2, 10, 151], "00": [2, 4, 5, 7, 9, 10, 11, 12, 151], "139": [2, 7, 10, 151], "tutorial_bayesian": [2, 3, 151], "43": [2, 3, 5, 7, 151], "082": [2, 3, 7, 151], "tutorial_evidential_classif": [2, 6, 151], "30": [2, 5, 6, 7, 10, 12, 64, 132, 151], "356": [2, 6, 7, 151], "tutorial_mc_dropout": [2, 9, 151], "29": [2, 4, 5, 6, 7, 9, 10, 12, 151], "949": [2, 7, 9, 151], "tutorial_mc_batch_norm": [2, 8, 151], "20": [2, 5, 7, 8, 10, 12, 64, 132, 151], "911": [2, 7, 8, 151], "tutorial_probabilistic_regress": [2, 11, 151], "19": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 16, 151], "365": [2, 7, 11, 151], "tutorial_scal": [2, 12, 151], "17": [2, 5, 7, 10, 12, 151], "292": [2, 7, 12, 151], "tutorial_der_cub": [2, 5, 151], "07": [2, 7, 9, 10, 12, 151], "809": [2, 5, 7, 151], "tutorial_corrupt": [2, 4, 151], "630": [2, 4, 5, 7, 151], "go": [3, 4, 5, 6, 8, 9, 10, 11, 12, 149], "end": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 127, 132], "full": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 39, 69], "In": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 43, 47, 50, 52, 54, 63, 64, 99, 100, 101, 102, 104, 112, 127, 128, 131, 132, 135, 137, 138, 139, 140, 141, 148, 149, 150], "tutori": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 146, 148, 149], "we": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 63, 64, 70, 113, 132, 142, 148, 149], "variat": [3, 15, 16, 17, 117, 142], "infer": [3, 7, 8, 35], "bnn": 3, "mnist": [3, 6, 7, 8, 9, 28, 50], "dataset": [3, 5, 6, 8, 9, 11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 138, 142, 146, 149], "class": [3, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149], "estim": [3, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 21, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 90, 99, 100, 101, 103, 108, 109, 112, 114, 117, 121, 122, 124, 125, 127, 130, 132, 135, 136, 137, 138, 142, 143, 144, 146, 148, 149, 150], "predict": [3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 21, 95, 96, 100, 101, 105, 107, 108, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 135, 137, 138, 142, 143, 144, 145, 148, 150], "via": [3, 147, 149], "weight": [3, 5, 7, 12, 13, 14, 15, 63, 64, 67, 68, 70, 76, 89, 90, 91, 92, 93, 94, 96, 97, 100, 131, 132, 137, 139, 141], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 33, 34, 35, 36, 39, 40, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 69, 70, 71, 72, 77, 78, 79, 81, 83, 84, 87, 88, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 132, 134, 135, 137, 138, 142, 143, 144, 147, 148, 149], "achiev": [3, 7, 70], "consid": [3, 5, 6, 8, 9, 113, 137, 142, 150], "random": [3, 7, 10, 132, 145], "learn": [3, 6, 7, 9, 11, 13, 14, 63, 64, 71, 72, 87, 88, 93, 102, 132, 137, 139, 140, 141, 150], "posterior": [3, 9, 73, 74, 75, 76, 77, 78, 132, 137, 146, 150], "distribut": [3, 5, 6, 7, 9, 12, 14, 23, 24, 27, 28, 31, 52, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 118, 142, 143, 144, 145, 148, 149, 150], "contrast": [3, 4, 34, 35, 100, 101], "onli": [3, 4, 6, 7, 10, 14, 15, 16, 17, 67, 69, 70, 103, 113, 127, 130, 131, 132, 134, 136, 138, 149], "singl": [3, 6, 7, 21, 109, 113, 125, 128, 142, 143, 144, 145, 150], "seen": [3, 7, 13], "dirac": 3, "For": [3, 4, 7, 9, 11, 13, 14, 44, 45, 70, 125, 129, 132, 142, 147, 149, 150], "more": [3, 5, 8, 9, 12, 13, 113, 137, 138, 142, 144, 145, 148, 150], "inform": [3, 7, 9, 15, 16, 17, 36, 51, 114, 142], "reader": [3, 9], "follow": [3, 4, 5, 6, 7, 8, 9, 13, 14, 33, 34, 35, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 100, 101, 113, 120, 121, 122, 123, 124, 147, 148, 149, 150], "resourc": [3, 9], "icml2015": 3, "hand": 3, "user": [3, 13, 149], "ieee": [3, 7, 146, 150], "intellig": 3, "magazin": 3, "part": [3, 5, 6, 7, 8, 9, 14], "alreadi": [3, 5, 6, 7, 8, 9, 14, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 147], "implement": [3, 5, 6, 8, 9, 13, 14, 63, 64, 69, 89, 97, 114, 150], "tu": [3, 5, 6, 8, 9, 11], "To": [3, 5, 6, 8, 9, 11, 12, 13, 14, 63, 64, 146, 147, 148, 149], "modul": [3, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 21, 63, 64, 68, 80, 82, 84, 85, 86, 87, 88, 96, 98, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149], "our": [3, 5, 6, 8, 9, 10, 11, 13, 104, 149], "tutrain": [3, 5, 6, 7, 8, 9, 11, 149], "bayesian_lenet": 3, "li": [3, 6, 8, 150], "torch_uncertainti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149], "object": [3, 5, 6, 14, 52, 96, 97, 99, 100, 101, 150], "elboloss": 3, "datamodul": [3, 5, 6, 7, 8, 9, 11, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 146, 149], "handl": [3, 6, 7, 8, 9, 12, 63, 64, 142, 143, 144, 149], "dataload": [3, 5, 6, 7, 8, 9, 10, 23, 24, 27, 28, 31, 33, 34, 35, 132, 138, 139, 140, 141, 149], "mnistdatamodul": [3, 6, 8, 9], "also": [3, 4, 5, 6, 7, 8, 9, 12, 14, 114, 142, 143, 144, 146, 148, 149], "need": [3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 70, 71, 72, 142, 143, 144, 149], "torch": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 34, 35, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 77, 78, 79, 81, 83, 108, 109, 111, 112, 113, 114, 118, 128, 132, 137, 138, 142, 144, 145, 147, 149], "pytorch": [3, 6, 7, 10, 11, 12, 13, 14, 63, 64, 89, 97, 131, 132, 144, 146, 147], "": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 39, 50, 55, 56, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 76, 87, 88, 103, 112, 127, 134, 142, 143, 144, 146, 148, 150], "nn": [3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 63, 64, 80, 82, 84, 85, 86, 87, 88, 96, 98, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149], "pathlib": [3, 6, 8, 9], "import": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34, 35, 149], "path": [3, 6, 8, 9, 10, 27, 33, 34, 35, 40, 43, 50], "classificationroutin": [3, 6, 7, 8, 9, 13, 96, 149], "adam": [3, 5, 6, 11, 149, 150], "default": [3, 6, 13, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 40, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 89, 91, 95, 96, 97, 99, 100, 101, 103, 105, 108, 109, 113, 114, 118, 125, 126, 127, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "rate": [3, 5, 6, 7, 11, 13, 15, 16, 17, 101, 110, 111, 139, 140, 141, 145], "001": [3, 6, 10], "def": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 149], "optim_lenet": [3, 6], "lr": [3, 5, 6, 7, 10, 11, 13, 139, 140, 141, 149], "1e": [3, 5, 6, 40, 68, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 132, 145, 149], "return": [3, 4, 5, 6, 7, 10, 11, 13, 15, 16, 17, 23, 24, 27, 28, 31, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 91, 92, 96, 99, 100, 101, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 128, 130, 132, 134, 135, 142, 143, 144, 145, 149], "instanti": [3, 9], "trainer": [3, 5, 6, 7, 8, 12, 13, 149], "root": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 125, 132, 149], "log": [3, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 90, 93, 94, 95, 105, 118, 124, 125, 142, 143, 144, 145], "transform": [3, 4, 6, 7, 8, 9, 10, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 142], "pleas": [3, 5, 7, 8, 14, 148, 150], "note": [3, 5, 7, 8, 10, 11, 13, 55, 56, 57, 58, 59, 60, 67, 69, 70], "ood": [3, 7, 10, 15, 16, 17, 27, 31, 111, 142, 143, 144], "detect": [3, 7, 10, 14, 15, 16, 17, 52, 97, 142, 149, 150], "eval_ood": [3, 7, 12, 15, 16, 17, 23, 24, 27, 28, 31, 142, 149], "true": [3, 4, 6, 7, 8, 9, 10, 12, 13, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 99, 100, 101, 102, 103, 104, 113, 117, 122, 123, 124, 125, 127, 128, 130, 134, 136, 137, 138, 139, 140, 141, 142, 144, 148, 149], "final": [3, 5, 11, 12, 103, 112, 128, 148, 149], "blueprint": [3, 9], "acceler": [3, 5, 6, 7, 8, 9, 11, 13], "cpu": [3, 5, 6, 7, 8, 9, 11, 138, 139, 140, 141, 146, 147], "enable_progress_bar": [3, 5, 6, 8, 9, 11], "fals": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 23, 24, 27, 28, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 70, 71, 72, 73, 74, 75, 76, 103, 104, 110, 111, 113, 122, 123, 124, 125, 127, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149], "max_epoch": [3, 5, 6, 7, 8, 9, 11, 13, 149], "data": [3, 6, 7, 8, 9, 12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 61, 63, 64, 65, 66, 76, 77, 78, 90, 127, 139, 140, 141, 142, 143, 144, 145, 146, 149], "batch_siz": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 63, 64, 69, 136, 138, 149], "128": [3, 6, 7, 8, 9, 13], "num_channel": [3, 6, 8, 9], "num_class": [3, 6, 7, 8, 9, 12, 13, 15, 16, 17, 20, 21, 102, 103, 104, 112, 113, 139, 141, 142, 145, 149], "Then": [3, 5, 6, 13, 14, 147], "just": [3, 7, 12, 149], "dure": [3, 5, 6, 7, 33, 34, 35, 96, 127, 130, 134, 142, 149], "do": [3, 5, 7, 9, 10, 11, 12, 13, 14, 70, 142, 144, 145, 149], "redefin": 3, "elbo": [3, 96], "partial": 3, "function": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 71, 72, 96, 104, 130, 137, 142, 143, 144, 145, 148, 149, 150], "functool": 3, "hyperparamet": [3, 13, 142, 143, 144], "propos": [3, 4], "blitz": 3, "As": [3, 7, 8, 100, 101, 113, 120, 121, 122, 123, 124, 149], "crossentropyloss": [3, 7, 8, 9, 10, 13, 149], "likelihood": [3, 5, 6, 7, 8, 9, 11, 12, 90, 94, 95, 105, 114, 118, 148], "inner_loss": [3, 96], "kl_weight": [3, 96], "10000": [3, 7, 10], "num_sampl": [3, 5, 96, 133], "optim_recip": [3, 5, 6, 7, 8, 9, 11, 15, 16, 17, 142, 143, 144, 145, 149], "is_ensembl": [3, 7, 9, 142, 143, 144], "now": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14], "prepar": [3, 7, 142, 143, 144], "wrapper": [3, 7, 8, 9, 11, 13, 64, 104, 127, 130, 134, 136, 137, 138, 142, 143, 144, 149], "includ": [3, 7, 14, 15, 16, 17, 71, 72, 80, 82, 85, 86, 88, 128, 142, 147, 148], "well": [3, 12, 104, 146, 149, 150], "eval": [3, 6, 8, 9, 132, 138], "logic": [3, 7], "automat": [3, 7, 9, 12, 13, 63, 64, 96, 113, 127, 143, 144, 147, 149], "folder": [3, 14, 146, 147, 149], "save": [3, 8, 10, 13, 15, 16, 17, 44, 45, 61, 113, 128, 139, 140, 141, 142], "fit": [3, 5, 6, 7, 8, 9, 11, 13, 138, 139, 140, 141, 142, 149], "home": [3, 5, 6, 8, 9], "chocolatin": [3, 5, 6, 8, 9], "action": [3, 5, 6, 8, 9], "runner": [3, 5, 6, 8, 9], "_work": [3, 5, 6, 8, 9], "_tool": [3, 5, 6, 8, 9], "16": [3, 5, 6, 7, 8, 9, 10, 12, 16, 63, 132, 138, 149], "x64": [3, 5, 6, 8, 9], "lib": [3, 5, 6, 8, 9], "python3": [3, 5, 6, 8, 9, 14], "site": [3, 5, 6, 8, 9], "packag": [3, 5, 6, 8, 9, 10, 14, 147, 149], "connector": [3, 5, 6, 8, 9], "data_connector": [3, 5, 6, 8, 9], "425": [3, 5, 6, 7, 8, 9], "val_dataload": [3, 5, 6, 7, 8, 9, 31], "doe": [3, 5, 6, 8, 9, 14, 50, 89, 113], "mani": [3, 5, 6, 8, 9, 22, 25, 26, 29, 30, 32, 149, 150], "worker": [3, 5, 6, 8, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35], "mai": [3, 5, 6, 8, 9, 12, 14, 36, 51, 55, 56, 57, 58, 59, 60, 63, 64, 148], "bottleneck": [3, 5, 6, 8, 9], "increas": [3, 5, 6, 7, 8, 9, 14, 67, 69, 136], "valu": [3, 5, 6, 7, 8, 9, 13, 39, 40, 63, 64, 68, 70, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 95, 96, 99, 100, 101, 103, 106, 107, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 139, 140, 141, 142, 143, 144, 145, 148], "num_work": [3, 5, 6, 8, 9, 10, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "argument": [3, 5, 6, 8, 9, 13, 80, 82, 84, 85, 86, 87, 88, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 149], "perform": [3, 5, 6, 7, 8, 9, 10, 11, 13, 23, 27, 70, 100, 101, 130, 132, 136, 142, 143, 144, 145], "train_dataload": [3, 5, 6, 7, 8, 9, 23, 24, 31], "test_dataload": [3, 5, 6, 8, 9, 12, 23, 24, 27, 28, 31], "metric": [3, 5, 6, 7, 8, 9, 11, 12, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 146], "acc": [3, 6, 7, 8, 9], "95": [3, 7, 8, 10, 12, 110], "560": [3, 5, 7], "brier": [3, 6, 7, 8, 9, 103, 112], "06987": 3, "entropi": [3, 6, 7, 8, 9, 10, 12, 15, 16, 17, 89, 142, 149], "19771": 3, "nll": [3, 5, 6, 7, 8, 9, 11, 95, 105, 118], "14908": 3, "ec": [3, 6, 7, 8, 9], "01860": 3, "aec": [3, 6, 7, 8, 9], "01843": 3, "select": [3, 6, 8, 9, 100, 101, 130, 145, 150], "augrc": [3, 6, 7, 8, 9], "378": [3, 7], "aurc": [3, 6, 7, 8, 9, 100], "429": [3, 7], "cov": [3, 6, 7, 8, 9, 100, 101], "5risk": [3, 6, 7, 8, 9], "100": [3, 4, 5, 7, 8, 9, 10, 11, 12, 139, 140, 141, 149], "000": [3, 5, 7, 8], "risk": [3, 6, 7, 8, 9, 100, 101, 106, 107, 115, 116], "80cov": [3, 6, 7, 8, 9], "600": [3, 5, 7, 9], "cal": [3, 6], "01859874278306961": 3, "018428295850753784": 3, "cl": [3, 6, 7], "9556000232696533": 3, "06986690312623978": 3, "14908474683761597": 3, "sc": [3, 6, 100, 101], "003783858148381114": 3, "004285474307835102": 3, "006000000052154064": 3, "19771282374858856": 3, "ens_disagr": [3, 7], "007695832755416632": 3, "ens_entropi": [3, 7], "1966441124677658": 3, "ens_mi": [3, 7], "0010686940513551235": 3, "let": [3, 6, 7, 8, 9, 10, 11, 13, 14, 148, 149], "appli": [3, 7, 8, 15, 16, 17, 23, 24, 27, 28, 33, 34, 40, 43, 63, 64, 65, 66, 71, 72, 89, 90, 91, 92, 93, 94, 95, 113, 130, 136, 150], "reshap": [3, 8, 9], "logit": [3, 8, 9, 10, 12, 15, 16, 17, 52, 89, 91, 92, 113, 139, 140, 141, 142, 148, 149], "determin": [3, 8, 15, 16, 17, 21, 103, 105, 108, 109, 114, 118], "dimens": [3, 8, 11, 64, 68, 70, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 103, 105, 108, 109, 113, 114, 118], "correspond": [3, 7, 8, 14, 15, 16, 17, 63, 64, 70, 90, 99, 100, 101, 106, 107, 142, 143, 144, 145, 148, 149], "merg": [3, 8], "order": [3, 7, 8], "num_estim": [3, 7, 8, 9, 10, 13, 15, 16, 17, 18, 19, 21, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 103, 112, 127, 130, 132, 134, 135, 136, 138, 142, 149], "x": [3, 5, 7, 8, 10, 11, 64, 107, 111, 127, 128, 130, 132, 149], "matplotlib": [3, 4, 5, 6, 8, 9, 10, 62, 99, 100, 101], "pyplot": [3, 4, 5, 6, 8, 9, 10], "plt": [3, 4, 5, 6, 8, 9, 10], "numpi": [3, 4, 6, 8, 9, 10, 14, 55, 56, 57, 58, 59, 60], "np": [3, 6, 8, 9, 10, 43, 50], "torchvis": [3, 4, 6, 7, 8, 9, 10, 33, 34, 35], "imshow": [3, 4, 6, 8, 9, 10], "img": [3, 6, 8, 9, 10], "npimg": [3, 6, 8, 9, 10], "transpos": [3, 6, 8, 9, 10], "axi": [3, 4, 6, 8, 9, 10, 62, 63, 99, 100, 101, 127], "off": [3, 4, 6, 8, 9, 10], "tight_layout": [3, 8, 9], "show": [3, 4, 6, 8, 9, 10, 12, 139, 140, 141], "datait": [3, 6, 8, 9, 10], "iter": [3, 6, 8, 9, 10, 139, 140, 141], "next": [3, 5, 6, 8, 9, 10], "print": [3, 6, 7, 8, 9, 10, 11, 12, 63, 64, 100, 101], "make_grid": [3, 6, 8, 9, 10], "ground": [3, 5, 6, 7, 8, 9, 100, 101, 103, 105, 107, 112, 116, 118, 120, 121, 122, 123, 124, 125], "truth": [3, 5, 6, 7, 8, 9, 100, 101, 103, 105, 107, 112, 116, 118, 120, 121, 122, 123, 124, 125], "join": [3, 6, 8, 9, 10], "f": [3, 4, 6, 7, 8, 9, 10, 11, 12, 53, 71, 72, 112, 149, 150], "j": [3, 4, 6, 7, 8, 9, 10, 132, 150], "rang": [3, 4, 6, 7, 8, 9, 10, 90], "put": [3, 7, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 100, 142, 143, 144], "mode": [3, 7, 9, 11, 14, 62, 128, 130, 132, 138, 142, 147], "sever": [3, 4, 23, 24, 50, 63], "sampl": [3, 5, 7, 9, 10, 11, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 40, 43, 50, 61, 62, 63, 76, 77, 78, 96, 100, 101, 103, 105, 108, 109, 114, 118, 132, 145], "softmax": [3, 7, 8, 9, 10, 12, 15, 16, 17, 142, 148], "averag": [3, 7, 70, 103, 105, 108, 109, 114, 118, 129, 131, 132], "over": [3, 5, 6, 7, 10, 13, 63, 103, 105, 108, 109, 113, 114, 118, 120, 121, 124], "prob": [3, 6, 8, 9, 12, 44, 45, 101, 103, 105, 107, 108, 109, 112, 114, 116, 118], "dim": [3, 6, 8, 9, 10, 70], "avg_prob": 3, "mean": [3, 5, 7, 9, 10, 11, 15, 16, 17, 34, 35, 68, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 103, 105, 108, 109, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 127, 132, 142, 143, 144], "var_prob": 3, "std": [3, 13, 15, 16, 17, 21, 34, 35, 142], "_": [3, 4, 7, 10], "max": [3, 8, 9, 10, 126, 142], "digit": [3, 6, 7, 8, 150], "dev": [3, 14, 147], "score": [3, 7, 12, 99, 101, 103, 105, 107, 108, 109, 111, 112, 113, 114, 116, 118, 149], "7": [3, 5, 6, 7, 8, 9, 10, 12, 13, 76], "000183": 3, "06e": 3, "000405": 3, "00231": 3, "varianc": [3, 5, 8, 9, 125, 132], "non": [3, 22, 25, 26, 29, 30, 135], "intuit": 3, "wai": [3, 11, 149], "divers": [3, 7], "ideal": [3, 7], "should": [3, 7, 12, 13, 67, 69, 70, 113, 138, 149], "high": [3, 7, 90], "when": [3, 7, 12, 13, 14, 63, 64, 67, 68, 69, 70, 100, 101, 113, 127, 130, 132, 135, 142, 143, 144, 149], "incorrect": [3, 7, 63, 64, 71, 72, 100, 101], "lecun": [3, 7, 150], "y": [3, 5, 7, 12, 64, 97, 120, 121, 122, 123, 124, 139, 140, 141, 148, 150], "bottou": [3, 7, 150], "l": [3, 7, 70, 71, 72, 93, 150], "bengio": [3, 7, 150], "haffner": [3, 7, 150], "p": [3, 7, 12, 97, 131], "1998": [3, 150], "gradient": [3, 7, 10, 150], "document": [3, 7, 146, 147, 150], "recognit": [3, 7, 150], "proceed": [3, 7, 150], "blundel": [3, 76, 135, 150], "c": [3, 7, 10, 12, 23, 24, 43, 47, 50, 54, 101, 103, 105, 107, 108, 109, 112, 113, 114, 116, 118, 139, 140, 141, 142, 148, 149], "cornebis": [3, 150], "kavukcuoglu": [3, 150], "k": [3, 5, 7, 12, 63, 64, 97, 126, 138, 139, 140, 141, 148, 150], "wierstra": [3, 150], "d": [3, 4, 90, 94, 131, 150], "2015": [3, 12, 76, 104, 150], "icml": [3, 9, 12, 76, 138, 139, 140, 141, 148, 150], "kingma": 3, "ba": [3, 150], "2014": [3, 125], "A": [3, 14, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 99, 100, 101, 103, 108, 109, 112, 113, 114, 120, 121, 122, 123, 124, 125, 131, 132, 146, 149], "method": [3, 5, 6, 8, 9, 12, 13, 15, 16, 17, 23, 24, 27, 28, 63, 64, 128, 130, 138, 142, 146, 149], "stochast": [3, 7, 8, 131, 132, 138], "iclr": [3, 4, 7, 43, 47, 54, 112, 146, 149, 150], "run": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 147, 149], "time": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 33, 34, 35, 63, 64, 67, 69, 70, 127, 130, 131, 132, 142], "script": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 149], "second": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 76], "ipynb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "impact": [4, 100, 101, 138], "avail": [4, 10, 12, 13, 69, 142], "were": 4, "first": [4, 7, 8, 9, 10, 12, 14, 63, 67, 69, 70, 71, 72, 76, 127, 132, 143], "paper": [4, 5, 6, 7, 14, 63, 64, 76, 97, 99, 146, 149, 150], "common": [4, 43, 47, 50, 54, 100, 146, 150], "perturb": [4, 43, 47, 54, 150], "dan": [4, 43, 47, 54, 150], "hendryck": [4, 43, 47, 54, 111, 150], "thoma": [4, 43, 47, 54, 150], "dietterich": [4, 43, 47, 54, 150], "load": [4, 7, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "util": [4, 7, 10], "compos": [4, 6, 7, 10, 33, 34, 35, 63], "totensor": [4, 7, 10], "resiz": [4, 27, 33, 34, 35], "centercrop": [4, 7], "pil": [4, 7, 39, 43, 44, 45, 50, 51, 52, 54, 61, 62], "urllib": 4, "request": [4, 14], "url": 4, "http": [4, 7, 39, 53, 90, 91, 93, 94, 111, 132, 147, 150], "upload": 4, "wikimedia": 4, "org": [4, 90, 91, 93, 94, 150], "wikipedia": 4, "d9": 4, "carduelis_tristis_": 4, "michigan": 4, "2c_usa_": 4, "male": 4, "8": [4, 5, 6, 7, 8, 9, 11, 12, 13, 63, 64], "jpg": 4, "5d": [4, 10], "border_collie_blanca_y_negra_hembra_": 4, "28belen": 4, "2c_border_collie_los_bagan": 4, "png": 4, "f8": 4, "birmakatze_s": 4, "point": [4, 7, 11, 90, 96, 113, 128, 143, 144], "a9": 4, "garranos_fight": 4, "8b": 4, "cottontail_rabbit": 4, "download_img": 4, "urlretriev": 4, "tmp_": 4, "convert": [4, 8, 63, 64, 113, 127, 134, 137, 138], "rgb": [4, 62], "images_d": 4, "enumer": [4, 10], "get_imag": 4, "main_corrupt": 4, "index": [4, 62, 146, 148], "int": [4, 6, 7, 11, 13, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 43, 54, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96, 100, 101, 103, 110, 111, 113, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 149], "creat": [4, 9, 11, 13, 14, 55, 56, 57, 58, 59, 60, 63, 64, 132, 147, 149], "6": [4, 7, 9, 10, 13, 73, 74, 91, 149], "level": [4, 7, 50, 111, 149], "given": [4, 7, 66, 69, 70, 89, 95, 96, 106, 107, 116, 120, 123, 128, 142, 148], "256": [4, 5, 7, 13], "antialia": [4, 34, 35], "224": [4, 7, 27, 34, 35], "append": [4, 7], "permut": 4, "show_imag": 4, "effect": [4, 8, 70], "num_corrupt": 4, "len": [4, 12], "ax": [4, 5, 12, 62, 99, 100, 101], "subplot": [4, 5], "figsiz": [4, 10], "text": [4, 10, 33, 34, 35, 63, 64, 67, 69, 70, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 119, 120, 121, 122, 123, 124, 125], "__name__": [4, 13], "transax": 4, "rotat": [4, 6], "vertic": 4, "horizontalalign": 4, "right": [4, 63, 125], "verticalalign": 4, "center": [4, 149], "fontsiz": 4, "12": [4, 5, 7, 10, 12], "set_titl": 4, "origin": [4, 5, 6, 12, 14, 15, 16, 17, 21, 52, 63, 70, 71, 72, 89, 104, 132, 135, 150], "elif": 4, "gaussiannois": 4, "shotnois": 4, "impulsenois": 4, "motionblur": 4, "glassblur": 4, "defocusblur": 4, "zoomblur": 4, "frost": 4, "snow": 4, "fog": 4, "78m": 4, "b": [4, 7, 9, 10, 11, 12, 63, 64, 68, 70, 71, 72, 99, 103, 105, 108, 109, 112, 113, 114, 118, 130, 142], "23": [4, 5, 6, 7, 12], "4mb": [4, 7, 10, 12], "bright": [4, 34, 35], "elast": 4, "jpegcompress": 4, "pixel": [4, 7, 143], "us": [4, 7, 10, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 43, 44, 45, 50, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 95, 96, 104, 125, 127, 128, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150], "gaussianblur": 4, "specklenois": 4, "satur": [4, 34, 35], "2019": [4, 43, 47, 50, 54, 94, 102, 132, 150], "introduct": [5, 146], "present": [5, 63, 64], "practic": [5, 6, 7, 13], "demonstr": [5, 6], "applic": [5, 6, 7, 14, 149], "tackl": [5, 6], "problem": [5, 6, 8, 9, 14], "multi": [5, 6, 71, 97, 99, 121, 122, 124, 125], "layer": [5, 6, 7, 8, 9, 10, 15, 16, 17, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 127, 130, 134, 136, 138, 146, 148], "perceptron": [5, 6], "output": [5, 6, 8, 10, 11, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 113, 120, 121, 122, 123, 124, 128, 130, 142, 143, 144, 148], "normalinversegamma": 5, "through": [5, 9, 12, 63, 64, 71, 72, 127, 130], "its": [5, 10, 61, 63, 64, 67, 69, 100, 101, 126, 130, 148, 149], "neg": [5, 7, 9, 11, 90, 94, 95, 105, 114, 118], "repres": [5, 6, 7, 9, 12, 148, 150], "approach": [5, 6, 63, 64, 150], "quantifi": [5, 6, 93, 150], "epistem": [5, 92, 114, 150], "aleator": 5, "involv": [5, 6], "introduc": [5, 6, 7, 63, 64], "prior": [5, 6, 71, 72, 73, 74, 75, 76, 137], "gaussian": [5, 74, 75, 132], "derloss": 5, "contain": [5, 7, 12, 13, 14, 27, 43, 50, 100, 101, 113, 127, 130, 142, 143, 144, 146, 149], "classic": [5, 13, 149], "regular": [5, 6, 91, 92, 93, 94, 125, 150], "term": [5, 6, 76, 91, 92, 93, 94, 96], "noisi": [5, 150], "cubic": 5, "within": [5, 6, 8, 9, 15, 16, 17, 70, 96], "lightningdatamodul": [5, 13], "regressionroutin": [5, 11], "normalinversegammalinear": 5, "get_dist_class": 5, "5e": [5, 11], "optim_regress": [5, 11], "learning_r": [5, 11], "float": [5, 7, 11, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 40, 65, 66, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 106, 107, 111, 113, 116, 129, 132, 139, 140, 141, 142, 145], "weight_decai": [5, 6, 11], "same": [5, 6, 7, 8, 11, 12, 13, 15, 17, 64, 68, 80, 82, 85, 86, 88, 130], "synthet": 5, "simpl": [5, 7, 11, 132, 135, 149, 150], "hidden": [5, 77, 78], "64": [5, 7, 12, 67], "neuron": 5, "each": [5, 7, 13, 14, 15, 16, 17, 63, 64, 65, 67, 69, 70, 89, 97, 100, 101, 127, 130, 132], "finish": [5, 10, 14], "interpret": [5, 33, 34, 35, 114], "invers": [5, 84, 85, 94, 120, 123, 126], "gamma": [5, 6, 10, 15, 16, 17, 19, 67, 69, 70, 71, 72, 77, 84, 85, 94, 97, 149], "50": [5, 7, 10, 11, 12, 13, 15], "train_d": 5, "1000": [5, 7, 12], "val_d": 5, "300": [5, 7], "from_dataset": 5, "val_dataset": 5, "test_dataset": [5, 12], "32": [5, 7, 8, 9, 10, 11, 12, 15, 33, 61, 63, 77, 78, 138, 149], "training_task": 5, "in_featur": [5, 11, 19, 64, 66, 69, 76, 78, 80, 82, 85, 86, 88, 127], "num_output": [5, 122, 123], "hidden_dim": [5, 19], "dist_famili": [5, 11, 18, 19, 96, 143, 144], "nig": 5, "after": [5, 6, 12, 13, 33, 34, 35, 71, 72, 132], "reg_weight": [5, 6, 91, 92, 93, 94], "output_dim": [5, 11, 19, 143, 144], "saniti": [5, 7], "check": [5, 7, 13, 14, 55, 56, 57, 58, 59, 60, 146, 147, 149], "772": [5, 7], "57it": [5, 7], "881": [5, 7], "90it": [5, 7], "loop": [5, 10, 130, 136], "fit_loop": 5, "310": [5, 7], "number": [5, 7, 8, 9, 13, 14, 15, 16, 17, 21, 23, 24, 27, 28, 33, 34, 35, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 100, 101, 103, 105, 108, 109, 112, 113, 114, 118, 122, 123, 127, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 149], "smaller": [5, 33, 34, 35, 138], "than": [5, 12, 127, 132, 135, 138], "interv": 5, "log_every_n_step": 5, "lower": [5, 7, 96, 99, 108, 109], "want": [5, 7, 8, 13, 50, 60, 127, 147], "see": [5, 7, 8, 9, 10, 12, 13, 14, 63, 67, 69, 99, 103, 104, 105, 108, 109, 112, 113, 114, 118, 119, 121, 122, 124, 125, 126, 137, 148], "epoch": [5, 6, 7, 10, 13, 128, 129, 131, 132], "234": [5, 7, 10], "41it": [5, 7], "222": [5, 7], "21it": [5, 7], "v_num": [5, 7], "train_loss": [5, 7], "370": [5, 7], "243": [5, 7], "31it": [5, 7], "236": [5, 7], "73it": [5, 7], "40": [5, 7, 12], "9": [5, 7, 8, 9, 10, 12, 13], "248": [5, 7], "64it": [5, 7], "244": [5, 7], "17it": [5, 7], "180": [5, 7], "251": [5, 7], "40it": [5, 7], "247": [5, 7], "95it": [5, 7, 12], "690": [5, 7], "253": [5, 7], "25it": [5, 7], "250": [5, 7], "44it": [5, 7], "460": [5, 7], "254": [5, 7], "42it": [5, 7], "252": [5, 7], "07it": [5, 7], "290": [5, 7], "22": [5, 7, 9, 10, 12], "255": [5, 7], "37it": [5, 7], "34it": [5, 7, 12], "700": [5, 7], "25": [5, 7, 10, 12, 13, 126], "39it": [5, 7, 12], "61it": [5, 7], "930": [5, 7], "28": [5, 7, 9, 10, 12], "01it": [5, 7, 12], "720": [5, 7, 33], "31": [5, 7, 12], "47it": [5, 7], "04it": [5, 7, 12], "260": [5, 7], "34": [5, 7, 10, 12, 13], "11": [5, 6, 7, 10, 11, 12, 16, 33, 61], "89it": [5, 7], "58it": [5, 7], "940": [5, 7], "38": [5, 7, 10, 12], "257": [5, 7], "23it": [5, 7], "02it": [5, 7, 12], "220": [5, 7], "41": [5, 7, 10], "13": [5, 7, 9, 10, 12, 16], "46it": [5, 7], "990": [5, 7], "44": [5, 6, 7, 9, 10, 12], "14": [5, 6, 7, 12, 63], "84it": [5, 7], "81it": [5, 7], "170": [5, 7], "47": [5, 7, 12], "15": [5, 7, 9, 10, 12, 15, 20, 142, 145], "258": [5, 7], "09it": [5, 7], "12it": [5, 7], "040": [5, 7], "15it": [5, 7], "24it": [5, 7, 12], "53": [5, 7, 9, 10, 12], "10it": [5, 7], "230": [5, 7], "56": [5, 7, 10, 12], "18": [5, 6, 7, 9, 12, 13, 15, 149], "29it": [5, 7], "48it": [5, 7], "59": [5, 7, 10, 12], "49it": [5, 7], "72it": [5, 7], "910": [5, 7], "62": [5, 7, 10, 12], "68it": [5, 7], "94it": [5, 7], "080": [5, 7], "66": [5, 7, 10, 12], "21": [5, 7, 12], "85it": [5, 7], "69": [5, 7, 12], "259": [5, 7], "00it": [5, 7, 12], "72": [5, 7], "13it": [5, 7], "75": [5, 7, 9, 10, 12, 13], "24": [5, 7, 10, 12], "580": [5, 7, 9, 12], "78": [5, 6, 7, 8, 10], "35it": [5, 7], "76it": [5, 7], "620": [5, 7], "81": [5, 7, 12], "26": [5, 7, 12], "84": [5, 6, 7, 10, 12, 149], "54it": [5, 7], "020": [5, 6, 7], "88": [5, 7, 12], "62it": [5, 7], "91": [5, 7, 10, 12], "70it": [5, 7], "19it": [5, 7], "860": [5, 7], "94": [5, 7, 10, 12], "78it": [5, 7], "770": [5, 7], "97": [5, 6, 7, 8, 10], "87it": [5, 7], "69it": [5, 7], "valid": [5, 7, 13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 113, 142, 143, 144, 145], "622": [5, 7], "554": [5, 7], "14it": [5, 7], "537": [5, 7], "526": [5, 7], "522": [5, 7], "60": [5, 7], "520": [5, 7], "70": [5, 7, 10], "518": [5, 7], "82it": [5, 7], "80": [5, 7, 10, 38, 115], "517": [5, 7], "93it": [5, 7], "90": [5, 6, 7], "519": [5, 7], "91it": [5, 7], "216": [5, 7], "08it": [5, 7, 12], "rmse": [5, 11, 123], "215": [5, 7], "239": [5, 7], "99it": [5, 7, 12], "227": [5, 7], "33it": [5, 7], "245": [5, 7], "238": [5, 7], "63it": [5, 7], "540": [5, 7], "32it": [5, 7], "660": [5, 7], "60it": [5, 7], "03it": [5, 7, 12], "010": [5, 7], "56it": [5, 7], "249": [5, 7], "120": [5, 7, 10, 149], "130": [5, 7], "45it": [5, 7], "880": [5, 7], "66it": [5, 7], "200": [5, 7, 139, 141], "28it": [5, 7], "160": [5, 7], "26it": [5, 7], "610": [5, 7, 10], "67it": [5, 7], "43it": [5, 7], "830": [5, 7], "75it": [5, 7], "850": [5, 7], "840": [5, 7], "800": [5, 7], "50it": [5, 7], "070": [5, 7], "53it": [5, 7], "530": [5, 7], "750": [5, 7], "52it": [5, 7], "80it": [5, 7], "570": [5, 7], "77it": [5, 7], "11it": [5, 7], "090": [5, 7], "740": [5, 7], "05it": [5, 7], "450": [5, 7], "110": [5, 7], "30it": [5, 7], "555": [5, 7], "538": [5, 7], "529": [5, 7], "516": [5, 7], "515": [5, 7], "514": [5, 7], "214": [5, 7], "213": [5, 7], "231": [5, 7], "420": [5, 7], "06it": [5, 7], "74it": [5, 7], "96it": [5, 7], "27it": [5, 7, 12], "16it": [5, 7], "79it": [5, 7], "71it": [5, 7], "920": [5, 7], "55it": [5, 7], "790": [5, 7], "960": [5, 7, 33], "410": [5, 7], "640": [5, 7, 33], "59it": [5, 7], "030": [5, 7], "950": [5, 7], "98it": [5, 7, 12], "430": [5, 7, 8], "51it": [5, 7], "470": [5, 7], "980": [5, 7], "607": [5, 7], "550": [5, 7], "535": [5, 7], "528": [5, 7], "524": [5, 7], "521": [5, 7], "513": [5, 7], "22it": [5, 7], "670": [5, 7], "92it": [5, 7, 12], "240": [5, 7], "88it": [5, 7], "140": [5, 7], "20it": [5, 7], "83it": [5, 7], "820": [5, 7], "18it": [5, 7], "65it": [5, 7], "525": [5, 7], "270": [5, 7], "242": [5, 7], "440": [5, 7], "890": [5, 7], "86it": [5, 7], "150": [5, 7], "760": [5, 7], "38it": [5, 7], "650": [5, 7], "060": [5, 7], "320": [5, 7], "710": [5, 7], "556": [5, 7], "246": [5, 7], "233": [5, 7], "97it": [5, 7], "590": [5, 7], "870": [5, 7], "810": [5, 7], "780": [5, 7], "900": [5, 7], "970": [5, 7], "050": [5, 7], "619": [5, 7], "36it": [5, 7], "546": [5, 7], "531": [5, 7], "512": [5, 7], "235": [5, 7], "730": [5, 7], "680": [5, 7], "340": [5, 7], "350": [5, 7], "549": [5, 7], "533": [5, 7], "232": [5, 7], "400": [5, 7, 9], "510": [5, 7], "280": [5, 6, 7], "621": [5, 7], "551": [5, 7], "558": [5, 7], "223": [5, 7], "557": [5, 7], "539": [5, 7], "523": [5, 7], "380": [5, 7], "627": [5, 7], "552": [5, 7], "330": [5, 7], "390": [5, 7], "609": [5, 7], "536": [5, 7], "241": [5, 7], "360": [5, 7], "561": [5, 7], "542": [5, 7], "532": [5, 7], "623": [5, 7], "624": [5, 7], "541": [5, 7], "500": [5, 7], "480": [5, 7], "559": [5, 7], "626": [5, 7], "490": [5, 7], "628": [5, 7, 10], "527": [5, 7], "511": [5, 7], "509": [5, 7], "508": [5, 7], "190": [5, 7], "505": [5, 7], "212": [5, 7], "211": [5, 7], "228": [5, 7], "226": [5, 7], "629": [5, 7], "553": [5, 7], "209": [5, 7], "208": [5, 7], "237": [5, 7], "225": [5, 7, 34, 35], "229": [5, 7, 34, 35], "210": [5, 7], "625": [5, 7], "218": [5, 7], "595": [5, 7], "506": [5, 7], "504": [5, 7], "35": [5, 7, 10, 12], "36": [5, 7, 10, 12], "507": [5, 7], "37": [5, 7, 10, 12], "39": [5, 7, 10, 12], "534": [5, 7], "42": [5, 6, 7, 12, 32, 60], "45": [5, 6, 7, 10, 12], "598": [5, 7], "46": [5, 7, 10], "615": [5, 7], "547": [5, 7], "48": [5, 7], "49": [5, 7, 10, 12], "206": [5, 7], "434": [5, 7], "mae": [5, 11], "09905": 5, "mse": [5, 11, 93, 123], "44942": 5, "73881": 5, "17725": 5, "reg": 5, "099048614501953": 5, "44941520690918": 5, "177249908447266": 5, "7388079166412354": 5, "plot": [5, 8, 12, 15, 16, 17, 62, 99, 100, 101, 104, 142, 143, 145], "case": [5, 7, 12, 13, 63, 148, 149], "reproduc": [5, 14, 149], "result": [5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 63, 64, 71, 72, 114, 142, 145, 149], "no_grad": [5, 6], "linspac": 5, "dist_param": 5, "unsqueez": 5, "dist": [5, 95, 118], "loc": [5, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "squeez": [5, 143, 144], "sqrt": [5, 63, 64, 125], "variance_loc": 5, "fig": [5, 12], "r": [5, 10, 97], "zorder": 5, "fill_between": 5, "linewidth": 5, "alpha": [5, 6, 7, 10, 13, 15, 16, 17, 19, 67, 68, 69, 70, 71, 72, 84, 85, 97, 142, 149], "edgecolor": 5, "none": [5, 6, 7, 10, 13, 15, 16, 17, 18, 19, 23, 24, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 112, 113, 114, 118, 128, 129, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149], "facecolor": 5, "blue": 5, "els": 5, "gca": 5, "set_ylim": 5, "set_xlim": 5, "legend": 5, "upper": 5, "left": [5, 63, 125], "grid": 5, "alexand": [5, 135, 150], "amini": [5, 94, 150], "wilko": [5, 150], "schwart": [5, 94, 150], "ava": [5, 150], "soleimani": [5, 94, 150], "daniela": [5, 150], "ru": [5, 94, 150], "neurip": [5, 6, 9, 93, 100, 101, 125, 132, 135, 137, 150], "2020": [5, 97, 150], "aim": [6, 11], "introductori": 6, "overview": [6, 11], "mlp": [6, 13, 19], "dirichlet": [6, 93], "minim": [6, 7, 12, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 150], "squar": [6, 7, 33, 34, 35, 63, 122, 123, 124, 125, 132], "error": [6, 7, 12, 14, 90, 99, 101, 102, 104, 107, 116, 120, 121, 122, 123, 124, 125, 127, 142, 145], "kl": [6, 96, 98], "diverg": [6, 96, 98, 114], "categor": [6, 148], "decloss": 6, "offici": [6, 63, 64], "step": [6, 10, 14, 93, 142, 143, 144, 145, 147], "schedul": [6, 7, 13, 128, 142, 143, 144, 145], "dict": [6, 15, 16, 17, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 132, 142, 143, 144, 145, 149], "005": 6, "exp_lr_schedul": 6, "lr_schedul": [6, 7, 13], "steplr": 6, "step_siz": 6, "sake": [6, 7], "in_channel": [6, 7, 8, 9, 12, 13, 15, 16, 17, 63, 65, 67, 73, 74, 75, 77, 79, 81, 83, 84, 87, 149], "23623": 6, "14211": 6, "inf": 6, "08953": 6, "09456": 6, "576": [6, 7], "502": [6, 7], "312": [6, 7], "08952589333057404": 6, "09456198662519455": 6, "8428000211715698": 6, "23623241484165192": 6, "025763114914298058": 6, "03501509875059128": 6, "7802000045776367": 6, "06312499940395355": 6, "14211073517799377": 6, "rotated_mnist": 6, "angl": 6, "confid": [6, 7, 91, 100, 108, 109, 111], "arg": [6, 132], "degre": [6, 87, 88], "rotated_imag": 6, "evid": [6, 96], "relu": [6, 7, 10, 11, 71, 72, 127, 149], "strength": 6, "sum": [6, 8, 89, 90, 91, 92, 93, 94, 95, 97, 103, 105, 108, 109, 112, 114, 118, 148], "keepdim": 6, "argmax": [6, 113], "65": [6, 7, 10, 12], "706": [6, 7], "944": [6, 7], "67": [6, 7, 12], "684": [6, 7], "89": [6, 7, 10], "03": [6, 7, 10, 12], "52": [6, 7, 12], "murat": [6, 150], "sensoi": [6, 93, 150], "lanc": [6, 150], "kaplan": [6, 93, 150], "melih": [6, 150], "kandemir": [6, 93, 150], "2018": [6, 93, 99, 128, 131, 138, 150], "adapt": [7, 102, 104], "lectur": 7, "helmholtz": 7, "ai": [7, 147], "confer": [7, 146], "haicon24": 7, "de": 7, "sebastian": 7, "stark": 7, "peter": 7, "steinbach": 7, "gianni": [7, 146, 150], "franchi": [7, 146, 150], "olivi": [7, 146, 150], "laurent": [7, 146, 149, 150], "work": [7, 113, 130, 148], "wa": [7, 62, 100, 101], "corinna": 7, "cort": 7, "christoph": 7, "burg": 7, "later": [7, 69, 99, 101, 107, 116, 146, 147], "modifi": [7, 10, 33, 34, 35], "yann": [7, 150], "foundat": 7, "consist": [7, 10, 44, 45, 52, 63, 64, 129], "handwritten": 7, "grayscal": 7, "28x28": 7, "size": [7, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 63, 64, 65, 67, 70, 77, 78, 79, 81, 83, 84, 87, 89, 99, 103, 105, 108, 109, 112, 114, 118, 119, 125, 130, 138, 142], "task": [7, 12, 13, 97, 102, 104, 135, 137, 142, 143, 144, 145, 146, 149], "respect": [7, 13, 71, 72], "accuraci": [7, 126, 150], "proport": [7, 117], "correctli": 7, "measur": [7, 100, 101, 102, 149, 150], "qualiti": [7, 32, 60, 99, 100, 101], "probabl": [7, 12, 15, 16, 17, 70, 100, 101, 103, 104, 105, 107, 108, 109, 112, 113, 114, 116, 118, 139, 140, 141, 142, 148, 150], "test": [7, 11, 12, 13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 50, 55, 56, 57, 58, 59, 60, 61, 131, 132, 142, 143, 144, 145, 149], "throughout": 7, "abstract": 7, "process": [7, 10, 12, 23, 24, 27, 28, 127, 128, 138, 139, 140, 141, 142, 146, 147], "similarli": 7, "kera": 7, "tensorflow": [7, 63, 64], "interfac": 7, "simplifi": [7, 63, 64], "partli": 7, "built": [7, 12, 148], "tool": [7, 13, 146], "quantif": [7, 10, 14, 77, 78, 146, 150], "preprocess": 7, "them": [7, 10, 13, 149], "purpos": [7, 13, 39, 70], "few": 7, "bit": 7, "what": [7, 9, 10, 13, 15, 16, 17], "some": [7, 9, 10, 11, 13], "low": [7, 90], "train_transform": [7, 33, 34, 35], "crop": [7, 27, 33, 34, 35], "augment": [7, 15, 16, 17, 23, 24, 27, 28, 33, 34, 36, 142, 146], "randomcrop": [7, 34, 35, 43, 44, 45, 50, 51, 52, 54], "pad": [7, 9, 63, 65, 67, 70, 73, 74, 75, 77, 79, 81, 83, 95, 118], "mnist1d": 7, "1307": 7, "3081": 7, "test_transform": [7, 33, 34, 35], "num_output_channel": 7, "subset": [7, 12, 41, 43, 50, 51, 54, 137], "fashionmnist": [7, 28], "train_data": 7, "test_data": 7, "take": [7, 13, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 148, 149], "10k": 7, "ood_data": 7, "indic": [7, 8, 11, 15, 16, 17, 70, 113, 142, 143, 144, 145], "train_dl": 7, "shuffl": [7, 10, 60], "test_dl": 7, "ood_dl": 7, "4m": [7, 10, 12], "16m": 7, "1mb": [7, 9, 10, 12], "0m": [7, 10, 12], "7m": [7, 10, 12], "92": [7, 10], "5mb": [7, 10, 12], "83": [7, 9, 10, 12], "3mb": [7, 10, 12], "5k": [7, 10, 12], "80mb": 7, "42m": 7, "61m": 7, "9mb": [7, 10, 12], "0mb": [7, 10, 12], "5": [7, 13, 21, 34, 35, 43, 54, 63, 64, 68, 71, 72, 90, 106, 127, 149], "15k": 7, "could": [7, 11, 12, 114], "replac": [7, 14, 138], "cell": 7, "simpli": 7, "viz_data": 7, "without": [7, 12], "unchang": 7, "ood_viz_data": 7, "0x79bc598db9a0": 7, "out": [7, 12, 13, 14, 23, 24, 27, 28, 52, 63, 64, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 135, 142, 143, 144, 149, 150], "0x79bbc41e6230": 7, "convolut": [7, 10, 15, 16, 17, 63, 65, 67, 77, 79, 81, 83, 84, 87, 150], "cnn": 7, "__init__": [7, 9, 10, 11, 13, 130, 149], "self": [7, 10, 11, 13, 33, 34, 35, 71, 72, 127, 142, 149], "super": [7, 10, 11, 149], "conv1": [7, 10, 149], "conv2d": [7, 10, 63, 65, 67, 74, 127, 134], "conv2": [7, 10, 149], "pool": [7, 10, 149], "adaptiveavgpool2d": 7, "fc1": [7, 10, 11, 149], "linear": [7, 10, 11, 64, 66, 69, 71, 72, 76, 78, 80, 82, 85, 86, 88, 127, 134], "fc2": [7, 10, 11, 149], "fc3": [7, 10, 149], "forward": [7, 9, 10, 11, 63, 64, 70, 71, 72, 91, 92, 95, 96, 98, 100, 101, 113, 120, 121, 122, 123, 124, 127, 128, 130, 132, 142, 143, 144, 145, 149], "tensor": [7, 10, 13, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 89, 91, 92, 95, 96, 97, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 130, 142, 143, 144, 145], "max_pool2d": 7, "flatten": [7, 10, 149], "No": [7, 142], "so": [7, 10, 13, 64, 67, 69], "channel": [7, 15, 16, 17, 63, 65, 66, 67, 69, 77, 79, 81, 83], "optim": [7, 8, 9, 13, 15, 16, 17, 70, 101, 137, 139, 140, 141, 142, 143, 144, 145, 149], "recip": [7, 8, 9, 15, 16, 17, 149], "descent": 7, "sgd": [7, 10, 13], "cosin": 7, "anneal": [7, 93], "lr_mult": 7, "cosineannealinglr": 7, "t_max": 7, "develop": [7, 147], "eas": [7, 13], "supervis": 7, "most": [7, 8, 9, 14, 100, 149], "often": [7, 69, 126], "cross": [7, 10, 12, 89], "With": [7, 63, 64, 149], "decai": 7, "amount": [7, 8, 117], "maximum": [7, 15, 16, 17, 39, 40, 106, 107, 132, 139, 140, 141, 142], "posteriori": 7, "map": [7, 125], "like": [7, 10, 13, 14, 33, 34, 35, 149], "input": [7, 10, 12, 15, 16, 17, 32, 33, 34, 35, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 99, 100, 101, 103, 105, 108, 109, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 134, 142, 143, 144, 145, 148], "routin": [7, 12, 13, 127, 142, 143, 144, 145, 146], "etc": [7, 14, 149], "avoid": [7, 8, 12, 14, 60, 91, 100, 114], "1875": 7, "142": 7, "154": 7, "152": [7, 15], "162": 7, "161": 7, "166": 7, "165": 7, "169": 7, "168": 7, "171": 7, "172": 7, "174": 7, "173": 7, "175": 7, "176": 7, "177": 7, "178": 7, "179": 7, "181": 7, "51": [7, 10], "54": [7, 10, 12], "55": 7, "57": [7, 12], "58": [7, 10, 12, 14], "09": [7, 12], "61": [7, 10], "63": [7, 10], "68": [7, 10], "71": [7, 12], "73": [7, 10], "74": [7, 10, 12], "76": [7, 9, 12], "77": [7, 10], "182": 7, "79": [7, 12], "82": [7, 10, 12], "85": [7, 9, 10], "86": [7, 10, 12], "87": [7, 10, 12], "93": [7, 12], "96": [7, 12], "98": [7, 9, 12], "99": [7, 10, 12], "101": [7, 15], "102": 7, "103": 7, "104": [7, 8], "105": 7, "106": 7, "107": 7, "108": 7, "109": 7, "111": 7, "112": 7, "113": 7, "114": [7, 8], "115": 7, "116": 7, "117": 7, "118": 7, "119": 7, "121": 7, "122": [7, 8], "123": 7, "124": 7, "125": 7, "126": 7, "127": 7, "129": 7, "131": 7, "132": 7, "133": 7, "134": 7, "135": 7, "136": 7, "137": 7, "138": 7, "141": 7, "143": 7, "144": 7, "145": 7, "146": [7, 12], "147": 7, "148": 7, "149": 7, "151": 7, "153": 7, "155": 7, "156": 7, "157": 7, "158": 7, "159": 7, "163": 7, "164": 7, "167": 7, "183": 7, "184": 7, "185": 7, "186": 7, "187": 7, "188": 7, "189": 7, "191": 7, "192": 7, "193": 7, "194": 7, "195": 7, "196": 7, "197": 7, "198": 7, "199": 7, "201": 7, "202": 7, "203": [7, 9], "204": 7, "205": 7, "207": 7, "217": 7, "221": 7, "08": [7, 10], "261": 7, "262": 7, "263": 7, "264": 7, "265": 7, "266": 7, "267": 7, "268": 7, "269": 7, "271": 7, "272": 7, "273": 7, "274": 7, "275": 7, "276": 7, "277": 7, "278": 7, "279": 7, "281": 7, "282": 7, "283": 7, "284": 7, "285": 7, "286": 7, "287": 7, "288": 7, "289": 7, "291": 7, "956": 7, "293": 7, "294": 7, "295": 7, "296": 7, "297": 7, "298": 7, "299": 7, "971": 7, "301": 7, "302": 7, "932": 7, "303": 7, "304": 7, "305": 7, "306": 7, "307": 7, "308": 7, "309": 7, "719": 7, "311": 7, "313": 7, "314": 7, "315": 7, "316": 7, "317": 7, "318": 7, "319": 7, "963": 7, "321": 7, "322": 7, "323": 7, "324": 7, "325": 7, "326": 7, "992": 7, "327": 7, "328": 7, "329": 7, "331": 7, "332": 7, "333": 7, "334": 7, "335": 7, "336": 7, "337": 7, "877": 7, "338": 7, "339": 7, "341": 7, "891": 7, "342": 7, "732": 7, "343": 7, "896": 7, "344": 7, "597": 7, "345": 7, "902": 7, "346": 7, "998": 7, "347": 7, "348": 7, "349": 7, "798": 7, "984": [7, 10], "351": 7, "923": 7, "352": 7, "353": 7, "354": 7, "355": 7, "895": 7, "866": 7, "357": 7, "358": 7, "948": 7, "359": 7, "851": 7, "361": 7, "656": 7, "362": 7, "686": 7, "363": 7, "364": 7, "883": 7, "366": 7, "367": 7, "02": [7, 9, 10, 12], "368": 7, "369": 7, "371": 7, "659": 7, "372": 7, "894": 7, "373": 7, "768": 7, "374": 7, "375": 7, "376": 7, "832": 7, "377": 7, "379": 7, "708": 7, "381": 7, "884": 7, "382": 7, "383": 7, "384": 7, "834": 7, "385": 7, "959": 7, "386": 7, "903": 7, "387": 7, "965": 7, "388": 7, "389": 7, "391": 7, "392": 7, "847": 7, "393": 7, "817": 7, "394": 7, "964": 7, "395": 7, "476": 7, "396": 7, "667": 7, "397": 7, "893": 7, "398": 7, "862": 7, "399": 7, "943": 7, "401": 7, "889": 7, "402": 7, "748": 7, "403": 7, "603": 7, "404": 7, "405": 7, "717": 7, "406": [7, 34, 35], "407": 7, "408": 7, "409": 7, "824": 7, "858": 7, "411": 7, "412": 7, "661": 7, "413": 7, "885": 7, "414": 7, "415": 7, "682": 7, "416": 7, "886": 7, "417": 7, "418": 7, "477": 7, "419": 7, "421": 7, "422": 7, "423": 7, "424": 7, "482": 7, "426": 7, "427": 7, "428": 7, "602": 7, "912": 7, "431": 7, "432": 7, "433": 7, "933": 7, "435": 7, "905": 7, "436": 7, "437": 7, "438": 7, "439": 7, "648": 7, "749": 7, "441": 7, "608": 7, "442": 7, "443": 7, "969": 7, "444": 7, "651": 7, "445": 7, "731": 7, "446": 7, "447": 7, "715": 7, "448": 7, "449": 7, "652": 7, "451": 7, "567": 7, "452": 7, "837": 7, "453": 7, "786": 7, "454": 7, "954": 7, "455": 7, "594": 7, "456": [7, 34, 35], "457": 7, "722": 7, "458": 7, "459": 7, "872": 7, "958": 7, "461": 7, "926": 7, "462": 7, "763": 7, "463": 7, "464": 7, "857": 7, "465": 7, "787": 7, "466": 7, "664": 7, "467": 7, "864": 7, "468": 7, "469": 7, "734": 7, "471": 7, "472": 7, "774": 7, "473": 7, "474": 7, "475": 7, "635": 7, "478": 7, "479": 7, "481": 7, "724": 7, "483": 7, "573": 7, "484": 7, "562": 7, "485": [7, 34, 35], "486": 7, "487": 7, "728": 7, "488": 7, "489": 7, "543": 7, "491": 7, "631": 7, "492": 7, "493": 7, "494": 7, "495": 7, "496": 7, "914": 7, "497": 7, "865": 7, "498": 7, "499": 7, "596": 7, "501": 7, "976": 7, "503": 7, "592": 7, "861": 7, "744": 7, "899": 7, "599": 7, "571": 7, "929": 7, "848": 7, "712": 7, "695": 7, "568": 7, "759": 7, "544": 7, "922": 7, "545": 7, "548": 7, "673": [7, 10], "639": 7, "586": 7, "563": 7, "564": 7, "565": 7, "647": 7, "566": 7, "822": 7, "569": 7, "856": 7, "572": 7, "815": 7, "727": 7, "574": 7, "575": 7, "588": 7, "781": 7, "577": 7, "578": 7, "946": 7, "579": 7, "689": 7, "581": 7, "582": 7, "583": 7, "584": 7, "585": 7, "587": 7, "06": [7, 10, 12, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 132], "589": 7, "591": [7, 9], "593": [7, 10], "697": 7, "788": 7, "601": 7, "913": 7, "604": 7, "605": 7, "606": 7, "611": 7, "612": 7, "613": 7, "614": 7, "616": 7, "617": 7, "618": 7, "778": 7, "632": 7, "633": 7, "634": 7, "636": 7, "637": 7, "638": 7, "641": 7, "782": 7, "642": 7, "643": 7, "644": 7, "645": 7, "646": 7, "649": 7, "665": 7, "892": 7, "653": 7, "776": 7, "654": 7, "655": 7, "753": 7, "657": 7, "658": [7, 10], "662": 7, "663": 7, "938": 7, "666": 7, "668": 7, "669": 7, "671": 7, "672": 7, "674": 7, "675": 7, "676": 7, "677": 7, "678": 7, "679": 7, "681": 7, "0805": 7, "683": 7, "685": 7, "687": 7, "688": 7, "691": 7, "692": 7, "693": 7, "694": 7, "696": 7, "698": 7, "699": 7, "718": 7, "701": 7, "702": 7, "703": 7, "704": 7, "705": [7, 10], "707": 7, "709": 7, "711": 7, "713": 7, "714": 7, "716": 7, "721": 7, "723": 7, "725": 7, "826": 7, "726": 7, "729": 7, "733": 7, "735": 7, "736": 7, "737": 7, "04": [7, 10, 12], "738": 7, "739": 7, "802": 7, "741": 7, "742": 7, "743": 7, "745": 7, "746": 7, "747": [7, 10], "751": 7, "0856": 7, "754": 7, "755": 7, "811": 7, "756": 7, "757": 7, "758": 7, "761": 7, "803": 7, "762": 7, "764": 7, "765": 7, "766": 7, "767": 7, "769": 7, "771": 7, "773": 7, "775": 7, "777": 7, "779": 7, "783": 7, "784": 7, "785": 7, "789": 7, "791": 7, "792": 7, "793": 7, "794": 7, "795": 7, "796": 7, "797": 7, "799": 7, "801": 7, "804": 7, "805": 7, "806": 7, "807": 7, "808": 7, "812": 7, "813": 7, "814": 7, "816": 7, "818": 7, "819": 7, "821": 7, "823": 7, "825": 7, "827": 7, "828": 7, "829": 7, "831": 7, "833": 7, "835": 7, "836": 7, "838": 7, "839": 7, "841": 7, "842": 7, "843": [7, 10], "844": 7, "845": 7, "083": 7, "846": 7, "849": 7, "852": 7, "853": 7, "854": 7, "855": 7, "859": 7, "863": 7, "867": 7, "868": 7, "869": 7, "871": 7, "873": 7, "874": 7, "875": 7, "876": 7, "878": 7, "879": 7, "882": 7, "887": 7, "888": 7, "897": 7, "898": 7, "901": 7, "904": [7, 10], "906": 7, "907": 7, "908": 7, "909": 7, "915": 7, "916": 7, "917": 7, "918": 7, "919": 7, "921": 7, "924": 7, "925": 7, "927": 7, "928": 7, "931": 7, "0795": 7, "0899": 7, "934": 7, "935": 7, "936": 7, "937": 7, "939": 7, "941": 7, "942": 7, "945": 7, "947": 7, "951": 7, "952": 7, "953": 7, "955": 7, "957": 7, "961": 7, "962": 7, "966": 7, "967": 7, "968": 7, "972": 7, "973": 7, "974": 7, "975": 7, "977": 7, "978": 7, "979": 7, "981": 7, "982": 7, "983": 7, "985": 7, "986": 7, "987": 7, "988": 7, "989": 7, "991": 7, "993": 7, "994": 7, "995": 7, "996": 7, "997": 7, "999": 7, "1001": 7, "1002": 7, "1003": 7, "1004": 7, "1005": 7, "1006": 7, "1007": 7, "1008": 7, "1009": 7, "1010": 7, "1011": 7, "1012": 7, "1013": 7, "1014": 7, "1015": 7, "1016": 7, "1017": 7, "1018": 7, "1019": 7, "1020": 7, "1021": 7, "1022": 7, "1023": 7, "1024": [7, 34, 35], "1025": 7, "1026": 7, "1027": 7, "1028": 7, "1029": 7, "1030": 7, "1031": 7, "1032": 7, "1033": 7, "1034": 7, "1035": 7, "1036": 7, "1037": 7, "1038": 7, "1039": 7, "1040": 7, "1041": 7, "1042": 7, "1043": 7, "1044": 7, "0714": 7, "1045": 7, "1046": 7, "1047": 7, "1048": 7, "1049": 7, "1050": 7, "1051": 7, "1052": 7, "1053": 7, "1054": 7, "1055": 7, "1056": 7, "1057": 7, "1058": 7, "1059": 7, "1060": 7, "1061": 7, "1062": 7, "1063": 7, "1064": 7, "1065": 7, "1066": 7, "1067": 7, "1068": 7, "1069": 7, "1070": 7, "1071": 7, "1072": 7, "1073": 7, "1074": 7, "1075": 7, "1076": 7, "1077": 7, "1078": 7, "1079": 7, "1080": 7, "1081": 7, "1082": 7, "1083": 7, "1084": 7, "1085": 7, "1086": 7, "1087": 7, "1088": 7, "1089": 7, "1090": 7, "1091": 7, "1092": 7, "1093": 7, "1094": 7, "1095": 7, "1096": 7, "1097": 7, "0851": 7, "1098": 7, "1099": 7, "1100": 7, "1101": 7, "1102": 7, "1103": 7, "1104": 7, "1105": 7, "1106": 7, "1107": 7, "1108": 7, "1109": 7, "1110": 7, "1111": 7, "1112": 7, "1113": 7, "1114": 7, "1115": 7, "1116": 7, "1117": 7, "1118": 7, "1119": 7, "1120": 7, "1121": 7, "1122": 7, "1123": 7, "1124": 7, "1125": 7, "1126": 7, "1127": 7, "1128": 7, "1129": 7, "1130": 7, "1131": 7, "1132": 7, "1133": 7, "1134": 7, "1135": 7, "1136": 7, "1137": 7, "1138": 7, "1139": 7, "1140": 7, "1141": 7, "1142": 7, "1143": 7, "1144": 7, "1145": 7, "1146": 7, "1147": 7, "1148": 7, "1149": 7, "1150": 7, "1151": 7, "1152": 7, "1153": 7, "1154": 7, "1155": 7, "1156": 7, "1157": 7, "1158": 7, "1159": 7, "1160": 7, "1161": 7, "1162": 7, "1163": 7, "1164": 7, "1165": 7, "1166": 7, "0621": 7, "1167": 7, "1168": 7, "1169": 7, "1170": 7, "1171": 7, "1172": 7, "1173": 7, "1174": 7, "1175": 7, "1176": 7, "1177": 7, "0949": 7, "1178": 7, "1179": 7, "1180": 7, "1181": 7, "1182": 7, "1183": 7, "1184": 7, "1185": 7, "1186": 7, "1187": 7, "1188": 7, "1189": 7, "1190": 7, "1191": 7, "1192": 7, "1193": 7, "1194": 7, "1195": 7, "1196": 7, "1197": 7, "1198": 7, "1199": 7, "1200": 7, "1201": 7, "1202": 7, "1203": 7, "1204": 7, "1205": 7, "0942": 7, "1206": 7, "1207": 7, "1208": 7, "1209": 7, "1210": 7, "1211": 7, "0912": 7, "1212": 7, "1213": 7, "1214": 7, "0581": 7, "1215": 7, "1216": 7, "0259": 7, "1217": 7, "1218": 7, "1219": 7, "1220": 7, "1221": 7, "1222": 7, "1223": 7, "1224": 7, "1225": 7, "0642": 7, "1226": 7, "1227": 7, "1228": 7, "1229": 7, "1230": 7, "1231": 7, "1232": 7, "1233": 7, "1234": 7, "1235": 7, "1236": 7, "1237": 7, "1238": 7, "1239": 7, "1240": 7, "1241": 7, "1242": 7, "1243": 7, "1244": 7, "1245": 7, "1246": 7, "1247": 7, "1248": 7, "1249": 7, "1250": 7, "1251": 7, "1252": 7, "1253": 7, "1254": 7, "1255": 7, "1256": 7, "1257": 7, "1258": 7, "1259": 7, "1260": 7, "1261": 7, "1262": 7, "1263": 7, "1264": 7, "1265": 7, "1266": 7, "1267": 7, "044": 7, "1268": 7, "1269": 7, "1270": 7, "1271": 7, "1272": 7, "1273": 7, "1274": 7, "1275": 7, "1276": 7, "1277": 7, "1278": 7, "1279": 7, "1280": 7, "1281": 7, "1282": 7, "1283": 7, "1284": 7, "1285": 7, "1286": 7, "1287": 7, "1288": 7, "1289": 7, "1290": 7, "0804": 7, "1291": 7, "0982": 7, "1292": 7, "0989": 7, "1293": 7, "0925": 7, "1294": 7, "1295": 7, "0873": 7, "1296": 7, "1297": 7, "1298": 7, "1299": 7, "1300": 7, "1301": 7, "1302": 7, "1303": 7, "1304": 7, "1305": 7, "1306": 7, "1308": 7, "1309": 7, "1310": 7, "1311": 7, "1312": 7, "1313": 7, "1314": 7, "1315": 7, "1316": 7, "1317": 7, "1318": 7, "1319": 7, "1320": 7, "1321": 7, "1322": 7, "1323": 7, "1324": 7, "1325": 7, "1326": 7, "1327": 7, "0743": 7, "1328": 7, "1329": 7, "1330": 7, "1331": 7, "1332": 7, "1333": 7, "1334": 7, "1335": 7, "1336": 7, "1337": 7, "1338": 7, "1339": 7, "1340": 7, "1341": 7, "1342": 7, "1343": 7, "0342": 7, "1344": 7, "1345": 7, "1346": 7, "1347": 7, "1348": 7, "0919": 7, "1349": 7, "1350": 7, "1351": 7, "1352": 7, "1353": 7, "1354": 7, "1355": 7, "1356": 7, "1357": 7, "1358": 7, "1359": 7, "1360": 7, "1361": 7, "1362": 7, "1363": 7, "1364": 7, "1365": 7, "088": [7, 8], "1366": 7, "0736": 7, "1367": 7, "1368": 7, "1369": 7, "0806": 7, "1370": 7, "1371": 7, "1372": 7, "1373": 7, "1374": 7, "1375": 7, "1376": 7, "1377": 7, "1378": 7, "1379": 7, "0869": 7, "1380": 7, "1381": 7, "1382": 7, "1383": 7, "0456": 7, "1384": 7, "1385": 7, "1386": 7, "1387": 7, "0528": 7, "1388": 7, "1389": 7, "1390": 7, "0606": 7, "1391": 7, "1392": 7, "0565": 7, "1393": 7, "1394": 7, "1395": 7, "1396": 7, "1397": 7, "0882": 7, "1398": 7, "1399": 7, "1400": 7, "1401": 7, "1402": 7, "1403": 7, "1404": 7, "1405": 7, "1406": 7, "1407": 7, "1408": 7, "1409": 7, "1410": 7, "0418": 7, "1411": 7, "1412": 7, "1413": 7, "0988": 7, "1414": 7, "1415": 7, "1416": 7, "0769": 7, "1417": 7, "1418": 7, "1419": 7, "1420": 7, "1421": 7, "0232": 7, "1422": 7, "1423": 7, "1424": 7, "1425": 7, "1426": 7, "1427": 7, "1428": 7, "1429": 7, "1430": 7, "1431": 7, "1432": 7, "1433": 7, "1434": 7, "0959": 7, "1435": 7, "1436": 7, "1437": 7, "1438": 7, "1439": 7, "1440": 7, "1441": 7, "1442": 7, "1443": 7, "1444": 7, "1445": 7, "1446": 7, "1447": 7, "1448": 7, "1449": 7, "1450": 7, "1451": 7, "1452": 7, "1453": 7, "1454": 7, "1455": 7, "1456": 7, "1457": 7, "1458": 7, "1459": 7, "1460": 7, "1461": 7, "1462": 7, "1463": 7, "1464": 7, "1465": 7, "1466": 7, "1467": 7, "0576": 7, "1468": 7, "0595": 7, "1469": 7, "1470": 7, "1471": 7, "1472": 7, "1473": 7, "1474": 7, "1475": 7, "0499": 7, "1476": 7, "1477": 7, "1478": 7, "1479": 7, "1480": 7, "073": 7, "1481": 7, "1482": 7, "1483": 7, "1484": 7, "1485": 7, "1486": 7, "1487": 7, "1488": 7, "1489": 7, "0727": 7, "1490": 7, "1491": 7, "1492": 7, "1493": 7, "1494": 7, "1495": 7, "1496": 7, "1497": 7, "0617": 7, "1498": 7, "1499": 7, "1500": 7, "1501": 7, "0999": 7, "1502": 7, "1503": 7, "0781": 7, "1504": 7, "1505": 7, "1506": 7, "1507": 7, "1508": 7, "1509": 7, "0778": 7, "1510": 7, "1511": 7, "1512": 7, "1513": 7, "1514": 7, "1515": 7, "1516": 7, "1517": 7, "1518": 7, "1519": 7, "1520": 7, "1521": 7, "1522": 7, "1523": 7, "1524": 7, "0688": 7, "1525": 7, "1526": 7, "1527": 7, "0508": 7, "1528": 7, "0433": 7, "1529": 7, "1530": 7, "1531": 7, "1532": 7, "1533": 7, "1534": 7, "1535": 7, "065": 7, "1536": 7, "1537": 7, "1538": 7, "1539": 7, "1540": 7, "0755": 7, "1541": 7, "1542": 7, "1543": 7, "1544": 7, "1545": 7, "1546": 7, "1547": 7, "1548": 7, "1549": 7, "1550": 7, "0897": 7, "1551": 7, "1552": 7, "1553": 7, "1554": 7, "1555": 7, "1556": 7, "1557": 7, "1558": 7, "0793": 7, "1559": 7, "1560": 7, "1561": 7, "1562": 7, "1563": 7, "1564": 7, "1565": 7, "1566": 7, "1567": 7, "1568": 7, "1569": 7, "1570": 7, "1571": 7, "1572": 7, "1573": 7, "1574": 7, "1575": 7, "1576": 7, "1577": 7, "1578": 7, "1579": 7, "1580": 7, "1581": 7, "1582": 7, "1583": 7, "1584": 7, "1585": 7, "1586": 7, "1587": 7, "1588": 7, "1589": 7, "1590": 7, "0995": 7, "1591": 7, "1592": 7, "1593": 7, "1594": 7, "1595": 7, "1596": 7, "1597": 7, "1598": 7, "1599": 7, "042": 7, "1600": 7, "1601": 7, "1602": 7, "1603": 7, "1604": 7, "1605": 7, "1606": 7, "1607": 7, "1608": 7, "1609": 7, "0605": 7, "1610": 7, "1611": 7, "0907": 7, "1612": 7, "1613": 7, "1614": 7, "1615": 7, "1616": 7, "1617": 7, "1618": 7, "1619": 7, "1620": 7, "1621": 7, "1622": 7, "0443": 7, "1623": 7, "1624": 7, "1625": 7, "1626": 7, "1627": 7, "1628": 7, "1629": 7, "1630": 7, "1631": 7, "1632": 7, "1633": 7, "0737": 7, "1634": 7, "1635": 7, "1636": 7, "0372": 7, "1637": 7, "0774": 7, "1638": 7, "1639": 7, "0885": 7, "1640": 7, "0196": 7, "1641": 7, "1642": 7, "0601": 7, "1643": 7, "0514": 7, "1644": 7, "1645": 7, "1646": 7, "0436": 7, "1647": 7, "1648": 7, "1649": 7, "1650": 7, "1651": 7, "0862": 7, "1652": 7, "1653": 7, "1654": 7, "0894": 7, "1655": 7, "1656": 7, "1657": 7, "1658": 7, "1659": 7, "0441": 7, "1660": 7, "1661": 7, "1662": 7, "1663": 7, "1664": 7, "1665": 7, "0631": 7, "1666": 7, "1667": 7, "1668": 7, "1669": 7, "1670": 7, "1671": 7, "1672": 7, "1673": 7, "1674": 7, "1675": 7, "0977": 7, "1676": 7, "1677": 7, "1678": 7, "1679": 7, "1680": 7, "1681": 7, "0704": 7, "1682": 7, "1683": 7, "1684": 7, "1685": 7, "1686": 7, "1687": 7, "1688": 7, "1689": 7, "1690": 7, "1691": 7, "1692": 7, "0971": 7, "1693": 7, "1694": 7, "1695": 7, "1696": 7, "0777": 7, "1697": 7, "0947": 7, "1698": 7, "0525": 7, "1699": 7, "1700": 7, "0847": 7, "1701": [7, 91], "1702": 7, "1703": 7, "1704": 7, "0906": 7, "1705": 7, "0883": 7, "1706": 7, "1707": 7, "1708": 7, "1709": 7, "1710": 7, "1711": 7, "1712": 7, "1713": 7, "1714": 7, "1715": 7, "1716": 7, "1717": 7, "1718": 7, "1719": 7, "1720": 7, "1721": 7, "1722": 7, "1723": 7, "1724": 7, "1725": 7, "1726": 7, "1727": 7, "1728": 7, "1729": 7, "1730": 7, "1731": 7, "1732": 7, "1733": 7, "1734": 7, "0828": 7, "1735": 7, "1736": 7, "1737": 7, "1738": 7, "1739": 7, "1740": 7, "1741": 7, "1742": 7, "0934": 7, "1743": 7, "1744": 7, "1745": 7, "1746": 7, "1747": 7, "1748": 7, "1749": 7, "1750": 7, "1751": 7, "0708": 7, "1752": 7, "1753": 7, "1754": 7, "1755": 7, "1756": 7, "0363": 7, "1757": 7, "0819": 7, "1758": 7, "0965": 7, "1759": 7, "1760": 7, "1761": 7, "1762": 7, "1763": 7, "1764": 7, "0733": 7, "1765": 7, "1766": 7, "1767": 7, "1768": 7, "1769": 7, "1770": 7, "1771": 7, "1772": 7, "1773": 7, "0784": 7, "1774": 7, "1775": 7, "1776": 7, "1777": 7, "1778": 7, "1779": 7, "1780": 7, "0938": 7, "1781": 7, "1782": 7, "1783": 7, "1784": 7, "1785": 7, "0732": 7, "1786": 7, "0515": 7, "1787": 7, "1788": 7, "1789": 7, "1790": 7, "1791": 7, "1792": 7, "1793": 7, "1794": 7, "1795": 7, "029": 7, "1796": 7, "1797": 7, "0449": 7, "1798": 7, "1799": 7, "1800": 7, "1801": 7, "1802": 7, "1803": 7, "1804": 7, "1805": 7, "1806": [7, 93], "1807": 7, "1808": 7, "1809": 7, "1810": 7, "1811": 7, "1812": 7, "1813": 7, "1814": 7, "1815": 7, "1816": 7, "1817": 7, "1818": 7, "1819": 7, "1820": 7, "1821": 7, "1822": 7, "1823": 7, "1824": 7, "1825": 7, "1826": 7, "1827": 7, "1828": 7, "1829": 7, "0289": 7, "1830": 7, "0785": 7, "1831": 7, "1832": 7, "1833": 7, "1834": 7, "1835": 7, "1836": 7, "1837": 7, "1838": 7, "1839": 7, "1840": 7, "1841": 7, "1842": 7, "1843": 7, "1844": 7, "1845": 7, "1846": 7, "1847": 7, "1848": 7, "1849": 7, "1850": 7, "0383": 7, "1851": 7, "1852": 7, "1853": 7, "1854": 7, "1855": 7, "0709": 7, "1856": 7, "1857": 7, "1858": 7, "1859": 7, "1860": 7, "1861": 7, "1862": 7, "1863": 7, "1864": 7, "1865": 7, "1866": 7, "1867": 7, "0837": 7, "1868": 7, "1869": 7, "1870": 7, "0932": 7, "1871": 7, "1872": 7, "1873": 7, "048": 7, "1874": 7, "0504": 7, "061": 7, "0865": 7, "0848": 7, "0944": 7, "0453": 7, "066": 7, "0236": 7, "0577": 7, "0782": 7, "0168": 7, "0997": 7, "0496": 7, "0892": 7, "0531": 7, "0872": 7, "0423": 7, "0694": 7, "0877": 7, "0964": 7, "0283": 7, "0603": 7, "098": 7, "0887": 7, "0909": 7, "0552": 7, "045": 7, "0326": 7, "0268": 7, "0304": 7, "0536": 7, "0985": 7, "0551": 7, "089": 7, "0646": 7, "0859": 7, "0792": 7, "0754": 7, "0537": 7, "0534": 7, "0282": 7, "0729": 7, "0591": 7, "0842": 7, "0336": 7, "0524": 7, "0223": 7, "0455": 7, "0717": 7, "0746": 7, "0592": 7, "093": [7, 10], "0256": 7, "0532": 7, "0234": 7, "0761": 7, "0978": 7, "0547": 7, "0417": 7, "0685": 7, "0429": 7, "0682": 7, "0657": 7, "0648": 7, "0376": 7, "0713": 7, "0582": 7, "0409": 7, "0972": 7, "0689": 7, "0852": 7, "0672": 7, "0181": 7, "0106": 7, "0968": 7, "0428": 7, "0748": 7, "0623": 7, "0939": 7, "0831": 7, "0432": 7, "0643": 7, "0208": 7, "0219": 7, "0868": 7, "0549": 7, "058": 7, "0377": 7, "0712": 7, "0561": 7, "0519": 7, "0941": 7, "0248": 7, "0596": 7, "038": 7, "0813": 7, "0154": 7, "0272": 7, "0521": 7, "0572": 7, "0529": 7, "071": 7, "0127": 7, "0235": 7, "0783": 7, "0546": 7, "0619": 7, "0381": 7, "0779": 7, "0401": 7, "00769": 7, "0861": 7, "094": 7, "0318": 7, "0585": 7, "0976": 7, "0822": 7, "0758": 7, "0878": 7, "0364": 7, "0339": 7, "0618": 7, "0356": 7, "0905": 7, "0476": 7, "0639": 7, "0285": 7, "0588": 7, "0655": 7, "0967": 7, "0344": 7, "0917": 7, "0915": 7, "097": 7, "0158": 7, "0224": 7, "0133": 7, "0739": 7, "00599": 7, "0444": 7, "092": 7, "0408": 7, "0587": 7, "0841": 7, "0217": 7, "0397": 7, "057": 7, "0757": 7, "0833": 7, "0973": 7, "037": 7, "076": 7, "00843": 7, "0245": 7, "0966": 7, "0898": 7, "0788": 7, "075": 7, "0767": 7, "041": 7, "0958": 7, "0361": 7, "0414": 7, "091": 7, "0695": 7, "0616": 7, "047": 7, "0107": 7, "0711": 7, "0535": 7, "0625": 7, "0628": 7, "0413": 7, "0243": 7, "0818": 7, "0864": 7, "018": 7, "0611": 7, "0462": 7, "0911": 7, "0477": 7, "0786": 7, "0594": 7, "0647": 7, "0948": 7, "0405": 7, "0986": 7, "0762": 7, "087": 7, "0287": 7, "0334": 7, "0389": 7, "0651": 7, "0239": 7, "0635": 7, "0836": 7, "0412": 7, "052": 7, "0533": 7, "0579": 7, "0636": 7, "0645": 7, "0866": 7, "0626": 7, "0442": 7, "0362": 7, "014": 7, "0946": 7, "0875": 7, "0269": 7, "039": 7, "0512": 7, "0501": 7, "0497": 7, "0137": 7, "0183": 7, "0555": 7, "0764": 7, "0801": 7, "0415": 7, "0665": 7, "0469": 7, "0129": 7, "0213": 7, "0874": 7, "0662": 7, "0151": 7, "0575": 7, "0903": 7, "0403": 7, "0881": 7, "0338": 7, "0863": 7, "0302": 7, "0807": 7, "0923": 7, "0489": 7, "026": 7, "0352": 7, "0309": 7, "0876": 7, "0203": 7, "0503": 7, "0716": 7, "0677": 7, "0609": 7, "0359": 7, "0745": 7, "0992": 7, "0891": 7, "099": 7, "0404": 7, "079": 7, "0311": 7, "0199": 7, "0987": 7, "0447": 7, "0305": 7, "0323": 7, "0627": 7, "0526": 7, "0279": 7, "0613": 7, "084": 7, "0722": 7, "0926": 7, "0673": 7, "0371": 7, "0922": 7, "0242": 7, "0411": 7, "0544": 7, "0896": 7, "0407": 7, "0775": 7, "032": 7, "0368": 7, "0996": 7, "053": 7, "0723": 7, "00857": 7, "0317": 7, "0683": 7, "0488": 7, "068": 7, "0933": 7, "0567": 7, "0119": 7, "069": 7, "0422": 7, "0826": 7, "0557": 7, "00294": 7, "0843": 7, "035": 7, "0734": 7, "0608": 7, "0984": 7, "0369": 7, "0142": 7, "059": 7, "0273": 7, "0448": 7, "0117": 7, "0233": 7, "0399": 7, "036": 7, "034": 7, "0241": 7, "072": 7, "0479": 7, "0816": 7, "0929": 7, "0387": 7, "0255": 7, "077": 7, "0169": 7, "00615": 7, "0249": 7, "0518": 7, "0375": 7, "0202": 7, "0718": 7, "0963": 7, "0812": 7, "0505": 7, "0857": 7, "0924": 7, "064": 7, "0586": 7, "0487": 7, "0953": 7, "0543": 7, "0143": 7, "0563": 7, "0246": 7, "0237": 7, "0669": 7, "0349": 7, "0957": 7, "0998": 7, "0548": 7, "0165": 7, "0294": 7, "0175": 7, "0834": 7, "0335": 7, "0629": 7, "0542": 7, "0844": 7, "0331": 7, "0301": 7, "0719": 7, "0115": 7, "0659": 7, "0889": 7, "0086": 7, "0146": 7, "0228": 7, "0451": 7, "0558": 7, "0464": 7, "0173": 7, "0162": 7, "0684": 7, "0668": 7, "0145": 7, "0893": 7, "0212": 7, "0105": 7, "0979": 7, "0578": 7, "0983": 7, "0624": 7, "0918": 7, "0789": 7, "0355": 7, "0353": 7, "0174": 7, "0262": 7, "0178": 7, "024": 7, "0763": 7, "0796": 7, "0599": 7, "0693": 7, "0306": 7, "0446": 7, "0569": 7, "0332": 7, "0147": 7, "0523": 7, "0315": 7, "0644": 7, "0756": 7, "0358": 7, "0047": 7, "0562": 7, "0396": 7, "0633": 7, "0731": 7, "0522": 7, "0391": 7, "0697": 7, "0251": 7, "0502": 7, "0209": 7, "0264": 7, "0962": 7, "0902": 7, "0465": 7, "0517": 7, "0814": 7, "00923": 7, "0445": 7, "0204": 7, "0527": 7, "0945": 7, "0198": 7, "0593": 7, "0471": 7, "0271": 7, "0421": 7, "00908": 7, "0247": 7, "00846": 7, "016": 7, "055": 7, "0257": 7, "0498": 7, "0435": 7, "0144": 7, "0506": 7, "0799": 7, "0849": 7, "0118": 7, "0244": 7, "0292": 7, "0706": 7, "0308": 7, "0913": 7, "0253": 7, "004": 7, "0424": 7, "0125": 7, "0395": 7, "0201": 7, "pai": 7, "attent": [7, 70, 71, 72], "perf": [7, 8], "03512": 7, "08591": 7, "07399": 7, "00454": 7, "00425": 7, "aupr": 7, "auroc": 7, "86333": 7, "fpr95": 7, "tabl": [7, 9], "lot": 7, "binari": [7, 22, 25, 26, 29, 30, 55, 56, 57, 58, 59, 70, 89, 112, 142], "v": 7, "higher": [7, 99, 108, 109, 114], "better": [7, 12, 13, 131, 149, 150], "reliabl": [7, 12], "expect": [7, 8, 12, 15, 16, 17, 71, 72], "precis": [7, 63, 137], "version": [7, 13, 15, 16, 17, 18, 19, 20, 21, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 104, 147], "ratio": [7, 15, 16, 17, 117, 126, 142], "talk": 7, "about": [7, 13], "section": [7, 11, 149, 150], "two": 7, "option": [7, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 108, 109, 113, 114, 118, 127, 128, 130, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "either": [7, 13, 15, 16, 17, 50, 130, 147, 149], "directli": [7, 12, 13, 70, 147, 149], "enough": 7, "memori": [7, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 71, 130, 136, 145], "otherwis": [7, 12, 55, 56, 57, 58, 59, 60, 70, 71, 72, 87, 88, 128, 130, 131, 132, 136], "independ": [7, 150], "sometim": [7, 8], "call": [7, 8, 9, 12, 13, 63, 64, 132, 148], "sequenti": [7, 127], "choic": [7, 149], "between": [7, 9, 43, 54, 63, 64, 65, 67, 90, 100, 101, 117, 131, 132], "multipl": [7, 9, 10, 106, 107, 132, 146, 150], "gpu": [7, 12, 13, 22, 25, 26, 29, 30, 32, 146, 147, 149], "pre": [7, 12, 14, 147], "deep_ensembl": 7, "replic": [7, 67, 77, 127], "chang": [7, 14, 67, 69], "initi": [7, 12, 33, 34, 35, 63, 64, 68, 76, 104, 127, 130, 132, 139, 140, 141, 149], "your": [7, 13, 14, 63, 64, 147], "ensur": [7, 13, 14, 63, 64, 127, 142, 149], "repeattarget": [7, 127, 142], "reset_model_paramet": [7, 135], "ens_routin": 7, "format_batch_fn": [7, 127, 142, 143, 144, 145, 149], "how": [7, 10, 12, 13, 22, 25, 26, 29, 30, 32, 99, 103, 105, 108, 109, 114, 118, 137, 149], "target": [7, 12, 39, 40, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 70, 91, 92, 95, 96, 100, 101, 103, 105, 107, 108, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145], "compar": [7, 11, 126], "scheme": 7, "dictionnari": 7, "relat": [7, 142], "ens_perf": 7, "0776": 7, "085": 7, "025": 7, "0615": 7, "0674": 7, "0974": 7, "0858": 7, "0823": 7, "0434": 7, "0513": 7, "0884": 7, "0681": 7, "0931": 7, "0597": 7, "0649": 7, "0827": 7, "0802": 7, "0715": 7, "0845": 7, "0379": 7, "0573": 7, "054": 7, "0483": 7, "0679": 7, "0994": 7, "081": 7, "0839": 7, "0398": 7, "0378": 7, "0463": 7, "0566": 7, "0811": 7, "0589": 7, "0492": 7, "0664": 7, "0554": 7, "0494": 7, "0871": 7, "0692": 7, "0752": 7, "0216": 7, "0993": 7, "04457": 7, "13262": 7, "09103": 7, "01688": 7, "01675": 7, "89454": 7, "29830": 7, "79987": 7, "09466": 7, "sinc": [7, 8], "one": [7, 12, 13, 43, 50, 51, 54, 103, 105, 108, 109, 112, 114, 118, 120, 123, 127, 143, 144, 149], "reduc": [7, 14, 67, 69, 103, 105, 108, 109, 114, 118, 136], "github": [7, 39, 53, 97, 111, 132, 147, 149], "usag": [7, 146], "feel": [7, 14, 149], "free": [7, 149, 150], "machin": [7, 14], "longer": 7, "durat": 7, "multipli": [7, 14, 67, 68, 69, 70, 71, 72, 77, 78], "account": [7, 149], "fact": 7, "hug": [7, 12, 14], "face": [7, 12, 14, 150], "hf_hub_download": 7, "below": [7, 9, 150], "therefor": [7, 67, 69, 70, 148], "other": [7, 11, 12, 33, 34, 35, 127, 146], "pretrain": [7, 15], "huggingfac": 7, "hub": 7, "all_model": 7, "repo_id": 7, "ensta": [7, 147], "u2i": [7, 147], "filenam": [7, 13], "version_": [7, 13], "ckpt": [7, 13], "local_dir": 7, "state_dict": [7, 10, 132], "map_loc": 7, "item": [7, 8, 9, 10], "load_state_dict": [7, 10, 12], "00677": 7, "02816": 7, "01454": 7, "00459": 7, "00451": 7, "25233": 7, "38779": 7, "01787": 7, "23446": 7, "publish": 7, "intern": [7, 52], "represent": [7, 67, 69], "2023": [7, 112, 146, 149, 150], "modif": 7, "make": [7, 9, 14, 43, 67, 69, 103, 105, 108, 112, 114, 118, 130, 146, 149, 150], "computation": [7, 9, 114], "idea": [7, 148, 149], "member": [7, 63, 64, 67, 69, 127, 134], "u": [7, 10, 11, 14, 63, 64, 147, 149], "pass": [7, 9, 13, 14, 63, 64, 71, 72, 98, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 114, 116, 118, 127, 128, 130, 132, 142, 143, 144, 145, 149], "particularli": [7, 14], "larg": [7, 13, 51, 150], "updat": [7, 12, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 142, 143, 144, 147], "equival": [7, 114], "link": [7, 14, 137], "einop": [7, 10, 149], "rearrang": [7, 10, 69, 149], "packedconv2d": [7, 10, 149], "packedlinear": [7, 10, 149], "packedlenet": 7, "last": [7, 10, 13, 15, 16, 17, 67, 69, 70, 71, 72, 80, 82, 85, 86, 88, 130, 136, 148, 149], "e": [7, 8, 10, 13, 14, 33, 34, 35, 43, 44, 45, 50, 51, 52, 54, 70, 71, 72, 99, 107, 121, 122, 124, 147, 149, 150], "m": [7, 10, 12, 14, 63, 64, 90, 93, 120, 123, 138, 142, 149, 150], "h": [7, 10, 33, 34, 35, 52, 138, 149], "w": [7, 10, 33, 34, 35, 64, 94, 132, 149], "again": [7, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 147], "packed_model": 7, "packed_routin": 7, "packed_perf": 7, "0832": 7, "0824": 7, "0798": 7, "0653": 7, "0637": 7, "096": 7, "0663": 7, "0904": 7, "0765": 7, "0486": 7, "0667": 7, "0815": 7, "0661": 7, "0759": 7, "0935": 7, "0981": 7, "095": 7, "0564": 7, "0954": 7, "0853": 7, "0916": 7, "062": 7, "0472": 7, "0928": 7, "0794": 7, "0961": 7, "0329": 7, "04719": 7, "21740": 7, "10838": 7, "04053": 7, "04054": 7, "012": 7, "23590": 7, "56738": 7, "78260": 7, "45330": 7, "approxim": [7, 8, 9, 137], "befor": [7, 12, 14, 39, 55, 56, 57, 58, 59, 60, 63, 64, 127], "howev": [7, 11, 12, 13, 14, 67, 69, 148], "veri": [7, 11, 12, 149, 150], "small": [7, 39, 51, 91, 100, 101, 121, 122, 124, 125], "henc": 7, "complet": 7, "underus": 7, "would": [7, 13, 14, 149], "observ": [7, 100, 101], "larger": [7, 8], "read": [7, 39, 150], "medium": 7, "post": [7, 8, 12, 23, 24, 27, 28, 138, 139, 140, 141, 142, 146], "look": [7, 10, 12, 14, 149], "lightning_log": [7, 13], "If": [7, 10, 12, 13, 14, 15, 16, 17, 33, 34, 35, 39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 71, 72, 77, 78, 87, 88, 89, 99, 100, 101, 103, 105, 106, 107, 108, 109, 112, 113, 114, 118, 122, 123, 124, 125, 127, 128, 134, 135, 138, 142, 143, 144, 147, 149], "own": [7, 130], "try": [7, 10, 14], "curv": [7, 99, 100, 101], "tensorboard": [7, 12, 142, 143, 144], "logdir": 7, "add": [7, 8, 13, 14, 63, 64, 65, 66, 67, 69, 70, 77, 78, 89, 99, 100, 101, 132], "made": [7, 33, 34, 35, 71, 72], "sub": [7, 127], "think": [7, 10, 149], "help": [7, 13, 14], "identifi": 7, "reject": 7, "paradigm": 7, "awar": [7, 146], "where": [7, 12, 39, 40, 44, 45, 61, 63, 64, 68, 70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 99, 103, 105, 108, 109, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 142], "decid": 7, "threshold": [7, 107, 116, 126], "real": [7, 12, 150], "world": [7, 12, 150], "cost": 7, "wrong": 7, "constrast": 7, "best": [7, 13, 14, 70], "correct": [7, 100, 101, 113, 127], "abov": [7, 10, 13], "area": [7, 99, 100, 101], "under": [7, 50, 99, 100, 101, 149], "coverag": [7, 14, 100, 101, 106, 107, 115, 116], "express": 7, "evolv": [7, 14], "abl": 7, "perfectli": 7, "separ": [7, 20, 70], "fix": [7, 87, 88, 93, 139, 140, 141], "interest": [7, 11, 13, 14, 149], "certain": [7, 70], "requir": [7, 149], "technic": 7, "constraint": [7, 67, 69], "egal": 7, "orthogon": 7, "glest": 7, "eval_grouping_loss": [7, 15, 16, 17, 142, 149], "hoc": [8, 23, 24, 27, 28], "mc": [8, 15, 16, 17, 130, 136, 137, 138], "mc_batch_norm": 8, "post_process": [8, 12, 137, 138, 139, 140, 141, 142], "optim_cifar10_resnet18": [8, 9], "norm": [8, 71, 72, 102, 104], "batchnorm2d": [8, 15, 138], "03817": 8, "07442": 8, "07849": 8, "00387": 8, "00297": 8, "specifi": [8, 14, 70, 71, 72, 89, 90, 91, 92, 93, 94, 95, 113, 135], "batchnorm": [8, 15, 132, 138, 142, 143, 144], "control": [8, 76, 90], "mc_batch_siz": [8, 138], "author": [8, 50, 146, 150], "good": [8, 10, 148], "highlight": 8, "postprocess_dataload": [8, 12], "forget": [8, 9], "enabl": [8, 9, 13], "uncertain": 8, "highest": [8, 113], "most_uncertain": 8, "sort": 8, "var": 8, "topk": 8, "str": [8, 9, 11, 15, 16, 17, 21, 23, 24, 27, 28, 33, 34, 35, 36, 39, 40, 43, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 67, 69, 77, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 105, 108, 109, 114, 118, 137, 142, 143, 144], "image_id": [8, 9], "mostli": [8, 14], "erron": 8, "depend": [8, 13, 120, 123, 130, 147, 148, 150], "refer": [9, 10, 14, 39, 43, 47, 50, 52, 54, 63, 64, 65, 66, 70, 71, 72, 76, 77, 78, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 104, 111, 112, 121, 122, 124, 125, 128, 131, 132, 135, 137, 138, 139, 140, 141, 146, 149], "2016": [9, 150], "vision": [9, 50, 52, 150], "2017": [9, 12, 97, 100, 101, 135, 139, 140, 141, 148, 150], "mc_dropout": 9, "wrap": [9, 63, 64, 127, 130, 134, 136, 149], "sure": [9, 65, 66, 67, 69, 103, 105, 108, 112, 114, 118, 127, 130, 146], "moreov": 9, "dropout_r": [9, 15, 16, 17, 19], "mc_model": 9, "last_lay": [9, 130, 136, 137], "tell": 9, "It": [9, 13, 36, 51, 64, 66, 69, 96, 100, 101, 132, 147, 148, 149], "91m": 9, "3k": 9, "639kb": 9, "360k": 9, "26mb": 9, "02m": 9, "97mb": 9, "74m": 9, "08mb": 9, "21m": 9, "23mb": 9, "61mb": 9, "57m": 9, "74mb": 9, "9k": 9, "371kb": 9, "65m": 9, "633kb": 9, "51mb": 9, "721k": 9, "13mb": 9, "38m": 9, "53mb": [9, 12], "01mb": 9, "54k": 9, "37215": 9, "58498": 9, "86249": 9, "35605": 9, "get": [9, 10, 12, 14, 23, 24, 27, 28, 31, 96, 143, 144, 149, 150], "disagr": [9, 117], "heavili": [10, 63, 64], "inspir": [10, 14, 53, 63, 64, 97], "dive": 10, "60000": 10, "32x32": 10, "colour": 10, "6000": 10, "per": [10, 23, 24, 27, 28, 33, 34, 35, 67, 70, 71, 72, 103, 105, 108, 109, 114, 118], "There": [10, 12, 36, 51], "50000": 10, "cifar": [10, 12, 13, 23, 24, 43, 44, 45], "outlin": 10, "set_num_thread": 10, "pilimag": 10, "window": 10, "brokenpipeerror": 10, "trainset": 10, "trainload": 10, "testset": 10, "testload": 10, "plane": [10, 63], "car": 10, "bird": 10, "cat": 10, "deer": 10, "dog": 10, "frog": 10, "hors": 10, "ship": 10, "truck": 10, "170m": 10, "393kb": 10, "229k": [10, 12], "741kb": 10, "623k": [10, 12], "48mb": [10, 12], "44m": [10, 12], "83mb": 10, "05m": 10, "82mb": 10, "46m": 10, "42mb": 10, "77m": 10, "3m": [10, 12], "8m": [10, 12], "6mb": [10, 12], "8mb": [10, 11, 12], "1m": [10, 12], "5m": [10, 12], "2mb": [10, 12], "6m": [10, 12], "7mb": [10, 12], "104m": [10, 12], "108m": [10, 12], "111m": 10, "116m": [10, 12], "120m": 10, "124m": 10, "128m": 10, "132m": 10, "136m": 10, "140m": 10, "144m": 10, "148m": 10, "152m": 10, "157m": [10, 12], "161m": [10, 12], "165m": [10, 12], "fun": 10, "unnorm": 10, "figur": [10, 12, 99, 100, 101], "pad_valu": 10, "net": 10, "maxpool2d": [10, 149], "packednet": [10, 149], "packed_net": [10, 149], "momentum": [10, 129], "criterion": [10, 15, 16, 17, 142], "running_loss": 10, "list": [10, 12, 14, 23, 24, 27, 28, 31, 128, 135, 142, 146, 149, 150], "zero": [10, 67, 68, 70, 73, 74, 75, 77, 114], "zero_grad": 10, "backward": [10, 71, 72], "repeat": [10, 13, 15, 17, 63, 64, 65, 66, 127, 130, 134], "statist": [10, 132, 138], "2000": [10, 12], "1999": 10, "everi": [10, 128, 131, 132], "mini": 10, "3f": 10, "4000": 10, "8000": 10, "12000": 10, "model": [10, 13, 14, 21, 63, 64, 71, 72, 77, 78, 92, 96, 98, 100, 101, 105, 108, 109, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148], "cifar_packed_net": 10, "pth": 10, "displai": [10, 13], "familiar": 10, "groundtruth": 10, "back": 10, "re": 10, "wasn": 10, "necessari": [10, 69], "did": 10, "illustr": 10, "kei": [10, 12, 43, 50, 54, 70, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "match": [10, 12, 13, 33, 34, 35, 52, 70, 150], "successfulli": [10, 12], "n": [10, 63, 64, 79, 81, 83, 84, 87, 100, 101, 103, 107, 108, 109, 112, 114, 116, 119, 120, 121, 122, 123, 124, 125, 147], "probs_per_est": 10, "seem": 10, "pretti": 10, "cover": [11, 149], "disabl": [11, 130], "warn": [11, 71, 72], "keep": 11, "clean": 11, "getlogg": 11, "rank_zero": 11, "setlevel": 11, "filterwarn": 11, "ignor": [11, 70, 113], "normallinear": 11, "around": [11, 13, 104, 149], "locat": [11, 39], "out_featur": [11, 64, 66, 69, 76, 78, 80, 82, 85, 86, 88, 127], "base_lay": [11, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "event_dim": [11, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "uci": [11, 13, 22, 25, 26, 29, 30, 32, 55, 56, 57, 58, 59, 60], "kin8nm": [11, 32, 60], "featur": [11, 64, 66, 68, 69, 70, 71, 72, 76, 78, 112, 142, 150], "8192": 11, "uciregressiondatamodul": 11, "dataset_nam": [11, 32, 60], "distributionnllloss": 11, "famili": [11, 96, 143, 144], "13m": 11, "31242": 11, "18321": 11, "42442": 11, "42803": 11, "assum": 11, "get_dist_linear_lay": 11, "rewrit": 11, "dist_lay": 11, "laplac": [11, 81, 82, 137], "student": [11, 87, 88], "cauchi": [11, 79, 80], "wise": [11, 96, 143, 144], "enable_model_summari": 11, "dist_estim": [11, 143, 144], "28080": 11, "14585": 11, "30855": 11, "38190": 11, "32945": 11, "23991": 11, "44365": 11, "48981": 11, "29378": 11, "17029": 11, "39866": 11, "41266": 11, "27116": 11, "14282": 11, "43879": 11, "37792": 11, "underli": [12, 67], "extens": 12, "detail": [12, 13, 63, 104, 137, 142, 144, 145, 146, 148], "temperaturescal": 12, "done": [12, 71, 72], "postprocess_set": [12, 23, 24, 27, 28, 31], "val": [12, 23, 24, 27, 28, 31, 32, 39, 40, 61, 140, 149], "outsid": 12, "diagram": 12, "resnet": [12, 13, 15, 17, 149], "start": [12, 14, 65, 66, 131, 132], "log_plot": [12, 15, 16, 17, 20, 142, 143, 145, 149], "flag": [12, 14, 70, 138], "cifar100datamodul": 12, "calibrationerror": 12, "load_hf": 12, "scratch": 12, "liner": 12, "arch": [12, 13, 15, 16, 18, 20, 21, 149], "style": [12, 13, 14, 15, 16, 17, 20, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78], "conv_bia": [12, 15], "config": [12, 13, 149], "resnet18_c100": 12, "prepare_data": [12, 28, 32], "setup": [12, 32, 142], "extract": [12, 55, 56, 60], "element": [12, 63, 65, 67, 70, 89], "dm": [12, 149], "unus": [12, 52, 142, 143, 144], "169m": 12, "395kb": 12, "743kb": 12, "31m": 12, "72m": 12, "66mb": 12, "98mb": 12, "2m": 12, "113m": 12, "121m": 12, "125m": 12, "129m": 12, "133m": 12, "138m": 12, "142m": 12, "145m": 12, "150m": 12, "153m": 12, "split": [12, 27, 28, 32, 38, 39, 40, 46, 47, 48, 49, 50, 52, 53, 61, 62, 149], "proper": [12, 149], "associ": [12, 99, 101, 107, 116], "lengthi": 12, "restrict": 12, "random_split": 12, "cal_dataset": 12, "calibration_dataload": 12, "multiclass": 12, "ha": [12, 68, 70, 89, 100, 101], "temper": 12, "scaled_model": 12, "reset": [12, 135, 138], "mix": 12, "previou": [12, 13, 69], "current": [12, 14, 103, 109, 114, 128, 129, 132, 142, 143, 144, 148], "sai": 12, "drawn": 12, "hold": 12, "shift": [12, 15, 16, 17, 23, 24, 27, 28, 142, 143, 144, 145, 149], "happen": [12, 127], "naeini": [12, 104, 150], "cooper": [12, 150], "g": [12, 13, 14, 43, 44, 45, 50, 51, 52, 54, 90, 121, 122, 124, 131, 139, 140, 141, 148], "hauskrecht": [12, 150], "obtain": [12, 104, 150], "bin": [12, 15, 104, 142, 145, 150], "aaai": [12, 104, 150], "guo": [12, 139, 140, 141, 148, 150], "pleiss": [12, 139, 140, 141, 148, 150], "sun": [12, 139, 140, 141, 148, 150], "weinberg": [12, 139, 140, 141, 148, 150], "q": [12, 139, 140, 141, 148, 150], "modern": [12, 112, 139, 140, 141, 148, 150], "instanci": 13, "subcommand": 13, "lightningmodul": [13, 15, 16, 17, 142, 144, 145, 149], "lightningcli": 13, "tulightningcli": 13, "new": [13, 70, 103, 109, 114, 147], "eval_after_fit": 13, "know": [13, 14], "whether": [13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 55, 56, 57, 58, 59, 61, 67, 69, 70, 71, 72, 76, 99, 100, 101, 127, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "phase": 13, "cifar10": [13, 24, 149], "lightningargumentpars": 13, "baselin": [13, 15, 16, 17, 18, 19, 20, 21, 132, 146, 150], "resnetbaselin": 13, "cifar10datamodul": [13, 149], "resnetcli": 13, "add_arguments_to_pars": 13, "parser": 13, "add_optimizer_arg": 13, "add_lr_scheduler_arg": 13, "multisteplr": 13, "cli_main": 13, "__main__": 13, "fast_dev_run": 13, "_get": 13, "ckpt_path": 13, "both": [13, 67, 69, 70, 77, 120, 123, 127, 134], "instanc": [13, 62], "subclass": 13, "seemlessli": 13, "But": 13, "command": [13, 147, 149], "whichev": 13, "up": [13, 71, 72], "line": 13, "devic": [13, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 132, 138, 139, 140, 141], "1": [13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 43, 54, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 90, 91, 92, 100, 101, 103, 111, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 135, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150], "3": [13, 21, 40, 63, 64, 126, 142, 145, 146, 147, 149], "loss": [13, 15, 16, 17, 18, 19, 20, 21, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 112, 118, 125, 142, 143, 144, 145, 146, 149], "mileston": 13, "prefix": [13, 132], "conveni": 13, "store": [13, 40, 77, 78, 79, 81, 83, 99, 101, 107, 116, 132, 142], "burden": 13, "support": [13, 15, 16, 17, 19, 21, 61, 70, 89, 100, 101, 149], "eventu": [13, 143, 144], "By": 13, "yaml": [13, 27, 149], "format": [13, 14, 127, 142, 143, 144, 145], "content": [13, 150], "directori": [13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61], "state": [13, 14, 105, 108, 111, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132], "checkpoint": [13, 128, 150], "addit": [13, 68, 70, 71, 72, 80, 82, 84, 85, 86, 87, 88, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126], "advis": [13, 14, 64, 149], "explor": [13, 146], "mainli": 13, "organ": 13, "vgg": [13, 16], "wideresnet": 13, "cifar100": [13, 23], "uci_dataset": 13, "segment": [13, 14, 20, 21, 33, 34, 35, 61, 62, 135, 145, 149], "cityscap": [13, 34], "segform": [13, 21], "muad": [13, 35, 146], "backbon": [13, 15, 16, 17, 21, 149], "predefin": 13, "resnet18": [13, 149], "choos": [13, 43, 50, 147, 149], "overrid": [13, 33, 34, 35, 130], "dict_kwarg": 13, "2": [13, 14, 21, 22, 25, 26, 29, 30, 34, 35, 55, 56, 57, 58, 59, 63, 77, 78, 87, 88, 122, 123, 124, 125, 126, 127, 135, 142, 145, 149], "4": [13, 21, 50, 63, 76, 127, 143, 149], "yet": [13, 70, 149], "miss": 13, "doc": [13, 14, 147], "earli": 14, "stage": [14, 32], "contributor": 14, "comprehens": [14, 146], "comment": 14, "project": [14, 70, 147], "host": 14, "possibl": [14, 67], "roughli": 14, "field": 14, "environ": [14, 147], "continu": 14, "integr": 14, "break": 14, "system": [14, 100, 147, 150], "clone": [14, 147], "repositori": [14, 147, 149], "edit": [14, 147], "pip": [14, 146, 147], "commit": [14, 147], "hook": [14, 147], "reinstal": 14, "group": [14, 15, 16, 17, 33, 61, 63, 64, 65, 66, 67, 69, 73, 74, 75, 77, 79, 81, 83, 112, 142, 149], "navig": 14, "html": 14, "noplot": 14, "instead": [14, 33, 34, 35], "ruff": [14, 147], "lint": 14, "drop": 14, "black": 14, "isort": 14, "flake8": 14, "properli": 14, "push": 14, "pr": 14, "featureless": 14, "pytest": 14, "emoji": 14, "messag": 14, "pull": 14, "branch": 14, "person": 14, "fork": 14, "compli": [14, 39, 67, 69], "condit": 14, "nor": [14, 127], "signatur": 14, "type": [14, 15, 16, 17, 21, 23, 24, 27, 28, 31, 39, 43, 50, 61, 62, 63, 64, 65, 66, 70, 71, 72, 76, 77, 78, 80, 82, 84, 85, 86, 87, 88, 91, 92, 93, 96, 99, 100, 101, 103, 107, 111, 112, 116, 117, 127, 128, 130, 132, 134, 135, 137, 142, 143, 144, 145, 146], "clear": 14, "docstr": 14, "come": 14, "explicitli": 14, "rememb": 14, "paperswithcod": 14, "solv": 14, "rais": [14, 15, 16, 17, 50, 103, 105, 108, 109, 112, 114, 118, 126, 127, 135, 138, 149], "explain": 14, "maintain": 14, "intend": 14, "popular": 14, "scikit": [14, 147], "api": [14, 44, 45, 52, 129, 146, 149], "except": [14, 130], "arrai": [14, 55, 56, 57, 58, 59, 60], "obstacl": 14, "reconsid": 14, "remain": 14, "apach": 14, "imagenet": [15, 16, 17, 27, 47], "normalization_lay": 15, "mixup_param": [15, 16, 17, 142], "last_layer_dropout": [15, 16, 17], "width_multipli": 15, "rho": [15, 17], "batch_repeat": [15, 17], "ood_criterion": [15, 16, 17, 142, 149], "msp": [15, 16, 17, 142, 149], "save_in_csv": [15, 16, 17, 142, 149], "eval_shift": [15, 16, 17, 23, 24, 27, 28, 31, 142, 143, 144, 145], "num_bins_cal_err": [15, 20, 142, 145], "variou": [15, 16, 17, 19, 21, 149], "configure_optim": [15, 16, 17, 142, 144, 145], "batchensembl": [15, 17, 63, 64, 134], "mask": [15, 16, 17, 33, 34, 35, 65, 66, 70, 71, 72, 95, 118], "masksembl": [15, 17, 65, 66, 149], "mimo": [15, 17, 149], "mixup": [15, 16, 17, 142], "mixtyp": [15, 16, 17], "mixmod": [15, 16, 17], "dist_sim": [15, 16, 17], "kernel_tau_max": [15, 16, 17], "kernel_tau_std": [15, 16, 17], "mixup_alpha": [15, 16, 17], "cutmix_alpha": [15, 16, 17], "expans": [15, 16, 17], "factor": [15, 16, 17, 77, 78, 89, 120, 123], "affect": [15, 16, 17], "width": [15, 16, 17, 33, 34, 35, 68, 69, 70, 71, 72], "bool": [15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 40, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 99, 100, 101, 103, 113, 127, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149], "bia": [15, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 139, 141], "share": [15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 63, 64], "mi": [15, 16, 17, 142, 149], "mutual": [15, 16, 17, 114, 142], "vr": [15, 16, 17, 142, 149], "csv": [15, 16, 17, 142], "valueerror": [15, 16, 17, 103, 105, 108, 109, 112, 114, 118, 127, 135, 138], "readi": [15, 16, 17, 149], "wide": 17, "resnet28x10": 17, "depth": [18, 39, 40, 121, 122, 124, 125], "max_depth": [18, 38, 39, 40], "pretrained_backbon": [18, 20], "dist_arg": 19, "output_strid": 20, "metric_subsampling_r": [20, 145], "b0": 21, "b1": 21, "b2": 21, "b3": 21, "b4": 21, "b5": 21, "val_split": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "test_split": [22, 25, 26, 29, 30, 55, 56, 57, 58, 59], "pin_memori": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "persistent_work": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "bank": [22, 30, 55], "market": [22, 30, 55], "string": [22, 25, 26, 29, 30, 32, 44, 45], "among": [22, 25, 26, 29, 30], "subprocess": [22, 25, 26, 29, 30, 32], "pin": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35], "persist": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35], "shift_sever": [23, 24, 27, 31, 41, 43, 54], "basic_aug": [23, 24, 27, 28, 31, 33, 34], "cutout": [23, 24, 28], "randaug": [23, 24, 27], "auto_aug": [23, 24], "num_dataload": [23, 24], "auto": [23, 24], "svhn": [23, 24, 31], "100c": 23, "test_alt": [24, 27], "10c": 24, "dota2": 25, "game": [25, 56], "htru2": 26, "ood_d": [27, 28, 31], "openimag": [27, 52], "o": [27, 52, 149], "procedur": 27, "train_siz": 27, "interpol": [27, 31], "bilinear": [27, 31], "rand_augment_opt": [27, 31], "id": [27, 111, 142, 143], "imagenetc": 27, "fashion": 28, "stand": 28, "notmnist": 28, "mnistc": 28, "onlin": [29, 58], "shopper": [29, 58], "intent": [29, 58], "tinyimagenet": [31, 54], "tinyimagenetc": 31, "input_shap": 32, "split_se": [32, 55, 56, 57, 58, 59], "One": [32, 60], "boston": [32, 60], "hous": [32, 60, 146], "concret": [32, 60], "energi": [32, 60, 142, 149], "naval": [32, 60], "propuls": [32, 60], "plant": [32, 60], "power": [32, 60, 126], "protein": [32, 60], "wine": [32, 60], "red": [32, 60], "yacht": [32, 60], "tupl": [32, 39, 43, 50, 63, 65, 67, 70, 77, 79, 81, 83, 99, 100, 101, 142, 143, 144, 145], "shape": [32, 63, 64, 68, 69, 70, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 100, 101, 103, 107, 112, 113, 114, 116, 125, 130, 142], "seed": [32, 60, 132], "crop_siz": [33, 34, 35], "eval_s": [33, 34, 35], "group_class": [33, 61], "camvid": 33, "sequenc": [33, 34, 35, 70, 71, 72], "desir": [33, 34, 35, 65, 66, 149], "length": [33, 34, 35, 70, 132, 135], "edg": [33, 34, 35], "height": [33, 34, 35], "rescal": [33, 34, 35, 89, 132], "superclass": [33, 61], "inject": [33, 34, 35], "v2": [33, 34, 35], "todtyp": [33, 34, 35], "dtype": [33, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83], "tv_tensor": [33, 34, 35], "float32": [33, 34, 35], "int64": [33, 34, 35], "behavior": [33, 34, 35], "2048": [34, 35, 71, 72], "toimag": [34, 35], "randomrescal": [34, 35], "min_scal": [34, 35, 79, 80, 81, 82, 83, 86, 87, 88], "max_scal": [34, 35], "pad_if_need": [34, 35], "colorjitt": [34, 35], "randomhorizontalflip": [34, 35], "target_transform": [36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62], "pixmix": 36, "licens": [36, 39, 50, 51, 55, 56, 57, 58, 59, 60, 146], "suitabl": [36, 51], "commerci": [36, 39, 51], "min_depth": [38, 39, 40], "remove_unus": 38, "target_typ": [39, 62], "semant": 39, "leftimg8bit": 39, "leftlabel": 39, "leftdepth": 39, "callabl": [39, 40, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 71, 72], "internet": [39, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61], "io": 39, "cannot": 39, "carefulli": [39, 138], "verifi": 39, "liter": [40, 135, 137, 138, 139, 140, 141, 149], "minimum": [40, 132], "found": [40, 127], "file_arg": [42, 45], "fine_label": 42, "cifarc_subset": [43, 54], "make_dataset": [43, 50], "accord": [43, 50], "chosen": [43, 50, 117, 138], "gather": [43, 50, 96, 98], "ndarrai": [43, 50], "10h": [44, 45], "npy": [44, 45], "exist": [44, 45, 61, 63, 64], "aggre_label": 45, "10n": 45, "mnistc_subset": 50, "mu": [50, 150], "norman": [50, 150], "justin": [50, 150], "gilmer": [50, 150], "icmlw": [50, 150], "releas": 50, "creativ": 50, "attribut": [50, 76, 142], "someon": 50, "investig": 50, "v4": [52, 150], "unifi": [52, 150], "visual": [52, 150], "relationship": [52, 150], "kuznetsova": [52, 150], "et": [52, 76, 92, 100, 102, 104, 132, 137, 149, 150], "al": [52, 76, 92, 100, 102, 104, 132, 137, 149, 150], "journal": [52, 146], "curat": [52, 150], "vim": [52, 150], "Of": 52, "virtual": [52, 150], "wang": [52, 150], "cvpr": [52, 150], "2022": [52, 90, 146, 150], "gist": 53, "com": [53, 97, 111, 132, 147, 150], "z": 53, "b862013c0dc2b540cf96a123a6766e54": 53, "21893027": [55, 56, 57, 58, 59], "dota": 56, "ethic": 60, "becaus": 60, "concern": 60, "entri": [61, 70], "properti": [61, 62, 67], "color_palett": [61, 62], "color": [61, 62], "palett": [61, 62], "decode_target": [61, 62], "decod": [61, 62, 71], "doesn": 61, "encode_target": [61, 62], "encod": [61, 62, 71, 72, 77, 78, 146, 150], "fine": 62, "classmethod": [62, 63, 64], "plot_sampl": 62, "out_channel": [63, 65, 67, 73, 74, 75, 77, 79, 81, 83, 84, 87], "kernel_s": [63, 65, 67, 73, 74, 75, 77, 79, 81, 83], "stride": [63, 65, 67, 73, 74, 75, 77, 79, 81, 83], "dilat": [63, 65, 67, 73, 74, 75, 79, 81, 83], "2d": [63, 70, 77], "signal": 63, "incom": [63, 64], "simplest": 63, "c_": [63, 79, 81, 83, 84, 87], "h_": [63, 64, 80, 82, 85, 86, 88], "w_": 63, "describ": [63, 97, 149], "n_i": 63, "_j": 63, "widehat": [63, 64], "s_": [63, 64], "n_": 63, "sum_": [63, 103, 119, 125], "star": 63, "r_": [63, 64], "altern": [63, 64, 150], "lifelong": [63, 64, 150], "produc": [63, 65, 66, 67, 69], "convolv": [63, 65, 67, 77], "kernel": [63, 65, 67, 77, 79, 81, 83, 142, 150], "ad": [63, 65, 67, 68, 70, 77, 149], "four": [63, 65, 67], "side": [63, 65, 67, 77], "space": [63, 65, 67], "connect": [63, 66, 69, 77], "learnabl": [63, 64, 65, 66, 67, 68, 69, 77, 78], "buffer": [63, 64], "variabl": [63, 64, 76, 138], "frac": [63, 64, 67, 69, 103, 119, 120, 121, 122, 123, 124, 125], "mathcal": [63, 64], "prod_": 63, "r_group": [63, 64], "matric": [63, 64], "row": [63, 64], "vector": [63, 64, 141, 148], "th": [63, 64], "s_group": [63, 64], "lfloor": 63, "rfloor": 63, "divis": [63, 64, 67, 69], "typic": [63, 64], "along": [63, 64, 113, 127, 149], "lead": [63, 64, 131, 150], "unexpect": [63, 64], "batchensemblewrapp": 63, "equal": [63, 90, 127, 148], "randn": [63, 64], "from_conv2d": 63, "discard": 63, "be_conv2d": 63, "circ": 64, "receiv": [64, 127], "from_linear": 64, "be_linear": 64, "connexion": [65, 67], "Be": [65, 66], "nikita": [65, 66, 150], "durasov": [65, 66, 150], "timur": [65, 66, 150], "bagautdinov": [65, 66, 150], "pierr": [65, 66, 150], "baqu": [65, 66, 150], "pascal": [65, 66, 150], "fua": [65, 66, 150], "fulli": [66, 69], "oper": [66, 69, 71, 72, 127], "minimum_channels_per_group": 67, "padding_mod": [67, 73, 74, 75, 77], "smallest": 67, "reflect": [67, 77], "circular": [67, 77], "explan": [67, 69, 149], "capac": [67, 69], "embed_dim": [68, 70], "ep": [68, 71, 72, 91], "affin": 68, "layernorm": [68, 71, 72], "denomin": 68, "numer": [68, 91, 114], "stabil": 68, "boolean": 68, "per_channel": 68, "ones": 68, "bias": 68, "legaci": 69, "spars": 69, "einsum": 69, "compat": [69, 71, 72], "n_estim": 69, "num_head": 70, "add_bias_kv": 70, "add_zero_attn": 70, "kdim": 70, "vdim": 70, "batch_first": [70, 71, 72], "multiheadattent": [70, 71, 72], "embed": 70, "parallel": 70, "head": [70, 71, 72], "attn_output_weight": 70, "\u00ec": 70, "seq": [70, 71, 72], "multihead": [70, 71, 72], "formul": [70, 71, 72], "hierarch": [70, 71, 72, 150], "light": [70, 71, 72], "tranform": [70, 71, 72], "multimod": [70, 71, 72], "trajectori": [70, 71, 72, 128], "forecast": [70, 71, 72], "queri": 70, "key_padding_mask": 70, "need_weight": 70, "attn_mask": 70, "average_attn_weight": 70, "is_caus": [70, 72], "e_q": 70, "unbatch": 70, "embeddingd": 70, "e_k": 70, "e_v": 70, "treat": 70, "attn_output": 70, "scale_dot_product_attent": 70, "mha": 70, "3d": [70, 103], "prevent": 70, "posit": [70, 110, 111], "must": [70, 120, 123, 127, 142, 144, 145], "broadcast": 70, "across": [70, 103, 105, 108, 109, 114, 118], "while": [70, 135, 148, 149], "attend": 70, "attn_weight": 70, "_description_": 70, "thu": 70, "alwai": 70, "d_model": [71, 72], "nhead": [71, 72], "dim_feedforward": [71, 72], "activ": [71, 72, 147, 148], "layer_norm_ep": [71, 72], "norm_first": [71, 72], "transformerdecoderlay": 71, "feedforward": [71, 72], "intermedi": [71, 72], "unari": [71, 72], "compon": [71, 72], "tgt": 71, "tgt_mask": 71, "memory_mask": 71, "tgt_key_padding_mask": 71, "memory_key_padding_mask": 71, "tgt_is_caus": 71, "memory_is_caus": 71, "causal": [71, 72], "hint": [71, 72], "transformerencoderlay": 72, "src": 72, "src_mask": 72, "src_key_padding_mask": 72, "prior_sigma_1": [73, 74, 75, 76], "prior_sigma_2": [73, 74, 75, 76], "002": [73, 74, 75], "prior_pi": [73, 74, 75, 76], "mu_init": [73, 74, 75, 76], "sigma_init": [73, 74, 75, 76], "frozen": [73, 74, 75, 76], "conv1d": 73, "mixtur": [73, 74, 75, 76], "conv3d": 75, "deviat": [76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88], "freez": 76, "charl": [76, 135, 150], "unfreez": 76, "hidden_s": [77, 78], "std_factor": [77, 78], "lpbnn": [77, 78], "latent": [77, 78, 146, 150], "nois": [77, 78], "layer_arg": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "densiti": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "event": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "datatyp": [79, 81, 83], "ast": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "min_lmbda": [84, 85], "min_alpha": [84, 85], "min_beta": [84, 85], "lambda": [84, 85], "beta": [84, 85, 90], "lmbda": [84, 85, 125, 126], "min_df": [87, 88], "fixed_df": [87, 88], "freedom": [87, 88], "df": [87, 88], "reduct": [89, 90, 91, 92, 93, 94, 95, 97, 103, 105, 108, 109, 112, 114, 117, 118], "label_smooth": 89, "smooth": 89, "bcewithlogitsloss": 89, "manual": 89, "nbatch": 89, "divid": 89, "tparamet": 90, "rel": [90, 121, 122, 124], "seitzer": [90, 150], "tavakoli": [90, 150], "antic": [90, 150], "martiu": [90, 150], "pitfal": [90, 150], "heteroscedast": [90, 150], "arxiv": [90, 91, 93, 94, 100, 128, 150], "ab": [90, 93, 94], "2203": [90, 150], "09168": 90, "penalti": 91, "instabl": [91, 114], "gabriel": 91, "pereyra": 91, "penal": 91, "pdf": [91, 150], "06548": 91, "conflictu": 92, "moham": [92, 150], "fellaji": [92, 150], "principl": [92, 150], "paradox": [92, 150], "annealing_step": 93, "loss_typ": 93, "digamma": 93, "01768": 93, "combin": 94, "1910": 94, "02600": 94, "padding_mask": [95, 118], "bound": 96, "seek": 96, "fill": 96, "aggreg": 96, "focal": 97, "lin": [97, 150], "goyal": [97, 150], "girshick": [97, 150], "he": [97, 150], "doll\u00e1r": [97, 150], "dens": [97, 150], "tpami": [97, 146, 150], "adeelh": 97, "kwarg": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "sparsif": 99, "much": [99, 100], "coincid": 99, "keyword": [99, 100, 101, 103, 105, 108, 109, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126], "advanc": [99, 103, 105, 108, 109, 112, 113, 114, 118, 119, 121, 122, 124, 125, 126], "hypothes": 99, "optic": 99, "flow": 99, "eccv": 99, "plot_oracl": 99, "plot_valu": [99, 100, 101], "oracl": [99, 101], "assess": [100, 101], "too": 100, "accept": [100, 101, 113, 120, 121, 122, 123, 124], "pred": [100, 101, 113, 119, 120, 121, 122, 123, 124, 125, 126, 145], "scalar": [100, 101], "traub": [100, 150], "overcom": [100, 150], "flaw": [100, 150], "abil": [100, 101, 149], "discrimin": [100, 101], "rank": [100, 101], "geifman": [100, 101, 150], "el": [100, 101, 150], "yaniv": [100, 101, 150], "partial_comput": 101, "rc": 101, "num_bin": [102, 104], "l1": [102, 104], "ignore_index": [102, 104, 113], "validate_arg": [102, 104, 113], "nixon": [102, 150], "cvprw": [102, 150], "top_class": 103, "ie": 103, "previous": [105, 109, 114, 118], "nan": [106, 107], "risk_threshold": 107, "monoton": 107, "shannon": [109, 114], "pos_label": [110, 111], "recal": [110, 111, 148], "recall_level": 111, "fpr": 111, "anomali": 111, "seg": 111, "translat": 111, "conf": 111, "perez": [112, 150], "lebel": [112, 150], "alexandr": [112, 150], "le": [112, 150], "morvan": [112, 150], "marin": [112, 150], "varoquaux": [112, 150], "ga\u00ebl": [112, 150], "beyond": [112, 150], "accumul": [112, 138], "num_featur": 112, "top_k": 113, "intersect": 113, "union": 113, "iou": 113, "integ": 113, "contribut": [113, 146, 147], "calcul": 113, "faster": 113, "info": 113, "mean_iou": 113, "miou": 113, "jensen": 114, "gjsd": 114, "clamp": 114, "appear": 114, "due": 114, "cov_threshold": 116, "log_": 119, "y_i": [119, 120, 121, 122, 123, 124, 125], "hat": [119, 120, 121, 122, 123, 124, 125], "unit": [120, 123], "km": [120, 123], "absolut": [120, 121, 124], "ima": 120, "sum_i": [120, 121, 122, 123, 124], "unit_factor": [120, 123], "mean_absolute_inverse_error": 120, "mm": [120, 123], "defaut": [120, 123], "maerel": 121, "arerel": 121, "rel_mean_absolute_error": 121, "big": [121, 122, 124, 125], "local": [121, 122, 124, 125], "planar": [121, 122, 124, 125], "guidanc": [121, 122, 124, 125], "monocular": [121, 122, 124, 125], "mserel": 122, "sre": 122, "rel_mean_squared_error": 122, "rmserel": 122, "multioutput": [122, 123], "ims": 123, "mean_squared_error": 123, "mselog": 124, "mse_log": 124, "emselog": 124, "invari": 125, "logarithm": 125, "david": [125, 146, 150], "eigen": 125, "christian": [125, 150], "puhrsch": 125, "rob": 125, "fergu": 125, "jin": 125, "han": 125, "lee": [125, 128, 150], "myung": 125, "kyu": 125, "dong": [125, 150], "wook": 125, "ko": 125, "il": 125, "hong": 125, "suh": 125, "d1": 126, "d2": 126, "d3": 126, "repeat_training_input": [127, 134], "convert_lay": [127, 134], "being": 127, "duplic": 127, "counterpart": [127, 134], "neither": 127, "batchlinear": 127, "batchconv2d": 127, "less": [127, 135, 138], "attempt": 127, "convers": 127, "won": 127, "num_repeat": [127, 142], "save_schedul": 128, "use_final_checkpoint": 128, "hugh": [128, 150], "chen": [128, 150], "scott": [128, 150], "lundberg": [128, 150], "su": [128, 150], "eval_forward": [128, 132], "update_wrapp": [128, 129, 132], "exponenti": [129, 148], "move": 129, "on_batch": [130, 136], "constrain": 130, "declar": 130, "constructor": 130, "lastli": 130, "core": 130, "submodul": 130, "itself": 130, "cycle_start": [131, 132], "cycle_length": [131, 132], "izmailov": [131, 150], "podoprikhin": [131, 150], "garipov": [131, 150], "vetrov": [131, 150], "wilson": [131, 150], "wider": [131, 150], "optima": [131, 150], "uai": [131, 150], "diag_covari": 132, "max_num_model": 132, "var_clamp": 132, "minu": 132, "bn_updat": 132, "beginin": 132, "cycl": 132, "occur": 132, "diagon": 132, "covari": 132, "maddox": [132, 150], "wjmaddox": 132, "swa_gaussian": 132, "loader": 132, "bachnorm": 132, "initialize_stat": 132, "dictionari": [132, 142], "coeffici": 132, "destin": 132, "keep_var": 132, "greater": 132, "pixel_regress": 135, "attr": 135, "_deepensembl": 135, "singleton": 135, "balaji": [135, 150], "lakshminarayanan": [135, 150], "pritzel": [135, 150], "scalabl": [135, 150], "footprint": 136, "weight_subset": 137, "hessian_struct": 137, "kron": 137, "pred_typ": 137, "glm": 137, "link_approx": 137, "probit": 137, "optimize_prior_precis": 137, "structur": [137, 149], "hessian": 137, "matrix": [137, 139], "bridg": 137, "bridge_norm": 137, "daxberg": [137, 150], "redux": [137, 150], "effortless": [137, 150], "2021": [137, 150], "cuda": [138, 139, 140, 141], "tey": [138, 150], "azizpour": [138, 150], "smith": [138, 150], "popul": 138, "raise_count": 138, "counter": 138, "replace_lay": 138, "mcbatchnorm2d": 138, "reset_count": 138, "set_accumul": 138, "init_w": [139, 141], "init_b": [139, 141], "max_it": [139, 140, 141], "save_logit": [139, 140, 141], "progress": [139, 140, 141, 148], "bar": [139, 140, 141], "set_temperatur": [139, 140, 141], "val_w": [139, 141], "val_b": [139, 141], "init_v": 140, "ident": 142, "distanc": 142, "tau": 142, "cutmix": 142, "logsumexp": 142, "postprocess": 142, "cli": [142, 144, 145, 146], "autom": 142, "twice": 142, "onc": 142, "anyth": [142, 144, 145], "save_feat": 142, "inner": 142, "on_test_epoch_end": [142, 143, 144, 145], "collect": [142, 143, 144, 145], "test_step": [142, 143, 144, 145], "on_test_start": [142, 143, 144], "storag": 142, "on_train_start": [142, 143, 144], "on_validation_epoch_end": [142, 143, 144, 145], "validation_step": [142, 143, 144, 145], "on_validation_start": [142, 143, 144], "save_results_to_csv": 142, "batch_idx": [142, 143, 144], "dataloader_idx": [142, 143, 144], "training_step": [142, 143, 144, 145], "num_image_plot": 143, "evaluation_forward": [143, 144], "dimension": [143, 144], "num_samples_to_plot": 145, "subsampl": 145, "consum": 145, "log_segmentation_plot": 145, "onto": 145, "websit": 146, "mind": 146, "major": 146, "symmetri": 146, "emanuel": [146, 150], "aldea": [146, 150], "2024": [146, 150], "andrei": [146, 150], "bursuc": [146, 150], "severin": [146, 150], "dubuisson": [146, 150], "isabel": [146, 150], "bloch": [146, 150], "adrien": [146, 150], "lafag": [146, 149, 150], "enzo": [146, 150], "tartaglion": [146, 150], "geoffrei": [146, 150], "daniel": [146, 150], "jean": [146, 150], "marc": [146, 150], "martinez": [146, 150], "autonom": [146, 150], "drive": [146, 150], "xuanlong": [146, 150], "yu": [146, 150], "angel": 146, "tena": 146, "r\u00e9mi": 146, "kazmierczak": 146, "s\u00e9verin": 146, "filliat": 146, "bmvc": [146, 150], "pypi": 146, "quickstart": 146, "guid": [146, 149], "configur": [146, 149], "experi": [146, 147, 149], "scope": 146, "guidelin": 146, "search": 146, "latter": 147, "access": [147, 149], "git": 147, "cd": 147, "conda": 147, "latest": 147, "opencv": 147, "tabular": 147, "panda": 147, "aforement": 147, "mandatori": 147, "IN": 148, "wait": 148, "pointwis": 148, "multinoulli": 148, "belong": 148, "conceptu": 148, "known": 148, "trust": 148, "why": 148, "monitor": 149, "leverag": 149, "benefit": 149, "ligthn": 149, "calibration_set": 149, "custom": 149, "mymodel": 149, "uncalibr": 149, "begin": 149, "ts_": 149, "insur": 149, "particular": 149, "prefer": 149, "pipelin": 149, "packed_resnet": 149, "might": 149, "actual": 149, "exhaust": 150, "cite": 150, "maximilian": 150, "arash": 150, "dimitrij": 150, "georg": 150, "julien": 150, "korai": 150, "daan": 150, "yarin": 150, "gal": 150, "zoubin": 150, "ghahramani": 150, "pavel": 150, "dmitrii": 150, "dmitri": 150, "andrew": 150, "gordon": 150, "weslei": 150, "snapshot": 150, "gao": 150, "huang": 150, "yixuan": 150, "geoff": 150, "zhuang": 150, "liu": 150, "john": 150, "hopcroft": 150, "kilian": 150, "yeme": 150, "wen": 150, "dustin": 150, "tran": 150, "jimmi": 150, "subnetwork": 150, "marton": 150, "havasi": 150, "rodolph": 150, "jenatton": 150, "stanislav": 150, "fort": 150, "jeremiah": 150, "zhe": 150, "jasper": 150, "snoek": 150, "dai": 150, "empir": 150, "hongyi": 150, "zhang": 150, "moustapha": 150, "ciss": 150, "dauphin": 150, "lopez": 150, "paz": 150, "surprisingli": 150, "francesco": 150, "pinto": 150, "harri": 150, "yang": 150, "ser": 150, "nam": 150, "lim": 150, "philip": 150, "torr": 150, "puneet": 150, "dokania": 150, "deng": 150, "bao": 150, "lanq": 150, "peilin": 150, "zhao": 150, "pheng": 150, "ann": 150, "heng": 150, "min": 150, "ling": 150, "openaccess": 150, "thecvf": 150, "cvpr2023": 150, "wang_on_the_pitfall_of_mixup_for_uncertainty_calibration_cvpr_2023_pap": 150, "__": 150, "tailor": 150, "quentin": 150, "bouniot": 150, "pavlo": 150, "mozharovskyi": 150, "florenc": 150, "alch\u00e9": 150, "buc": 150, "chuan": 150, "mathia": 150, "hossein": 150, "kevin": 150, "erik": 150, "agustinu": 150, "kristiadi": 150, "immer": 150, "runa": 150, "eschenhagen": 150, "matthia": 150, "bauer": 150, "philipp": 150, "hennig": 150, "tsung": 150, "yi": 150, "priya": 150, "ross": 150, "kaim": 150, "piotr": 150, "fr\u00e9d\u00e9ric": 150, "pennerath": 150, "brieuc": 150, "conan": 150, "guez": 150, "miguel": 150, "couceiro": 150, "rethink": 150, "incept": 150, "szegedi": 150, "vincent": 150, "vanhouck": 150, "sergei": 150, "ioff": 150, "jonathon": 150, "shlen": 150, "zbigniew": 150, "wojna": 150, "mahdi": 150, "pakdaman": 150, "gregori": 150, "milo": 150, "jeremi": 150, "mike": 150, "dusenberri": 150, "ghassen": 150, "jerfel": 150, "timothi": 150, "nguyen": 150, "linchuan": 150, "yonatan": 150, "ran": 150, "jeremia": 150, "till": 150, "bungert": 150, "carsten": 150, "l\u00fcth": 150, "michael": 150, "baumgartn": 150, "klau": 150, "maier": 150, "hein": 150, "lena": 150, "paul": 150, "jaeger": 150, "leon": 150, "yoshua": 150, "patrick": 150, "yaroslav": 150, "bulatov": 150, "alex": 150, "krizhevski": 150, "mit": 150, "tech": 150, "report": 150, "human": 150, "joshua": 150, "peterson": 150, "ruairidh": 150, "battledai": 150, "griffith": 150, "olga": 150, "russakovski": 150, "iccv": 150, "revisit": 150, "studi": 150, "annot": 150, "jiaheng": 150, "wei": 150, "zhaowei": 150, "zhu": 150, "hao": 150, "cheng": 150, "tongliang": 150, "gang": 150, "niu": 150, "natur": 150, "unsupervis": 150, "yuval": 150, "netzer": 150, "tao": 150, "coat": 150, "alessandro": 150, "bissacco": 150, "bo": 150, "wu": 150, "ng": 150, "workshop": 150, "2011": 150, "databas": 150, "jia": 150, "richard": 150, "socher": 150, "kai": 150, "fei": 150, "2009": 150, "adversari": 150, "steven": 150, "basart": 150, "jacob": 150, "steinhardt": 150, "dawn": 150, "song": 150, "critic": 150, "analysi": 150, "saurav": 150, "kadavath": 150, "frank": 150, "evan": 150, "dorundo": 150, "rahul": 150, "desai": 150, "tyler": 150, "samyak": 150, "parajuli": 150, "haoqi": 150, "zhizhong": 150, "litong": 150, "feng": 150, "wayn": 150, "alina": 150, "hassan": 150, "rom": 150, "neil": 150, "alldrin": 150, "uijl": 150, "ivan": 150, "krasin": 150, "jordi": 150, "pont": 150, "tuset": 150, "shahab": 150, "kamali": 150, "ijcv": 150, "01437": 150, "residu": 150, "xiangyu": 150, "shaoq": 150, "ren": 150, "jian": 150, "zagoruyko": 150, "niko": 150, "komodaki": 150, "karen": 150, "simonyan": 150, "zisserman": 150, "filter": 150, "respons": 150, "elimin": 150, "saurabh": 150, "singh": 150, "shankar": 150, "krishnan": 150, "auto_tutorials_sourc": 151}, "objects": {"torch_uncertainty.baselines.classification": [[15, 0, 1, "", "ResNetBaseline"], [16, 0, 1, "", "VGGBaseline"], [17, 0, 1, "", "WideResNetBaseline"]], "torch_uncertainty.baselines.depth": [[18, 0, 1, "", "BTSBaseline"]], "torch_uncertainty.baselines.regression": [[19, 0, 1, "", "MLPBaseline"]], "torch_uncertainty.baselines.segmentation": [[20, 0, 1, "", "DeepLabBaseline"], [21, 0, 1, "", "SegFormerBaseline"]], "torch_uncertainty.datamodules": [[22, 0, 1, "", "BankMarketingDataModule"], [23, 0, 1, "", "CIFAR100DataModule"], [24, 0, 1, "", "CIFAR10DataModule"], [25, 0, 1, "", "DOTA2GamesDataModule"], [26, 0, 1, "", "HTRU2DataModule"], [27, 0, 1, "", "ImageNetDataModule"], [28, 0, 1, "", "MNISTDataModule"], [29, 0, 1, "", "OnlineShoppersDataModule"], [30, 0, 1, "", "SpamBaseDataModule"], [31, 0, 1, "", "TinyImageNetDataModule"], [32, 0, 1, "", "UCIRegressionDataModule"]], "torch_uncertainty.datamodules.CIFAR100DataModule": [[23, 1, 1, "", "test_dataloader"], [23, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.CIFAR10DataModule": [[24, 1, 1, "", "test_dataloader"], [24, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.ImageNetDataModule": [[27, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.MNISTDataModule": [[28, 1, 1, "", "prepare_data"], [28, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.TinyImageNetDataModule": [[31, 1, 1, "", "test_dataloader"], [31, 1, 1, "", "train_dataloader"], [31, 1, 1, "", "val_dataloader"]], "torch_uncertainty.datamodules.UCIRegressionDataModule": [[32, 1, 1, "", "prepare_data"], [32, 1, 1, "", "setup"]], "torch_uncertainty.datamodules.segmentation": [[33, 0, 1, "", "CamVidDataModule"], [34, 0, 1, "", "CityscapesDataModule"], [35, 0, 1, "", "MUADDataModule"]], "torch_uncertainty.datasets": [[36, 0, 1, "", "Fractals"], [37, 0, 1, "", "FrostImages"], [38, 0, 1, "", "KITTIDepth"], [39, 0, 1, "", "MUAD"], [40, 0, 1, "", "NYUv2"]], "torch_uncertainty.datasets.classification": [[41, 0, 1, "", "CIFAR100C"], [42, 0, 1, "", "CIFAR100N"], [43, 0, 1, "", "CIFAR10C"], [44, 0, 1, "", "CIFAR10H"], [45, 0, 1, "", "CIFAR10N"], [46, 0, 1, "", "ImageNetA"], [47, 0, 1, "", "ImageNetC"], [48, 0, 1, "", "ImageNetO"], [49, 0, 1, "", "ImageNetR"], [50, 0, 1, "", "MNISTC"], [51, 0, 1, "", "NotMNIST"], [52, 0, 1, "", "OpenImageO"], [53, 0, 1, "", "TinyImageNet"], [54, 0, 1, "", "TinyImageNetC"]], "torch_uncertainty.datasets.classification.CIFAR10C": [[43, 1, 1, "", "download"], [43, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.MNISTC": [[50, 1, 1, "", "download"], [50, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.TinyImageNetC": [[54, 1, 1, "", "download"]], "torch_uncertainty.datasets.classification.uci": [[55, 0, 1, "", "BankMarketing"], [56, 0, 1, "", "DOTA2Games"], [57, 0, 1, "", "HTRU2"], [58, 0, 1, "", "OnlineShoppers"], [59, 0, 1, "", "SpamBase"]], "torch_uncertainty.datasets.classification.uci.BankMarketing": [[55, 1, 1, "", "download"]], "torch_uncertainty.datasets.classification.uci.DOTA2Games": [[56, 1, 1, "", "download"]], "torch_uncertainty.datasets.regression": [[60, 0, 1, "", "UCIRegression"]], "torch_uncertainty.datasets.regression.UCIRegression": [[60, 1, 1, "", "download"]], "torch_uncertainty.datasets.segmentation": [[61, 0, 1, "", "CamVid"], [62, 0, 1, "", "Cityscapes"]], "torch_uncertainty.datasets.segmentation.CamVid": [[61, 2, 1, "", "color_palette"], [61, 1, 1, "", "decode_target"], [61, 1, 1, "", "download"], [61, 1, 1, "", "encode_target"]], "torch_uncertainty.datasets.segmentation.Cityscapes": [[62, 2, 1, "", "color_palette"], [62, 1, 1, "", "decode_target"], [62, 1, 1, "", "encode_target"], [62, 1, 1, "", "plot_sample"]], "torch_uncertainty.layers": [[63, 0, 1, "", "BatchConv2d"], [64, 0, 1, "", "BatchLinear"], [65, 0, 1, "", "MaskedConv2d"], [66, 0, 1, "", "MaskedLinear"], [67, 0, 1, "", "PackedConv2d"], [68, 0, 1, "", "PackedLayerNorm"], [69, 0, 1, "", "PackedLinear"], [70, 0, 1, "", "PackedMultiheadAttention"], [71, 0, 1, "", "PackedTransformerDecoderLayer"], [72, 0, 1, "", "PackedTransformerEncoderLayer"]], "torch_uncertainty.layers.BatchConv2d": [[63, 1, 1, "", "from_conv2d"]], "torch_uncertainty.layers.BatchLinear": [[64, 1, 1, "", "from_linear"]], "torch_uncertainty.layers.PackedConv2d": [[67, 2, 1, "", "bias"], [67, 2, 1, "", "weight"]], "torch_uncertainty.layers.PackedMultiheadAttention": [[70, 1, 1, "", "forward"]], "torch_uncertainty.layers.PackedTransformerDecoderLayer": [[71, 1, 1, "", "forward"]], "torch_uncertainty.layers.PackedTransformerEncoderLayer": [[72, 1, 1, "", "forward"]], "torch_uncertainty.layers.bayesian": [[73, 0, 1, "", "BayesConv1d"], [74, 0, 1, "", "BayesConv2d"], [75, 0, 1, "", "BayesConv3d"], [76, 0, 1, "", "BayesLinear"], [77, 0, 1, "", "LPBNNConv2d"], [78, 0, 1, "", "LPBNNLinear"]], "torch_uncertainty.layers.bayesian.BayesLinear": [[76, 1, 1, "", "freeze"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "unfreeze"]], "torch_uncertainty.layers.distributions": [[79, 0, 1, "", "CauchyConvNd"], [80, 0, 1, "", "CauchyLinear"], [81, 0, 1, "", "LaplaceConvNd"], [82, 0, 1, "", "LaplaceLinear"], [83, 0, 1, "", "NormalConvNd"], [84, 0, 1, "", "NormalInverseGammaConvNd"], [85, 0, 1, "", "NormalInverseGammaLinear"], [86, 0, 1, "", "NormalLinear"], [87, 0, 1, "", "StudentTConvNd"], [88, 0, 1, "", "StudentTLinear"]], "torch_uncertainty.losses": [[89, 0, 1, "", "BCEWithLogitsLSLoss"], [90, 0, 1, "", "BetaNLL"], [91, 0, 1, "", "ConfidencePenaltyLoss"], [92, 0, 1, "", "ConflictualLoss"], [93, 0, 1, "", "DECLoss"], [94, 0, 1, "", "DERLoss"], [95, 0, 1, "", "DistributionNLLLoss"], [96, 0, 1, "", "ELBOLoss"], [97, 0, 1, "", "FocalLoss"], [98, 0, 1, "", "KLDiv"]], "torch_uncertainty.losses.ConfidencePenaltyLoss": [[91, 1, 1, "", "forward"]], "torch_uncertainty.losses.ConflictualLoss": [[92, 1, 1, "", "forward"]], "torch_uncertainty.losses.DistributionNLLLoss": [[95, 1, 1, "", "forward"]], "torch_uncertainty.losses.ELBOLoss": [[96, 1, 1, "", "forward"]], "torch_uncertainty.metrics": [[99, 0, 1, "", "AUSE"]], "torch_uncertainty.metrics.AUSE": [[99, 1, 1, "", "compute"], [99, 1, 1, "", "plot"], [99, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification": [[100, 0, 1, "", "AUGRC"], [101, 0, 1, "", "AURC"], [102, 0, 1, "", "AdaptiveCalibrationError"], [103, 0, 1, "", "BrierScore"], [104, 0, 1, "", "CalibrationError"], [105, 0, 1, "", "CategoricalNLL"], [106, 0, 1, "", "CovAt5Risk"], [107, 0, 1, "", "CovAtxRisk"], [108, 0, 1, "", "Disagreement"], [109, 0, 1, "", "Entropy"], [110, 0, 1, "", "FPR95"], [111, 0, 1, "", "FPRx"], [112, 0, 1, "", "GroupingLoss"], [113, 0, 1, "", "MeanIntersectionOverUnion"], [114, 0, 1, "", "MutualInformation"], [115, 0, 1, "", "RiskAt80Cov"], [116, 0, 1, "", "RiskAtxCov"], [117, 0, 1, "", "VariationRatio"]], "torch_uncertainty.metrics.classification.AUGRC": [[100, 1, 1, "", "compute"], [100, 1, 1, "", "plot"]], "torch_uncertainty.metrics.classification.AURC": [[101, 1, 1, "", "compute"], [101, 1, 1, "", "partial_compute"], [101, 1, 1, "", "plot"], [101, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.BrierScore": [[103, 1, 1, "", "compute"], [103, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CategoricalNLL": [[105, 1, 1, "", "compute"], [105, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CovAtxRisk": [[107, 1, 1, "", "compute"], [107, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Disagreement": [[108, 1, 1, "", "compute"], [108, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Entropy": [[109, 1, 1, "", "compute"], [109, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.FPRx": [[111, 1, 1, "", "compute"], [111, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.GroupingLoss": [[112, 1, 1, "", "compute"], [112, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion": [[113, 1, 1, "", "compute"]], "torch_uncertainty.metrics.classification.MutualInformation": [[114, 1, 1, "", "compute"], [114, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.RiskAtxCov": [[116, 1, 1, "", "compute"], [116, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.VariationRatio": [[117, 1, 1, "", "compute"]], "torch_uncertainty.metrics.regression": [[118, 0, 1, "", "DistributionNLL"], [119, 0, 1, "", "Log10"], [120, 0, 1, "", "MeanAbsoluteErrorInverse"], [121, 0, 1, "", "MeanGTRelativeAbsoluteError"], [122, 0, 1, "", "MeanGTRelativeSquaredError"], [123, 0, 1, "", "MeanSquaredErrorInverse"], [124, 0, 1, "", "MeanSquaredLogError"], [125, 0, 1, "", "SILog"], [126, 0, 1, "", "ThresholdAccuracy"]], "torch_uncertainty.metrics.regression.DistributionNLL": [[118, 1, 1, "", "compute"], [118, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.Log10": [[119, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse": [[120, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError": [[121, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError": [[122, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse": [[123, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredLogError": [[124, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.SILog": [[125, 1, 1, "", "compute"], [125, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.ThresholdAccuracy": [[126, 1, 1, "", "compute"], [126, 1, 1, "", "update"]], "torch_uncertainty.models": [[127, 0, 1, "", "BatchEnsemble"], [128, 0, 1, "", "CheckpointEnsemble"], [129, 0, 1, "", "EMA"], [130, 0, 1, "", "MCDropout"], [131, 0, 1, "", "SWA"], [132, 0, 1, "", "SWAG"], [133, 0, 1, "", "StochasticModel"], [134, 3, 1, "", "batch_ensemble"], [135, 3, 1, "", "deep_ensembles"], [136, 3, 1, "", "mc_dropout"]], "torch_uncertainty.models.BatchEnsemble": [[127, 1, 1, "", "forward"]], "torch_uncertainty.models.CheckpointEnsemble": [[128, 1, 1, "", "eval_forward"], [128, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.EMA": [[129, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.MCDropout": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "train"]], "torch_uncertainty.models.SWAG": [[132, 1, 1, "", "bn_update"], [132, 1, 1, "", "eval_forward"], [132, 1, 1, "", "initialize_stats"], [132, 1, 1, "", "sample"], [132, 1, 1, "", "state_dict"], [132, 1, 1, "", "update_wrapper"]], "torch_uncertainty.post_processing": [[137, 0, 1, "", "LaplaceApprox"], [138, 0, 1, "", "MCBatchNorm"], [139, 0, 1, "", "MatrixScaler"], [140, 0, 1, "", "TemperatureScaler"], [141, 0, 1, "", "VectorScaler"]], "torch_uncertainty.post_processing.MCBatchNorm": [[138, 1, 1, "", "fit"], [138, 1, 1, "", "raise_counters"], [138, 1, 1, "", "replace_layers"], [138, 1, 1, "", "reset_counters"], [138, 1, 1, "", "set_accumulate"]], "torch_uncertainty.post_processing.MatrixScaler": [[139, 1, 1, "", "fit"], [139, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.TemperatureScaler": [[140, 1, 1, "", "fit"], [140, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.VectorScaler": [[141, 1, 1, "", "fit"], [141, 1, 1, "", "set_temperature"]], "torch_uncertainty.routines": [[142, 0, 1, "", "ClassificationRoutine"], [143, 0, 1, "", "PixelRegressionRoutine"], [144, 0, 1, "", "RegressionRoutine"], [145, 0, 1, "", "SegmentationRoutine"]], "torch_uncertainty.routines.ClassificationRoutine": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "on_test_epoch_end"], [142, 1, 1, "", "on_test_start"], [142, 1, 1, "", "on_train_start"], [142, 1, 1, "", "on_validation_epoch_end"], [142, 1, 1, "", "on_validation_start"], [142, 1, 1, "", "save_results_to_csv"], [142, 1, 1, "", "test_step"], [142, 1, 1, "", "training_step"], [142, 1, 1, "", "validation_step"]], "torch_uncertainty.routines.PixelRegressionRoutine": [[143, 1, 1, "", "evaluation_forward"], [143, 1, 1, "", "forward"], [143, 1, 1, "", "on_test_epoch_end"], [143, 1, 1, "", "on_test_start"], [143, 1, 1, "", "on_train_start"], [143, 1, 1, "", "on_validation_epoch_end"], [143, 1, 1, "", "on_validation_start"], [143, 1, 1, "", "test_step"], [143, 1, 1, "", "training_step"], [143, 1, 1, "", "validation_step"]], "torch_uncertainty.routines.RegressionRoutine": [[144, 1, 1, "", "evaluation_forward"], [144, 1, 1, "", "forward"], [144, 1, 1, "", "on_test_epoch_end"], [144, 1, 1, "", "on_test_start"], [144, 1, 1, "", "on_train_start"], [144, 1, 1, "", "on_validation_epoch_end"], [144, 1, 1, "", "on_validation_start"], [144, 1, 1, "", "test_step"], [144, 1, 1, "", "training_step"], [144, 1, 1, "", "validation_step"]], "torch_uncertainty.routines.SegmentationRoutine": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "log_segmentation_plots"], [145, 1, 1, "", "on_test_epoch_end"], [145, 1, 1, "", "on_validation_epoch_end"], [145, 1, 1, "", "subsample"], [145, 1, 1, "", "test_step"], [145, 1, 1, "", "training_step"], [145, 1, 1, "", "validation_step"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": [0, 3, 4, 5, 6, 12, 148, 150], "routin": [0, 3, 5, 6, 8, 9, 11, 149], "classif": [0, 6, 7, 148, 150], "segment": 0, "regress": [0, 5, 11, 150], "pixelwis": 0, "baselin": 0, "monocular": 0, "depth": 0, "estim": 0, "layer": [0, 11, 149, 150], "ensembl": [0, 7, 10, 150], "bayesian": [0, 3, 150], "densiti": 0, "linear": 0, "convolut": 0, "model": [0, 3, 5, 6, 7, 8, 9, 11, 12, 134, 135, 136, 149, 150], "wrapper": [0, 6], "function": [0, 10], "class": 0, "metric": [0, 149, 150], "proper": 0, "score": 0, "out": 0, "distribut": [0, 11], "detect": 0, "select": [0, 7], "calibr": [0, 12, 150], "divers": 0, "other": [0, 4, 149], "loss": [0, 3, 5, 6, 7, 8, 9, 10, 11, 150], "post": [0, 14, 150], "process": [0, 14, 150], "method": [0, 14, 150], "scale": [0, 12, 150], "datamodul": [0, 12, 14], "uci": 0, "tabular": 0, "dataset": [0, 7, 10, 14, 150], "cross": [0, 150], "categori": 0, "tutori": 1, "comput": [2, 12, 151], "time": [2, 151], "train": [3, 5, 6, 7, 8, 9, 10, 11, 149], "neural": [3, 148, 150], "network": [3, 148, 150], "three": 3, "minut": 3, "foreword": 3, "lenet": [3, 6, 8, 9], "us": [3, 5, 6, 8, 9, 11, 149], "torchuncertainti": [3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 149], "lightn": [3, 5, 8, 9, 13, 149], "1": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "load": [3, 5, 6, 8, 9, 10, 11, 12], "util": [3, 5, 6, 8, 9, 11, 12], "2": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "The": [3, 5, 6, 8, 9, 11, 14, 148], "optim": [3, 5, 6, 10, 11], "recip": [3, 5], "3": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "creat": [3, 5, 6, 7, 8], "necessari": [3, 5, 6, 8], "variabl": [3, 5, 6, 8], "4": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "5": [3, 4, 5, 6, 8, 9, 10, 11, 12], "gather": [3, 5, 6, 8, 9], "everyth": [3, 5, 6, 8, 9], "6": [3, 5, 6, 8, 11, 12], "test": [3, 5, 6, 8, 9, 10], "corrupt": 4, "imag": [4, 10], "benchmark": [4, 11], "robust": 4, "nois": 4, "blur": 4, "weather": 4, "unus": 4, "deep": [5, 6, 7, 11, 150], "evidenti": [5, 6, 150], "toi": [5, 6], "exampl": [5, 6, 149], "mlp": [5, 11], "der": 5, "pytorch": [5, 8, 9, 149], "dec": 6, "improv": [7, 12], "paramet": 7, "effici": 7, "pack": [7, 10, 150], "download": 7, "instanti": 7, "visual": 7, "an": [7, 10], "from": [7, 10, 12, 147], "To": 7, "go": 7, "further": 7, "more": [7, 149], "concept": 7, "uncertainti": [7, 146, 148, 149, 150], "ml": 7, "group": [7, 150], "mont": [8, 9, 150], "carlo": [8, 9, 150], "batch": [8, 150], "normal": [8, 10, 150], "mcbn": 8, "wrap": 8, "mcbatchnorm": [8, 138], "dropout": [9, 150], "mc": 9, "defin": [9, 10], "trainer": [9, 11], "standard": 10, "classifi": 10, "cifar10": 10, "data": [10, 11, 150], "probabilist": 11, "build": [11, 14, 149], "set": [11, 12], "up": [11, 12], "7": 11, "differ": 11, "top": 12, "label": [12, 150], "temperatur": [12, 150], "": [12, 149], "hf": 12, "dataload": 12, "iter": 12, "ec": 12, "fit": 12, "scaler": 12, "again": 12, "note": 12, "cli": [13, 149], "guid": 13, "introduct": [13, 148], "configur": 13, "file": 13, "experi": 13, "folder": 13, "usag": [13, 149], "contribut": 14, "scope": 14, "common": 14, "guidelin": 14, "clean": 14, "develop": 14, "instal": [14, 146, 147], "document": 14, "local": 14, "licens": 14, "resnetbaselin": 15, "vggbaselin": 16, "wideresnetbaselin": 17, "btsbaselin": 18, "mlpbaselin": 19, "deeplabbaselin": 20, "segformerbaselin": 21, "bankmarketingdatamodul": 22, "cifar100datamodul": 23, "cifar10datamodul": 24, "dota2gamesdatamodul": 25, "htru2datamodul": 26, "imagenetdatamodul": 27, "mnistdatamodul": 28, "onlineshoppersdatamodul": 29, "spambasedatamodul": 30, "tinyimagenetdatamodul": 31, "uciregressiondatamodul": 32, "camviddatamodul": 33, "cityscapesdatamodul": 34, "muaddatamodul": 35, "fractal": 36, "frostimag": 37, "kittidepth": 38, "muad": [39, 150], "nyuv2": 40, "cifar100c": 41, "cifar100n": 42, "cifar10c": 43, "cifar10h": 44, "cifar10n": 45, "imageneta": 46, "imagenetc": 47, "imageneto": 48, "imagenetr": 49, "mnistc": 50, "notmnist": 51, "openimageo": 52, "tinyimagenet": 53, "tinyimagenetc": 54, "bankmarket": 55, "dota2gam": 56, "htru2": 57, "onlineshopp": 58, "spambas": 59, "uciregress": 60, "camvid": 61, "cityscap": 62, "batchconv2d": 63, "batchlinear": 64, "maskedconv2d": 65, "maskedlinear": 66, "packedconv2d": 67, "packedlayernorm": 68, "packedlinear": 69, "packedmultiheadattent": 70, "packedtransformerdecoderlay": 71, "packedtransformerencoderlay": 72, "bayesconv1d": 73, "bayesconv2d": 74, "bayesconv3d": 75, "bayeslinear": 76, "lpbnnconv2d": 77, "lpbnnlinear": 78, "cauchyconvnd": 79, "cauchylinear": 80, "laplaceconvnd": 81, "laplacelinear": 82, "normalconvnd": 83, "normalinversegammaconvnd": 84, "normalinversegammalinear": 85, "normallinear": 86, "studenttconvnd": 87, "studenttlinear": 88, "bcewithlogitslsloss": 89, "betanl": 90, "confidencepenaltyloss": 91, "conflictualloss": 92, "decloss": 93, "derloss": 94, "distributionnllloss": 95, "elboloss": 96, "focalloss": 97, "kldiv": 98, "aus": 99, "augrc": 100, "aurc": 101, "adaptivecalibrationerror": 102, "brierscor": 103, "calibrationerror": 104, "categoricalnl": 105, "covat5risk": 106, "covatxrisk": 107, "disagr": 108, "entropi": [109, 150], "fpr95": 110, "fprx": 111, "groupingloss": 112, "meanintersectionoverunion": 113, "mutualinform": 114, "riskat80cov": 115, "riskatxcov": 116, "variationratio": 117, "distributionnl": 118, "log10": 119, "meanabsoluteerrorinvers": 120, "meangtrelativeabsoluteerror": 121, "meangtrelativesquarederror": 122, "meansquarederrorinvers": 123, "meansquaredlogerror": 124, "silog": 125, "thresholdaccuraci": 126, "batchensembl": [127, 150], "checkpointensembl": [128, 150], "ema": 129, "mcdropout": 130, "swa": 131, "swag": 132, "stochasticmodel": 133, "torch_uncertainti": [134, 135, 136], "batch_ensembl": 134, "deep_ensembl": 135, "mc_dropout": 136, "laplaceapprox": 137, "matrixscal": 139, "temperaturescal": 140, "vectorscal": 141, "classificationroutin": 142, "pixelregressionroutin": 143, "regressionroutin": 144, "segmentationroutin": 145, "welcom": 146, "torch": 146, "offici": 146, "implement": 146, "content": 146, "indic": 146, "tabl": 146, "pypi": 147, "sourc": 147, "option": 147, "short": 148, "background": 148, "overconfid": 148, "quickstart": 149, "awar": 149, "your": 149, "first": 149, "tool": 149, "procedur": 149, "base": 149, "beta": 150, "nll": 150, "variat": 150, "infer": 150, "stochast": 150, "weight": 150, "averag": 150, "gaussian": 150, "snapshotensembl": 150, "masksembl": 150, "mimo": 150, "lpbnn": 150, "augment": 150, "mixup": 150, "regmixup": 150, "mixupio": 150, "warp": 150, "vector": 150, "matrix": 150, "laplac": 150, "approxim": 150, "focal": 150, "conflictu": 150, "binari": 150, "logit": 150, "smooth": 150, "expect": 150, "error": 150, "adapt": 150, "area": 150, "under": 150, "risk": 150, "coverag": 150, "curv": 150, "gener": 150, "mnist": 150, "c": 150, "Not": 150, "cifar": 150, "10": 150, "100": 150, "tini": 150, "imagenet": 150, "h": 150, "n": 150, "svhn": 150, "A": 150, "0": 150, "r": 150, "textur": 150, "openimag": 150, "o": 150, "architectur": 150, "resnet": 150, "wide": 150, "vgg": 150}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_codeautolink": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Routines": [[0, "routines"]], "Classification": [[0, "classification"], [0, "id1"], [0, "id4"], [0, "id8"], [0, "id11"]], "Segmentation": [[0, "segmentation"], [0, "id3"], [0, "id6"], [0, "id10"], [0, "id14"]], "Regression": [[0, "regression"], [0, "id2"], [0, "id5"], [0, "id9"], [0, "id13"]], "Pixelwise Regression": [[0, "pixelwise-regression"]], "Baselines": [[0, "baselines"]], "Monocular Depth Estimation": [[0, "monocular-depth-estimation"]], "Layers": [[0, "layers"], [150, "layers"]], "Ensemble layers": [[0, "ensemble-layers"]], "Bayesian layers": [[0, "bayesian-layers"]], "Density layers": [[0, "density-layers"]], "Linear Layers": [[0, "linear-layers"]], "Convolution Layers": [[0, "convolution-layers"]], "Models": [[0, "models"]], "Wrappers": [[0, "wrappers"]], "Functions": [[0, "functions"]], "Classes": [[0, "classes"]], "Metrics": [[0, "metrics"], [150, "metrics"]], "Proper Scores": [[0, "proper-scores"]], "Out-of-Distribution Detection": [[0, "out-of-distribution-detection"]], "Selective Classification": [[0, "selective-classification"], [7, "selective-classification"]], "Calibration": [[0, "calibration"]], "Diversity": [[0, "diversity"]], "Others": [[0, "others"], [0, "id7"]], "Losses": [[0, "losses"], [150, "losses"]], "Post-Processing Methods": [[0, "post-processing-methods"], [150, "post-processing-methods"]], "Scaling Methods": [[0, "scaling-methods"]], "Datamodules": [[0, "datamodules"]], "UCI Tabular Classification": [[0, "uci-tabular-classification"], [0, "id12"]], "Datasets": [[0, "datasets"], [150, "datasets"]], "Others & Cross-Categories": [[0, "others-cross-categories"]], "Tutorials": [[1, "tutorials"]], "Computation times": [[2, "computation-times"], [151, "computation-times"]], "Train a Bayesian Neural Network in Three Minutes": [[3, "train-a-bayesian-neural-network-in-three-minutes"]], "Foreword on Bayesian Neural Networks": [[3, "foreword-on-bayesian-neural-networks"]], "Training a Bayesian LeNet using TorchUncertainty models and Lightning": [[3, "training-a-bayesian-lenet-using-torchuncertainty-models-and-lightning"]], "1. Loading the utilities": [[3, "loading-the-utilities"], [5, "loading-the-utilities"], [6, "loading-the-utilities"], [8, "loading-the-utilities"], [9, "loading-the-utilities"], [11, "loading-the-utilities"]], "2. The Optimization Recipe": [[3, "the-optimization-recipe"], [5, "the-optimization-recipe"]], "3. Creating the necessary variables": [[3, "creating-the-necessary-variables"], [5, "creating-the-necessary-variables"], [6, "creating-the-necessary-variables"]], "4. The Loss and the Training Routine": [[3, "the-loss-and-the-training-routine"], [5, "the-loss-and-the-training-routine"], [6, "the-loss-and-the-training-routine"]], "5. Gathering Everything and Training the Model": [[3, "gathering-everything-and-training-the-model"], [5, "gathering-everything-and-training-the-model"], [6, "gathering-everything-and-training-the-model"]], "6. Testing the Model": [[3, "testing-the-model"], [5, "testing-the-model"], [6, "testing-the-model"], [8, "testing-the-model"]], "References": [[3, "references"], [6, "references"], [12, "references"], [148, "references"], [150, "references"]], "Corrupting Images with TorchUncertainty to Benchmark Robustness": [[4, "corrupting-images-with-torchuncertainty-to-benchmark-robustness"]], "1. Noise Corruptions": [[4, "noise-corruptions"]], "2. Blur Corruptions": [[4, "blur-corruptions"]], "3. Weather Corruptions": [[4, "weather-corruptions"]], "4. Other Corruptions": [[4, "other-corruptions"]], "5. Unused Corruptions": [[4, "unused-corruptions"]], "Reference": [[4, "reference"], [5, "reference"]], "Deep Evidential Regression on a Toy Example": [[5, "deep-evidential-regression-on-a-toy-example"]], "Training a MLP with DER using TorchUncertainty models and PyTorch Lightning": [[5, "training-a-mlp-with-der-using-torchuncertainty-models-and-pytorch-lightning"]], "Deep Evidential Classification on a Toy Example": [[6, "deep-evidential-classification-on-a-toy-example"]], "Training a LeNet with DEC using TorchUncertainty models": [[6, "training-a-lenet-with-dec-using-torchuncertainty-models"]], "2. Creating the Optimizer Wrapper": [[6, "creating-the-optimizer-wrapper"]], "Improved Ensemble parameter-efficiency with Packed-Ensembles": [[7, "improved-ensemble-parameter-efficiency-with-packed-ensembles"]], "1. Download, instantiate and visualize the datasets": [[7, "download-instantiate-and-visualize-the-datasets"]], "2. Create & train the model": [[7, "create-train-the-model"]], "3. Training an ensemble of models with TorchUncertainty": [[7, "training-an-ensemble-of-models-with-torchuncertainty"]], "4. From Deep Ensembles to Packed-Ensembles": [[7, "from-deep-ensembles-to-packed-ensembles"]], "To Go Further & More Concepts of Uncertainty in ML": [[7, "to-go-further-more-concepts-of-uncertainty-in-ml"]], "Grouping Loss": [[7, "grouping-loss"], [150, "grouping-loss"]], "Training a LeNet with Monte Carlo Batch Normalization": [[8, "training-a-lenet-with-monte-carlo-batch-normalization"]], "Training a LeNet with MCBN using TorchUncertainty models and PyTorch Lightning": [[8, "training-a-lenet-with-mcbn-using-torchuncertainty-models-and-pytorch-lightning"]], "2. Creating the necessary variables": [[8, "creating-the-necessary-variables"]], "3. The Loss and the Training Routine": [[8, "the-loss-and-the-training-routine"], [9, "the-loss-and-the-training-routine"]], "4. Gathering Everything and Training the Model": [[8, "gathering-everything-and-training-the-model"], [9, "gathering-everything-and-training-the-model"]], "5. Wrapping the Model in a MCBatchNorm": [[8, "wrapping-the-model-in-a-mcbatchnorm"]], "Training a LeNet with Monte-Carlo Dropout": [[9, "training-a-lenet-with-monte-carlo-dropout"]], "Training a LeNet with MC Dropout using TorchUncertainty models and PyTorch Lightning": [[9, "training-a-lenet-with-mc-dropout-using-torchuncertainty-models-and-pytorch-lightning"]], "2. Defining the Model and the Trainer": [[9, "defining-the-model-and-the-trainer"]], "5. Testing the Model": [[9, "testing-the-model"]], "From a Standard Classifier to a Packed-Ensemble": [[10, "from-a-standard-classifier-to-a-packed-ensemble"]], "Dataset": [[10, "dataset"]], "Training an image Packed-Ensemble classifier": [[10, "training-an-image-packed-ensemble-classifier"]], "1. Load and normalize CIFAR10": [[10, "load-and-normalize-cifar10"]], "2. Define a Packed-Ensemble from a standard classifier": [[10, "define-a-packed-ensemble-from-a-standard-classifier"]], "3. Define a Loss function and optimizer": [[10, "define-a-loss-function-and-optimizer"]], "4. Train the Packed-Ensemble on the training data": [[10, "train-the-packed-ensemble-on-the-training-data"]], "5. Test the Packed-Ensemble on the test data": [[10, "test-the-packed-ensemble-on-the-test-data"]], "Deep Probabilistic Regression": [[11, "deep-probabilistic-regression"]], "Building a MLP for Probabilistic Regression using TorchUncertainty distribution layers": [[11, "building-a-mlp-for-probabilistic-regression-using-torchuncertainty-distribution-layers"]], "2. Building the MLP model": [[11, "building-the-mlp-model"]], "3. Setting up the data": [[11, "setting-up-the-data"]], "4. Setting up the model and trainer": [[11, "setting-up-the-model-and-trainer"]], "5. The Loss, the Optimizer and the Training Routine": [[11, "the-loss-the-optimizer-and-the-training-routine"]], "6. Training the model": [[11, "training-the-model"]], "7. Benchmarking different distributions": [[11, "benchmarking-different-distributions"]], "Improve Top-label Calibration with Temperature Scaling": [[12, "improve-top-label-calibration-with-temperature-scaling"]], "1. Loading the Utilities": [[12, "loading-the-utilities"]], "2. Loading a model from TorchUncertainty\u2019s HF": [[12, "loading-a-model-from-torchuncertainty-s-hf"]], "3. Setting up the Datamodule and Dataloaders": [[12, "setting-up-the-datamodule-and-dataloaders"]], "4. Iterating on the Dataloader and Computing the ECE": [[12, "iterating-on-the-dataloader-and-computing-the-ece"]], "5. Fitting the Scaler to Improve the Calibration": [[12, "fitting-the-scaler-to-improve-the-calibration"]], "6. Iterating Again to Compute the Improved ECE": [[12, "iterating-again-to-compute-the-improved-ece"]], "Notes": [[12, "notes"]], "CLI Guide": [[13, "cli-guide"]], "Introduction to the Lightning CLI": [[13, "introduction-to-the-lightning-cli"]], "Configuration files": [[13, "configuration-files"]], "Experiment folder usage": [[13, "experiment-folder-usage"]], "Contributing": [[14, "contributing"]], "The scope of TorchUncertainty": [[14, "the-scope-of-torchuncertainty"]], "Common guidelines": [[14, "common-guidelines"]], "Clean development install of TorchUncertainty": [[14, "clean-development-install-of-torchuncertainty"]], "Build the documentation locally": [[14, "build-the-documentation-locally"]], "Guidelines": [[14, "guidelines"]], "Datasets & Datamodules": [[14, "datasets-datamodules"]], "Post-processing methods": [[14, "post-processing-methods"]], "License": [[14, "license"]], "ResNetBaseline": [[15, "resnetbaseline"]], "VGGBaseline": [[16, "vggbaseline"]], "WideResNetBaseline": [[17, "wideresnetbaseline"]], "BTSBaseline": [[18, "btsbaseline"]], "MLPBaseline": [[19, "mlpbaseline"]], "DeepLabBaseline": [[20, "deeplabbaseline"]], "SegFormerBaseline": [[21, "segformerbaseline"]], "BankMarketingDataModule": [[22, "bankmarketingdatamodule"]], "CIFAR100DataModule": [[23, "cifar100datamodule"]], "CIFAR10DataModule": [[24, "cifar10datamodule"]], "DOTA2GamesDataModule": [[25, "dota2gamesdatamodule"]], "HTRU2DataModule": [[26, "htru2datamodule"]], "ImageNetDataModule": [[27, "imagenetdatamodule"]], "MNISTDataModule": [[28, "mnistdatamodule"]], "OnlineShoppersDataModule": [[29, "onlineshoppersdatamodule"]], "SpamBaseDataModule": [[30, "spambasedatamodule"]], "TinyImageNetDataModule": [[31, "tinyimagenetdatamodule"]], "UCIRegressionDataModule": [[32, "uciregressiondatamodule"]], "CamVidDataModule": [[33, "camviddatamodule"]], "CityscapesDataModule": [[34, "cityscapesdatamodule"]], "MUADDataModule": [[35, "muaddatamodule"]], "Fractals": [[36, "fractals"]], "FrostImages": [[37, "frostimages"]], "KITTIDepth": [[38, "kittidepth"]], "MUAD": [[39, "muad"], [150, "muad"]], "NYUv2": [[40, "nyuv2"]], "CIFAR100C": [[41, "cifar100c"]], "CIFAR100N": [[42, "cifar100n"]], "CIFAR10C": [[43, "cifar10c"]], "CIFAR10H": [[44, "cifar10h"]], "CIFAR10N": [[45, "cifar10n"]], "ImageNetA": [[46, "imageneta"]], "ImageNetC": [[47, "imagenetc"]], "ImageNetO": [[48, "imageneto"]], "ImageNetR": [[49, "imagenetr"]], "MNISTC": [[50, "mnistc"]], "NotMNIST": [[51, "notmnist"]], "OpenImageO": [[52, "openimageo"]], "TinyImageNet": [[53, "tinyimagenet"]], "TinyImageNetC": [[54, "tinyimagenetc"]], "BankMarketing": [[55, "bankmarketing"]], "DOTA2Games": [[56, "dota2games"]], "HTRU2": [[57, "htru2"]], "OnlineShoppers": [[58, "onlineshoppers"]], "SpamBase": [[59, "spambase"]], "UCIRegression": [[60, "uciregression"]], "CamVid": [[61, "camvid"]], "Cityscapes": [[62, "cityscapes"]], "BatchConv2d": [[63, "batchconv2d"]], "BatchLinear": [[64, "batchlinear"]], "MaskedConv2d": [[65, "maskedconv2d"]], "MaskedLinear": [[66, "maskedlinear"]], "PackedConv2d": [[67, "packedconv2d"]], "PackedLayerNorm": [[68, "packedlayernorm"]], "PackedLinear": [[69, "packedlinear"]], "PackedMultiheadAttention": [[70, "packedmultiheadattention"]], "PackedTransformerDecoderLayer": [[71, "packedtransformerdecoderlayer"]], "PackedTransformerEncoderLayer": [[72, "packedtransformerencoderlayer"]], "BayesConv1d": [[73, "bayesconv1d"]], "BayesConv2d": [[74, "bayesconv2d"]], "BayesConv3d": [[75, "bayesconv3d"]], "BayesLinear": [[76, "bayeslinear"]], "LPBNNConv2d": [[77, "lpbnnconv2d"]], "LPBNNLinear": [[78, "lpbnnlinear"]], "CauchyConvNd": [[79, "cauchyconvnd"]], "CauchyLinear": [[80, "cauchylinear"]], "LaplaceConvNd": [[81, "laplaceconvnd"]], "LaplaceLinear": [[82, "laplacelinear"]], "NormalConvNd": [[83, "normalconvnd"]], "NormalInverseGammaConvNd": [[84, "normalinversegammaconvnd"]], "NormalInverseGammaLinear": [[85, "normalinversegammalinear"]], "NormalLinear": [[86, "normallinear"]], "StudentTConvNd": [[87, "studenttconvnd"]], "StudentTLinear": [[88, "studenttlinear"]], "BCEWithLogitsLSLoss": [[89, "bcewithlogitslsloss"]], "BetaNLL": [[90, "betanll"]], "ConfidencePenaltyLoss": [[91, "confidencepenaltyloss"]], "ConflictualLoss": [[92, "conflictualloss"]], "DECLoss": [[93, "decloss"]], "DERLoss": [[94, "derloss"]], "DistributionNLLLoss": [[95, "distributionnllloss"]], "ELBOLoss": [[96, "elboloss"]], "FocalLoss": [[97, "focalloss"]], "KLDiv": [[98, "kldiv"]], "AUSE": [[99, "ause"]], "AUGRC": [[100, "augrc"]], "AURC": [[101, "aurc"]], "AdaptiveCalibrationError": [[102, "adaptivecalibrationerror"]], "BrierScore": [[103, "brierscore"]], "CalibrationError": [[104, "calibrationerror"]], "CategoricalNLL": [[105, "categoricalnll"]], "CovAt5Risk": [[106, "covat5risk"]], "CovAtxRisk": [[107, "covatxrisk"]], "Disagreement": [[108, "disagreement"]], "Entropy": [[109, "entropy"]], "FPR95": [[110, "fpr95"]], "FPRx": [[111, "fprx"]], "GroupingLoss": [[112, "groupingloss"]], "MeanIntersectionOverUnion": [[113, "meanintersectionoverunion"]], "MutualInformation": [[114, "mutualinformation"]], "RiskAt80Cov": [[115, "riskat80cov"]], "RiskAtxCov": [[116, "riskatxcov"]], "VariationRatio": [[117, "variationratio"]], "DistributionNLL": [[118, "distributionnll"]], "Log10": [[119, "log10"]], "MeanAbsoluteErrorInverse": [[120, "meanabsoluteerrorinverse"]], "MeanGTRelativeAbsoluteError": [[121, "meangtrelativeabsoluteerror"]], "MeanGTRelativeSquaredError": [[122, "meangtrelativesquarederror"]], "MeanSquaredErrorInverse": [[123, "meansquarederrorinverse"]], "MeanSquaredLogError": [[124, "meansquaredlogerror"]], "SILog": [[125, "silog"]], "ThresholdAccuracy": [[126, "thresholdaccuracy"]], "BatchEnsemble": [[127, "batchensemble"], [150, "batchensemble"]], "CheckpointEnsemble": [[128, "checkpointensemble"], [150, "checkpointensemble"]], "EMA": [[129, "ema"]], "MCDropout": [[130, "mcdropout"]], "SWA": [[131, "swa"]], "SWAG": [[132, "swag"]], "StochasticModel": [[133, "stochasticmodel"]], "torch_uncertainty.models.batch_ensemble": [[134, "torch-uncertainty-models-batch-ensemble"]], "torch_uncertainty.models.deep_ensembles": [[135, "torch-uncertainty-models-deep-ensembles"]], "torch_uncertainty.models.mc_dropout": [[136, "torch-uncertainty-models-mc-dropout"]], "LaplaceApprox": [[137, "laplaceapprox"]], "MCBatchNorm": [[138, "mcbatchnorm"]], "MatrixScaler": [[139, "matrixscaler"]], "TemperatureScaler": [[140, "temperaturescaler"]], "VectorScaler": [[141, "vectorscaler"]], "ClassificationRoutine": [[142, "classificationroutine"]], "PixelRegressionRoutine": [[143, "pixelregressionroutine"]], "RegressionRoutine": [[144, "regressionroutine"]], "SegmentationRoutine": [[145, "segmentationroutine"]], "Welcome to Torch Uncertainty": [[146, "welcome-to-torch-uncertainty"]], "Installation": [[146, "installation"], [147, "installation"]], "Official Implementations": [[146, "official-implementations"]], "Contents:": [[146, null]], "Indices and tables": [[146, "indices-and-tables"]], "From PyPI": [[147, "from-pypi"]], "From source": [[147, "from-source"]], "Options": [[147, "options"]], "Introduction to Classification Uncertainty": [[148, "introduction-to-classification-uncertainty"]], "Short Background": [[148, "short-background"]], "The Overconfidence of Neural Networks": [[148, "the-overconfidence-of-neural-networks"]], "Quickstart": [[149, "quickstart"]], "Training with TorchUncertainty\u2019s Uncertainty-aware Routines": [[149, "training-with-torchuncertainty-s-uncertainty-aware-routines"]], "Building your First Routine": [[149, "building-your-first-routine"]], "Training with the Routine": [[149, "training-with-the-routine"]], "More metrics": [[149, "more-metrics"]], "Using the Lightning CLI tool": [[149, "using-the-lightning-cli-tool"]], "Procedure": [[149, "procedure"], [149, "id1"], [149, "id3"]], "Example": [[149, "example"], [149, "id2"], [149, "id4"]], "Using the PyTorch-based models": [[149, "using-the-pytorch-based-models"]], "Using the PyTorch-based layers": [[149, "using-the-pytorch-based-layers"]], "Other usage": [[149, "other-usage"]], "Uncertainty Models": [[150, "uncertainty-models"]], "Deep Evidential Classification": [[150, "deep-evidential-classification"]], "Beta NLL in Deep Regression": [[150, "beta-nll-in-deep-regression"]], "Deep Evidential Regression": [[150, "deep-evidential-regression"]], "Variational Inference Bayesian Neural Networks": [[150, "variational-inference-bayesian-neural-networks"]], "Deep Ensembles": [[150, "deep-ensembles"]], "Monte-Carlo Dropout": [[150, "monte-carlo-dropout"]], "Stochastic Weight Averaging": [[150, "stochastic-weight-averaging"]], "Stochastic Weight Averaging Gaussian": [[150, "stochastic-weight-averaging-gaussian"]], "SnapshotEnsemble": [[150, "snapshotensemble"]], "Masksembles": [[150, "masksembles"]], "MIMO": [[150, "mimo"]], "Packed-Ensembles": [[150, "packed-ensembles"]], "LPBNN": [[150, "lpbnn"]], "Data Augmentation Methods": [[150, "data-augmentation-methods"]], "Mixup": [[150, "mixup"]], "RegMixup": [[150, "regmixup"]], "MixupIO": [[150, "mixupio"]], "Warping Mixup": [[150, "warping-mixup"]], "Temperature, Vector, & Matrix scaling": [[150, "temperature-vector-matrix-scaling"]], "Monte-Carlo Batch Normalization": [[150, "monte-carlo-batch-normalization"]], "Laplace Approximation": [[150, "laplace-approximation"]], "Focal Loss": [[150, "focal-loss"]], "Conflictual Loss": [[150, "conflictual-loss"]], "Binary Cross-Entropy with Logits Loss with Label Smoothing": [[150, "binary-cross-entropy-with-logits-loss-with-label-smoothing"]], "Expected Calibration Error": [[150, "expected-calibration-error"]], "Adaptive Calibration Error": [[150, "adaptive-calibration-error"]], "Area Under the Risk-Coverage curve": [[150, "area-under-the-risk-coverage-curve"]], "Area Under the Generalized Risk-Coverage curve": [[150, "area-under-the-generalized-risk-coverage-curve"]], "MNIST": [[150, "mnist"]], "MNIST-C": [[150, "mnist-c"]], "Not-MNIST": [[150, "not-mnist"]], "CIFAR-10 & CIFAR-100": [[150, "cifar-10-cifar-100"]], "CIFAR-C, Tiny-ImageNet-C, ImageNet-C": [[150, "cifar-c-tiny-imagenet-c-imagenet-c"]], "CIFAR-10 H": [[150, "cifar-10-h"]], "CIFAR-10 N / CIFAR-100 N": [[150, "cifar-10-n-cifar-100-n"]], "SVHN": [[150, "svhn"]], "ImageNet": [[150, "imagenet"]], "ImageNet-A & ImageNet-0": [[150, "imagenet-a-imagenet-0"]], "ImageNet-R": [[150, "imagenet-r"]], "Textures": [[150, "textures"]], "OpenImage-O": [[150, "openimage-o"]], "Architectures": [[150, "architectures"]], "ResNet": [[150, "resnet"]], "Wide-ResNet": [[150, "wide-resnet"]], "VGG": [[150, "vgg"]]}, "indexentries": {"resnetbaseline (class in torch_uncertainty.baselines.classification)": [[15, "torch_uncertainty.baselines.classification.ResNetBaseline"]], "vggbaseline (class in torch_uncertainty.baselines.classification)": [[16, "torch_uncertainty.baselines.classification.VGGBaseline"]], "wideresnetbaseline (class in torch_uncertainty.baselines.classification)": [[17, "torch_uncertainty.baselines.classification.WideResNetBaseline"]], "btsbaseline (class in torch_uncertainty.baselines.depth)": [[18, "torch_uncertainty.baselines.depth.BTSBaseline"]], "mlpbaseline (class in torch_uncertainty.baselines.regression)": [[19, "torch_uncertainty.baselines.regression.MLPBaseline"]], "deeplabbaseline (class in torch_uncertainty.baselines.segmentation)": [[20, "torch_uncertainty.baselines.segmentation.DeepLabBaseline"]], "segformerbaseline (class in torch_uncertainty.baselines.segmentation)": [[21, "torch_uncertainty.baselines.segmentation.SegFormerBaseline"]], "bankmarketingdatamodule (class in torch_uncertainty.datamodules)": [[22, "torch_uncertainty.datamodules.BankMarketingDataModule"]], "cifar100datamodule (class in torch_uncertainty.datamodules)": [[23, "torch_uncertainty.datamodules.CIFAR100DataModule"]], "test_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[23, "torch_uncertainty.datamodules.CIFAR100DataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[23, "torch_uncertainty.datamodules.CIFAR100DataModule.train_dataloader"]], "cifar10datamodule (class in torch_uncertainty.datamodules)": [[24, "torch_uncertainty.datamodules.CIFAR10DataModule"]], "test_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[24, "torch_uncertainty.datamodules.CIFAR10DataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[24, "torch_uncertainty.datamodules.CIFAR10DataModule.train_dataloader"]], "dota2gamesdatamodule (class in torch_uncertainty.datamodules)": [[25, "torch_uncertainty.datamodules.DOTA2GamesDataModule"]], "htru2datamodule (class in torch_uncertainty.datamodules)": [[26, "torch_uncertainty.datamodules.HTRU2DataModule"]], "imagenetdatamodule (class in torch_uncertainty.datamodules)": [[27, "torch_uncertainty.datamodules.ImageNetDataModule"]], "test_dataloader() (torch_uncertainty.datamodules.imagenetdatamodule method)": [[27, "torch_uncertainty.datamodules.ImageNetDataModule.test_dataloader"]], "mnistdatamodule (class in torch_uncertainty.datamodules)": [[28, "torch_uncertainty.datamodules.MNISTDataModule"]], "prepare_data() (torch_uncertainty.datamodules.mnistdatamodule method)": [[28, "torch_uncertainty.datamodules.MNISTDataModule.prepare_data"]], "test_dataloader() (torch_uncertainty.datamodules.mnistdatamodule method)": [[28, "torch_uncertainty.datamodules.MNISTDataModule.test_dataloader"]], "onlineshoppersdatamodule (class in torch_uncertainty.datamodules)": [[29, "torch_uncertainty.datamodules.OnlineShoppersDataModule"]], "spambasedatamodule (class in torch_uncertainty.datamodules)": [[30, "torch_uncertainty.datamodules.SpamBaseDataModule"]], "tinyimagenetdatamodule (class in torch_uncertainty.datamodules)": [[31, "torch_uncertainty.datamodules.TinyImageNetDataModule"]], "test_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[31, "torch_uncertainty.datamodules.TinyImageNetDataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[31, "torch_uncertainty.datamodules.TinyImageNetDataModule.train_dataloader"]], "val_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[31, "torch_uncertainty.datamodules.TinyImageNetDataModule.val_dataloader"]], "uciregressiondatamodule (class in torch_uncertainty.datamodules)": [[32, "torch_uncertainty.datamodules.UCIRegressionDataModule"]], "prepare_data() (torch_uncertainty.datamodules.uciregressiondatamodule method)": [[32, "torch_uncertainty.datamodules.UCIRegressionDataModule.prepare_data"]], "setup() (torch_uncertainty.datamodules.uciregressiondatamodule method)": [[32, "torch_uncertainty.datamodules.UCIRegressionDataModule.setup"]], "camviddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[33, "torch_uncertainty.datamodules.segmentation.CamVidDataModule"]], "cityscapesdatamodule (class in torch_uncertainty.datamodules.segmentation)": [[34, "torch_uncertainty.datamodules.segmentation.CityscapesDataModule"]], "muaddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[35, "torch_uncertainty.datamodules.segmentation.MUADDataModule"]], "fractals (class in torch_uncertainty.datasets)": [[36, "torch_uncertainty.datasets.Fractals"]], "frostimages (class in torch_uncertainty.datasets)": [[37, "torch_uncertainty.datasets.FrostImages"]], "kittidepth (class in torch_uncertainty.datasets)": [[38, "torch_uncertainty.datasets.KITTIDepth"]], "muad (class in torch_uncertainty.datasets)": [[39, "torch_uncertainty.datasets.MUAD"]], "nyuv2 (class in torch_uncertainty.datasets)": [[40, "torch_uncertainty.datasets.NYUv2"]], "cifar100c (class in torch_uncertainty.datasets.classification)": [[41, "torch_uncertainty.datasets.classification.CIFAR100C"]], "cifar100n (class in torch_uncertainty.datasets.classification)": [[42, "torch_uncertainty.datasets.classification.CIFAR100N"]], "cifar10c (class in torch_uncertainty.datasets.classification)": [[43, "torch_uncertainty.datasets.classification.CIFAR10C"]], "download() (torch_uncertainty.datasets.classification.cifar10c method)": [[43, "torch_uncertainty.datasets.classification.CIFAR10C.download"]], "make_dataset() (torch_uncertainty.datasets.classification.cifar10c method)": [[43, "torch_uncertainty.datasets.classification.CIFAR10C.make_dataset"]], "cifar10h (class in torch_uncertainty.datasets.classification)": [[44, "torch_uncertainty.datasets.classification.CIFAR10H"]], "cifar10n (class in torch_uncertainty.datasets.classification)": [[45, "torch_uncertainty.datasets.classification.CIFAR10N"]], "imageneta (class in torch_uncertainty.datasets.classification)": [[46, "torch_uncertainty.datasets.classification.ImageNetA"]], "imagenetc (class in torch_uncertainty.datasets.classification)": [[47, "torch_uncertainty.datasets.classification.ImageNetC"]], "imageneto (class in torch_uncertainty.datasets.classification)": [[48, "torch_uncertainty.datasets.classification.ImageNetO"]], "imagenetr (class in torch_uncertainty.datasets.classification)": [[49, "torch_uncertainty.datasets.classification.ImageNetR"]], "mnistc (class in torch_uncertainty.datasets.classification)": [[50, "torch_uncertainty.datasets.classification.MNISTC"]], "download() (torch_uncertainty.datasets.classification.mnistc method)": [[50, "torch_uncertainty.datasets.classification.MNISTC.download"]], "make_dataset() (torch_uncertainty.datasets.classification.mnistc method)": [[50, "torch_uncertainty.datasets.classification.MNISTC.make_dataset"]], "notmnist (class in torch_uncertainty.datasets.classification)": [[51, "torch_uncertainty.datasets.classification.NotMNIST"]], "openimageo (class in torch_uncertainty.datasets.classification)": [[52, "torch_uncertainty.datasets.classification.OpenImageO"]], "tinyimagenet (class in torch_uncertainty.datasets.classification)": [[53, "torch_uncertainty.datasets.classification.TinyImageNet"]], "tinyimagenetc (class in torch_uncertainty.datasets.classification)": [[54, "torch_uncertainty.datasets.classification.TinyImageNetC"]], "download() (torch_uncertainty.datasets.classification.tinyimagenetc method)": [[54, "torch_uncertainty.datasets.classification.TinyImageNetC.download"]], "bankmarketing (class in torch_uncertainty.datasets.classification.uci)": [[55, "torch_uncertainty.datasets.classification.uci.BankMarketing"]], "download() (torch_uncertainty.datasets.classification.uci.bankmarketing method)": [[55, "torch_uncertainty.datasets.classification.uci.BankMarketing.download"]], "dota2games (class in torch_uncertainty.datasets.classification.uci)": [[56, "torch_uncertainty.datasets.classification.uci.DOTA2Games"]], "download() (torch_uncertainty.datasets.classification.uci.dota2games method)": [[56, "torch_uncertainty.datasets.classification.uci.DOTA2Games.download"]], "htru2 (class in torch_uncertainty.datasets.classification.uci)": [[57, "torch_uncertainty.datasets.classification.uci.HTRU2"]], "onlineshoppers (class in torch_uncertainty.datasets.classification.uci)": [[58, "torch_uncertainty.datasets.classification.uci.OnlineShoppers"]], "spambase (class in torch_uncertainty.datasets.classification.uci)": [[59, "torch_uncertainty.datasets.classification.uci.SpamBase"]], "uciregression (class in torch_uncertainty.datasets.regression)": [[60, "torch_uncertainty.datasets.regression.UCIRegression"]], "download() (torch_uncertainty.datasets.regression.uciregression method)": [[60, "torch_uncertainty.datasets.regression.UCIRegression.download"]], "camvid (class in torch_uncertainty.datasets.segmentation)": [[61, "torch_uncertainty.datasets.segmentation.CamVid"]], "color_palette (torch_uncertainty.datasets.segmentation.camvid property)": [[61, "torch_uncertainty.datasets.segmentation.CamVid.color_palette"]], "decode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[61, "torch_uncertainty.datasets.segmentation.CamVid.decode_target"]], "download() (torch_uncertainty.datasets.segmentation.camvid method)": [[61, "torch_uncertainty.datasets.segmentation.CamVid.download"]], "encode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[61, "torch_uncertainty.datasets.segmentation.CamVid.encode_target"]], "cityscapes (class in torch_uncertainty.datasets.segmentation)": [[62, "torch_uncertainty.datasets.segmentation.Cityscapes"]], "color_palette (torch_uncertainty.datasets.segmentation.cityscapes property)": [[62, "torch_uncertainty.datasets.segmentation.Cityscapes.color_palette"]], "decode_target() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[62, "torch_uncertainty.datasets.segmentation.Cityscapes.decode_target"]], "encode_target() (torch_uncertainty.datasets.segmentation.cityscapes class method)": [[62, "torch_uncertainty.datasets.segmentation.Cityscapes.encode_target"]], "plot_sample() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[62, "torch_uncertainty.datasets.segmentation.Cityscapes.plot_sample"]], "batchconv2d (class in torch_uncertainty.layers)": [[63, "torch_uncertainty.layers.BatchConv2d"]], "from_conv2d() (torch_uncertainty.layers.batchconv2d class method)": [[63, "torch_uncertainty.layers.BatchConv2d.from_conv2d"]], "batchlinear (class in torch_uncertainty.layers)": [[64, "torch_uncertainty.layers.BatchLinear"]], "from_linear() (torch_uncertainty.layers.batchlinear class method)": [[64, "torch_uncertainty.layers.BatchLinear.from_linear"]], "maskedconv2d (class in torch_uncertainty.layers)": [[65, "torch_uncertainty.layers.MaskedConv2d"]], "maskedlinear (class in torch_uncertainty.layers)": [[66, "torch_uncertainty.layers.MaskedLinear"]], "packedconv2d (class in torch_uncertainty.layers)": [[67, "torch_uncertainty.layers.PackedConv2d"]], "bias (torch_uncertainty.layers.packedconv2d property)": [[67, "torch_uncertainty.layers.PackedConv2d.bias"]], "weight (torch_uncertainty.layers.packedconv2d property)": [[67, "torch_uncertainty.layers.PackedConv2d.weight"]], "packedlayernorm (class in torch_uncertainty.layers)": [[68, "torch_uncertainty.layers.PackedLayerNorm"]], "packedlinear (class in torch_uncertainty.layers)": [[69, "torch_uncertainty.layers.PackedLinear"]], "packedmultiheadattention (class in torch_uncertainty.layers)": [[70, "torch_uncertainty.layers.PackedMultiheadAttention"]], "forward() (torch_uncertainty.layers.packedmultiheadattention method)": [[70, "torch_uncertainty.layers.PackedMultiheadAttention.forward"]], "packedtransformerdecoderlayer (class in torch_uncertainty.layers)": [[71, "torch_uncertainty.layers.PackedTransformerDecoderLayer"]], "forward() (torch_uncertainty.layers.packedtransformerdecoderlayer method)": [[71, "torch_uncertainty.layers.PackedTransformerDecoderLayer.forward"]], "packedtransformerencoderlayer (class in torch_uncertainty.layers)": [[72, "torch_uncertainty.layers.PackedTransformerEncoderLayer"]], "forward() (torch_uncertainty.layers.packedtransformerencoderlayer method)": [[72, "torch_uncertainty.layers.PackedTransformerEncoderLayer.forward"]], "bayesconv1d (class in torch_uncertainty.layers.bayesian)": [[73, "torch_uncertainty.layers.bayesian.BayesConv1d"]], "bayesconv2d (class in torch_uncertainty.layers.bayesian)": [[74, "torch_uncertainty.layers.bayesian.BayesConv2d"]], "bayesconv3d (class in torch_uncertainty.layers.bayesian)": [[75, "torch_uncertainty.layers.bayesian.BayesConv3d"]], "bayeslinear (class in torch_uncertainty.layers.bayesian)": [[76, "torch_uncertainty.layers.bayesian.BayesLinear"]], "freeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[76, "torch_uncertainty.layers.bayesian.BayesLinear.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[76, "torch_uncertainty.layers.bayesian.BayesLinear.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[76, "torch_uncertainty.layers.bayesian.BayesLinear.unfreeze"]], "lpbnnconv2d (class in torch_uncertainty.layers.bayesian)": [[77, "torch_uncertainty.layers.bayesian.LPBNNConv2d"]], "lpbnnlinear (class in torch_uncertainty.layers.bayesian)": [[78, "torch_uncertainty.layers.bayesian.LPBNNLinear"]], "cauchyconvnd (class in torch_uncertainty.layers.distributions)": [[79, "torch_uncertainty.layers.distributions.CauchyConvNd"]], "cauchylinear (class in torch_uncertainty.layers.distributions)": [[80, "torch_uncertainty.layers.distributions.CauchyLinear"]], "laplaceconvnd (class in torch_uncertainty.layers.distributions)": [[81, "torch_uncertainty.layers.distributions.LaplaceConvNd"]], "laplacelinear (class in torch_uncertainty.layers.distributions)": [[82, "torch_uncertainty.layers.distributions.LaplaceLinear"]], "normalconvnd (class in torch_uncertainty.layers.distributions)": [[83, "torch_uncertainty.layers.distributions.NormalConvNd"]], "normalinversegammaconvnd (class in torch_uncertainty.layers.distributions)": [[84, "torch_uncertainty.layers.distributions.NormalInverseGammaConvNd"]], "normalinversegammalinear (class in torch_uncertainty.layers.distributions)": [[85, "torch_uncertainty.layers.distributions.NormalInverseGammaLinear"]], "normallinear (class in torch_uncertainty.layers.distributions)": [[86, "torch_uncertainty.layers.distributions.NormalLinear"]], "studenttconvnd (class in torch_uncertainty.layers.distributions)": [[87, "torch_uncertainty.layers.distributions.StudentTConvNd"]], "studenttlinear (class in torch_uncertainty.layers.distributions)": [[88, "torch_uncertainty.layers.distributions.StudentTLinear"]], "bcewithlogitslsloss (class in torch_uncertainty.losses)": [[89, "torch_uncertainty.losses.BCEWithLogitsLSLoss"]], "betanll (class in torch_uncertainty.losses)": [[90, "torch_uncertainty.losses.BetaNLL"]], "confidencepenaltyloss (class in torch_uncertainty.losses)": [[91, "torch_uncertainty.losses.ConfidencePenaltyLoss"]], "forward() (torch_uncertainty.losses.confidencepenaltyloss method)": [[91, "torch_uncertainty.losses.ConfidencePenaltyLoss.forward"]], "conflictualloss (class in torch_uncertainty.losses)": [[92, "torch_uncertainty.losses.ConflictualLoss"]], "forward() (torch_uncertainty.losses.conflictualloss method)": [[92, "torch_uncertainty.losses.ConflictualLoss.forward"]], "decloss (class in torch_uncertainty.losses)": [[93, "torch_uncertainty.losses.DECLoss"]], "derloss (class in torch_uncertainty.losses)": [[94, "torch_uncertainty.losses.DERLoss"]], "distributionnllloss (class in torch_uncertainty.losses)": [[95, "torch_uncertainty.losses.DistributionNLLLoss"]], "forward() (torch_uncertainty.losses.distributionnllloss method)": [[95, "torch_uncertainty.losses.DistributionNLLLoss.forward"]], "elboloss (class in torch_uncertainty.losses)": [[96, "torch_uncertainty.losses.ELBOLoss"]], "forward() (torch_uncertainty.losses.elboloss method)": [[96, "torch_uncertainty.losses.ELBOLoss.forward"]], "focalloss (class in torch_uncertainty.losses)": [[97, "torch_uncertainty.losses.FocalLoss"]], "kldiv (class in torch_uncertainty.losses)": [[98, "torch_uncertainty.losses.KLDiv"]], "ause (class in torch_uncertainty.metrics)": [[99, "torch_uncertainty.metrics.AUSE"]], "compute() (torch_uncertainty.metrics.ause method)": [[99, "torch_uncertainty.metrics.AUSE.compute"]], "plot() (torch_uncertainty.metrics.ause method)": [[99, "torch_uncertainty.metrics.AUSE.plot"]], "update() (torch_uncertainty.metrics.ause method)": [[99, "torch_uncertainty.metrics.AUSE.update"]], "augrc (class in torch_uncertainty.metrics.classification)": [[100, "torch_uncertainty.metrics.classification.AUGRC"]], "compute() (torch_uncertainty.metrics.classification.augrc method)": [[100, "torch_uncertainty.metrics.classification.AUGRC.compute"]], "plot() (torch_uncertainty.metrics.classification.augrc method)": [[100, "torch_uncertainty.metrics.classification.AUGRC.plot"]], "aurc (class in torch_uncertainty.metrics.classification)": [[101, "torch_uncertainty.metrics.classification.AURC"]], "compute() (torch_uncertainty.metrics.classification.aurc method)": [[101, "torch_uncertainty.metrics.classification.AURC.compute"]], "partial_compute() (torch_uncertainty.metrics.classification.aurc method)": [[101, "torch_uncertainty.metrics.classification.AURC.partial_compute"]], "plot() (torch_uncertainty.metrics.classification.aurc method)": [[101, "torch_uncertainty.metrics.classification.AURC.plot"]], "update() (torch_uncertainty.metrics.classification.aurc method)": [[101, "torch_uncertainty.metrics.classification.AURC.update"]], "adaptivecalibrationerror (class in torch_uncertainty.metrics.classification)": [[102, "torch_uncertainty.metrics.classification.AdaptiveCalibrationError"]], "brierscore (class in torch_uncertainty.metrics.classification)": [[103, "torch_uncertainty.metrics.classification.BrierScore"]], "compute() (torch_uncertainty.metrics.classification.brierscore method)": [[103, "torch_uncertainty.metrics.classification.BrierScore.compute"]], "update() (torch_uncertainty.metrics.classification.brierscore method)": [[103, "torch_uncertainty.metrics.classification.BrierScore.update"]], "calibrationerror (class in torch_uncertainty.metrics.classification)": [[104, "torch_uncertainty.metrics.classification.CalibrationError"]], "categoricalnll (class in torch_uncertainty.metrics.classification)": [[105, "torch_uncertainty.metrics.classification.CategoricalNLL"]], "compute() (torch_uncertainty.metrics.classification.categoricalnll method)": [[105, "torch_uncertainty.metrics.classification.CategoricalNLL.compute"]], "update() (torch_uncertainty.metrics.classification.categoricalnll method)": [[105, "torch_uncertainty.metrics.classification.CategoricalNLL.update"]], "covat5risk (class in torch_uncertainty.metrics.classification)": [[106, "torch_uncertainty.metrics.classification.CovAt5Risk"]], "covatxrisk (class in torch_uncertainty.metrics.classification)": [[107, "torch_uncertainty.metrics.classification.CovAtxRisk"]], "compute() (torch_uncertainty.metrics.classification.covatxrisk method)": [[107, "torch_uncertainty.metrics.classification.CovAtxRisk.compute"]], "update() (torch_uncertainty.metrics.classification.covatxrisk method)": [[107, "torch_uncertainty.metrics.classification.CovAtxRisk.update"]], "disagreement (class in torch_uncertainty.metrics.classification)": [[108, "torch_uncertainty.metrics.classification.Disagreement"]], "compute() (torch_uncertainty.metrics.classification.disagreement method)": [[108, "torch_uncertainty.metrics.classification.Disagreement.compute"]], "update() (torch_uncertainty.metrics.classification.disagreement method)": [[108, "torch_uncertainty.metrics.classification.Disagreement.update"]], "entropy (class in torch_uncertainty.metrics.classification)": [[109, "torch_uncertainty.metrics.classification.Entropy"]], "compute() (torch_uncertainty.metrics.classification.entropy method)": [[109, "torch_uncertainty.metrics.classification.Entropy.compute"]], "update() (torch_uncertainty.metrics.classification.entropy method)": [[109, "torch_uncertainty.metrics.classification.Entropy.update"]], "fpr95 (class in torch_uncertainty.metrics.classification)": [[110, "torch_uncertainty.metrics.classification.FPR95"]], "fprx (class in torch_uncertainty.metrics.classification)": [[111, "torch_uncertainty.metrics.classification.FPRx"]], "compute() (torch_uncertainty.metrics.classification.fprx method)": [[111, "torch_uncertainty.metrics.classification.FPRx.compute"]], "update() (torch_uncertainty.metrics.classification.fprx method)": [[111, "torch_uncertainty.metrics.classification.FPRx.update"]], "groupingloss (class in torch_uncertainty.metrics.classification)": [[112, "torch_uncertainty.metrics.classification.GroupingLoss"]], "compute() (torch_uncertainty.metrics.classification.groupingloss method)": [[112, "torch_uncertainty.metrics.classification.GroupingLoss.compute"]], "update() (torch_uncertainty.metrics.classification.groupingloss method)": [[112, "torch_uncertainty.metrics.classification.GroupingLoss.update"]], "meanintersectionoverunion (class in torch_uncertainty.metrics.classification)": [[113, "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion"]], "compute() (torch_uncertainty.metrics.classification.meanintersectionoverunion method)": [[113, "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion.compute"]], "mutualinformation (class in torch_uncertainty.metrics.classification)": [[114, "torch_uncertainty.metrics.classification.MutualInformation"]], "compute() (torch_uncertainty.metrics.classification.mutualinformation method)": [[114, "torch_uncertainty.metrics.classification.MutualInformation.compute"]], "update() (torch_uncertainty.metrics.classification.mutualinformation method)": [[114, "torch_uncertainty.metrics.classification.MutualInformation.update"]], "riskat80cov (class in torch_uncertainty.metrics.classification)": [[115, "torch_uncertainty.metrics.classification.RiskAt80Cov"]], "riskatxcov (class in torch_uncertainty.metrics.classification)": [[116, "torch_uncertainty.metrics.classification.RiskAtxCov"]], "compute() (torch_uncertainty.metrics.classification.riskatxcov method)": [[116, "torch_uncertainty.metrics.classification.RiskAtxCov.compute"]], "update() (torch_uncertainty.metrics.classification.riskatxcov method)": [[116, "torch_uncertainty.metrics.classification.RiskAtxCov.update"]], "variationratio (class in torch_uncertainty.metrics.classification)": [[117, "torch_uncertainty.metrics.classification.VariationRatio"]], "compute() (torch_uncertainty.metrics.classification.variationratio method)": [[117, "torch_uncertainty.metrics.classification.VariationRatio.compute"]], "distributionnll (class in torch_uncertainty.metrics.regression)": [[118, "torch_uncertainty.metrics.regression.DistributionNLL"]], "compute() (torch_uncertainty.metrics.regression.distributionnll method)": [[118, "torch_uncertainty.metrics.regression.DistributionNLL.compute"]], "update() (torch_uncertainty.metrics.regression.distributionnll method)": [[118, "torch_uncertainty.metrics.regression.DistributionNLL.update"]], "log10 (class in torch_uncertainty.metrics.regression)": [[119, "torch_uncertainty.metrics.regression.Log10"]], "update() (torch_uncertainty.metrics.regression.log10 method)": [[119, "torch_uncertainty.metrics.regression.Log10.update"]], "meanabsoluteerrorinverse (class in torch_uncertainty.metrics.regression)": [[120, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse"]], "update() (torch_uncertainty.metrics.regression.meanabsoluteerrorinverse method)": [[120, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.update"]], "meangtrelativeabsoluteerror (class in torch_uncertainty.metrics.regression)": [[121, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError"]], "update() (torch_uncertainty.metrics.regression.meangtrelativeabsoluteerror method)": [[121, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.update"]], "meangtrelativesquarederror (class in torch_uncertainty.metrics.regression)": [[122, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError"]], "update() (torch_uncertainty.metrics.regression.meangtrelativesquarederror method)": [[122, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.update"]], "meansquarederrorinverse (class in torch_uncertainty.metrics.regression)": [[123, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse"]], "update() (torch_uncertainty.metrics.regression.meansquarederrorinverse method)": [[123, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.update"]], "meansquaredlogerror (class in torch_uncertainty.metrics.regression)": [[124, "torch_uncertainty.metrics.regression.MeanSquaredLogError"]], "update() (torch_uncertainty.metrics.regression.meansquaredlogerror method)": [[124, "torch_uncertainty.metrics.regression.MeanSquaredLogError.update"]], "silog (class in torch_uncertainty.metrics.regression)": [[125, "torch_uncertainty.metrics.regression.SILog"]], "compute() (torch_uncertainty.metrics.regression.silog method)": [[125, "torch_uncertainty.metrics.regression.SILog.compute"]], "update() (torch_uncertainty.metrics.regression.silog method)": [[125, "torch_uncertainty.metrics.regression.SILog.update"]], "thresholdaccuracy (class in torch_uncertainty.metrics.regression)": [[126, "torch_uncertainty.metrics.regression.ThresholdAccuracy"]], "compute() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[126, "torch_uncertainty.metrics.regression.ThresholdAccuracy.compute"]], "update() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[126, "torch_uncertainty.metrics.regression.ThresholdAccuracy.update"]], "batchensemble (class in torch_uncertainty.models)": [[127, "torch_uncertainty.models.BatchEnsemble"]], "forward() (torch_uncertainty.models.batchensemble method)": [[127, "torch_uncertainty.models.BatchEnsemble.forward"]], "checkpointensemble (class in torch_uncertainty.models)": [[128, "torch_uncertainty.models.CheckpointEnsemble"]], "eval_forward() (torch_uncertainty.models.checkpointensemble method)": [[128, "torch_uncertainty.models.CheckpointEnsemble.eval_forward"]], "update_wrapper() (torch_uncertainty.models.checkpointensemble method)": [[128, "torch_uncertainty.models.CheckpointEnsemble.update_wrapper"]], "ema (class in torch_uncertainty.models)": [[129, "torch_uncertainty.models.EMA"]], "update_wrapper() (torch_uncertainty.models.ema method)": [[129, "torch_uncertainty.models.EMA.update_wrapper"]], "mcdropout (class in torch_uncertainty.models)": [[130, "torch_uncertainty.models.MCDropout"]], "forward() (torch_uncertainty.models.mcdropout method)": [[130, "torch_uncertainty.models.MCDropout.forward"]], "train() (torch_uncertainty.models.mcdropout method)": [[130, "torch_uncertainty.models.MCDropout.train"]], "swa (class in torch_uncertainty.models)": [[131, "torch_uncertainty.models.SWA"]], "swag (class in torch_uncertainty.models)": [[132, "torch_uncertainty.models.SWAG"]], "bn_update() (torch_uncertainty.models.swag method)": [[132, "torch_uncertainty.models.SWAG.bn_update"]], "eval_forward() (torch_uncertainty.models.swag method)": [[132, "torch_uncertainty.models.SWAG.eval_forward"]], "initialize_stats() (torch_uncertainty.models.swag method)": [[132, "torch_uncertainty.models.SWAG.initialize_stats"]], "sample() (torch_uncertainty.models.swag method)": [[132, "torch_uncertainty.models.SWAG.sample"]], "state_dict() (torch_uncertainty.models.swag method)": [[132, "torch_uncertainty.models.SWAG.state_dict"]], "update_wrapper() (torch_uncertainty.models.swag method)": [[132, "torch_uncertainty.models.SWAG.update_wrapper"]], "stochasticmodel (class in torch_uncertainty.models)": [[133, "torch_uncertainty.models.StochasticModel"]], "batch_ensemble() (in module torch_uncertainty.models)": [[134, "torch_uncertainty.models.batch_ensemble"]], "deep_ensembles() (in module torch_uncertainty.models)": [[135, "torch_uncertainty.models.deep_ensembles"]], "mc_dropout() (in module torch_uncertainty.models)": [[136, "torch_uncertainty.models.mc_dropout"]], "laplaceapprox (class in torch_uncertainty.post_processing)": [[137, "torch_uncertainty.post_processing.LaplaceApprox"]], "mcbatchnorm (class in torch_uncertainty.post_processing)": [[138, "torch_uncertainty.post_processing.MCBatchNorm"]], "fit() (torch_uncertainty.post_processing.mcbatchnorm method)": [[138, "torch_uncertainty.post_processing.MCBatchNorm.fit"]], "raise_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[138, "torch_uncertainty.post_processing.MCBatchNorm.raise_counters"]], "replace_layers() (torch_uncertainty.post_processing.mcbatchnorm method)": [[138, "torch_uncertainty.post_processing.MCBatchNorm.replace_layers"]], "reset_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[138, "torch_uncertainty.post_processing.MCBatchNorm.reset_counters"]], "set_accumulate() (torch_uncertainty.post_processing.mcbatchnorm method)": [[138, "torch_uncertainty.post_processing.MCBatchNorm.set_accumulate"]], "matrixscaler (class in torch_uncertainty.post_processing)": [[139, "torch_uncertainty.post_processing.MatrixScaler"]], "fit() (torch_uncertainty.post_processing.matrixscaler method)": [[139, "torch_uncertainty.post_processing.MatrixScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.matrixscaler method)": [[139, "torch_uncertainty.post_processing.MatrixScaler.set_temperature"]], "temperaturescaler (class in torch_uncertainty.post_processing)": [[140, "torch_uncertainty.post_processing.TemperatureScaler"]], "fit() (torch_uncertainty.post_processing.temperaturescaler method)": [[140, "torch_uncertainty.post_processing.TemperatureScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.temperaturescaler method)": [[140, "torch_uncertainty.post_processing.TemperatureScaler.set_temperature"]], "vectorscaler (class in torch_uncertainty.post_processing)": [[141, "torch_uncertainty.post_processing.VectorScaler"]], "fit() (torch_uncertainty.post_processing.vectorscaler method)": [[141, "torch_uncertainty.post_processing.VectorScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.vectorscaler method)": [[141, "torch_uncertainty.post_processing.VectorScaler.set_temperature"]], "classificationroutine (class in torch_uncertainty.routines)": [[142, "torch_uncertainty.routines.ClassificationRoutine"]], "forward() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.forward"]], "on_test_epoch_end() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.on_test_epoch_end"]], "on_test_start() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.on_test_start"]], "on_train_start() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.on_train_start"]], "on_validation_epoch_end() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.on_validation_epoch_end"]], "on_validation_start() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.on_validation_start"]], "save_results_to_csv() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.save_results_to_csv"]], "test_step() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.test_step"]], "training_step() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.training_step"]], "validation_step() (torch_uncertainty.routines.classificationroutine method)": [[142, "torch_uncertainty.routines.ClassificationRoutine.validation_step"]], "pixelregressionroutine (class in torch_uncertainty.routines)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine"]], "evaluation_forward() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.evaluation_forward"]], "forward() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.forward"]], "on_test_epoch_end() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.on_test_epoch_end"]], "on_test_start() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.on_test_start"]], "on_train_start() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.on_train_start"]], "on_validation_epoch_end() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.on_validation_epoch_end"]], "on_validation_start() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.on_validation_start"]], "test_step() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.test_step"]], "training_step() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.training_step"]], "validation_step() (torch_uncertainty.routines.pixelregressionroutine method)": [[143, "torch_uncertainty.routines.PixelRegressionRoutine.validation_step"]], "regressionroutine (class in torch_uncertainty.routines)": [[144, "torch_uncertainty.routines.RegressionRoutine"]], "evaluation_forward() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.evaluation_forward"]], "forward() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.forward"]], "on_test_epoch_end() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.on_test_epoch_end"]], "on_test_start() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.on_test_start"]], "on_train_start() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.on_train_start"]], "on_validation_epoch_end() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.on_validation_epoch_end"]], "on_validation_start() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.on_validation_start"]], "test_step() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.test_step"]], "training_step() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.training_step"]], "validation_step() (torch_uncertainty.routines.regressionroutine method)": [[144, "torch_uncertainty.routines.RegressionRoutine.validation_step"]], "segmentationroutine (class in torch_uncertainty.routines)": [[145, "torch_uncertainty.routines.SegmentationRoutine"]], "forward() (torch_uncertainty.routines.segmentationroutine method)": [[145, "torch_uncertainty.routines.SegmentationRoutine.forward"]], "log_segmentation_plots() (torch_uncertainty.routines.segmentationroutine method)": [[145, "torch_uncertainty.routines.SegmentationRoutine.log_segmentation_plots"]], "on_test_epoch_end() (torch_uncertainty.routines.segmentationroutine method)": [[145, "torch_uncertainty.routines.SegmentationRoutine.on_test_epoch_end"]], "on_validation_epoch_end() (torch_uncertainty.routines.segmentationroutine method)": [[145, "torch_uncertainty.routines.SegmentationRoutine.on_validation_epoch_end"]], "subsample() (torch_uncertainty.routines.segmentationroutine method)": [[145, "torch_uncertainty.routines.SegmentationRoutine.subsample"]], "test_step() (torch_uncertainty.routines.segmentationroutine method)": [[145, "torch_uncertainty.routines.SegmentationRoutine.test_step"]], "training_step() (torch_uncertainty.routines.segmentationroutine method)": [[145, "torch_uncertainty.routines.SegmentationRoutine.training_step"]], "validation_step() (torch_uncertainty.routines.segmentationroutine method)": [[145, "torch_uncertainty.routines.SegmentationRoutine.validation_step"]]}})