Search.setIndex({"docnames": ["api", "auto_tutorials/index", "auto_tutorials/sg_execution_times", "auto_tutorials/tutorial_bayesian", "auto_tutorials/tutorial_der_cubic", "auto_tutorials/tutorial_evidential_classification", "auto_tutorials/tutorial_mc_dropout", "auto_tutorials/tutorial_pe_cifar10", "auto_tutorials/tutorial_scaler", "contributing", "generated/torch_uncertainty.baselines.classification.ResNet", "generated/torch_uncertainty.baselines.classification.VGG", "generated/torch_uncertainty.baselines.classification.WideResNet", "generated/torch_uncertainty.baselines.regression.MLP", "generated/torch_uncertainty.layers.BatchConv2d", "generated/torch_uncertainty.layers.BatchLinear", "generated/torch_uncertainty.layers.MaskedConv2d", "generated/torch_uncertainty.layers.MaskedLinear", "generated/torch_uncertainty.layers.PackedConv2d", "generated/torch_uncertainty.layers.PackedLinear", "generated/torch_uncertainty.layers.bayesian.BayesConv1d", "generated/torch_uncertainty.layers.bayesian.BayesConv2d", "generated/torch_uncertainty.layers.bayesian.BayesConv3d", "generated/torch_uncertainty.layers.bayesian.BayesLinear", "generated/torch_uncertainty.losses.DECLoss", "generated/torch_uncertainty.losses.ELBOLoss", "generated/torch_uncertainty.losses.KLDiv", "generated/torch_uncertainty.losses.NIGLoss", "generated/torch_uncertainty.metrics.BrierScore", "generated/torch_uncertainty.metrics.Disagreement", "generated/torch_uncertainty.metrics.Entropy", "generated/torch_uncertainty.metrics.FPR95", "generated/torch_uncertainty.metrics.GaussianNegativeLogLikelihood", "generated/torch_uncertainty.metrics.MutualInformation", "generated/torch_uncertainty.metrics.NegativeLogLikelihood", "generated/torch_uncertainty.post_processing.MatrixScaler", "generated/torch_uncertainty.post_processing.TemperatureScaler", "generated/torch_uncertainty.post_processing.VectorScaler", "index", "installation", "introduction_uncertainty", "quickstart", "references"], "filenames": ["api.rst", "auto_tutorials/index.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/tutorial_bayesian.rst", "auto_tutorials/tutorial_der_cubic.rst", "auto_tutorials/tutorial_evidential_classification.rst", "auto_tutorials/tutorial_mc_dropout.rst", "auto_tutorials/tutorial_pe_cifar10.rst", "auto_tutorials/tutorial_scaler.rst", "contributing.rst", "generated/torch_uncertainty.baselines.classification.ResNet.rst", "generated/torch_uncertainty.baselines.classification.VGG.rst", "generated/torch_uncertainty.baselines.classification.WideResNet.rst", "generated/torch_uncertainty.baselines.regression.MLP.rst", "generated/torch_uncertainty.layers.BatchConv2d.rst", "generated/torch_uncertainty.layers.BatchLinear.rst", "generated/torch_uncertainty.layers.MaskedConv2d.rst", "generated/torch_uncertainty.layers.MaskedLinear.rst", "generated/torch_uncertainty.layers.PackedConv2d.rst", "generated/torch_uncertainty.layers.PackedLinear.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv1d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv2d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv3d.rst", "generated/torch_uncertainty.layers.bayesian.BayesLinear.rst", "generated/torch_uncertainty.losses.DECLoss.rst", "generated/torch_uncertainty.losses.ELBOLoss.rst", "generated/torch_uncertainty.losses.KLDiv.rst", "generated/torch_uncertainty.losses.NIGLoss.rst", "generated/torch_uncertainty.metrics.BrierScore.rst", "generated/torch_uncertainty.metrics.Disagreement.rst", "generated/torch_uncertainty.metrics.Entropy.rst", "generated/torch_uncertainty.metrics.FPR95.rst", "generated/torch_uncertainty.metrics.GaussianNegativeLogLikelihood.rst", "generated/torch_uncertainty.metrics.MutualInformation.rst", "generated/torch_uncertainty.metrics.NegativeLogLikelihood.rst", "generated/torch_uncertainty.post_processing.MatrixScaler.rst", "generated/torch_uncertainty.post_processing.TemperatureScaler.rst", "generated/torch_uncertainty.post_processing.VectorScaler.rst", "index.rst", "installation.rst", "introduction_uncertainty.rst", "quickstart.rst", "references.rst"], "titles": ["API reference", "Tutorials", "Computation times", "Train a Bayesian Neural Network in Three Minutes", "Deep Evidential Regression on a Toy Example", "Deep Evidential Classification on a Toy Example", "Training a LeNet with Monte-Carlo Dropout", "From a Vanilla Classifier to a Packed-Ensemble", "Improve Top-label Calibration with Temperature Scaling", "Contributing", "ResNet", "VGG", "WideResNet", "MLP", "BatchConv2d", "BatchLinear", "MaskedConv2d", "MaskedLinear", "PackedConv2d", "PackedLinear", "BayesConv1d", "BayesConv2d", "BayesConv3d", "BayesLinear", "DECLoss", "ELBOLoss", "KLDiv", "NIGLoss", "BrierScore", "Disagreement", "Entropy", "FPR95", "GaussianNegativeLogLikelihood", "MutualInformation", "NegativeLogLikelihood", "MatrixScaler", "TemperatureScaler", "VectorScaler", "Torch Uncertainty", "Installation", "Introduction to Classification Uncertainty", "Quickstart", "References"], "terms": {"thi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 25, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42], "provid": [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 28, 29, 30, 31, 32, 33, 34, 41], "lightn": [0, 5, 8, 38], "base": [0, 3, 4, 5, 6, 28, 29, 30, 32, 33, 34, 38, 40, 42], "model": [0, 7, 9, 25, 26, 29, 30, 32, 34, 35, 36, 37, 38, 40], "can": [0, 3, 8, 9, 14, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41], "easili": [0, 8], "train": [0, 1, 2, 8, 10, 11, 12, 16, 17, 25, 40, 41, 42], "evalu": [0, 7, 8, 10, 11, 12, 28, 29, 30, 31, 32, 33, 34], "On": [1, 8, 35, 36, 37, 40, 42], "page": [1, 9, 38, 40], "you": [1, 4, 7, 8, 9, 16, 17, 18, 19, 25, 39, 41], "find": [1, 42], "insight": 1, "torchuncertainti": [1, 38], "don": [1, 6], "t": [1, 6, 7, 15, 28, 29, 30, 31, 32, 33, 34], "hesit": [1, 41], "open": [1, 9], "an": [1, 3, 4, 5, 9, 14, 15, 28, 29, 30, 31, 32, 33, 34, 41, 42], "issu": [1, 9, 41], "have": [1, 3, 4, 5, 6, 9, 28, 29, 30, 31, 32, 33, 34, 39, 40], "ani": [1, 8, 9, 10, 11, 12, 28, 29, 30, 31, 32, 33, 34, 41], "question": 1, "suggest": [1, 9], "bayesian": [1, 2, 5, 6, 8, 9, 20, 21, 22, 23, 25, 26], "neural": [1, 2, 4, 5, 6, 7, 8, 23, 25, 26, 35, 36, 37, 38], "network": [1, 2, 4, 5, 6, 7, 8, 18, 19, 23, 25, 26, 35, 36, 37, 38], "three": [1, 2, 15], "minut": [1, 2, 4, 5, 6, 7, 8], "lenet": [1, 2], "mont": [1, 2, 9, 10, 11, 12], "carlo": [1, 2, 9, 10, 11, 12], "dropout": [1, 2, 9, 10, 11, 12], "improv": [1, 2, 4, 40], "top": [1, 2], "label": [1, 2, 3, 4, 5, 6, 7, 32, 34, 35, 36, 37, 42], "calibr": [1, 2, 35, 36, 37, 40], "temperatur": [1, 2, 9, 35, 36, 37], "scale": [1, 2, 9, 10, 11, 12, 16, 17, 35, 36, 37], "deep": [1, 2, 3, 6, 9, 24, 27], "evidenti": [1, 2, 24, 27], "regress": [1, 2, 13, 27], "toi": [1, 2], "exampl": [1, 2, 3, 6, 7, 8, 14, 15, 42], "classif": [1, 2, 3, 6, 7, 8, 10, 11, 12, 24, 38], "from": [1, 2, 3, 4, 5, 6, 9, 14, 15, 16, 17, 18, 19, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 41, 42], "vanilla": [1, 2, 10, 11, 12, 41], "classifi": [1, 2, 3, 6], "pack": [1, 2, 10, 11, 12, 18, 19, 41], "ensembl": [1, 2, 9, 10, 11, 12, 14, 15, 16, 18, 19, 29, 33, 41], "download": [1, 3, 4, 5, 6, 7, 8], "all": [1, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18, 28, 29, 30, 31, 32, 33, 34], "python": [1, 3, 4, 5, 6, 7, 8, 39], "sourc": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "code": [1, 3, 4, 5, 6, 7, 8, 9, 41], "auto_tutorials_python": 1, "zip": 1, "jupyt": [1, 3, 4, 5, 6, 7, 8], "notebook": [1, 3, 4, 5, 6, 7, 8], "auto_tutorials_jupyt": 1, "galleri": [1, 3, 4, 5, 6, 7, 8], "gener": [1, 3, 4, 5, 6, 7, 8, 9, 33, 42], "sphinx": [1, 3, 4, 5, 6, 7, 8], "04": [2, 5, 7, 8], "21": [2, 5, 8], "033": 2, "total": [2, 3, 4, 5, 6, 7, 8], "execut": [2, 19, 39, 41], "auto_tutori": 2, "file": [2, 3, 4, 5, 6, 7, 8, 39, 41], "tutorial_pe_cifar10": [2, 7], "py": [2, 3, 4, 5, 6, 7, 8, 41], "01": [2, 5, 7, 8], "50": [2, 4, 5, 7, 8, 10], "688": [2, 7], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41], "mb": 2, "tutorial_evidential_classif": [2, 5], "00": [2, 3, 5, 7, 8], "55": [2, 5, 8], "198": [2, 5], "tutorial_bayesian": [2, 3], "35": [2, 3, 5], "150": [2, 3, 4, 5], "tutorial_scal": [2, 8], "34": [2, 5, 8], "497": [2, 5, 8], "tutorial_mc_dropout": [2, 6], "20": [2, 5, 6, 8, 15], "682": [2, 6], "tutorial_der_cub": [2, 4], "818": [2, 4, 5], "go": [3, 4, 5, 6, 7, 8, 41], "end": [3, 4, 5, 6, 7, 8], "full": [3, 4, 5, 6, 7, 8, 38, 41], "In": [3, 4, 5, 6, 7, 8, 14, 35, 36, 37, 40, 41], "tutori": [3, 4, 5, 6, 7, 8, 9, 38, 40], "we": [3, 4, 5, 6, 7, 8, 9, 14, 15, 28, 29, 30, 31, 32, 33, 34, 40, 41], "bnn": 3, "mnist": [3, 5, 6], "dataset": [3, 4, 5, 6, 8, 35, 36, 37, 38, 41], "ar": [3, 7, 8, 9, 14, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42], "class": [3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41], "estim": [3, 4, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 28, 29, 30, 33, 38, 40, 42], "uncertainti": [3, 4, 5, 6, 7, 9, 16, 17, 23, 24, 33, 39, 41], "predict": [3, 4, 5, 6, 7, 8, 10, 11, 12, 29, 32, 34, 40, 42], "via": [3, 39, 41], "weight": [3, 8, 9, 10, 12, 14, 15, 18, 19, 23, 24, 25, 27, 35, 37, 42], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 19, 28, 29, 30, 31, 32, 33, 34, 40, 41], "achiev": 3, "consid": [3, 4, 42], "random": [3, 7], "learn": [3, 4, 5, 6, 9, 14, 15, 24, 35, 36, 37, 42], "posterior": [3, 6, 20, 21, 22, 23], "distribut": [3, 4, 5, 6, 8, 9, 23, 28, 29, 30, 31, 32, 33, 34, 40, 42], "contrast": 3, "standard": [3, 23, 28, 29, 30, 31, 32, 33, 34], "which": [3, 4, 5, 6, 10, 11, 12, 28, 29, 30, 31, 32, 33, 34, 38, 41], "onli": [3, 5, 7, 9, 10, 11, 12, 18, 19, 28, 29, 30, 31, 32, 33, 34], "singl": [3, 5, 30], "set": [3, 4, 7, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41], "seen": 3, "dirac": 3, "For": [3, 6, 9, 39, 41, 42], "more": [3, 6, 8, 40, 42], "inform": [3, 6, 10, 11, 12, 33], "reader": [3, 6], "follow": [3, 4, 5, 6, 9, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42], "resourc": [3, 6], "icml2015": 3, "hand": 3, "user": [3, 28, 29, 30, 31, 32, 33, 34], "ieee": [3, 42], "comput": [3, 6, 17, 19, 25, 26, 28, 29, 30, 31, 32, 33, 34, 42], "intellig": 3, "magazin": 3, "part": [3, 4, 5, 6, 28, 29, 30, 31, 32, 33, 34], "alreadi": [3, 4, 5, 6, 7, 8, 9, 28, 29, 30, 31, 32, 33, 34, 41], "implement": [3, 4, 5, 6, 9, 14, 15, 33, 38, 42], "tu": [3, 4, 5, 6], "To": [3, 4, 5, 6, 8, 9, 38, 39, 40, 41], "cli": [3, 4, 5, 6, 38], "handler": [3, 4, 5, 6], "cli_main": [3, 4, 5, 6, 41], "argument": [3, 4, 5, 6, 28, 29, 30, 31, 32, 33, 34, 41], "parser": [3, 4, 5, 6], "init_arg": [3, 4, 5, 6, 41], "bayesian_lenet": 3, "li": [3, 4, 5, 6, 42], "torch_uncertainti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41], "modul": [3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41], "object": [3, 4, 5, 8, 9, 25, 28, 29, 30, 31, 32, 33, 34], "elboloss": 3, "datamodul": [3, 4, 5, 6, 41], "handl": [3, 5, 6, 8], "dataload": [3, 4, 5, 6, 7], "mnistdatamodul": [3, 5, 6], "import": [3, 4, 5, 6, 7, 8, 9, 41], "classificationsingl": [3, 5], "also": [3, 4, 5, 6, 8, 28, 29, 30, 31, 32, 33, 34, 38, 40], "need": [3, 4, 5, 6, 8], "defin": [3, 4, 5, 6, 8], "torch": [3, 4, 5, 6, 7, 8, 9, 14, 15, 28, 29, 30, 31, 32, 33, 34, 39, 41], "well": [3, 4, 5, 6, 8, 42], "withing": [3, 4, 5, 6], "nn": [3, 4, 5, 6, 7, 8, 10, 11, 12, 25, 26, 35, 36, 37, 41], "partial": [3, 4, 5], "modifi": [3, 4, 5, 7], "default": [3, 4, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "elbo": [3, 25], "argvcontext": [3, 4, 5, 6], "avoid": [3, 4, 5, 6, 8, 9, 33], "therefor": [3, 4, 5, 6, 18, 19, 40], "error": [3, 4, 5, 6, 8, 39], "o": [3, 4, 5, 6], "functool": [3, 4, 5], "pathlib": [3, 4, 5, 6, 41], "path": [3, 4, 5, 6, 7, 41], "cli_test_help": [3, 4, 5, 6], "adam": [3, 4, 5, 42], "rate": [3, 4, 5, 6, 12, 31, 35, 36, 37], "001": [3, 4, 5, 7], "def": [3, 4, 5, 6, 7, 41], "optim_lenet": [3, 5], "dict": [3, 4, 5, 28, 29, 30, 31, 32, 33, 34], "paramet": [3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40], "lr": [3, 4, 5, 7, 35, 36, 37], "1e": [3, 4, 5], "return": [3, 4, 5, 7, 10, 11, 12, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41], "root": [3, 4, 5, 6, 7, 8, 41], "log": [3, 4, 5, 6, 8, 24, 32, 34, 41], "fake": [3, 4, 5, 6], "pars": [3, 4, 5, 6], "trainer": [3, 4, 5, 6, 8, 41], "transform": [3, 5, 6, 7, 15], "final": [3, 6, 8, 9, 28, 38, 40, 41], "blueprint": [3, 6], "abspath": [3, 4, 5, 6], "mock": [3, 4, 5, 6], "max_epoch": [3, 4, 5, 6, 41], "enable_progress_bar": [3, 4, 5, 6], "fals": [3, 4, 6, 7, 8, 10, 11, 12, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41], "arg": [3, 4, 5, 6, 28, 29, 30, 31, 32, 33, 34, 41], "net_nam": [3, 4, 5, 6, 41], "str": [3, 5, 6, 10, 11, 12, 14, 16, 18, 24, 27, 28, 29, 30, 32, 33, 34, 41], "data": [3, 5, 6, 8, 14, 15, 23, 35, 36, 37, 41], "dm": [3, 5, 6, 8, 41], "var": [3, 4, 5, 6, 32, 41], "num_channel": [3, 5, 6], "num_class": [3, 5, 6, 8, 10, 11, 12, 28, 35, 37, 41], "Then": [3, 4, 5, 9], "just": [3, 8], "dure": [3, 4, 5, 25], "do": [3, 4, 5, 6, 7, 8, 9, 41], "redefin": [3, 4, 5], "function": [3, 4, 5, 6, 25, 28, 29, 30, 31, 32, 33, 34, 40, 41], "hyperparamet": 3, "propos": 3, "blitz": 3, "librari": [3, 9, 41, 42], "As": 3, "crossentropyloss": [3, 6, 7, 41], "likelihood": [3, 4, 5, 6, 8, 32, 33, 34, 40], "criterion": [3, 7, 10, 11, 12, 25], "kl_weight": [3, 25], "50000": [3, 7], "num_sampl": [3, 4, 25], "baselin": [3, 4, 5, 6, 10, 11, 12, 13, 38, 41], "in_channel": [3, 5, 6, 8, 10, 11, 12, 14, 16, 18, 20, 21, 22, 41], "optimization_procedur": [3, 4, 5, 6, 10, 11, 12, 13, 41], "now": [3, 5, 6, 8, 9, 39], "prepar": 3, "main": [3, 9], "specif": [3, 9, 28, 29, 30, 31, 32, 33, 34, 41], "includ": [3, 9, 38, 39, 40], "name": [3, 9, 28, 29, 30, 31, 32, 33, 34, 41], "automat": [3, 8], "folder": [3, 39, 41], "save": [3, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "result": [3, 4, 5, 6, 7, 33], "http": [3, 7, 8, 24, 27, 31, 39], "yann": [3, 42], "lecun": [3, 42], "com": [3, 31, 39], "exdb": 3, "imag": [3, 5, 6, 14, 16, 18, 42], "idx3": 3, "ubyt": 3, "gz": [3, 7, 8], "home": [3, 4], "runner": [3, 4], "work": [3, 4, 40], "auto_tutorials_sourc": 3, "raw": 3, "9912422": 3, "": [3, 5, 6, 7, 14, 15, 20, 21, 22, 23, 28, 40, 41], "100": [3, 5, 7, 8, 35, 36, 37, 41], "266224266": 3, "46it": [3, 5, 7], "extract": [3, 7, 8], "idx1": 3, "28881": 3, "201556894": 3, "88it": [3, 5, 8], "t10k": 3, "1648877": 3, "159462563": 3, "91it": [3, 5], "4542": 3, "49353701": 3, "47it": [3, 5, 7], "metric": [3, 4, 5, 6, 8, 28, 29, 30, 31, 32, 33, 34, 38, 41], "hp": [3, 4, 5, 6], "test_acc": [3, 5, 6], "9603999853134155": 3, "test_brier": [3, 5, 6], "0611395388841629": 3, "test_ec": [3, 5, 6], "015226555988192558": 3, "test_entropy_id": [3, 5, 6], "18016020953655243": 3, "test_nll": [3, 5, 6], "131271630525589": 3, "let": [3, 5, 6, 7, 9, 40, 41], "matplotlib": [3, 4, 5, 6, 7], "pyplot": [3, 4, 5, 6, 7], "plt": [3, 4, 5, 6, 7], "torchvis": [3, 5, 6, 7], "numpi": [3, 5, 6, 7, 9], "np": [3, 5, 6, 7], "imshow": [3, 5, 6, 7], "img": [3, 5, 6, 7], "npimg": [3, 5, 6, 7], "transpos": [3, 5, 6, 7], "show": [3, 5, 6, 7, 8, 35, 36, 37], "datait": [3, 5, 6, 7], "iter": [3, 5, 6, 7, 35, 36, 37], "val_dataload": [3, 4, 5, 6], "next": [3, 4, 5, 6, 7], "print": [3, 5, 6, 7, 8, 14, 15], "make_grid": [3, 5, 6, 7], "ground": [3, 4, 5, 6, 32, 34], "truth": [3, 4, 5, 6, 32, 34], "join": [3, 5, 6, 7], "f": [3, 4, 5, 6, 7, 8, 41, 42], "j": [3, 5, 6, 7], "rang": [3, 5, 6, 7, 41], "logit": [3, 4, 6, 7, 8, 10, 11, 12, 35, 36, 37, 40, 42], "prob": [3, 5, 6, 8, 28, 29, 30, 33, 34], "softmax": [3, 6, 7, 8, 40], "dim": [3, 4, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34], "_": [3, 7, 28, 29, 30, 31, 32, 33, 34], "max": [3, 6, 7, 28, 29, 30, 31, 32, 33, 34], "digit": [3, 5, 6, 42], "clip": [3, 5, 6], "input": [3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 25, 28, 29, 30, 31, 32, 33, 34, 40], "valid": [3, 5, 6, 9, 41], "rgb": [3, 5, 6], "float": [3, 4, 5, 6, 10, 11, 12, 16, 17, 18, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "255": [3, 5, 6], "integ": [3, 5, 6], "7": [3, 4, 5, 6, 8, 23], "y": [3, 4, 8, 15, 35, 36, 37, 40, 42], "bottou": [3, 42], "l": [3, 24, 42], "bengio": [3, 42], "haffner": [3, 42], "p": [3, 8], "1998": [3, 42], "gradient": [3, 7, 42], "appli": [3, 14, 15, 16, 17, 24, 27, 28, 29, 30, 31, 32, 33, 34, 42], "document": [3, 38, 42], "recognit": [3, 42], "proceed": [3, 42], "blundel": [3, 23, 42], "c": [3, 7, 8, 28, 29, 30, 33, 34, 35, 36, 37, 40, 41], "cornebis": [3, 42], "kavukcuoglu": [3, 42], "k": [3, 4, 8, 14, 15, 35, 36, 37, 40], "wierstra": [3, 42], "d": [3, 27, 32], "2015": [3, 8, 23, 42], "icml": [3, 8, 23, 35, 36, 37, 40, 42], "kingma": 3, "ba": [3, 42], "2014": 3, "A": [3, 27, 28, 29, 30, 33], "method": [3, 4, 5, 6, 8, 10, 11, 12, 14, 15, 28, 29, 30, 31, 32, 33, 34, 38], "stochast": 3, "iclr": [3, 42], "run": [3, 4, 5, 6, 7, 8, 9, 28, 29, 30, 31, 32, 33, 34, 39, 41], "time": [3, 4, 5, 6, 7, 8, 10, 12, 14, 18, 19, 28, 29, 30, 31, 32, 33, 34], "script": [3, 4, 5, 6, 7, 8, 41], "second": [3, 4, 5, 6, 7, 8, 23], "ipynb": [3, 4, 5, 6, 7, 8], "aim": [4, 5], "introductori": [4, 5], "overview": [4, 5], "practic": [4, 5], "demonstr": [4, 5], "applic": [4, 5, 9], "tackl": [4, 5], "problem": [4, 5, 6], "fit": [4, 5, 35, 36, 37], "x": [4, 7, 15, 41], "multi": [4, 5, 41], "layer": [4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 40, 42], "perceptron": [4, 5], "output": [4, 5, 7, 14, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 40], "ha": [4, 8, 28, 29, 30, 31, 32, 33, 34], "four": [4, 14, 16, 18], "minim": [4, 5, 8, 25], "normal": [4, 20, 21, 22, 23, 27, 28, 29, 33, 34, 40], "invers": [4, 27], "gamma": [4, 5, 7, 10, 11, 12, 13, 18, 19, 27, 41], "nig": 4, "repres": [4, 5, 6, 8, 40, 42], "approach": [4, 5, 14, 15, 42], "quantifi": [4, 5, 24, 42], "involv": [4, 5], "introduc": [4, 5, 14, 15], "prior": [4, 5, 20, 21, 22, 23], "over": [4, 5, 7, 14, 28, 29, 30, 32, 33, 34], "gaussian": [4, 32], "nigloss": 4, "sampl": [4, 8, 14, 15, 20, 21, 22, 23, 25, 28, 29, 30, 32, 33, 34], "noisi": [4, 42], "cubic": 4, "pytorch_lightn": 4, "lightningdatamodul": 4, "regressionsingl": 4, "optim_regress": 4, "learning_r": 4, "5e": 4, "weight_decai": [4, 5], "same": [4, 5, 8, 10, 12, 28, 29, 30, 31, 32, 33, 34], "synthet": 4, "task": [4, 8], "origin": [4, 5, 8, 10, 11, 12, 28, 29, 30, 31, 32, 33, 34], "paper": [4, 5, 9, 14, 15, 23, 38, 42], "train_d": 4, "1000": [4, 8], "val_d": 4, "300": [4, 5], "test_d": 4, "from_dataset": 4, "val_dataset": 4, "test_dataset": [4, 8], "batch_siz": [4, 7, 8, 19], "32": [4, 5, 8, 10, 14], "training_task": 4, "in_featur": [4, 13, 15, 17, 19, 23], "num_output": [4, 13], "hidden_dim": [4, 13], "64": [4, 5, 7, 18], "after": [4, 5, 8, 28, 29, 30, 31, 32, 33, 34], "along": 4, "dist_estim": [4, 13], "number": [4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "reg_weight": [4, 5, 24, 27], "venv": 4, "lib": 4, "python3": [4, 39, 41], "10": [4, 5, 6, 7, 8, 22, 39, 41], "site": 4, "packag": [4, 7, 9, 38, 39, 41], "connector": 4, "data_connector": 4, "224": [4, 5], "possibleuserwarn": 4, "doe": [4, 9], "mani": [4, 41, 42], "worker": 4, "mai": [4, 8, 9, 39, 40, 41], "bottleneck": 4, "increas": [4, 18, 19], "valu": [4, 6, 10, 11, 12, 14, 15, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40], "num_work": [4, 7], "try": [4, 7, 9], "cpu": [4, 35, 36, 37], "machin": [4, 5], "init": [4, 28, 29, 30, 31, 32, 33, 34], "perform": [4, 6, 7, 28, 29, 30, 31, 32, 33, 34], "rank_zero_warn": 4, "train_dataload": 4, "1609": 4, "batch": [4, 7, 10, 11, 12, 15, 16, 17, 28, 29, 30, 31, 32, 33, 34], "smaller": 4, "than": [4, 8], "interv": 4, "log_every_n_step": 4, "lower": [4, 29, 30], "want": [4, 39], "see": [4, 7, 8, 18, 19, 28, 29, 30, 32, 33, 34, 40], "epoch": [4, 5, 7], "test_dataload": [4, 8], "test_gnll": 4, "529": [4, 5], "4777221679688": 4, "test_ms": 4, "931329727172852": 4, "no_grad": [4, 5], "linspac": 4, "unsqueez": 4, "mean": [4, 6, 7, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34], "v": 4, "alpha": [4, 5, 7, 10, 11, 12, 13, 18, 19, 41], "beta": 4, "split": [4, 8], "softplu": 4, "sqrt": [4, 14, 15], "squeeze_": 4, "fig": [4, 8], "ax": [4, 8], "subplot": 4, "plot": [4, 8, 28, 29, 30, 31, 32, 33, 34], "r": [4, 7, 14, 15], "zorder": 4, "fill_between": 4, "linewidth": 4, "edgecolor": 4, "none": [4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41], "facecolor": 4, "blue": 4, "epistem": [4, 33], "els": 4, "gca": 4, "set_ylim": 4, "set_xlim": 4, "legend": 4, "loc": 4, "upper": 4, "left": [4, 14], "grid": 4, "alexand": [4, 42], "amini": [4, 27, 42], "wilko": [4, 42], "schwart": [4, 27, 42], "ava": [4, 42], "soleimani": [4, 27, 42], "daniela": [4, 42], "ru": [4, 27, 42], "2022": [4, 42], "neurip": [4, 5, 6, 24, 42], "2020": [4, 42], "mlp": 5, "dirichlet": [5, 24], "compos": [5, 7, 14, 28, 29, 30, 31, 32, 33, 34], "risk": 5, "squar": [5, 14], "regular": [5, 24, 27], "term": [5, 23, 24, 25, 27], "kl": [5, 25, 26], "diverg": [5, 25, 26, 33], "categor": [5, 40], "decloss": 5, "offici": [5, 14, 15, 38], "step": [5, 7, 9, 24], "schedul": [5, 41], "005": 5, "exp_lr_schedul": 5, "lr_schedul": 5, "steplr": 5, "step_siz": 5, "pytorch": [5, 7, 8, 9, 14, 15, 38], "sake": 5, "replac": [5, 9, 41], "25": [5, 8], "your": [5, 9, 39, 41], "true": [5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41], "saniti": 5, "check": [5, 38, 39, 41], "0it": 5, "60": [5, 8], "96it": [5, 7], "78": [5, 8], "89it": 5, "548": 5, "02": [5, 7, 8], "23": [5, 8], "81it": 5, "24": [5, 7, 8], "79it": [5, 7, 8], "v_num": 5, "17": [5, 8], "00it": [5, 8], "18": [5, 8, 10, 41], "99it": 5, "54": 5, "9": [5, 7, 8], "92it": 5, "90it": [5, 7], "43": 5, "12": [5, 8], "41it": [5, 7], "40it": 5, "38": [5, 8], "14": [5, 8, 14], "09it": [5, 8], "07it": [5, 8], "33": [5, 7], "16": [5, 6, 7, 8, 11, 14, 41], "18it": [5, 8], "16it": [5, 7, 8], "29": [5, 8], "8": [5, 6, 7, 8, 14, 15], "27": [5, 7, 8], "19": [5, 7, 8, 11], "43it": 5, "22": [5, 7, 8], "37it": [5, 8], "34it": [5, 7, 8], "11": [5, 7, 8, 11], "61it": 5, "58it": 5, "60it": [5, 7], "57it": [5, 8], "13": [5, 7, 8, 11], "72it": 5, "70it": [5, 8], "26": [5, 8], "67it": [5, 7, 8], "64it": [5, 7], "15": [5, 8], "63it": [5, 7, 8], "28": [5, 8], "25it": [5, 8], "23it": 5, "13it": [5, 8], "10it": [5, 7, 8], "93it": [5, 7], "30": [5, 7, 8, 15], "68it": [5, 7], "66it": 5, "31": [5, 8], "35it": [5, 7], "06it": 5, "04it": [5, 8], "84it": [5, 8], "39it": 5, "17it": 5, "15it": [5, 8], "65it": [5, 7], "21it": [5, 8], "19it": [5, 7], "36": [5, 7], "11it": [5, 8], "52it": 5, "50it": 5, "44it": 5, "42it": 5, "83it": 5, "95it": 5, "37": [5, 8], "38it": 5, "36it": 5, "39": [5, 7, 8], "62it": [5, 7], "40": [5, 8], "86it": [5, 8], "41": [5, 7, 8], "42": [5, 8], "76it": [5, 7], "74it": [5, 7], "44": [5, 7, 8], "75it": [5, 8], "73it": 5, "45": [5, 8], "77it": 5, "46": [5, 8], "08it": [5, 8], "47": [5, 8], "30it": 5, "28it": [5, 8], "48": [5, 7], "49": 5, "55it": 5, "54it": [5, 7, 8], "82it": 5, "09": 5, "51": 5, "05it": [5, 7], "07": [5, 8], "52": [5, 8], "29it": 5, "27it": [5, 8], "53": [5, 7, 8], "53it": [5, 8], "51it": 5, "06": [5, 7, 8], "80it": 5, "56": [5, 7, 8], "59it": 5, "03": [5, 7, 8], "57": 5, "85it": [5, 7, 8], "58": [5, 7, 8], "59": [5, 8], "24it": 5, "99": [5, 7], "48it": [5, 7], "98": 5, "61": [5, 7], "62": [5, 8], "71it": [5, 8], "96": [5, 7], "63": [5, 8], "95": [5, 31], "78it": [5, 8], "94": [5, 7, 8], "65": 5, "87it": [5, 8], "66": [5, 8], "93": [5, 8], "67": [5, 7], "92": [5, 8], "68": [5, 8], "69": [5, 7, 8], "89": [5, 8], "70": [5, 8], "32it": 5, "31it": 5, "71": [5, 8], "49it": 5, "88": [5, 7, 8], "72": [5, 7, 8], "73": 5, "86": [5, 7], "74": [5, 8], "85": 5, "75": [5, 7, 8, 41], "84": [5, 7, 8, 41], "76": [5, 8], "83": [5, 7], "77": [5, 7], "82": [5, 8], "20it": [5, 7, 8], "81": [5, 8], "79": [5, 8], "80": [5, 7], "87": [5, 8], "69it": [5, 7], "90": 5, "91": [5, 7, 8], "02it": [5, 7], "01it": [5, 7], "14it": [5, 8], "97": [5, 8], "33it": [5, 7, 8], "101": [5, 10], "102": 5, "45it": [5, 7], "103": 5, "56it": [5, 7], "104": 5, "105": 5, "106": 5, "107": 5, "108": 5, "109": 5, "110": 5, "111": 5, "112": 5, "113": 5, "114": 5, "98it": [5, 8], "115": 5, "116": 5, "117": 5, "118": 5, "119": 5, "120": [5, 7, 41], "26it": [5, 7, 8], "121": 5, "122": 5, "03it": [5, 7], "123": 5, "124": 5, "125": 5, "126": 5, "127": 5, "128": [5, 6], "22it": [5, 8], "129": 5, "130": 5, "131": 5, "132": 5, "133": 5, "134": 5, "135": 5, "136": 5, "137": 5, "08": 5, "138": 5, "139": 5, "140": 5, "141": 5, "142": 5, "143": 5, "144": 5, "145": 5, "146": 5, "147": 5, "148": 5, "149": 5, "151": 5, "152": [5, 10], "153": 5, "154": 5, "155": 5, "156": 5, "157": 5, "158": 5, "159": 5, "160": 5, "161": 5, "162": 5, "163": 5, "164": 5, "165": 5, "166": 5, "167": 5, "168": 5, "169": 5, "170": 5, "171": 5, "172": 5, "173": 5, "174": 5, "175": 5, "176": 5, "177": 5, "178": 5, "179": 5, "180": 5, "181": 5, "182": 5, "183": 5, "184": 5, "185": 5, "186": 5, "187": 5, "188": 5, "189": 5, "190": 5, "94it": [5, 8], "191": 5, "192": 5, "193": 5, "194": 5, "195": 5, "196": 5, "197": 5, "199": 5, "200": [5, 35, 37, 41], "201": 5, "202": 5, "203": 5, "204": 5, "205": 5, "206": 5, "207": 5, "208": 5, "209": 5, "210": 5, "211": [5, 7], "212": 5, "213": 5, "214": 5, "215": 5, "216": 5, "217": 5, "218": 5, "219": 5, "220": 5, "221": 5, "222": 5, "223": 5, "225": 5, "226": 5, "227": 5, "228": 5, "229": 5, "230": 5, "231": 5, "232": 5, "233": 5, "234": 5, "235": 5, "236": 5, "237": 5, "238": 5, "05": [5, 7, 8], "239": 5, "240": 5, "241": 5, "242": 5, "243": 5, "244": 5, "245": 5, "246": 5, "247": 5, "248": 5, "249": 5, "250": 5, "251": 5, "252": 5, "253": 5, "254": 5, "256": 5, "257": 5, "258": 5, "259": 5, "260": 5, "261": 5, "262": 5, "263": 5, "264": 5, "265": 5, "266": 5, "267": 5, "268": 5, "269": 5, "270": 5, "271": 5, "272": 5, "273": 5, "274": 5, "275": 5, "276": 5, "277": 5, "278": 5, "279": 5, "280": 5, "281": 5, "282": 5, "283": 5, "284": 5, "285": 5, "286": 5, "287": 5, "288": 5, "289": 5, "290": 5, "291": 5, "292": 5, "293": 5, "294": 5, "295": 5, "296": 5, "297": 5, "298": 5, "299": 5, "301": 5, "302": 5, "303": 5, "304": 5, "305": 5, "306": 5, "307": 5, "308": 5, "309": 5, "310": 5, "311": 5, "312": 5, "313": 5, "314": 5, "315": 5, "316": 5, "317": 5, "318": 5, "319": 5, "320": 5, "321": 5, "322": 5, "323": 5, "324": 5, "325": 5, "326": 5, "327": 5, "328": 5, "329": 5, "330": 5, "331": 5, "332": 5, "333": 5, "334": 5, "335": 5, "336": 5, "337": 5, "338": 5, "339": 5, "340": 5, "341": 5, "97it": 5, "342": 5, "343": 5, "344": 5, "345": 5, "346": 5, "347": 5, "348": 5, "349": 5, "350": 5, "351": 5, "352": 5, "353": 5, "354": 5, "355": 5, "356": 5, "357": 5, "358": 5, "359": 5, "360": 5, "361": 5, "362": 5, "363": 5, "364": 5, "365": 5, "366": 5, "367": 5, "368": 5, "369": 5, "370": 5, "371": 5, "372": 5, "373": 5, "374": 5, "375": 5, "376": 5, "377": 5, "378": 5, "379": 5, "380": 5, "997": 5, "381": 5, "991": 5, "382": 5, "383": 5, "985": 5, "384": 5, "385": 5, "982": 5, "386": 5, "12it": [5, 8], "989": 5, "387": 5, "983": 5, "388": 5, "389": 5, "971": 5, "390": 5, "969": 5, "391": 5, "953": 5, "392": 5, "952": 5, "393": 5, "954": 5, "394": 5, "957": 5, "395": 5, "396": 5, "948": 5, "397": 5, "942": 5, "398": 5, "939": 5, "399": 5, "945": 5, "400": 5, "401": 5, "947": 5, "402": 5, "944": 5, "403": 5, "938": 5, "404": 5, "935": 5, "405": 5, "406": 5, "951": 5, "407": 5, "408": 5, "409": 5, "959": 5, "410": 5, "411": 5, "412": 5, "967": 5, "413": 5, "968": 5, "414": 5, "415": 5, "974": 5, "416": 5, "979": 5, "417": 5, "418": 5, "419": 5, "975": 5, "420": 5, "421": 5, "961": 5, "422": 5, "963": 5, "423": 5, "424": 5, "425": 5, "958": 5, "426": 5, "427": 5, "428": 5, "956": 5, "429": 5, "430": 5, "431": 5, "432": 5, "943": 5, "433": 5, "434": 5, "941": 5, "435": 5, "932": 5, "436": 5, "437": 5, "936": 5, "438": 5, "439": 5, "440": 5, "441": 5, "442": 5, "443": 5, "444": 5, "946": 5, "445": 5, "446": 5, "447": 5, "955": 5, "448": 5, "449": 5, "964": 5, "450": 5, "451": 5, "452": 5, "453": 5, "454": 5, "455": 5, "456": 5, "457": 5, "458": 5, "459": 5, "460": 5, "461": 5, "949": 5, "462": 5, "463": 5, "464": 5, "465": 5, "466": 5, "467": 5, "468": 5, "469": 5, "470": 5, "471": 5, "472": 5, "473": 5, "474": 5, "475": 5, "476": 5, "477": 5, "478": 5, "479": 5, "480": 5, "481": 5, "482": 5, "483": 5, "484": 5, "485": 5, "486": 5, "487": 5, "488": 5, "489": 5, "490": 5, "491": 5, "492": 5, "493": 5, "494": 5, "495": 5, "496": 5, "498": 5, "499": 5, "500": 5, "501": 5, "502": 5, "503": 5, "504": 5, "505": 5, "506": 5, "507": 5, "508": 5, "509": 5, "510": 5, "511": 5, "512": 5, "513": 5, "514": 5, "515": 5, "516": 5, "517": 5, "518": 5, "519": 5, "520": 5, "521": 5, "522": 5, "523": 5, "524": 5, "525": 5, "526": 5, "527": 5, "528": 5, "530": 5, "531": 5, "532": 5, "533": 5, "534": 5, "535": 5, "536": 5, "537": 5, "538": 5, "539": 5, "540": 5, "541": 5, "542": 5, "543": 5, "544": 5, "545": 5, "546": 5, "547": 5, "937": 5, "933": 5, "925": 5, "929": 5, "927": 5, "928": 5, "922": 5, "918": 5, "917": 5, "919": 5, "926": 5, "912": 5, "924": 5, "914": 5, "915": 5, "934": 5, "923": 5, "913": 5, "916": 5, "921": 5, "904": 5, "907": 5, "902": 5, "899": [5, 7], "892": 5, "888": 5, "898": 5, "894": 5, "886": 5, "877": 5, "879": 5, "866": 5, "859": 5, "852": 5, "861": 5, "868": 5, "867": 5, "895": 5, "903": 5, "931": 5, "906": 5, "893": 5, "883": 5, "896": 5, "885": 5, "884": 5, "887": 5, "889": 5, "881": 5, "876": 5, "863": 5, "865": 5, "872": 5, "875": 5, "864": 5, "855": 5, "869": 5, "858": 5, "856": 5, "891": 5, "901": 5, "878": 5, "873": 5, "853": 5, "845": 5, "857": 5, "846": 5, "854": 5, "847": 5, "839": [5, 7], "871": 5, "874": 5, "862": 5, "842": 5, "843": 5, "851": 5, "905": 5, "841": 5, "838": 5, "827": 5, "813": 5, "808": 5, "814": 5, "811": 5, "829": 5, "849": 5, "844": 5, "832": 5, "824": 5, "826": 5, "825": 5, "823": 5, "834": 5, "831": 5, "836": 5, "835": 5, "837": 5, "848": 5, "822": 5, "809": 5, "807": 5, "797": 5, "802": 5, "798": 5, "801": 5, "803": 5, "817": 5, "821": 5, "833": 5, "828": 5, "819": 5, "816": 5, "812": 5, "815": 5, "805": 5, "784": 5, "788": 5, "794": 5, "796": 5, "795": 5, "799": 5, "806": 5, "792": 5, "787": 5, "793": 5, "791": 5, "785": 5, "789": 5, "781": 5, "778": 5, "777": 5, "776": 5, "773": 5, "771": 5, "768": 5, "772": 5, "779": 5, "783": 5, "782": 5, "786": 5, "774": 5, "775": 5, "804": 5, "762": 5, "764": 5, "759": 5, "757": 5, "761": 5, "754": 5, "763": [5, 7], "751": 5, "748": 5, "756": 5, "766": 5, "758": 5, "753": 5, "765": 5, "767": 5, "769": 5, "752": 5, "755": 5, "739": 5, "734": 5, "733": 5, "723": [5, 7], "718": 5, "726": 5, "731": 5, "736": 5, "724": 5, "727": 5, "725": 5, "744": 5, "749": 5, "743": 5, "742": 5, "745": 5, "732": 5, "729": 5, "735": 5, "722": 5, "721": 5, "717": 5, "711": 5, "713": 5, "728": 5, "737": 5, "741": 5, "746": 5, "747": 5, "859499990940094": 5, "19011516869068146": 5, "05072227120399475": 5, "1342305988073349": 5, "inf": 5, "rotated_mnist": 5, "angl": 5, "int": [5, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 35, 36, 37], "rotat": 5, "confid": [5, 29, 30], "degre": 5, "rotated_imag": 5, "evid": 5, "relu": [5, 7, 41], "strength": 5, "sum": [5, 24, 27, 28, 29, 30, 31, 32, 33, 34, 40], "keepdim": 5, "entropi": [5, 7, 8, 10, 11, 12], "argmax": 5, "eval": [5, 6], "643": 5, "637": [5, 7], "569": 5, "murat": [5, 42], "sensoi": [5, 24, 42], "lanc": [5, 42], "kaplan": [5, 24, 42], "melih": [5, 42], "kandemir": [5, 24, 42], "2018": [5, 24, 42], "ll": 6, "computation": [6, 33], "effici": [6, 8, 14, 15, 38, 42], "approxim": [6, 42], "varianc": [6, 32], "multipl": [6, 7, 28, 29, 30, 31, 32, 33, 34, 42], "forward": [6, 7, 14, 15, 25, 26, 28, 29, 30, 31, 32, 33, 34, 41], "pass": [6, 26, 28, 29, 30, 31, 32, 33, 34], "through": 6, "enabl": 6, "mode": [6, 9, 28, 29, 30, 31, 32, 33, 34, 39], "refer": [6, 7, 9, 14, 15, 16, 17, 23, 24, 27, 35, 36, 37, 38, 41], "what": [6, 7, 10, 11, 12], "vision": [6, 42], "2017": [6, 8, 35, 36, 37, 40, 42], "pmlr": 6, "2016": [6, 42], "first": [6, 7, 8, 9, 18, 19, 23, 41], "resnet": [6, 8, 12, 41], "get": [6, 7, 8, 9, 28, 29, 30, 31, 32, 33, 34, 41], "command": [6, 9, 39], "line": 6, "optim": [6, 10, 11, 12, 35, 36, 37, 41], "wrapper": [6, 8], "classificationensembl": 6, "optim_cifar10_resnet18": 6, "It": [6, 17, 19, 40, 41], "specifi": [6, 9, 24, 27, 28, 29, 30, 31, 32, 33, 34], "version": [6, 10, 11, 12, 13, 28, 29, 30, 31, 32, 33, 34, 41], "num_estim": [6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 41], "dropout_r": [6, 10, 11, 12], "channel": [6, 10, 11, 12, 14, 16, 17, 18, 19], "9376999735832214": 6, "14965032041072845": 6, "18567827343940735": 6, "8887413144111633": 6, "test_id_ens_disagr": 6, "2160700261592865": 6, "test_id_ens_entropi": 6, "6242626309394836": 6, "test_id_ens_mi": 6, "2644786834716797": 6, "38148266077041626": 6, "forget": 6, "call": [6, 8, 14, 15, 28, 29, 30, 31, 32, 33, 34, 40], "infer": 6, "4": [6, 14, 23, 41], "reshap": 6, "image_id": 6, "item": [6, 7], "heavili": [7, 14, 15], "inspir": [7, 9, 14, 15], "dive": 7, "process": [7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "us": [7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42], "avail": [7, 8, 39, 41], "The": [7, 8, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 42], "consist": [7, 14, 15], "60000": 7, "32x32": 7, "colour": 7, "6000": 7, "per": [7, 18, 28, 29, 30, 32, 33, 34], "There": [7, 8], "10000": 7, "here": [7, 8, 14, 15, 38, 39], "look": [7, 8, 9], "like": [7, 9, 28, 29, 30, 31, 32, 33, 34, 41], "outlin": 7, "its": [7, 8, 14, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 40, 41], "w": [7, 15, 27, 41], "quantif": [7, 9], "ood": [7, 10, 11, 12], "detect": [7, 9], "set_num_thread": 7, "pilimag": 7, "them": [7, 41], "tensor": [7, 14, 15, 25, 28, 29, 30, 31, 32, 33, 34], "If": [7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 28, 29, 30, 31, 32, 33, 34, 39, 41], "window": 7, "brokenpipeerror": 7, "util": 7, "totensor": 7, "trainset": 7, "trainload": 7, "shuffl": 7, "testset": 7, "testload": 7, "plane": [7, 14], "car": 7, "bird": 7, "cat": [7, 28, 29, 30, 31, 32, 33, 34], "deer": 7, "dog": 7, "frog": 7, "hors": 7, "ship": 7, "truck": 7, "www": [7, 8], "toronto": [7, 8], "edu": [7, 8], "kriz": [7, 8], "cifar": [7, 8, 41], "tar": [7, 8], "170498071": 7, "32768": [7, 8], "257399": 7, "229376": [7, 8], "1009870": 7, "917504": 7, "3009292": 7, "3637248": 7, "10224414": 7, "9306112": 7, "24448944": 7, "13074432": 7, "28455539": 7, "18317312": 7, "35525732": 7, "22413312": 7, "37154631": 7, "27852800": 7, "42324419": 7, "32210944": 7, "41929001": 7, "37191680": 7, "44091851": 7, "41680896": 7, "43839640": 7, "46858240": 7, "46175773": 7, "51544064": 7, "44761469": 7, "56426496": 7, "45343471": 7, "61014016": 7, "44897501": 7, "65830912": 7, "45353761": 7, "70549504": 7, "45091176": 7, "75169792": 7, "39268686": 7, "81428480": 7, "42116988": 7, "85721088": 7, "38843545": 7, "90505216": 7, "38503867": 7, "95485952": 7, "41299303": 7, "99713024": 7, "41211328": 7, "104300544": 7, "42473380": 7, "108986368": 7, "42446178": 7, "113770496": 7, "43936012": 7, "118226944": 7, "43516871": 7, "122781696": 7, "43170341": 7, "127139840": 7, "42950345": 7, "132055040": 7, "43792256": 7, "137003008": 7, "45420911": 7, "141557760": 7, "45090716": 7, "146079744": 7, "44842308": 7, "150601728": 7, "44268895": 7, "155385856": 7, "45307680": 7, "159940608": 7, "44617248": 7, "164495360": 7, "44856475": 7, "169017344": 7, "44027487": 7, "39738871": 7, "verifi": [7, 8], "u": [7, 9, 14, 15, 39], "some": 7, "fun": 7, "unnorm": 7, "convolut": [7, 10, 11, 12, 14, 16, 18, 19, 42], "net": 7, "__init__": [7, 41], "self": [7, 28, 29, 30, 31, 32, 33, 34, 41], "super": [7, 41], "conv1": [7, 41], "conv2d": [7, 14, 16, 18, 21], "6": [7, 20, 21, 41], "pool": [7, 41], "maxpool2d": [7, 41], "conv2": [7, 41], "fc1": [7, 41], "linear": [7, 15, 17, 19, 23], "fc2": [7, 41], "fc3": [7, 41], "flatten": [7, 41], "m": [7, 8, 14, 15, 24, 41, 42], "text": [7, 14, 15, 18, 19], "einop": [7, 41], "rearrang": [7, 19, 41], "packedconv2d": [7, 41], "packedlinear": [7, 41], "packednet": [7, 41], "last": [7, 18, 19, 28, 29, 30, 31, 32, 33, 34, 40, 41], "e": [7, 9, 28, 29, 30, 31, 32, 33, 34, 39, 41], "h": [7, 41], "packed_net": [7, 41], "cross": [7, 8], "sgd": 7, "momentum": 7, "loop": 7, "running_loss": 7, "enumer": 7, "list": [7, 8, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42], "zero": [7, 18, 20, 21, 22, 33], "zero_grad": 7, "backward": 7, "repeat": [7, 10, 12, 16, 17], "statist": [7, 28, 29, 30, 31, 32, 33, 34], "2000": [7, 8], "1999": 7, "everi": [7, 9, 39], "mini": 7, "5d": 7, "3f": 7, "finish": 7, "029": 7, "4000": 7, "084": 7, "8000": 7, "994": 7, "12000": 7, "686": 7, "665": 7, "617": 7, "our": [7, 41], "cifar_packed_net": 7, "pth": 7, "state_dict": [7, 28, 29, 30, 31, 32, 33, 34], "displai": 7, "familiar": 7, "groundtruth": 7, "back": [7, 28, 29, 30, 31, 32, 33, 34], "note": [7, 18, 19, 28, 29, 30, 31, 32, 33, 34], "re": 7, "wasn": 7, "necessari": [7, 19], "did": 7, "illustr": 7, "how": [7, 8, 28, 29, 30, 32, 33, 34, 38], "so": [7, 18, 19, 28, 29, 30, 31, 32, 33, 34, 39, 41], "load_state_dict": [7, 8], "kei": [7, 8, 28, 29, 30, 31, 32, 33, 34], "match": [7, 8, 42], "successfulli": [7, 8], "think": [7, 41], "abov": [7, 28, 29, 30, 31, 32, 33, 34], "n": [7, 14, 15, 28, 29, 30, 33, 39], "b": [7, 8, 14, 15, 28, 29, 30, 32, 33, 34], "probs_per_est": 7, "seem": 7, "pretti": 7, "good": [7, 40], "reliabl": 8, "underli": [8, 18, 19], "outsid": 8, "start": [8, 9, 16, 17, 41], "visual": 8, "routin": [8, 41], "tensorboard": 8, "torchmetr": 8, "calibrationerror": 8, "cifar100datamodul": 8, "resnet18": [8, 41], "post_process": [8, 35, 36, 37], "temperaturescal": 8, "load_hf": 8, "plotting_util": 8, "calibrationplot": 8, "scratch": 8, "hug": [8, 9], "face": [8, 9, 42], "done": 8, "one": [8, 28, 29, 30, 31, 32, 33, 34, 41], "liner": 8, "build": [8, 41], "group": [8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 34], "style": [8, 9, 10, 11, 12, 16, 17, 18, 19, 41], "config": 8, "resnet18_c100": 8, "pre": [8, 9], "built": [8, 40], "ckpt": 8, "0m": 8, "5m": 8, "7mb": 8, "6mb": 8, "5mb": 8, "9m": 8, "9mb": 8, "2mb": 8, "yaml": 8, "30k": 8, "0mb": 8, "prepare_data": 8, "setup": 8, "element": [8, 14, 16, 18, 28, 29, 30, 31, 32, 33, 34], "test": [8, 41], "attr": 8, "evaluate_ood": 8, "unus": 8, "creat": [8, 9, 28, 29, 30, 31, 32, 33, 34, 39, 41], "cal_plot": 8, "169001437": 8, "258607": 8, "1012064": 8, "884736": 8, "2888772": 8, "3506176": 8, "10446079": 8, "7929856": 8, "21207165": 8, "12877824": 8, "28969724": 8, "17104896": 8, "32412708": 8, "22446080": 8, "36510111": 8, "27033600": 8, "39148509": 8, "31424512": 8, "39295598": 8, "36110336": 8, "41435115": 8, "40435712": 8, "41764670": 8, "44793856": 8, "42266216": 8, "49152000": 8, "42625683": 8, "53444608": 8, "42347847": 8, "57704448": 8, "42285880": 8, "62128128": 8, "42697737": 8, "66420736": 8, "41876394": 8, "71172096": 8, "43444944": 8, "75530240": 8, "42942144": 8, "79855616": 8, "42780406": 8, "84312064": 8, "43302989": 8, "88670208": 8, "42250036": 8, "93159424": 8, "43013836": 8, "97484800": 8, "42289819": 8, "102006784": 8, "43081625": 8, "106594304": 8, "43299895": 8, "110985216": 8, "43307719": 8, "115343360": 8, "42001328": 8, "119832576": 8, "42794669": 8, "124420096": 8, "43690406": 8, "128811008": 8, "42261831": 8, "133464064": 8, "43293256": 8, "137822208": 8, "43333681": 8, "142180352": 8, "42412541": 8, "146440192": 8, "42394302": 8, "150831104": 8, "42831532": 8, "155123712": 8, "42235181": 8, "159383552": 8, "41464262": 8, "164626432": 8, "44633380": 8, "38964828": 8, "proper": 8, "when": [8, 14, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34], "associ": [8, 28, 29, 30, 31, 32, 33, 34], "lengthi": 8, "without": 8, "gpu": [8, 41], "restrict": 8, "subset": 8, "random_split": 8, "cal_dataset": 8, "other": [8, 38], "len": 8, "initi": [8, 14, 15, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41], "multiclass": 8, "target": [8, 25, 28, 29, 32, 34], "updat": [8, 28, 29, 30, 31, 32, 33, 34, 39], "cal": 8, "befor": [8, 9], "figur": 8, "temper": 8, "contain": [8, 9, 28, 29, 30, 31, 32, 33, 34, 38, 41], "detail": [8, 38, 40], "calibration_set": [8, 35, 36, 37], "sequenti": 8, "possibl": [8, 9, 18], "becaus": 8, "deriv": 8, "reset": [8, 28, 29, 30, 31, 32, 33, 34], "mix": 8, "score": [8, 28, 29, 30, 32, 33, 34], "previou": [8, 19], "current": [8, 9, 28, 29, 30, 31, 32, 33, 34, 40], "cal_model": 8, "better": [8, 41], "should": [8, 18, 19, 28, 29, 30, 31, 32, 33, 34, 41], "veri": [8, 42], "case": [8, 14, 40, 41], "sai": 8, "drawn": 8, "howev": [8, 9, 18, 19, 28, 29, 30, 31, 32, 33, 34, 40], "hold": 8, "real": [8, 42], "world": [8, 28, 29, 30, 31, 32, 33, 34, 42], "where": [8, 14, 15, 28, 29, 30, 32, 33, 34], "shift": 8, "could": [8, 33], "happen": 8, "expect": [8, 10, 11, 12, 28, 29, 30, 31, 32, 33, 34], "naeini": [8, 42], "cooper": [8, 42], "g": [8, 9, 35, 36, 37, 40], "hauskrecht": [8, 42], "obtain": [8, 42], "probabl": [8, 10, 12, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 42], "bin": [8, 42], "aaai": [8, 42], "guo": [8, 35, 36, 37, 40, 42], "pleiss": [8, 35, 36, 37, 40, 42], "sun": [8, 35, 36, 37, 40, 42], "weinberg": [8, 35, 36, 37, 40, 42], "q": [8, 35, 36, 37, 40, 42], "modern": [8, 35, 36, 37, 40, 42], "earli": 9, "stage": 9, "contributor": 9, "help": 9, "comprehens": [9, 38], "particularli": 9, "comment": 9, "would": [9, 28, 29, 30, 31, 32, 33, 34, 41], "project": [9, 39], "chang": [9, 18, 19, 28, 29, 30, 31, 32, 33, 34], "evolv": 9, "host": 9, "link": 9, "roughli": 9, "field": 9, "etc": [9, 41], "out": [9, 14, 15, 41, 42], "segment": 9, "interest": [9, 41], "advis": 9, "reproduc": 9, "environ": [9, 39], "ensur": [9, 41], "continu": [9, 28, 29, 30, 31, 32, 33, 34], "integr": 9, "break": 9, "poetri": [9, 38], "workstat": 9, "clone": [9, 28, 29, 30, 31, 32, 33, 34, 39], "repositori": [9, 39, 41], "edit": [9, 39], "dev": [9, 39], "commit": 9, "hook": 9, "add": [9, 14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 34, 39, 41], "python_keyring_backend": [9, 39], "keyr": [9, 39], "backend": [9, 39], "null": [9, 39], "begin": [9, 39], "reinstal": 9, "doc": 9, "navig": 9, "make": [9, 14, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 42], "html": 9, "option": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39], "noplot": 9, "instead": [9, 28, 29, 30, 31, 32, 33, 34], "ruff": 9, "format": [9, 28, 29, 30, 31, 32, 33, 34], "lint": 9, "drop": 9, "black": 9, "isort": 9, "flake8": 9, "properli": 9, "branch": 9, "person": 9, "fork": 9, "whose": 9, "nor": 9, "submit": 9, "pull": [9, 39], "request": 9, "review": 9, "pleas": [9, 28, 29, 30, 31, 32, 33, 34, 40, 42], "best": 9, "reduc": [9, 18, 19, 28, 29, 30, 31, 32, 33, 34], "coverag": 9, "emoji": 9, "each": [9, 10, 11, 12, 14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 41], "messag": 9, "correspond": [9, 10, 11, 12, 14, 15, 28, 29, 30, 31, 32, 33, 34, 40, 41], "intend": 9, "most": 9, "popular": 9, "scikit": 9, "api": [9, 38, 41], "except": 9, "arrai": 9, "feel": [9, 41], "obstacl": 9, "know": 9, "reconsid": 9, "stai": 9, "apach": 9, "2": [9, 14, 41], "loss": [10, 11, 12, 13, 24, 25, 26, 27, 38, 41], "arch": [10, 11, 41], "imagenet": [10, 11, 12, 41], "1": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 35, 36, 37, 40, 41], "rho": [10, 12], "batch_repeat": [10, 12], "use_entropi": [10, 11, 12], "use_logit": [10, 11, 12], "use_mi": [10, 11, 12], "use_variation_ratio": [10, 11, 12], "pretrain": [10, 12], "kwarg": [10, 11, 12, 13, 28, 29, 30, 31, 32, 33, 34], "backbon": [10, 11, 12, 41], "support": [10, 11, 12, 13, 41], "variou": [10, 11, 12, 13], "architectur": [10, 11, 38, 41], "procedur": [10, 11, 12], "lightningmodul": [10, 11, 12], "configure_optim": [10, 11, 12], "determin": [10, 11, 12, 28, 29, 30, 31, 32, 33, 34], "batchensembl": [10, 12, 14, 15], "mask": [10, 11, 12, 16, 17], "masksembl": [10, 12, 16, 17], "mimo": [10, 12], "mc": [10, 11, 12], "either": [10, 11, 12, 28, 29, 30, 31, 32, 33, 34], "expans": [10, 11, 12], "factor": [10, 11, 12], "affect": [10, 11, 12], "width": [10, 11, 12, 19], "within": [10, 11, 12], "share": [10, 12, 14, 15], "bool": [10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 35, 36, 37], "indic": [10, 11, 12], "whether": [10, 11, 12, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "mutual": [10, 11, 12, 33], "variat": [10, 11, 12], "ratio": [10, 11, 12], "rais": [10, 11, 12, 28, 29, 30, 31, 32, 33, 34, 41], "valueerror": [10, 11, 12, 28, 29, 30, 31, 32, 33, 34], "readi": [10, 11, 12, 41], "type": [10, 11, 12, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "wide": 12, "resnet28x10": 12, "out_channel": [14, 16, 18, 20, 21, 22], "kernel_s": [14, 16, 18, 20, 21, 22], "stride": [14, 16, 18, 20, 21, 22], "pad": [14, 16, 18, 20, 21, 22], "dilat": [14, 16, 18, 20, 21, 22], "bia": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37], "devic": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41], "dtype": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34], "2d": 14, "signal": 14, "sever": 14, "incom": [14, 15], "simplest": 14, "size": [14, 15, 16, 18, 19, 28, 29, 30, 32, 33, 34], "c_": 14, "h_": [14, 15], "w_": 14, "precis": [14, 41], "describ": [14, 41], "n_i": 14, "_j": 14, "hat": [14, 15], "n_": 14, "sum_": [14, 28], "star": 14, "altern": [14, 15, 42], "lifelong": [14, 15, 42], "present": [14, 15, 41], "tensorflow": [14, 15], "produc": [14, 16, 17, 18, 19], "tupl": [14, 16, 18], "convolv": [14, 16, 18], "kernel": [14, 16, 18], "ad": [14, 16, 18, 28, 29, 30, 31, 32, 33, 34, 41], "side": [14, 16, 18], "space": [14, 16, 18], "between": [14, 15, 16, 18], "block": [14, 16, 17, 18, 19], "connect": [14, 17, 19], "learnabl": [14, 15, 16, 17, 18, 19], "variabl": [14, 15, 23, 28, 29, 30, 31, 32, 33, 34], "shape": [14, 15, 28, 29, 30, 31, 32, 33, 34], "frac": [14, 15, 18, 19, 28], "mathcal": [14, 15], "prod_": 14, "matric": [14, 15], "row": [14, 15], "vector": [14, 15, 37, 40], "r_": [14, 15], "th": [14, 15], "member": [14, 15, 18, 19], "5": [14, 15, 41], "s_": [14, 15], "lfloor": 14, "right": 14, "rfloor": 14, "sure": [14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 34], "With": [14, 15], "equal": [14, 40], "conv2db": 14, "3": [14, 15, 39, 41], "randn": [14, 15], "out_featur": [15, 17, 19, 23], "circ": 15, "linearb": 15, "connexion": [16, 18], "Be": [16, 17], "nikita": [16, 17, 42], "durasov": [16, 17, 42], "timur": [16, 17, 42], "bagautdinov": [16, 17, 42], "pierr": [16, 17, 42], "baqu": [16, 17, 42], "pascal": [16, 17, 42], "fua": [16, 17, 42], "fulli": [17, 19], "oper": [17, 19], "given": [17, 19, 25, 40], "featur": [17, 19, 23, 42], "minimum_channels_per_group": 18, "padding_mod": [18, 20, 21, 22], "multipli": [18, 19], "smallest": 18, "explan": [18, 19, 41], "represent": [18, 19], "capac": [18, 19], "both": [18, 19, 28, 29, 30, 31, 32, 33, 34], "divis": [18, 19], "compli": [18, 19], "constraint": [18, 19], "properti": [18, 19, 28, 29, 30, 31, 32, 33, 34], "1x1": 19, "compat": 19, "later": 19, "n_estim": 19, "often": 19, "prior_sigma_1": [20, 21, 22, 23], "prior_sigma_2": [20, 21, 22, 23], "002": [20, 21, 22], "prior_pi": [20, 21, 22, 23], "mu_init": [20, 21, 22, 23], "sigma_init": [20, 21, 22, 23], "frozen": [20, 21, 22, 23], "conv1d": 20, "mixtur": [20, 21, 22, 23], "freez": [20, 21, 22, 23], "attribut": [20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34], "unfreez": [20, 21, 22, 23], "conv3d": 22, "deviat": 23, "control": [23, 28, 29, 30, 31, 32, 33, 34], "charl": [23, 42], "et": [23, 42], "al": [23, 42], "annealing_step": 24, "loss_typ": 24, "reduct": [24, 27, 28, 29, 30, 31, 32, 33, 34], "anneal": 24, "fix": [24, 35, 36, 37], "mse": 24, "digamma": 24, "arxiv": [24, 27], "org": [24, 27, 39], "ab": [24, 27], "1806": 24, "01768": 24, "seek": 25, "gather": [25, 26], "aggreg": [25, 28, 29, 30, 31, 32, 33, 34], "2019": [27, 42], "1910": 27, "02600": 27, "brier": 28, "dimens": [28, 29, 30, 31, 32, 33, 34], "averag": [28, 29, 30, 32, 33, 34], "across": [28, 29, 30, 31, 32, 33, 34], "addit": [28, 29, 30, 32, 33, 34], "keyword": [28, 29, 30, 31, 32, 33, 34], "advanc": [28, 29, 30, 32, 33, 34], "3d": 28, "ie": 28, "add_stat": [28, 29, 30, 31, 32, 33, 34], "dist_reduce_fx": [28, 29, 30, 31, 32, 33, 34], "persist": [28, 29, 30, 31, 32, 33, 34], "state": [28, 29, 30, 31, 32, 33, 34], "subclass": [28, 29, 30, 31, 32, 33, 34], "empti": [28, 29, 30, 31, 32, 33, 34], "append": [28, 29, 30, 31, 32, 33, 34], "must": [28, 29, 30, 31, 32, 33, 34], "uniqu": [28, 29, 30, 31, 32, 33, 34], "access": [28, 29, 30, 31, 32, 33, 34, 39], "my_stat": [28, 29, 30, 31, 32, 33, 34], "instanc": [28, 29, 30, 31, 32, 33, 34, 41], "behav": [28, 29, 30, 31, 32, 33, 34], "buffer": [28, 29, 30, 31, 32, 33, 34], "thei": [28, 29, 30, 31, 32, 33, 34, 39], "unlik": [28, 29, 30, 31, 32, 33, 34], "min": [28, 29, 30, 31, 32, 33, 34], "respect": [28, 29, 30, 31, 32, 33, 34], "sens": [28, 29, 30, 31, 32, 33, 34], "custom": [28, 29, 30, 31, 32, 33, 34], "synchron": [28, 29, 30, 31, 32, 33, 34], "differ": [28, 29, 30, 31, 32, 33, 34, 41], "won": [28, 29, 30, 31, 32, 33, 34], "sync": [28, 29, 30, 31, 32, 33, 34], "stack": [28, 29, 30, 31, 32, 33, 34], "wa": [28, 29, 30, 31, 32, 33, 34], "retain": [28, 29, 30, 31, 32, 33, 34], "henc": [28, 29, 30, 31, 32, 33, 34], "num_process": [28, 29, 30, 31, 32, 33, 34], "combin": [28, 29, 30, 31, 32, 33, 34], "discuss": [28, 29, 30, 31, 32, 33, 34], "callabl": [28, 29, 30, 31, 32, 33, 34], "copi": [28, 29, 30, 31, 32, 33, 34], "doubl": [28, 29, 30, 31, 32, 33, 34], "overrid": [28, 29, 30, 31, 32, 33, 34], "prevent": [28, 29, 30, 31, 32, 33, 34], "cast": [28, 29, 30, 31, 32, 33, 34], "set_dtyp": [28, 29, 30, 31, 32, 33, 34], "directli": [28, 29, 30, 31, 32, 33, 34, 38, 39, 41], "serv": [28, 29, 30, 31, 32, 33, 34], "dual": [28, 29, 30, 31, 32, 33, 34], "purpos": [28, 29, 30, 31, 32, 33, 34], "overal": [28, 29, 30, 31, 32, 33, 34], "accumulul": [28, 29, 30, 31, 32, 33, 34], "exact": [28, 29, 30, 31, 32, 33, 34], "requir": [28, 29, 30, 31, 32, 33, 34, 41], "torchmetricsusererror": [28, 29, 30, 31, 32, 33, 34], "again": [28, 29, 30, 31, 32, 33, 34, 41], "half": [28, 29, 30, 31, 32, 33, 34], "metric_st": [28, 29, 30, 31, 32, 33, 34], "post": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "__": [28, 29, 30, 31, 32, 33, 34], "dst_type": [28, 29, 30, 31, 32, 33, 34], "transfer": [28, 29, 30, 31, 32, 33, 34], "special": [28, 29, 30, 31, 32, 33, 34], "desir": [28, 29, 30, 31, 32, 33, 34, 41], "string": [28, 29, 30, 31, 32, 33, 34], "destin": [28, 29, 30, 31, 32, 33, 34], "prefix": [28, 29, 30, 31, 32, 33, 34], "keep_var": [28, 29, 30, 31, 32, 33, 34], "dictionari": [28, 29, 30, 31, 32, 33, 34, 41], "otherwis": [28, 29, 30, 31, 32, 33, 34], "ordereddict": [28, 29, 30, 31, 32, 33, 34], "detach": [28, 29, 30, 31, 32, 33, 34], "autograd": [28, 29, 30, 31, 32, 33, 34], "dist_sync_fn": [28, 29, 30, 31, 32, 33, 34], "process_group": [28, 29, 30, 31, 32, 33, 34], "should_sync": [28, 29, 30, 31, 32, 33, 34], "distributed_avail": [28, 29, 30, 31, 32, 33, 34], "manual": [28, 29, 30, 31, 32, 33, 34, 39], "select": [28, 29, 30, 31, 32, 33, 34], "entir": [28, 29, 30, 31, 32, 33, 34], "impact": [28, 29, 30, 31, 32, 33, 34], "insid": [28, 29, 30, 31, 32, 33, 34], "sync_context": [28, 29, 30, 31, 32, 33, 34], "should_unsync": [28, 29, 30, 31, 32, 33, 34], "context": [28, 29, 30, 31, 32, 33, 34], "manag": [28, 29, 30, 31, 32, 33, 34], "local": [28, 29, 30, 31, 32, 33, 34], "cach": [28, 29, 30, 31, 32, 33, 34], "restor": [28, 29, 30, 31, 32, 33, 34], "yield": [28, 29, 30, 31, 32, 33, 34], "syncron": [28, 29, 30, 31, 32, 33, 34], "accumul": [28, 29, 30, 31, 32, 33, 34], "unsync": [28, 29, 30, 31, 32, 33, 34], "revert": [28, 29, 30, 31, 32, 33, 34], "new": [28, 30, 33, 39], "update_cal": [28, 29, 30, 31, 32, 33, 34], "been": [28, 29, 30, 31, 32, 33, 34], "update_count": [28, 29, 30, 31, 32, 33, 34], "sinc": [28, 29, 30, 31, 32, 33, 34], "higher": [29, 30, 33], "shannon": [30, 33], "accross": 30, "previous": [30, 32, 33, 34], "pos_label": 31, "posit": 31, "recal": [31, 40], "github": [31, 39, 41], "hendryck": [31, 42], "anomali": 31, "seg": 31, "actual": [31, 41], "rtype": 31, "neg": [32, 33, 34], "nll": [32, 34], "varoanc": 32, "interpret": 33, "equival": 33, "jensen": 33, "gjsd": 33, "clamp": 33, "appear": 33, "due": 33, "numer": 33, "instabl": 33, "init_w": [35, 37], "init_b": [35, 37], "max_it": [35, 36, 37], "matrix": 35, "maximum": [35, 36, 37], "liter": [35, 36, 37], "cuda": [35, 36, 37], "save_logit": [35, 36, 37], "progress": [35, 36, 37, 40], "bar": [35, 36, 37], "scaler": [35, 36, 37], "set_temperatur": [35, 36, 37], "val_w": [35, 37], "val_b": [35, 37], "init_v": 36, "init_valu": 36, "val": 36, "welcom": 38, "websit": 38, "instal": 38, "contribut": [38, 39], "pypi": 38, "pip": 38, "mind": 38, "explain": 38, "author": [38, 42], "olivi": [38, 42], "laurent": [38, 42], "adrien": [38, 42], "lafag": [38, 42], "enzo": [38, 42], "tartaglion": [38, 42], "geoffrei": [38, 42], "daniel": [38, 42], "jean": [38, 42], "marc": [38, 42], "martinez": [38, 42], "andrei": [38, 42], "bursuc": [38, 42], "gianni": [38, 42], "franchi": [38, 42], "quickstart": 38, "tool": 38, "usag": 38, "introduct": [38, 41], "short": [38, 41], "background": 38, "overconfid": 38, "scope": 38, "common": [38, 42], "guidelin": [38, 39], "licens": 38, "index": [38, 40], "search": 38, "choos": [39, 41], "latter": 39, "experi": [39, 41], "boil": 39, "down": 39, "curl": 39, "ssl": 39, "git": 39, "ensta": 39, "u2i": 39, "cd": 39, "conda": 39, "activ": [39, 40], "develop": 39, "depend": [39, 40], "system": 39, "encount": 39, "kill": 39, "eg": 39, "pyproject": 39, "toml": 39, "IN": 40, "wait": 40, "while": 40, "take": [40, 41], "pointwis": 40, "exponenti": 40, "multinoulli": 40, "belong": 40, "conceptu": 40, "known": 40, "idea": 40, "trust": 40, "why": 40, "come": 41, "level": 41, "highest": 41, "fledg": 41, "own": 41, "logic": 41, "might": 41, "below": [41, 42], "move": 41, "directori": 41, "acceler": 41, "benchmark": [41, 42], "cudnn": 41, "cifar10": 41, "cifar10datamodul": 41, "get_procedur": 41, "__file__": 41, "parent": 41, "absolut": 41, "imagenet_structur": 41, "prefer": 41, "classic": 41, "pipelin": 41, "under": 41, "section": [41, 42], "choic": 41, "packed_resnet18": 41, "free": 41, "exhaust": 42, "cite": 42, "julien": 42, "korai": 42, "daan": 42, "simpl": 42, "scalabl": 42, "balaji": 42, "lakshminarayanan": 42, "pritzel": 42, "yeme": 42, "wen": 42, "dustin": 42, "tran": 42, "jimmi": 42, "cvpr": 42, "2021": 42, "independ": 42, "subnetwork": 42, "robust": 42, "marton": 42, "havasi": 42, "rodolph": 42, "jenatton": 42, "stanislav": 42, "fort": 42, "jeremiah": 42, "zhe": 42, "liu": 42, "jasper": 42, "snoek": 42, "andrew": 42, "dai": 42, "2023": 42, "yarin": 42, "gal": 42, "zoubin": 42, "ghahramani": 42, "chuan": 42, "geoff": 42, "yu": 42, "kilian": 42, "mahdi": 42, "pakdaman": 42, "gregori": 42, "milo": 42, "leon": 42, "yoshua": 42, "patrick": 42, "norman": 42, "mu": 42, "justin": 42, "gilmer": 42, "icmlw": 42, "yaroslav": 42, "bulatov": 42, "alex": 42, "krizhevski": 42, "mit": 42, "tech": 42, "report": 42, "corrupt": 42, "perturb": 42, "dan": 42, "thoma": 42, "dietterich": 42, "human": 42, "joshua": 42, "peterson": 42, "ruairidh": 42, "battledai": 42, "griffith": 42, "olga": 42, "russakovski": 42, "iccv": 42, "revisit": 42, "studi": 42, "annot": 42, "jiaheng": 42, "wei": 42, "zhaowei": 42, "zhu": 42, "hao": 42, "cheng": 42, "tongliang": 42, "gang": 42, "niu": 42, "yang": 42, "read": 42, "natur": 42, "unsupervis": 42, "yuval": 42, "netzer": 42, "tao": 42, "wang": 42, "coat": 42, "alessandro": 42, "bissacco": 42, "bo": 42, "wu": 42, "ng": 42, "workshop": 42, "2011": 42, "larg": 42, "hierarch": 42, "databas": 42, "jia": 42, "deng": 42, "dong": 42, "richard": 42, "socher": 42, "kai": 42, "fei": 42, "2009": 42, "adversari": 42, "kevin": 42, "zhao": 42, "steven": 42, "basart": 42, "jacob": 42, "steinhardt": 42, "dawn": 42, "song": 42, "critic": 42, "analysi": 42, "saurav": 42, "kadavath": 42, "frank": 42, "evan": 42, "dorundo": 42, "rahul": 42, "desai": 42, "tyler": 42, "samyak": 42, "parajuli": 42, "mike": 42, "vim": 42, "virtual": 42, "haoqi": 42, "zhizhong": 42, "litong": 42, "feng": 42, "wayn": 42, "zhang": 42, "residu": 42, "kaim": 42, "he": 42, "xiangyu": 42, "shaoq": 42, "ren": 42, "jian": 42, "sergei": 42, "zagoruyko": 42, "niko": 42, "komodaki": 42, "bmvc": 42, "karen": 42, "simonyan": 42, "zisserman": 42}, "objects": {"torch_uncertainty.baselines.classification": [[10, 0, 1, "", "ResNet"], [11, 0, 1, "", "VGG"], [12, 0, 1, "", "WideResNet"]], "torch_uncertainty.baselines.regression": [[13, 0, 1, "", "MLP"]], "torch_uncertainty.layers": [[14, 0, 1, "", "BatchConv2d"], [15, 0, 1, "", "BatchLinear"], [16, 0, 1, "", "MaskedConv2d"], [17, 0, 1, "", "MaskedLinear"], [18, 0, 1, "", "PackedConv2d"], [19, 0, 1, "", "PackedLinear"]], "torch_uncertainty.layers.PackedConv2d": [[18, 1, 1, "", "bias"], [18, 1, 1, "", "weight"]], "torch_uncertainty.layers.PackedLinear": [[19, 1, 1, "", "bias"], [19, 1, 1, "", "weight"]], "torch_uncertainty.layers.bayesian": [[20, 0, 1, "", "BayesConv1d"], [21, 0, 1, "", "BayesConv2d"], [22, 0, 1, "", "BayesConv3d"], [23, 0, 1, "", "BayesLinear"]], "torch_uncertainty.layers.bayesian.BayesConv1d": [[20, 2, 1, "", "freeze"], [20, 2, 1, "", "sample"], [20, 2, 1, "", "unfreeze"]], "torch_uncertainty.layers.bayesian.BayesConv2d": [[21, 2, 1, "", "freeze"], [21, 2, 1, "", "sample"], [21, 2, 1, "", "unfreeze"]], "torch_uncertainty.layers.bayesian.BayesConv3d": [[22, 2, 1, "", "freeze"], [22, 2, 1, "", "sample"], [22, 2, 1, "", "unfreeze"]], "torch_uncertainty.layers.bayesian.BayesLinear": [[23, 2, 1, "", "freeze"], [23, 2, 1, "", "sample"], [23, 2, 1, "", "unfreeze"]], "torch_uncertainty.losses": [[24, 0, 1, "", "DECLoss"], [25, 0, 1, "", "ELBOLoss"], [26, 0, 1, "", "KLDiv"], [27, 0, 1, "", "NIGLoss"]], "torch_uncertainty.losses.ELBOLoss": [[25, 2, 1, "", "forward"]], "torch_uncertainty.metrics": [[28, 0, 1, "", "BrierScore"], [29, 0, 1, "", "Disagreement"], [30, 0, 1, "", "Entropy"], [31, 0, 1, "", "FPR95"], [32, 0, 1, "", "GaussianNegativeLogLikelihood"], [33, 0, 1, "", "MutualInformation"], [34, 0, 1, "", "NegativeLogLikelihood"]], "torch_uncertainty.metrics.BrierScore": [[28, 2, 1, "", "add_state"], [28, 2, 1, "", "clone"], [28, 2, 1, "", "compute"], [28, 1, 1, "", "device"], [28, 2, 1, "", "double"], [28, 2, 1, "", "float"], [28, 2, 1, "", "forward"], [28, 2, 1, "", "half"], [28, 1, 1, "", "metric_state"], [28, 2, 1, "", "persistent"], [28, 2, 1, "", "plot"], [28, 2, 1, "", "reset"], [28, 2, 1, "", "set_dtype"], [28, 2, 1, "", "state_dict"], [28, 2, 1, "", "sync"], [28, 2, 1, "", "sync_context"], [28, 2, 1, "", "type"], [28, 2, 1, "", "unsync"], [28, 2, 1, "", "update"], [28, 1, 1, "", "update_called"], [28, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.Disagreement": [[29, 2, 1, "", "add_state"], [29, 2, 1, "", "clone"], [29, 2, 1, "", "compute"], [29, 1, 1, "", "device"], [29, 2, 1, "", "double"], [29, 2, 1, "", "float"], [29, 2, 1, "", "forward"], [29, 2, 1, "", "half"], [29, 1, 1, "", "metric_state"], [29, 2, 1, "", "persistent"], [29, 2, 1, "", "plot"], [29, 2, 1, "", "reset"], [29, 2, 1, "", "set_dtype"], [29, 2, 1, "", "state_dict"], [29, 2, 1, "", "sync"], [29, 2, 1, "", "sync_context"], [29, 2, 1, "", "type"], [29, 2, 1, "", "unsync"], [29, 2, 1, "", "update"], [29, 1, 1, "", "update_called"], [29, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.Entropy": [[30, 2, 1, "", "add_state"], [30, 2, 1, "", "clone"], [30, 2, 1, "", "compute"], [30, 1, 1, "", "device"], [30, 2, 1, "", "double"], [30, 2, 1, "", "float"], [30, 2, 1, "", "forward"], [30, 2, 1, "", "half"], [30, 1, 1, "", "metric_state"], [30, 2, 1, "", "persistent"], [30, 2, 1, "", "plot"], [30, 2, 1, "", "reset"], [30, 2, 1, "", "set_dtype"], [30, 2, 1, "", "state_dict"], [30, 2, 1, "", "sync"], [30, 2, 1, "", "sync_context"], [30, 2, 1, "", "type"], [30, 2, 1, "", "unsync"], [30, 2, 1, "", "update"], [30, 1, 1, "", "update_called"], [30, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.FPR95": [[31, 2, 1, "", "add_state"], [31, 2, 1, "", "clone"], [31, 2, 1, "", "compute"], [31, 1, 1, "", "device"], [31, 2, 1, "", "double"], [31, 2, 1, "", "float"], [31, 2, 1, "", "forward"], [31, 2, 1, "", "half"], [31, 1, 1, "", "metric_state"], [31, 2, 1, "", "persistent"], [31, 2, 1, "", "plot"], [31, 2, 1, "", "reset"], [31, 2, 1, "", "set_dtype"], [31, 2, 1, "", "state_dict"], [31, 2, 1, "", "sync"], [31, 2, 1, "", "sync_context"], [31, 2, 1, "", "type"], [31, 2, 1, "", "unsync"], [31, 1, 1, "", "update_called"], [31, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.GaussianNegativeLogLikelihood": [[32, 2, 1, "", "add_state"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "compute"], [32, 1, 1, "", "device"], [32, 2, 1, "", "double"], [32, 2, 1, "", "float"], [32, 2, 1, "", "forward"], [32, 2, 1, "", "half"], [32, 1, 1, "", "metric_state"], [32, 2, 1, "", "persistent"], [32, 2, 1, "", "plot"], [32, 2, 1, "", "reset"], [32, 2, 1, "", "set_dtype"], [32, 2, 1, "", "state_dict"], [32, 2, 1, "", "sync"], [32, 2, 1, "", "sync_context"], [32, 2, 1, "", "type"], [32, 2, 1, "", "unsync"], [32, 2, 1, "", "update"], [32, 1, 1, "", "update_called"], [32, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.MutualInformation": [[33, 2, 1, "", "add_state"], [33, 2, 1, "", "clone"], [33, 2, 1, "", "compute"], [33, 1, 1, "", "device"], [33, 2, 1, "", "double"], [33, 2, 1, "", "float"], [33, 2, 1, "", "forward"], [33, 2, 1, "", "half"], [33, 1, 1, "", "metric_state"], [33, 2, 1, "", "persistent"], [33, 2, 1, "", "plot"], [33, 2, 1, "", "reset"], [33, 2, 1, "", "set_dtype"], [33, 2, 1, "", "state_dict"], [33, 2, 1, "", "sync"], [33, 2, 1, "", "sync_context"], [33, 2, 1, "", "type"], [33, 2, 1, "", "unsync"], [33, 2, 1, "", "update"], [33, 1, 1, "", "update_called"], [33, 1, 1, "", "update_count"]], "torch_uncertainty.metrics.NegativeLogLikelihood": [[34, 2, 1, "", "add_state"], [34, 2, 1, "", "clone"], [34, 2, 1, "", "compute"], [34, 1, 1, "", "device"], [34, 2, 1, "", "double"], [34, 2, 1, "", "float"], [34, 2, 1, "", "forward"], [34, 2, 1, "", "half"], [34, 1, 1, "", "metric_state"], [34, 2, 1, "", "persistent"], [34, 2, 1, "", "plot"], [34, 2, 1, "", "reset"], [34, 2, 1, "", "set_dtype"], [34, 2, 1, "", "state_dict"], [34, 2, 1, "", "sync"], [34, 2, 1, "", "sync_context"], [34, 2, 1, "", "type"], [34, 2, 1, "", "unsync"], [34, 2, 1, "", "update"], [34, 1, 1, "", "update_called"], [34, 1, 1, "", "update_count"]], "torch_uncertainty.post_processing": [[35, 0, 1, "", "MatrixScaler"], [36, 0, 1, "", "TemperatureScaler"], [37, 0, 1, "", "VectorScaler"]], "torch_uncertainty.post_processing.MatrixScaler": [[35, 2, 1, "", "fit"], [35, 2, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.TemperatureScaler": [[36, 2, 1, "", "fit"], [36, 2, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.VectorScaler": [[37, 2, 1, "", "fit"], [37, 2, 1, "", "set_temperature"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": [0, 3, 4, 5, 8, 40, 42], "baselin": 0, "classif": [0, 5, 40, 42], "regress": [0, 4, 42], "layer": [0, 41], "ensembl": [0, 7, 38, 42], "bayesian": [0, 3, 42], "metric": [0, 42], "loss": [0, 3, 4, 5, 6, 7], "post": [0, 9, 42], "process": [0, 9, 42], "method": [0, 9, 42], "tutori": 1, "comput": [2, 8], "time": 2, "train": [3, 4, 5, 6, 7], "neural": [3, 40, 42], "network": [3, 40, 42], "three": 3, "minut": 3, "foreword": 3, "lenet": [3, 5, 6], "us": [3, 4, 5, 6, 41], "torchuncertainti": [3, 4, 5, 6, 8, 9], "model": [3, 4, 5, 6, 8, 41, 42], "pytorch": [3, 4, 6, 41], "lightn": [3, 4, 6, 41], "1": [3, 4, 5, 6, 7, 8], "load": [3, 4, 5, 6, 7, 8], "util": [3, 4, 5, 6, 8], "2": [3, 4, 5, 6, 7, 8], "creat": [3, 4, 5, 6], "optim": [3, 4, 5, 7], "wrapper": [3, 4, 5], "3": [3, 4, 5, 6, 7, 8], "necessari": [3, 4, 5, 6], "variabl": [3, 4, 5, 6], "4": [3, 4, 5, 7, 8], "The": [3, 4, 5, 6, 9, 40], "routin": [3, 4, 5, 6], "5": [3, 4, 5, 6, 7, 8], "gather": [3, 4, 5, 6], "everyth": [3, 4, 5, 6], "6": [3, 4, 5, 6, 8], "test": [3, 4, 5, 6, 7], "deep": [4, 5, 42], "evidenti": [4, 5, 42], "toi": [4, 5], "exampl": [4, 5, 41], "mlp": [4, 13], "der": 4, "dec": 5, "mont": [6, 42], "carlo": [6, 42], "dropout": [6, 42], "mc": 6, "from": [7, 8, 39], "vanilla": 7, "classifi": 7, "pack": [7, 38, 42], "dataset": [7, 9, 42], "an": 7, "imag": 7, "normal": 7, "cifar10": 7, "defin": 7, "function": 7, "data": 7, "improv": 8, "top": 8, "label": 8, "calibr": [8, 42], "temperatur": [8, 42], "scale": [8, 42], "": 8, "hf": 8, "set": 8, "up": 8, "datamodul": [8, 9], "dataload": 8, "iter": 8, "ec": 8, "fit": 8, "scaler": 8, "again": 8, "note": 8, "contribut": 9, "scope": 9, "common": 9, "guidelin": 9, "clean": 9, "develop": 9, "instal": [9, 39], "build": 9, "document": 9, "local": 9, "licens": 9, "resnet": [10, 42], "vgg": [11, 42], "wideresnet": 12, "batchconv2d": 14, "batchlinear": 15, "maskedconv2d": 16, "maskedlinear": 17, "packedconv2d": 18, "packedlinear": 19, "bayesconv1d": 20, "bayesconv2d": 21, "bayesconv3d": 22, "bayeslinear": 23, "decloss": 24, "elboloss": 25, "kldiv": 26, "nigloss": 27, "brierscor": 28, "disagr": 29, "entropi": 30, "fpr95": 31, "gaussiannegativeloglikelihood": 32, "mutualinform": 33, "negativeloglikelihood": 34, "matrixscal": 35, "temperaturescal": 36, "vectorscal": 37, "torch": 38, "uncertainti": [38, 40, 42], "content": 38, "indic": 38, "tabl": 38, "pypi": 39, "sourc": 39, "With": 39, "poetri": 39, "pip": 39, "introduct": 40, "short": 40, "background": 40, "overconfid": 40, "quickstart": 41, "base": 41, "cli": 41, "tool": 41, "procedur": 41, "other": 41, "usag": 41, "batchensembl": 42, "masksembl": 42, "mimo": 42, "vector": 42, "matrix": 42, "expect": 42, "error": 42, "mnist": 42, "c": 42, "Not": 42, "cifar": 42, "10": 42, "100": 42, "tini": 42, "imagenet": 42, "h": 42, "n": 42, "svhn": 42, "A": 42, "0": 42, "r": 42, "textur": 42, "architectur": 42, "wide": 42}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_codeautolink": 1, "sphinx": 57}, "alltitles": {"API reference": [[0, "api-reference"]], "Baselines": [[0, "baselines"]], "Classification": [[0, "classification"]], "Regression": [[0, "regression"]], "Layers": [[0, "layers"]], "Ensemble layers": [[0, "ensemble-layers"]], "Bayesian layers": [[0, "bayesian-layers"]], "Metrics": [[0, "metrics"], [42, "metrics"]], "Losses": [[0, "losses"]], "Post-Processing Methods": [[0, "post-processing-methods"], [42, "post-processing-methods"]], "Tutorials": [[1, "tutorials"]], "Computation times": [[2, "computation-times"]], "Train a Bayesian Neural Network in Three Minutes": [[3, "train-a-bayesian-neural-network-in-three-minutes"]], "Foreword on Bayesian Neural Networks": [[3, "foreword-on-bayesian-neural-networks"]], "Training a Bayesian LeNet using TorchUncertainty models and PyTorch Lightning": [[3, "training-a-bayesian-lenet-using-torchuncertainty-models-and-pytorch-lightning"]], "1. Loading the utilities": [[3, "loading-the-utilities"], [4, "loading-the-utilities"], [5, "loading-the-utilities"], [6, "loading-the-utilities"]], "2. Creating the Optimizer Wrapper": [[3, "creating-the-optimizer-wrapper"], [4, "creating-the-optimizer-wrapper"], [5, "creating-the-optimizer-wrapper"]], "3. Creating the necessary variables": [[3, "creating-the-necessary-variables"], [4, "creating-the-necessary-variables"], [5, "creating-the-necessary-variables"]], "4. The Loss and the Training Routine": [[3, "the-loss-and-the-training-routine"], [4, "the-loss-and-the-training-routine"], [5, "the-loss-and-the-training-routine"]], "5. Gathering Everything and Training the Model": [[3, "gathering-everything-and-training-the-model"], [4, "gathering-everything-and-training-the-model"], [5, "gathering-everything-and-training-the-model"], [6, "gathering-everything-and-training-the-model"]], "6. Testing the Model": [[3, "testing-the-model"], [4, "testing-the-model"], [5, "testing-the-model"], [6, "testing-the-model"]], "References": [[3, "references"], [4, "references"], [5, "references"], [8, "references"], [40, "references"], [42, "references"]], "Deep Evidential Regression on a Toy Example": [[4, "deep-evidential-regression-on-a-toy-example"]], "Training a MLP with DER using TorchUncertainty models and PyTorch Lightning": [[4, "training-a-mlp-with-der-using-torchuncertainty-models-and-pytorch-lightning"]], "Deep Evidential Classification on a Toy Example": [[5, "deep-evidential-classification-on-a-toy-example"]], "Training a LeNet with DEC using TorchUncertainty models": [[5, "training-a-lenet-with-dec-using-torchuncertainty-models"]], "Training a LeNet with Monte-Carlo Dropout": [[6, "training-a-lenet-with-monte-carlo-dropout"]], "Training a LeNet with MC Dropout using TorchUncertainty models and PyTorch Lightning": [[6, "training-a-lenet-with-mc-dropout-using-torchuncertainty-models-and-pytorch-lightning"]], "2. Creating the necessary variables": [[6, "creating-the-necessary-variables"]], "3. The Loss and the Training Routine": [[6, "the-loss-and-the-training-routine"]], "From a Vanilla Classifier to a Packed-Ensemble": [[7, "from-a-vanilla-classifier-to-a-packed-ensemble"]], "Dataset": [[7, "dataset"]], "Training an image Packed-Ensemble classifier": [[7, "training-an-image-packed-ensemble-classifier"]], "1. Load and normalize CIFAR10": [[7, "load-and-normalize-cifar10"]], "2. Define a Packed-Ensemble from a vanilla classifier": [[7, "define-a-packed-ensemble-from-a-vanilla-classifier"]], "3. Define a Loss function and optimizer": [[7, "define-a-loss-function-and-optimizer"]], "4. Train the Packed-Ensemble on the training data": [[7, "train-the-packed-ensemble-on-the-training-data"]], "5. Test the Packed-Ensemble on the test data": [[7, "test-the-packed-ensemble-on-the-test-data"]], "Improve Top-label Calibration with Temperature Scaling": [[8, "improve-top-label-calibration-with-temperature-scaling"]], "1. Loading the Utilities": [[8, "loading-the-utilities"]], "2. Loading a model from TorchUncertainty\u2019s HF": [[8, "loading-a-model-from-torchuncertainty-s-hf"]], "3. Setting up the Datamodule and Dataloaders": [[8, "setting-up-the-datamodule-and-dataloaders"]], "4. Iterating on the Dataloader and Computing the ECE": [[8, "iterating-on-the-dataloader-and-computing-the-ece"]], "5. Fitting the Scaler to Improve the Calibration": [[8, "fitting-the-scaler-to-improve-the-calibration"]], "6. Iterating Again to Compute the Improved ECE": [[8, "iterating-again-to-compute-the-improved-ece"]], "Notes": [[8, "notes"]], "Contributing": [[9, "contributing"]], "The scope of TorchUncertainty": [[9, "the-scope-of-torchuncertainty"]], "Common guidelines": [[9, "common-guidelines"]], "Clean development install of TorchUncertainty": [[9, "clean-development-install-of-torchuncertainty"]], "Build the documentation locally": [[9, "build-the-documentation-locally"]], "Guidelines": [[9, "guidelines"]], "Datasets & Datamodules": [[9, "datasets-datamodules"]], "Post-processing methods": [[9, "post-processing-methods"]], "License": [[9, "license"]], "ResNet": [[10, "resnet"], [42, "resnet"]], "VGG": [[11, "vgg"], [42, "vgg"]], "WideResNet": [[12, "wideresnet"]], "MLP": [[13, "mlp"]], "BatchConv2d": [[14, "batchconv2d"]], "BatchLinear": [[15, "batchlinear"]], "MaskedConv2d": [[16, "maskedconv2d"]], "MaskedLinear": [[17, "maskedlinear"]], "PackedConv2d": [[18, "packedconv2d"]], "PackedLinear": [[19, "packedlinear"]], "BayesConv1d": [[20, "bayesconv1d"]], "BayesConv2d": [[21, "bayesconv2d"]], "BayesConv3d": [[22, "bayesconv3d"]], "BayesLinear": [[23, "bayeslinear"]], "DECLoss": [[24, "decloss"]], "ELBOLoss": [[25, "elboloss"]], "KLDiv": [[26, "kldiv"]], "NIGLoss": [[27, "nigloss"]], "BrierScore": [[28, "brierscore"]], "Disagreement": [[29, "disagreement"]], "Entropy": [[30, "entropy"]], "FPR95": [[31, "fpr95"]], "GaussianNegativeLogLikelihood": [[32, "gaussiannegativeloglikelihood"]], "MutualInformation": [[33, "mutualinformation"]], "NegativeLogLikelihood": [[34, "negativeloglikelihood"]], "MatrixScaler": [[35, "matrixscaler"]], "TemperatureScaler": [[36, "temperaturescaler"]], "VectorScaler": [[37, "vectorscaler"]], "Torch Uncertainty": [[38, "torch-uncertainty"]], "Packed-Ensembles": [[38, "packed-ensembles"], [42, "packed-ensembles"]], "Contents:": [[38, null]], "Indices and tables": [[38, "indices-and-tables"]], "Installation": [[39, "installation"]], "From PyPI": [[39, "from-pypi"]], "From source": [[39, "from-source"]], "With poetry": [[39, "with-poetry"]], "With pip": [[39, "with-pip"]], "Introduction to Classification Uncertainty": [[40, "introduction-to-classification-uncertainty"]], "Short Background": [[40, "short-background"]], "The Overconfidence of Neural Networks": [[40, "the-overconfidence-of-neural-networks"]], "Quickstart": [[41, "quickstart"]], "Using the Lightning-based CLI tool": [[41, "using-the-lightning-based-cli-tool"]], "Procedure": [[41, "procedure"], [41, "id1"], [41, "id3"]], "Example": [[41, "example"], [41, "id2"], [41, "id4"]], "Using the PyTorch-based models": [[41, "using-the-pytorch-based-models"]], "Using the PyTorch-based layers": [[41, "using-the-pytorch-based-layers"]], "Other usage": [[41, "other-usage"]], "Uncertainty Models": [[42, "uncertainty-models"]], "Deep Evidential Classification": [[42, "deep-evidential-classification"]], "Deep Evidential Regression": [[42, "deep-evidential-regression"]], "Bayesian Neural Networks": [[42, "bayesian-neural-networks"]], "Deep Ensembles": [[42, "deep-ensembles"]], "BatchEnsemble": [[42, "batchensemble"]], "Masksembles": [[42, "masksembles"]], "MIMO": [[42, "mimo"]], "Monte-Carlo Dropout": [[42, "monte-carlo-dropout"]], "Temperature, Vector, & Matrix scaling": [[42, "temperature-vector-matrix-scaling"]], "Expected Calibration Error": [[42, "expected-calibration-error"]], "Datasets": [[42, "datasets"]], "MNIST": [[42, "mnist"]], "MNIST-C": [[42, "mnist-c"]], "Not-MNIST": [[42, "not-mnist"]], "CIFAR-10 & CIFAR-100": [[42, "cifar-10-cifar-100"]], "CIFAR-C, Tiny-ImageNet-C, ImageNet-C": [[42, "cifar-c-tiny-imagenet-c-imagenet-c"]], "CIFAR-10 H": [[42, "cifar-10-h"]], "CIFAR-10 N / CIFAR-100 N": [[42, "cifar-10-n-cifar-100-n"]], "SVHN": [[42, "svhn"]], "ImageNet": [[42, "imagenet"]], "ImageNet-A & ImageNet-0": [[42, "imagenet-a-imagenet-0"]], "ImageNet-R": [[42, "imagenet-r"]], "Textures": [[42, "textures"]], "Architectures": [[42, "architectures"]], "Wide-ResNet": [[42, "wide-resnet"]]}, "indexentries": {"resnet (class in torch_uncertainty.baselines.classification)": [[10, "torch_uncertainty.baselines.classification.ResNet"]], "vgg (class in torch_uncertainty.baselines.classification)": [[11, "torch_uncertainty.baselines.classification.VGG"]], "wideresnet (class in torch_uncertainty.baselines.classification)": [[12, "torch_uncertainty.baselines.classification.WideResNet"]], "mlp (class in torch_uncertainty.baselines.regression)": [[13, "torch_uncertainty.baselines.regression.MLP"]], "batchconv2d (class in torch_uncertainty.layers)": [[14, "torch_uncertainty.layers.BatchConv2d"]], "batchlinear (class in torch_uncertainty.layers)": [[15, "torch_uncertainty.layers.BatchLinear"]], "maskedconv2d (class in torch_uncertainty.layers)": [[16, "torch_uncertainty.layers.MaskedConv2d"]], "maskedlinear (class in torch_uncertainty.layers)": [[17, "torch_uncertainty.layers.MaskedLinear"]], "packedconv2d (class in torch_uncertainty.layers)": [[18, "torch_uncertainty.layers.PackedConv2d"]], "bias (torch_uncertainty.layers.packedconv2d property)": [[18, "torch_uncertainty.layers.PackedConv2d.bias"]], "weight (torch_uncertainty.layers.packedconv2d property)": [[18, "torch_uncertainty.layers.PackedConv2d.weight"]], "packedlinear (class in torch_uncertainty.layers)": [[19, "torch_uncertainty.layers.PackedLinear"]], "bias (torch_uncertainty.layers.packedlinear property)": [[19, "torch_uncertainty.layers.PackedLinear.bias"]], "weight (torch_uncertainty.layers.packedlinear property)": [[19, "torch_uncertainty.layers.PackedLinear.weight"]], "bayesconv1d (class in torch_uncertainty.layers.bayesian)": [[20, "torch_uncertainty.layers.bayesian.BayesConv1d"]], "freeze() (torch_uncertainty.layers.bayesian.bayesconv1d method)": [[20, "torch_uncertainty.layers.bayesian.BayesConv1d.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayesconv1d method)": [[20, "torch_uncertainty.layers.bayesian.BayesConv1d.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayesconv1d method)": [[20, "torch_uncertainty.layers.bayesian.BayesConv1d.unfreeze"]], "bayesconv2d (class in torch_uncertainty.layers.bayesian)": [[21, "torch_uncertainty.layers.bayesian.BayesConv2d"]], "freeze() (torch_uncertainty.layers.bayesian.bayesconv2d method)": [[21, "torch_uncertainty.layers.bayesian.BayesConv2d.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayesconv2d method)": [[21, "torch_uncertainty.layers.bayesian.BayesConv2d.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayesconv2d method)": [[21, "torch_uncertainty.layers.bayesian.BayesConv2d.unfreeze"]], "bayesconv3d (class in torch_uncertainty.layers.bayesian)": [[22, "torch_uncertainty.layers.bayesian.BayesConv3d"]], "freeze() (torch_uncertainty.layers.bayesian.bayesconv3d method)": [[22, "torch_uncertainty.layers.bayesian.BayesConv3d.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayesconv3d method)": [[22, "torch_uncertainty.layers.bayesian.BayesConv3d.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayesconv3d method)": [[22, "torch_uncertainty.layers.bayesian.BayesConv3d.unfreeze"]], "bayeslinear (class in torch_uncertainty.layers.bayesian)": [[23, "torch_uncertainty.layers.bayesian.BayesLinear"]], "freeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[23, "torch_uncertainty.layers.bayesian.BayesLinear.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[23, "torch_uncertainty.layers.bayesian.BayesLinear.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[23, "torch_uncertainty.layers.bayesian.BayesLinear.unfreeze"]], "decloss (class in torch_uncertainty.losses)": [[24, "torch_uncertainty.losses.DECLoss"]], "elboloss (class in torch_uncertainty.losses)": [[25, "torch_uncertainty.losses.ELBOLoss"]], "forward() (torch_uncertainty.losses.elboloss method)": [[25, "torch_uncertainty.losses.ELBOLoss.forward"]], "kldiv (class in torch_uncertainty.losses)": [[26, "torch_uncertainty.losses.KLDiv"]], "nigloss (class in torch_uncertainty.losses)": [[27, "torch_uncertainty.losses.NIGLoss"]], "brierscore (class in torch_uncertainty.metrics)": [[28, "torch_uncertainty.metrics.BrierScore"]], "add_state() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.add_state"]], "clone() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.clone"]], "compute() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.compute"]], "device (torch_uncertainty.metrics.brierscore property)": [[28, "torch_uncertainty.metrics.BrierScore.device"]], "double() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.double"]], "float() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.float"]], "forward() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.forward"]], "half() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.half"]], "metric_state (torch_uncertainty.metrics.brierscore property)": [[28, "torch_uncertainty.metrics.BrierScore.metric_state"]], "persistent() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.persistent"]], "plot() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.plot"]], "reset() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.reset"]], "set_dtype() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.set_dtype"]], "state_dict() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.state_dict"]], "sync() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.sync"]], "sync_context() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.sync_context"]], "type() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.type"]], "unsync() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.unsync"]], "update() (torch_uncertainty.metrics.brierscore method)": [[28, "torch_uncertainty.metrics.BrierScore.update"]], "update_called (torch_uncertainty.metrics.brierscore property)": [[28, "torch_uncertainty.metrics.BrierScore.update_called"]], "update_count (torch_uncertainty.metrics.brierscore property)": [[28, "torch_uncertainty.metrics.BrierScore.update_count"]], "disagreement (class in torch_uncertainty.metrics)": [[29, "torch_uncertainty.metrics.Disagreement"]], "add_state() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.add_state"]], "clone() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.clone"]], "compute() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.compute"]], "device (torch_uncertainty.metrics.disagreement property)": [[29, "torch_uncertainty.metrics.Disagreement.device"]], "double() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.double"]], "float() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.float"]], "forward() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.forward"]], "half() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.half"]], "metric_state (torch_uncertainty.metrics.disagreement property)": [[29, "torch_uncertainty.metrics.Disagreement.metric_state"]], "persistent() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.persistent"]], "plot() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.plot"]], "reset() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.reset"]], "set_dtype() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.set_dtype"]], "state_dict() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.state_dict"]], "sync() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.sync"]], "sync_context() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.sync_context"]], "type() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.type"]], "unsync() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.unsync"]], "update() (torch_uncertainty.metrics.disagreement method)": [[29, "torch_uncertainty.metrics.Disagreement.update"]], "update_called (torch_uncertainty.metrics.disagreement property)": [[29, "torch_uncertainty.metrics.Disagreement.update_called"]], "update_count (torch_uncertainty.metrics.disagreement property)": [[29, "torch_uncertainty.metrics.Disagreement.update_count"]], "entropy (class in torch_uncertainty.metrics)": [[30, "torch_uncertainty.metrics.Entropy"]], "add_state() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.add_state"]], "clone() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.clone"]], "compute() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.compute"]], "device (torch_uncertainty.metrics.entropy property)": [[30, "torch_uncertainty.metrics.Entropy.device"]], "double() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.double"]], "float() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.float"]], "forward() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.forward"]], "half() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.half"]], "metric_state (torch_uncertainty.metrics.entropy property)": [[30, "torch_uncertainty.metrics.Entropy.metric_state"]], "persistent() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.persistent"]], "plot() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.plot"]], "reset() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.reset"]], "set_dtype() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.set_dtype"]], "state_dict() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.state_dict"]], "sync() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.sync"]], "sync_context() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.sync_context"]], "type() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.type"]], "unsync() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.unsync"]], "update() (torch_uncertainty.metrics.entropy method)": [[30, "torch_uncertainty.metrics.Entropy.update"]], "update_called (torch_uncertainty.metrics.entropy property)": [[30, "torch_uncertainty.metrics.Entropy.update_called"]], "update_count (torch_uncertainty.metrics.entropy property)": [[30, "torch_uncertainty.metrics.Entropy.update_count"]], "fpr95 (class in torch_uncertainty.metrics)": [[31, "torch_uncertainty.metrics.FPR95"]], "add_state() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.add_state"]], "clone() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.clone"]], "compute() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.compute"]], "device (torch_uncertainty.metrics.fpr95 property)": [[31, "torch_uncertainty.metrics.FPR95.device"]], "double() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.double"]], "float() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.float"]], "forward() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.forward"]], "half() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.half"]], "metric_state (torch_uncertainty.metrics.fpr95 property)": [[31, "torch_uncertainty.metrics.FPR95.metric_state"]], "persistent() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.persistent"]], "plot() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.plot"]], "reset() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.reset"]], "set_dtype() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.set_dtype"]], "state_dict() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.state_dict"]], "sync() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.sync"]], "sync_context() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.sync_context"]], "type() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.type"]], "unsync() (torch_uncertainty.metrics.fpr95 method)": [[31, "torch_uncertainty.metrics.FPR95.unsync"]], "update_called (torch_uncertainty.metrics.fpr95 property)": [[31, "torch_uncertainty.metrics.FPR95.update_called"]], "update_count (torch_uncertainty.metrics.fpr95 property)": [[31, "torch_uncertainty.metrics.FPR95.update_count"]], "gaussiannegativeloglikelihood (class in torch_uncertainty.metrics)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood"]], "add_state() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.add_state"]], "clone() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.clone"]], "compute() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.compute"]], "device (torch_uncertainty.metrics.gaussiannegativeloglikelihood property)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.device"]], "double() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.double"]], "float() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.float"]], "forward() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.forward"]], "half() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.half"]], "metric_state (torch_uncertainty.metrics.gaussiannegativeloglikelihood property)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.metric_state"]], "persistent() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.persistent"]], "plot() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.plot"]], "reset() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.reset"]], "set_dtype() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.set_dtype"]], "state_dict() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.state_dict"]], "sync() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.sync"]], "sync_context() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.sync_context"]], "type() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.type"]], "unsync() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.unsync"]], "update() (torch_uncertainty.metrics.gaussiannegativeloglikelihood method)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.update"]], "update_called (torch_uncertainty.metrics.gaussiannegativeloglikelihood property)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.update_called"]], "update_count (torch_uncertainty.metrics.gaussiannegativeloglikelihood property)": [[32, "torch_uncertainty.metrics.GaussianNegativeLogLikelihood.update_count"]], "mutualinformation (class in torch_uncertainty.metrics)": [[33, "torch_uncertainty.metrics.MutualInformation"]], "add_state() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.add_state"]], "clone() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.clone"]], "compute() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.compute"]], "device (torch_uncertainty.metrics.mutualinformation property)": [[33, "torch_uncertainty.metrics.MutualInformation.device"]], "double() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.double"]], "float() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.float"]], "forward() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.forward"]], "half() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.half"]], "metric_state (torch_uncertainty.metrics.mutualinformation property)": [[33, "torch_uncertainty.metrics.MutualInformation.metric_state"]], "persistent() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.persistent"]], "plot() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.plot"]], "reset() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.reset"]], "set_dtype() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.set_dtype"]], "state_dict() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.state_dict"]], "sync() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.sync"]], "sync_context() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.sync_context"]], "type() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.type"]], "unsync() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.unsync"]], "update() (torch_uncertainty.metrics.mutualinformation method)": [[33, "torch_uncertainty.metrics.MutualInformation.update"]], "update_called (torch_uncertainty.metrics.mutualinformation property)": [[33, "torch_uncertainty.metrics.MutualInformation.update_called"]], "update_count (torch_uncertainty.metrics.mutualinformation property)": [[33, "torch_uncertainty.metrics.MutualInformation.update_count"]], "negativeloglikelihood (class in torch_uncertainty.metrics)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood"]], "add_state() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.add_state"]], "clone() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.clone"]], "compute() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.compute"]], "device (torch_uncertainty.metrics.negativeloglikelihood property)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.device"]], "double() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.double"]], "float() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.float"]], "forward() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.forward"]], "half() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.half"]], "metric_state (torch_uncertainty.metrics.negativeloglikelihood property)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.metric_state"]], "persistent() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.persistent"]], "plot() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.plot"]], "reset() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.reset"]], "set_dtype() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.set_dtype"]], "state_dict() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.state_dict"]], "sync() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.sync"]], "sync_context() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.sync_context"]], "type() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.type"]], "unsync() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.unsync"]], "update() (torch_uncertainty.metrics.negativeloglikelihood method)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.update"]], "update_called (torch_uncertainty.metrics.negativeloglikelihood property)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.update_called"]], "update_count (torch_uncertainty.metrics.negativeloglikelihood property)": [[34, "torch_uncertainty.metrics.NegativeLogLikelihood.update_count"]], "matrixscaler (class in torch_uncertainty.post_processing)": [[35, "torch_uncertainty.post_processing.MatrixScaler"]], "fit() (torch_uncertainty.post_processing.matrixscaler method)": [[35, "torch_uncertainty.post_processing.MatrixScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.matrixscaler method)": [[35, "torch_uncertainty.post_processing.MatrixScaler.set_temperature"]], "temperaturescaler (class in torch_uncertainty.post_processing)": [[36, "torch_uncertainty.post_processing.TemperatureScaler"]], "fit() (torch_uncertainty.post_processing.temperaturescaler method)": [[36, "torch_uncertainty.post_processing.TemperatureScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.temperaturescaler method)": [[36, "torch_uncertainty.post_processing.TemperatureScaler.set_temperature"]], "vectorscaler (class in torch_uncertainty.post_processing)": [[37, "torch_uncertainty.post_processing.VectorScaler"]], "fit() (torch_uncertainty.post_processing.vectorscaler method)": [[37, "torch_uncertainty.post_processing.VectorScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.vectorscaler method)": [[37, "torch_uncertainty.post_processing.VectorScaler.set_temperature"]]}})