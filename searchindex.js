Search.setIndex({"alltitles": {"1. Download, instantiate and visualize the datasets": [[20, "download-instantiate-and-visualize-the-datasets"]], "1. Load and normalize CIFAR10": [[14, "load-and-normalize-cifar10"]], "1. Load pretrained model from Hugging Face repository": [[23, "load-pretrained-model-from-hugging-face-repository"]], "1. Loading the Utilities": [[24, "loading-the-utilities"], [28, "loading-the-utilities"]], "1. Loading the utilities": [[3, "loading-the-utilities"], [4, "loading-the-utilities"], [5, "loading-the-utilities"], [6, "loading-the-utilities"], [9, "loading-the-utilities"], [10, "loading-the-utilities"], [12, "loading-the-utilities"], [27, "loading-the-utilities"], [29, "loading-the-utilities"], [32, "loading-the-utilities"], [33, "loading-the-utilities"], [34, "loading-the-utilities"]], "1. Noise Corruptions": [[17, "noise-corruptions"]], "10. Apply the MC Dropout wrapper": [[6, "apply-the-mc-dropout-wrapper"]], "11. Testing the MC Dropout model": [[6, "testing-the-mc-dropout-model"]], "2. Blur Corruptions": [[17, "blur-corruptions"]], "2. Building the NormalMLP Model": [[28, "building-the-normalmlp-model"]], "2. Create & train the model": [[20, "create-train-the-model"]], "2. Creating the Trainer and the DataModule": [[10, "creating-the-trainer-and-the-datamodule"]], "2. Creating the necessary variables": [[3, "creating-the-necessary-variables"], [4, "creating-the-necessary-variables"], [9, "creating-the-necessary-variables"], [12, "creating-the-necessary-variables"]], "2. Define a Packed-Ensemble from a standard classifier": [[14, "define-a-packed-ensemble-from-a-standard-classifier"]], "2. Defining the Model and the Trainer": [[5, "defining-the-model-and-the-trainer"]], "2. Defining the Trainer and the DataModule": [[29, "defining-the-trainer-and-the-datamodule"]], "2. Initializing the DataModule": [[6, "initializing-the-datamodule"], [32, "initializing-the-datamodule"], [33, "initializing-the-datamodule"], [34, "initializing-the-datamodule"]], "2. Load CIFAR-10 dataset & define dataloaders": [[23, "load-cifar-10-dataset-define-dataloaders"]], "2. Loading a model from TorchUncertainty\u2019s HF": [[24, "loading-a-model-from-torchuncertainty-s-hf"]], "2. The Optimization Recipe": [[27, "the-optimization-recipe"]], "3. Creating the necessary variables": [[27, "creating-the-necessary-variables"]], "3. Define a Loss function and optimizer": [[14, "define-a-loss-function-and-optimizer"]], "3. Define the Lightning Trainer": [[23, "define-the-lightning-trainer"]], "3. Instantiating the Model": [[6, "instantiating-the-model"], [10, "instantiating-the-model"], [32, "instantiating-the-model"], [33, "instantiating-the-model"], [34, "instantiating-the-model"]], "3. Instantiating the Pointwise Model": [[29, "instantiating-the-pointwise-model"]], "3. Setting up the Data": [[28, "setting-up-the-data"]], "3. Setting up the Datamodule and Dataloaders": [[24, "setting-up-the-datamodule-and-dataloaders"]], "3. The Loss and the Training Routine": [[3, "the-loss-and-the-training-routine"], [4, "the-loss-and-the-training-routine"], [5, "the-loss-and-the-training-routine"], [9, "the-loss-and-the-training-routine"], [12, "the-loss-and-the-training-routine"]], "3. Training an ensemble of models with TorchUncertainty": [[20, "training-an-ensemble-of-models-with-torchuncertainty"]], "3. Weather Corruptions": [[17, "weather-corruptions"]], "4. Compute class weights to mitigate class inbalance": [[6, "compute-class-weights-to-mitigate-class-inbalance"], [32, "compute-class-weights-to-mitigate-class-inbalance"], [33, "compute-class-weights-to-mitigate-class-inbalance"], [34, "compute-class-weights-to-mitigate-class-inbalance"]], "4. Define a function to visualize the prediction sets": [[23, "define-a-function-to-visualize-the-prediction-sets"]], "4. From Deep Ensembles to Packed-Ensembles": [[20, "from-deep-ensembles-to-packed-ensembles"]], "4. Gathering Everything and Training the Model": [[3, "gathering-everything-and-training-the-model"], [4, "gathering-everything-and-training-the-model"], [5, "gathering-everything-and-training-the-model"], [9, "gathering-everything-and-training-the-model"], [12, "gathering-everything-and-training-the-model"]], "4. Iterating on the Dataloader and Computing the ECE": [[24, "iterating-on-the-dataloader-and-computing-the-ece"]], "4. Other Corruptions": [[17, "other-corruptions"]], "4. Setting up the Model and Trainer": [[28, "setting-up-the-model-and-trainer"]], "4. The Loss and the Routine": [[10, "the-loss-and-the-routine"]], "4. The Loss and the Training Routine": [[27, "the-loss-and-the-training-routine"], [29, "the-loss-and-the-training-routine"]], "4. Train the Packed-Ensemble on the training data": [[14, "train-the-packed-ensemble-on-the-training-data"]], "5. Estimate prediction sets with ConformalClsTHR": [[23, "estimate-prediction-sets-with-conformalclsthr"]], "5. Fitting the Scaler to Improve the Calibration": [[24, "fitting-the-scaler-to-improve-the-calibration"]], "5. Gathering Everything and Training the Model": [[10, "gathering-everything-and-training-the-model"], [27, "gathering-everything-and-training-the-model"], [29, "gathering-everything-and-training-the-model"]], "5. Test the Packed-Ensemble on the test data": [[14, "test-the-packed-ensemble-on-the-test-data"]], "5. Testing the Model": [[3, "testing-the-model"], [5, "testing-the-model"], [9, "testing-the-model"], [12, "testing-the-model"]], "5. The Loss, the Optimizer and the Training Routine": [[28, "the-loss-the-optimizer-and-the-training-routine"]], "5. The Loss, the Routine, and the Trainer": [[6, "the-loss-the-routine-and-the-trainer"], [32, "the-loss-the-routine-and-the-trainer"], [33, "the-loss-the-routine-and-the-trainer"], [34, "the-loss-the-routine-and-the-trainer"]], "5. Unused Corruptions": [[17, "unused-corruptions"]], "5. Wrapping the Model in a MCBatchNorm": [[4, "wrapping-the-model-in-a-mcbatchnorm"]], "6. Evaluating the Model": [[10, "evaluating-the-model"]], "6. Instantiating the Uncertain Model & its Routine": [[29, "instantiating-the-uncertain-model-its-routine"]], "6. Iterating Again to Compute the Improved ECE": [[24, "iterating-again-to-compute-the-improved-ece"]], "6. Testing the Model": [[4, "testing-the-model"], [27, "testing-the-model"]], "6. Training and Testing the Model": [[28, "training-and-testing-the-model"]], "6. Training the model": [[6, "training-the-model"], [32, "training-the-model"], [33, "training-the-model"], [34, "training-the-model"]], "6. Visualization of ConformalClsTHR prediction sets": [[23, "visualization-of-conformalclsthr-prediction-sets"]], "7. Benchmarking Different Distributions": [[28, "benchmarking-different-distributions"]], "7. Estimate prediction sets with ConformalClsAPS": [[23, "estimate-prediction-sets-with-conformalclsaps"]], "7. Testing the model": [[6, "testing-the-model"], [32, "testing-the-model"], [33, "testing-the-model"], [34, "testing-the-model"]], "7. Training & Testing the Probabilistic Model": [[29, "training-testing-the-probabilistic-model"]], "8. Estimate prediction sets with ConformalClsRAPS": [[23, "estimate-prediction-sets-with-conformalclsraps"]], "8. Loading a pre-trained model": [[6, "loading-a-pre-trained-model"], [34, "loading-a-pre-trained-model"]], "8. Uncertainty evaluations with MCP": [[32, "uncertainty-evaluations-with-mcp"], [33, "uncertainty-evaluations-with-mcp"]], "9. Uncertainty evaluations with MCP": [[6, "uncertainty-evaluations-with-mcp"], [6, "id1"], [34, "uncertainty-evaluations-with-mcp"]], "API Reference": [[0, null]], "AUGRC": [[124, null]], "AURC": [[125, null]], "AUSE": [[123, null]], "Adaptive Calibration Error": [[187, "adaptive-calibration-error"]], "AdaptiveCalibrationError": [[126, null]], "Architectures": [[187, "architectures"]], "Area Under the Generalized Risk-Coverage curve": [[187, "area-under-the-generalized-risk-coverage-curve"]], "Area Under the Risk-Coverage curve": [[187, "area-under-the-risk-coverage-curve"]], "BCEWithLogitsLSLoss": [[113, null]], "BTSBaseline": [[42, null]], "BankMarketing": [[79, null]], "BankMarketingDataModule": [[46, null]], "Baselines": [[0, "baselines"]], "BatchConv2d": [[87, null]], "BatchEnsemble": [[156, null], [187, "batchensemble"]], "BatchLinear": [[88, null]], "BayesConv1d": [[97, null]], "BayesConv2d": [[98, null]], "BayesConv3d": [[99, null]], "BayesLinear": [[100, null]], "Bayesian Methods": [[1, null], [35, "bayesian-methods"]], "Bayesian layers": [[0, "bayesian-layers"]], "Beta NLL in Deep Regression": [[187, "beta-nll-in-deep-regression"]], "BetaNLL": [[114, null]], "Binary Cross-Entropy with Logits Loss with Label Smoothing": [[187, "binary-cross-entropy-with-logits-loss-with-label-smoothing"]], "BrierScore": [[127, null]], "Build the documentation locally": [[38, "build-the-documentation-locally"]], "Building a MLP for Probabilistic Regression using TorchUncertainty Distribution Layers": [[28, "building-a-mlp-for-probabilistic-regression-using-torchuncertainty-distribution-layers"]], "Building your First Routine": [[186, "building-your-first-routine"]], "CIFAR-10 & CIFAR-100": [[187, "cifar-10-cifar-100"]], "CIFAR-10 H": [[187, "cifar-10-h"]], "CIFAR-10 N / CIFAR-100 N": [[187, "cifar-10-n-cifar-100-n"]], "CIFAR-10C": [[11, "cifar-10c"]], "CIFAR-C, Tiny-ImageNet-C, ImageNet-C": [[187, "cifar-c-tiny-imagenet-c-imagenet-c"]], "CIFAR100C": [[65, null]], "CIFAR100DataModule": [[47, null]], "CIFAR100N": [[66, null]], "CIFAR10C": [[67, null]], "CIFAR10DataModule": [[48, null]], "CIFAR10H": [[68, null]], "CIFAR10N": [[69, null]], "CLI Guide": [[37, null]], "Calibration": [[0, "calibration"]], "CalibrationError": [[128, null]], "CamVid": [[85, null]], "CamVidDataModule": [[57, null]], "CategoricalNLL": [[129, null]], "CauchyConvNd": [[103, null]], "CauchyLinear": [[104, null]], "Changing the OOD Criterion": [[13, "changing-the-ood-criterion"]], "CheckpointCollector": [[157, null], [187, "checkpointcollector"]], "Cityscapes": [[86, null]], "CityscapesDataModule": [[58, null]], "Classes": [[0, "classes"]], "Classification": [[0, "classification"], [0, "id1"], [0, "id4"], [0, "id8"], [0, "id11"], [7, null], [35, "classification"]], "ClassificationRoutine": [[179, null]], "Clean development install of TorchUncertainty": [[38, "clean-development-install-of-torchuncertainty"]], "Common guidelines": [[38, "common-guidelines"]], "Computation times": [[2, null], [8, null], [16, null], [19, null], [22, null], [26, null], [31, null], [36, null], [188, null]], "ConfidencePenaltyLoss": [[115, null]], "Configuration files": [[37, "configuration-files"]], "Conflictual Loss": [[187, "conflictual-loss"]], "ConflictualLoss": [[116, null]], "Conformal Prediction on CIFAR-10 with TorchUncertainty": [[23, null]], "Conformal Predictions": [[0, "conformal-predictions"]], "Contents:": [[183, null]], "Contributing": [[38, null]], "Convolution Layers": [[0, "convolution-layers"]], "Corrupting Images with TorchUncertainty to Benchmark Robustness": [[17, null]], "CovAt5Risk": [[130, null]], "CovAtxRisk": [[131, null]], "CoverageRate": [[132, null]], "DECLoss": [[117, null]], "DERLoss": [[118, null]], "DOTA2Games": [[80, null]], "DOTA2GamesDataModule": [[49, null]], "Data Augmentation": [[15, null], [35, "data-augmentation"]], "Data Augmentation Methods": [[187, "data-augmentation-methods"]], "DataModule Setup": [[11, "datamodule-setup"], [13, "datamodule-setup"]], "Datamodules": [[0, "datamodules"]], "Dataset": [[14, "dataset"]], "Datasets": [[0, "datasets"], [187, "datasets"]], "Datasets & Datamodules": [[38, "datasets-datamodules"]], "Deep Ensembles": [[187, "deep-ensembles"]], "Deep Evidential Classification": [[187, "deep-evidential-classification"]], "Deep Evidential Classification on a Toy Example": [[12, null]], "Deep Evidential Regression": [[187, "deep-evidential-regression"]], "Deep Evidential Regression on a Toy Example": [[27, null]], "Deep Probabilistic Regression": [[28, null]], "Deep ensembles Segmentation Tutorial using Muad Dataset": [[32, null]], "DeepLabBaseline": [[44, null]], "Define the Classification Routine": [[11, "define-the-classification-routine"], [13, "define-the-classification-routine"]], "Density layers": [[0, "density-layers"]], "Disagreement": [[133, null]], "Distribution-shift metrics": [[11, "distribution-shift-metrics"]], "DistributionNLL": [[143, null]], "DistributionNLLLoss": [[119, null]], "Diversity": [[0, "diversity"]], "ELBOLoss": [[120, null]], "EMA": [[158, null]], "EnergyCriterion": [[166, null]], "Ensemble Methods": [[18, null], [35, "ensemble-methods"]], "Ensemble layers": [[0, "ensemble-layers"]], "Entropy": [[134, null]], "EntropyCriterion": [[167, null]], "Evaluating Model Performance Under Distribution Shift with TorchUncertainty": [[11, null]], "Evaluating on In-Distribution and Distribution-shifted Data": [[11, "evaluating-on-in-distribution-and-distribution-shifted-data"]], "Evaluating on In-Distribution and Out-of-distribution Data": [[13, "evaluating-on-in-distribution-and-out-of-distribution-data"]], "Example": [[186, "example"], [186, "id2"], [186, "id4"]], "Expected Calibration Error": [[187, "expected-calibration-error"]], "Experiment folder usage": [[37, "experiment-folder-usage"]], "FPR95": [[135, null]], "FPRx": [[136, null]], "Focal Loss": [[187, "focal-loss"]], "FocalLoss": [[121, null]], "Foreword on Bayesian Neural Networks": [[3, "foreword-on-bayesian-neural-networks"], [9, "foreword-on-bayesian-neural-networks"]], "Fractals": [[60, null]], "From PyPI": [[184, "from-pypi"]], "From a Standard Classifier to a Packed-Ensemble": [[14, null]], "From source": [[184, "from-source"]], "FrostImages": [[61, null]], "Functions": [[0, "functions"]], "Grouping Loss": [[20, "grouping-loss"], [187, "grouping-loss"]], "GroupingLoss": [[137, null]], "Guidelines": [[38, "guidelines"]], "HTRU2": [[81, null]], "HTRU2DataModule": [[50, null]], "ImageNet": [[187, "imagenet"]], "ImageNet-A & ImageNet-0": [[187, "imagenet-a-imagenet-0"]], "ImageNet-R": [[187, "imagenet-r"]], "ImageNetA": [[70, null]], "ImageNetC": [[71, null]], "ImageNetDataModule": [[51, null]], "ImageNetO": [[72, null]], "ImageNetR": [[73, null]], "Imports and Setup": [[11, "imports-and-setup"], [13, "imports-and-setup"]], "Improve Top-label Calibration with Temperature Scaling": [[24, null]], "Improved Ensemble parameter-efficiency with Packed-Ensembles": [[20, null]], "Indices and tables": [[183, "indices-and-tables"]], "Installation": [[183, "installation"], [184, null]], "Introduction to Classification Uncertainty": [[185, null]], "Introduction to the Lightning CLI": [[37, "introduction-to-the-lightning-cli"]], "KITTIDepth": [[62, null]], "KLDiv": [[122, null]], "LPBNN": [[187, "lpbnn"]], "LPBNNConv2d": [[101, null]], "LPBNNLinear": [[102, null]], "Laplace Approximation": [[187, "laplace-approximation"]], "LaplaceApprox": [[174, null]], "LaplaceConvNd": [[105, null]], "LaplaceLinear": [[106, null]], "Layers": [[0, "layers"], [187, "layers"]], "License": [[38, "license"]], "Linear Layers": [[0, "linear-layers"]], "Load the model from HuggingFace": [[13, "load-the-model-from-huggingface"]], "Log10": [[144, null]], "Losses": [[0, "losses"], [187, "losses"]], "MCBatchNorm": [[175, null]], "MCDropout": [[159, null]], "MIMO": [[187, "mimo"]], "MLPBaseline": [[43, null]], "MNIST": [[187, "mnist"]], "MNIST-C": [[187, "mnist-c"]], "MNISTC": [[74, null]], "MNISTDataModule": [[52, null]], "MUAD": [[63, null], [187, "muad"]], "MUADDataModule": [[59, null]], "MaskedConv2d": [[89, null]], "MaskedLinear": [[90, null]], "Masksembles": [[187, "masksembles"]], "MatrixScaler": [[176, null]], "MaxLogitCriterion": [[168, null]], "MaxSoftmaxCriterion": [[169, null]], "MaxSup: Fixing Label Smoothing for Improved Feature Representation": [[187, "maxsup-fixing-label-smoothing-for-improved-feature-representation"]], "MeanAbsoluteErrorInverse": [[145, null]], "MeanGTRelativeAbsoluteError": [[146, null]], "MeanGTRelativeSquaredError": [[147, null]], "MeanIntersectionOverUnion": [[152, null]], "MeanSquaredErrorInverse": [[148, null]], "MeanSquaredLogError": [[149, null]], "Metrics": [[0, "metrics"], [187, "metrics"]], "Mixup": [[187, "mixup"]], "MixupIO": [[187, "mixupio"]], "Model Initialization": [[11, "model-initialization"], [13, "model-initialization"]], "Models": [[0, "models"]], "Monocular Depth Estimation": [[0, "monocular-depth-estimation"]], "Monte Carlo Dropout for Semantic Segmentation on MUAD": [[6, null]], "Monte-Carlo Batch Normalization": [[187, "monte-carlo-batch-normalization"]], "Monte-Carlo Dropout": [[187, "monte-carlo-dropout"]], "More metrics": [[186, "more-metrics"]], "MutualInformation": [[138, null]], "MutualInformationCriterion": [[170, null]], "NYUv2": [[64, null]], "NormalConvNd": [[107, null]], "NormalInverseGammaConvNd": [[108, null]], "NormalInverseGammaLinear": [[109, null]], "NormalLinear": [[110, null]], "Not-MNIST": [[187, "not-mnist"]], "NotMNIST": [[75, null]], "Notes": [[24, "notes"]], "OOD Scores": [[0, "ood-scores"]], "Official Implementations": [[183, "official-implementations"]], "OnlineShoppers": [[82, null]], "OnlineShoppersDataModule": [[53, null]], "OpenImage-O": [[187, "openimage-o"]], "OpenImageO": [[76, null]], "Options": [[184, "options"]], "Other usage": [[186, "other-usage"]], "Others": [[0, "others"], [0, "id7"]], "Others & Cross-Categories": [[0, "others-cross-categories"]], "Out-of-Distribution Detection": [[0, "out-of-distribution-detection"]], "Out-of-distribution detection with TorchUncertainty": [[13, null]], "Packed ensembles Segmentation Tutorial using Muad Dataset": [[33, null]], "Packed-Ensembles": [[187, "packed-ensembles"]], "PackedConv2d": [[91, null]], "PackedLayerNorm": [[92, null]], "PackedLinear": [[93, null]], "PackedMultiheadAttention": [[94, null]], "PackedTransformerDecoderLayer": [[95, null]], "PackedTransformerEncoderLayer": [[96, null]], "PixelRegressionRoutine": [[180, null]], "Pixelwise Regression": [[0, "pixelwise-regression"]], "Post-Processing Methods": [[0, "post-processing-methods"], [187, "post-processing-methods"]], "Post-hoc Methods": [[21, null], [35, "post-hoc-methods"]], "Post-processing methods": [[38, "post-processing-methods"]], "PostProcessingCriterion": [[171, null]], "Procedure": [[186, "procedure"], [186, "id1"], [186, "id3"]], "Proper Scores": [[0, "proper-scores"]], "Quickstart": [[186, null]], "Reference": [[17, "reference"], [27, "reference"]], "References": [[3, "references"], [9, "references"], [12, "references"], [13, "references"], [24, "references"], [185, "references"], [187, null]], "RegMixup": [[187, "regmixup"]], "Regression": [[0, "regression"], [0, "id2"], [0, "id5"], [0, "id9"], [0, "id13"]], "Regression with Uncertainty": [[25, null], [35, "regression-with-uncertainty"]], "RegressionRoutine": [[181, null]], "ResNet": [[187, "resnet"]], "ResNetBaseline": [[39, null]], "RiskAt80Cov": [[139, null]], "RiskAtxCov": [[140, null]], "Routines": [[0, "routines"]], "SILog": [[150, null]], "SVHN": [[187, "svhn"]], "SWA": [[160, null]], "SWAG": [[161, null]], "Scaling Methods": [[0, "scaling-methods"]], "SegFormerBaseline": [[45, null]], "Segmentation": [[0, "segmentation"], [0, "id3"], [0, "id6"], [0, "id10"], [0, "id14"], [30, null], [35, "segmentation"]], "Segmentation Tutorial using Muad Dataset": [[34, null]], "SegmentationBinaryAUROC": [[153, null]], "SegmentationBinaryAveragePrecision": [[154, null]], "SegmentationFPR95": [[155, null]], "SegmentationRoutine": [[182, null]], "Selective Classification": [[0, "selective-classification"], [20, "selective-classification"]], "SetSize": [[141, null]], "Short Background": [[185, "short-background"]], "SnapshotEnsemble": [[187, "snapshotensemble"]], "SpamBase": [[83, null]], "SpamBaseDataModule": [[54, null]], "Stochastic Gradient Hamiltonian Monte Carlo": [[187, "stochastic-gradient-hamiltonian-monte-carlo"]], "Stochastic Gradient Langevin Dynamics": [[187, "stochastic-gradient-langevin-dynamics"]], "Stochastic Weight Averaging": [[187, "stochastic-weight-averaging"]], "Stochastic Weight Averaging Gaussian": [[187, "stochastic-weight-averaging-gaussian"]], "StochasticModel": [[162, null]], "StudentTConvNd": [[111, null]], "StudentTLinear": [[112, null]], "Summary": [[23, "summary"]], "TUOODCriterion": [[172, null]], "Temperature, Vector, & Matrix scaling": [[187, "temperature-vector-matrix-scaling"]], "TemperatureScaler": [[177, null]], "Test the Training of the Model": [[13, "test-the-training-of-the-model"]], "Test-Time-Adaptation with ZERO": [[187, "test-time-adaptation-with-zero"]], "Textures": [[187, "textures"]], "The Overconfidence of Neural Networks": [[185, "the-overconfidence-of-neural-networks"]], "The scope of TorchUncertainty": [[38, "the-scope-of-torchuncertainty"]], "ThresholdAccuracy": [[151, null]], "TinyImageNet": [[77, null]], "TinyImageNetC": [[78, null]], "TinyImageNetDataModule": [[55, null]], "To Go Further & More Concepts of Uncertainty in ML": [[20, "to-go-further-more-concepts-of-uncertainty-in-ml"]], "Train a Bayesian Neural Network in 20 seconds": [[9, null]], "Train a Bayesian Neural Network in Three Minutes": [[3, null]], "Training a Bayesian LeNet using TorchUncertainty models and Lightning": [[3, "training-a-bayesian-lenet-using-torchuncertainty-models-and-lightning"], [9, "training-a-bayesian-lenet-using-torchuncertainty-models-and-lightning"]], "Training a LeNet for Image Classification with TorchUncertainty": [[10, null]], "Training a LeNet with DEC using TorchUncertainty models": [[12, "training-a-lenet-with-dec-using-torchuncertainty-models"]], "Training a LeNet with MC Dropout using TorchUncertainty models and PyTorch Lightning": [[5, "training-a-lenet-with-mc-dropout-using-torchuncertainty-models-and-pytorch-lightning"]], "Training a LeNet with MCBN using TorchUncertainty models and PyTorch Lightning": [[4, "training-a-lenet-with-mcbn-using-torchuncertainty-models-and-pytorch-lightning"]], "Training a LeNet with Monte Carlo Batch Normalization": [[4, null]], "Training a LeNet with Monte-Carlo Dropout": [[5, null]], "Training a MLP with DER using TorchUncertainty models and PyTorch Lightning": [[27, "training-a-mlp-with-der-using-torchuncertainty-models-and-pytorch-lightning"]], "Training an MLP for Tabular Regression with TorchUncertainty": [[29, null]], "Training an image Packed-Ensemble classifier": [[14, "training-an-image-packed-ensemble-classifier"]], "Training the Model": [[11, "training-the-model"]], "Training with TorchUncertainty\u2019s Uncertainty-aware Routines": [[186, "training-with-torchuncertainty-s-uncertainty-aware-routines"]], "Training with the Routine": [[186, "training-with-the-routine"]], "Tutorials": [[35, null]], "UCI Tabular Classification": [[0, "uci-tabular-classification"], [0, "id12"]], "UCIRegression": [[84, null]], "UCIRegressionDataModule": [[56, null]], "Uncertainty Models": [[187, "uncertainty-models"]], "Using the Lightning CLI tool": [[186, "using-the-lightning-cli-tool"]], "Using the PyTorch-based layers": [[186, "using-the-pytorch-based-layers"]], "Using the PyTorch-based models": [[186, "using-the-pytorch-based-models"]], "VGG": [[187, "vgg"]], "VGGBaseline": [[40, null]], "VariationRatio": [[142, null]], "VariationRatioCriterion": [[173, null]], "Variational Inference Bayesian Neural Networks": [[187, "variational-inference-bayesian-neural-networks"]], "VectorScaler": [[178, null]], "Warping Mixup": [[187, "warping-mixup"]], "Welcome to Torch Uncertainty": [[183, null]], "Wide-ResNet": [[187, "wide-resnet"]], "WideResNetBaseline": [[41, null]], "Wrappers": [[0, "wrappers"]], "batch_ensemble": [[163, null]], "deep_ensembles": [[164, null]], "mc_dropout": [[165, null]]}, "docnames": ["api", "auto_tutorials/Bayesian_Methods/index", "auto_tutorials/Bayesian_Methods/sg_execution_times", "auto_tutorials/Bayesian_Methods/tutorial_bayesian", "auto_tutorials/Bayesian_Methods/tutorial_mc_batch_norm", "auto_tutorials/Bayesian_Methods/tutorial_mc_dropout", "auto_tutorials/Bayesian_Methods/tutorial_muad_mc_drop", "auto_tutorials/Classification/index", "auto_tutorials/Classification/sg_execution_times", "auto_tutorials/Classification/tutorial_bayesian", "auto_tutorials/Classification/tutorial_classification", "auto_tutorials/Classification/tutorial_distribution_shift", "auto_tutorials/Classification/tutorial_evidential_classification", "auto_tutorials/Classification/tutorial_ood_detection", "auto_tutorials/Classification/tutorial_pe_cifar10", "auto_tutorials/Data_Augmentation/index", "auto_tutorials/Data_Augmentation/sg_execution_times", "auto_tutorials/Data_Augmentation/tutorial_corruption", "auto_tutorials/Ensemble_Methods/index", "auto_tutorials/Ensemble_Methods/sg_execution_times", "auto_tutorials/Ensemble_Methods/tutorial_from_de_to_pe", "auto_tutorials/Post_Hoc_Methods/index", "auto_tutorials/Post_Hoc_Methods/sg_execution_times", "auto_tutorials/Post_Hoc_Methods/tutorial_conformal", "auto_tutorials/Post_Hoc_Methods/tutorial_scaler", "auto_tutorials/Regression/index", "auto_tutorials/Regression/sg_execution_times", "auto_tutorials/Regression/tutorial_der_cubic", "auto_tutorials/Regression/tutorial_probabilistic_regression", "auto_tutorials/Regression/tutorial_regression", "auto_tutorials/Segmentation/index", "auto_tutorials/Segmentation/sg_execution_times", "auto_tutorials/Segmentation/tutorial_muad_deep_en", "auto_tutorials/Segmentation/tutorial_muad_packed", "auto_tutorials/Segmentation/tutorial_muad_seg", "auto_tutorials/index", "auto_tutorials/sg_execution_times", "cli_guide", "contributing", "generated/torch_uncertainty.baselines.classification.ResNetBaseline", "generated/torch_uncertainty.baselines.classification.VGGBaseline", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline", "generated/torch_uncertainty.baselines.depth.BTSBaseline", "generated/torch_uncertainty.baselines.regression.MLPBaseline", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline", "generated/torch_uncertainty.datamodules.BankMarketingDataModule", "generated/torch_uncertainty.datamodules.CIFAR100DataModule", "generated/torch_uncertainty.datamodules.CIFAR10DataModule", "generated/torch_uncertainty.datamodules.DOTA2GamesDataModule", "generated/torch_uncertainty.datamodules.HTRU2DataModule", "generated/torch_uncertainty.datamodules.ImageNetDataModule", "generated/torch_uncertainty.datamodules.MNISTDataModule", "generated/torch_uncertainty.datamodules.OnlineShoppersDataModule", "generated/torch_uncertainty.datamodules.SpamBaseDataModule", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule", "generated/torch_uncertainty.datamodules.UCIRegressionDataModule", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule", "generated/torch_uncertainty.datasets.Fractals", "generated/torch_uncertainty.datasets.FrostImages", "generated/torch_uncertainty.datasets.KITTIDepth", "generated/torch_uncertainty.datasets.MUAD", "generated/torch_uncertainty.datasets.NYUv2", "generated/torch_uncertainty.datasets.classification.CIFAR100C", "generated/torch_uncertainty.datasets.classification.CIFAR100N", "generated/torch_uncertainty.datasets.classification.CIFAR10C", "generated/torch_uncertainty.datasets.classification.CIFAR10H", "generated/torch_uncertainty.datasets.classification.CIFAR10N", "generated/torch_uncertainty.datasets.classification.ImageNetA", "generated/torch_uncertainty.datasets.classification.ImageNetC", "generated/torch_uncertainty.datasets.classification.ImageNetO", "generated/torch_uncertainty.datasets.classification.ImageNetR", "generated/torch_uncertainty.datasets.classification.MNISTC", "generated/torch_uncertainty.datasets.classification.NotMNIST", "generated/torch_uncertainty.datasets.classification.OpenImageO", "generated/torch_uncertainty.datasets.classification.TinyImageNet", "generated/torch_uncertainty.datasets.classification.TinyImageNetC", "generated/torch_uncertainty.datasets.classification.uci.BankMarketing", "generated/torch_uncertainty.datasets.classification.uci.DOTA2Games", "generated/torch_uncertainty.datasets.classification.uci.HTRU2", "generated/torch_uncertainty.datasets.classification.uci.OnlineShoppers", "generated/torch_uncertainty.datasets.classification.uci.SpamBase", "generated/torch_uncertainty.datasets.regression.UCIRegression", "generated/torch_uncertainty.datasets.segmentation.CamVid", "generated/torch_uncertainty.datasets.segmentation.Cityscapes", "generated/torch_uncertainty.layers.BatchConv2d", "generated/torch_uncertainty.layers.BatchLinear", "generated/torch_uncertainty.layers.MaskedConv2d", "generated/torch_uncertainty.layers.MaskedLinear", "generated/torch_uncertainty.layers.PackedConv2d", "generated/torch_uncertainty.layers.PackedLayerNorm", "generated/torch_uncertainty.layers.PackedLinear", "generated/torch_uncertainty.layers.PackedMultiheadAttention", "generated/torch_uncertainty.layers.PackedTransformerDecoderLayer", "generated/torch_uncertainty.layers.PackedTransformerEncoderLayer", "generated/torch_uncertainty.layers.bayesian.BayesConv1d", "generated/torch_uncertainty.layers.bayesian.BayesConv2d", "generated/torch_uncertainty.layers.bayesian.BayesConv3d", "generated/torch_uncertainty.layers.bayesian.BayesLinear", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear", "generated/torch_uncertainty.layers.distributions.CauchyConvNd", "generated/torch_uncertainty.layers.distributions.CauchyLinear", "generated/torch_uncertainty.layers.distributions.LaplaceConvNd", "generated/torch_uncertainty.layers.distributions.LaplaceLinear", "generated/torch_uncertainty.layers.distributions.NormalConvNd", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaConvNd", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaLinear", "generated/torch_uncertainty.layers.distributions.NormalLinear", "generated/torch_uncertainty.layers.distributions.StudentTConvNd", "generated/torch_uncertainty.layers.distributions.StudentTLinear", "generated/torch_uncertainty.losses.BCEWithLogitsLSLoss", "generated/torch_uncertainty.losses.BetaNLL", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss", "generated/torch_uncertainty.losses.ConflictualLoss", "generated/torch_uncertainty.losses.DECLoss", "generated/torch_uncertainty.losses.DERLoss", "generated/torch_uncertainty.losses.DistributionNLLLoss", "generated/torch_uncertainty.losses.ELBOLoss", "generated/torch_uncertainty.losses.FocalLoss", "generated/torch_uncertainty.losses.KLDiv", "generated/torch_uncertainty.metrics.AUSE", "generated/torch_uncertainty.metrics.classification.AUGRC", "generated/torch_uncertainty.metrics.classification.AURC", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError", "generated/torch_uncertainty.metrics.classification.BrierScore", "generated/torch_uncertainty.metrics.classification.CalibrationError", "generated/torch_uncertainty.metrics.classification.CategoricalNLL", "generated/torch_uncertainty.metrics.classification.CovAt5Risk", "generated/torch_uncertainty.metrics.classification.CovAtxRisk", "generated/torch_uncertainty.metrics.classification.CoverageRate", "generated/torch_uncertainty.metrics.classification.Disagreement", "generated/torch_uncertainty.metrics.classification.Entropy", "generated/torch_uncertainty.metrics.classification.FPR95", "generated/torch_uncertainty.metrics.classification.FPRx", "generated/torch_uncertainty.metrics.classification.GroupingLoss", "generated/torch_uncertainty.metrics.classification.MutualInformation", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov", "generated/torch_uncertainty.metrics.classification.RiskAtxCov", "generated/torch_uncertainty.metrics.classification.SetSize", "generated/torch_uncertainty.metrics.classification.VariationRatio", "generated/torch_uncertainty.metrics.regression.DistributionNLL", "generated/torch_uncertainty.metrics.regression.Log10", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError", "generated/torch_uncertainty.metrics.regression.SILog", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy", "generated/torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion", "generated/torch_uncertainty.metrics.segmentation.SegmentationBinaryAUROC", "generated/torch_uncertainty.metrics.segmentation.SegmentationBinaryAveragePrecision", "generated/torch_uncertainty.metrics.segmentation.SegmentationFPR95", "generated/torch_uncertainty.models.BatchEnsemble", "generated/torch_uncertainty.models.CheckpointCollector", "generated/torch_uncertainty.models.EMA", "generated/torch_uncertainty.models.MCDropout", "generated/torch_uncertainty.models.SWA", "generated/torch_uncertainty.models.SWAG", "generated/torch_uncertainty.models.StochasticModel", "generated/torch_uncertainty.models.batch_ensemble", "generated/torch_uncertainty.models.deep_ensembles", "generated/torch_uncertainty.models.mc_dropout", "generated/torch_uncertainty.ood_criteria.EnergyCriterion", "generated/torch_uncertainty.ood_criteria.EntropyCriterion", "generated/torch_uncertainty.ood_criteria.MaxLogitCriterion", "generated/torch_uncertainty.ood_criteria.MaxSoftmaxCriterion", "generated/torch_uncertainty.ood_criteria.MutualInformationCriterion", "generated/torch_uncertainty.ood_criteria.PostProcessingCriterion", "generated/torch_uncertainty.ood_criteria.TUOODCriterion", "generated/torch_uncertainty.ood_criteria.VariationRatioCriterion", "generated/torch_uncertainty.post_processing.LaplaceApprox", "generated/torch_uncertainty.post_processing.MCBatchNorm", "generated/torch_uncertainty.post_processing.MatrixScaler", "generated/torch_uncertainty.post_processing.TemperatureScaler", "generated/torch_uncertainty.post_processing.VectorScaler", "generated/torch_uncertainty.routines.ClassificationRoutine", "generated/torch_uncertainty.routines.PixelRegressionRoutine", "generated/torch_uncertainty.routines.RegressionRoutine", "generated/torch_uncertainty.routines.SegmentationRoutine", "index", "installation", "introduction_uncertainty", "quickstart", "references", "sg_execution_times"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_codeautolink": 1}, "filenames": ["api.rst", "auto_tutorials/Bayesian_Methods/index.rst", "auto_tutorials/Bayesian_Methods/sg_execution_times.rst", "auto_tutorials/Bayesian_Methods/tutorial_bayesian.rst", "auto_tutorials/Bayesian_Methods/tutorial_mc_batch_norm.rst", "auto_tutorials/Bayesian_Methods/tutorial_mc_dropout.rst", "auto_tutorials/Bayesian_Methods/tutorial_muad_mc_drop.rst", "auto_tutorials/Classification/index.rst", "auto_tutorials/Classification/sg_execution_times.rst", "auto_tutorials/Classification/tutorial_bayesian.rst", "auto_tutorials/Classification/tutorial_classification.rst", "auto_tutorials/Classification/tutorial_distribution_shift.rst", "auto_tutorials/Classification/tutorial_evidential_classification.rst", "auto_tutorials/Classification/tutorial_ood_detection.rst", "auto_tutorials/Classification/tutorial_pe_cifar10.rst", "auto_tutorials/Data_Augmentation/index.rst", "auto_tutorials/Data_Augmentation/sg_execution_times.rst", "auto_tutorials/Data_Augmentation/tutorial_corruption.rst", "auto_tutorials/Ensemble_Methods/index.rst", "auto_tutorials/Ensemble_Methods/sg_execution_times.rst", "auto_tutorials/Ensemble_Methods/tutorial_from_de_to_pe.rst", "auto_tutorials/Post_Hoc_Methods/index.rst", "auto_tutorials/Post_Hoc_Methods/sg_execution_times.rst", "auto_tutorials/Post_Hoc_Methods/tutorial_conformal.rst", "auto_tutorials/Post_Hoc_Methods/tutorial_scaler.rst", "auto_tutorials/Regression/index.rst", "auto_tutorials/Regression/sg_execution_times.rst", "auto_tutorials/Regression/tutorial_der_cubic.rst", "auto_tutorials/Regression/tutorial_probabilistic_regression.rst", "auto_tutorials/Regression/tutorial_regression.rst", "auto_tutorials/Segmentation/index.rst", "auto_tutorials/Segmentation/sg_execution_times.rst", "auto_tutorials/Segmentation/tutorial_muad_deep_en.rst", "auto_tutorials/Segmentation/tutorial_muad_packed.rst", "auto_tutorials/Segmentation/tutorial_muad_seg.rst", "auto_tutorials/index.rst", "auto_tutorials/sg_execution_times.rst", "cli_guide.rst", "contributing.rst", "generated/torch_uncertainty.baselines.classification.ResNetBaseline.rst", "generated/torch_uncertainty.baselines.classification.VGGBaseline.rst", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline.rst", "generated/torch_uncertainty.baselines.depth.BTSBaseline.rst", "generated/torch_uncertainty.baselines.regression.MLPBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline.rst", "generated/torch_uncertainty.datamodules.BankMarketingDataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR100DataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR10DataModule.rst", "generated/torch_uncertainty.datamodules.DOTA2GamesDataModule.rst", "generated/torch_uncertainty.datamodules.HTRU2DataModule.rst", "generated/torch_uncertainty.datamodules.ImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.MNISTDataModule.rst", "generated/torch_uncertainty.datamodules.OnlineShoppersDataModule.rst", "generated/torch_uncertainty.datamodules.SpamBaseDataModule.rst", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.UCIRegressionDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule.rst", "generated/torch_uncertainty.datasets.Fractals.rst", "generated/torch_uncertainty.datasets.FrostImages.rst", "generated/torch_uncertainty.datasets.KITTIDepth.rst", "generated/torch_uncertainty.datasets.MUAD.rst", "generated/torch_uncertainty.datasets.NYUv2.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100N.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10H.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10N.rst", "generated/torch_uncertainty.datasets.classification.ImageNetA.rst", "generated/torch_uncertainty.datasets.classification.ImageNetC.rst", "generated/torch_uncertainty.datasets.classification.ImageNetO.rst", "generated/torch_uncertainty.datasets.classification.ImageNetR.rst", "generated/torch_uncertainty.datasets.classification.MNISTC.rst", "generated/torch_uncertainty.datasets.classification.NotMNIST.rst", "generated/torch_uncertainty.datasets.classification.OpenImageO.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNet.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNetC.rst", "generated/torch_uncertainty.datasets.classification.uci.BankMarketing.rst", "generated/torch_uncertainty.datasets.classification.uci.DOTA2Games.rst", "generated/torch_uncertainty.datasets.classification.uci.HTRU2.rst", "generated/torch_uncertainty.datasets.classification.uci.OnlineShoppers.rst", "generated/torch_uncertainty.datasets.classification.uci.SpamBase.rst", "generated/torch_uncertainty.datasets.regression.UCIRegression.rst", "generated/torch_uncertainty.datasets.segmentation.CamVid.rst", "generated/torch_uncertainty.datasets.segmentation.Cityscapes.rst", "generated/torch_uncertainty.layers.BatchConv2d.rst", "generated/torch_uncertainty.layers.BatchLinear.rst", "generated/torch_uncertainty.layers.MaskedConv2d.rst", "generated/torch_uncertainty.layers.MaskedLinear.rst", "generated/torch_uncertainty.layers.PackedConv2d.rst", "generated/torch_uncertainty.layers.PackedLayerNorm.rst", "generated/torch_uncertainty.layers.PackedLinear.rst", "generated/torch_uncertainty.layers.PackedMultiheadAttention.rst", "generated/torch_uncertainty.layers.PackedTransformerDecoderLayer.rst", "generated/torch_uncertainty.layers.PackedTransformerEncoderLayer.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv1d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv2d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv3d.rst", "generated/torch_uncertainty.layers.bayesian.BayesLinear.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear.rst", "generated/torch_uncertainty.layers.distributions.CauchyConvNd.rst", "generated/torch_uncertainty.layers.distributions.CauchyLinear.rst", "generated/torch_uncertainty.layers.distributions.LaplaceConvNd.rst", "generated/torch_uncertainty.layers.distributions.LaplaceLinear.rst", "generated/torch_uncertainty.layers.distributions.NormalConvNd.rst", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaConvNd.rst", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaLinear.rst", "generated/torch_uncertainty.layers.distributions.NormalLinear.rst", "generated/torch_uncertainty.layers.distributions.StudentTConvNd.rst", "generated/torch_uncertainty.layers.distributions.StudentTLinear.rst", "generated/torch_uncertainty.losses.BCEWithLogitsLSLoss.rst", "generated/torch_uncertainty.losses.BetaNLL.rst", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss.rst", "generated/torch_uncertainty.losses.ConflictualLoss.rst", "generated/torch_uncertainty.losses.DECLoss.rst", "generated/torch_uncertainty.losses.DERLoss.rst", "generated/torch_uncertainty.losses.DistributionNLLLoss.rst", "generated/torch_uncertainty.losses.ELBOLoss.rst", "generated/torch_uncertainty.losses.FocalLoss.rst", "generated/torch_uncertainty.losses.KLDiv.rst", "generated/torch_uncertainty.metrics.AUSE.rst", "generated/torch_uncertainty.metrics.classification.AUGRC.rst", "generated/torch_uncertainty.metrics.classification.AURC.rst", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError.rst", "generated/torch_uncertainty.metrics.classification.BrierScore.rst", "generated/torch_uncertainty.metrics.classification.CalibrationError.rst", "generated/torch_uncertainty.metrics.classification.CategoricalNLL.rst", "generated/torch_uncertainty.metrics.classification.CovAt5Risk.rst", "generated/torch_uncertainty.metrics.classification.CovAtxRisk.rst", "generated/torch_uncertainty.metrics.classification.CoverageRate.rst", "generated/torch_uncertainty.metrics.classification.Disagreement.rst", "generated/torch_uncertainty.metrics.classification.Entropy.rst", "generated/torch_uncertainty.metrics.classification.FPR95.rst", "generated/torch_uncertainty.metrics.classification.FPRx.rst", "generated/torch_uncertainty.metrics.classification.GroupingLoss.rst", "generated/torch_uncertainty.metrics.classification.MutualInformation.rst", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov.rst", "generated/torch_uncertainty.metrics.classification.RiskAtxCov.rst", "generated/torch_uncertainty.metrics.classification.SetSize.rst", "generated/torch_uncertainty.metrics.classification.VariationRatio.rst", "generated/torch_uncertainty.metrics.regression.DistributionNLL.rst", "generated/torch_uncertainty.metrics.regression.Log10.rst", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError.rst", "generated/torch_uncertainty.metrics.regression.SILog.rst", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy.rst", "generated/torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion.rst", "generated/torch_uncertainty.metrics.segmentation.SegmentationBinaryAUROC.rst", "generated/torch_uncertainty.metrics.segmentation.SegmentationBinaryAveragePrecision.rst", "generated/torch_uncertainty.metrics.segmentation.SegmentationFPR95.rst", "generated/torch_uncertainty.models.BatchEnsemble.rst", "generated/torch_uncertainty.models.CheckpointCollector.rst", "generated/torch_uncertainty.models.EMA.rst", "generated/torch_uncertainty.models.MCDropout.rst", "generated/torch_uncertainty.models.SWA.rst", "generated/torch_uncertainty.models.SWAG.rst", "generated/torch_uncertainty.models.StochasticModel.rst", "generated/torch_uncertainty.models.batch_ensemble.rst", "generated/torch_uncertainty.models.deep_ensembles.rst", "generated/torch_uncertainty.models.mc_dropout.rst", "generated/torch_uncertainty.ood_criteria.EnergyCriterion.rst", "generated/torch_uncertainty.ood_criteria.EntropyCriterion.rst", "generated/torch_uncertainty.ood_criteria.MaxLogitCriterion.rst", "generated/torch_uncertainty.ood_criteria.MaxSoftmaxCriterion.rst", "generated/torch_uncertainty.ood_criteria.MutualInformationCriterion.rst", "generated/torch_uncertainty.ood_criteria.PostProcessingCriterion.rst", "generated/torch_uncertainty.ood_criteria.TUOODCriterion.rst", "generated/torch_uncertainty.ood_criteria.VariationRatioCriterion.rst", "generated/torch_uncertainty.post_processing.LaplaceApprox.rst", "generated/torch_uncertainty.post_processing.MCBatchNorm.rst", "generated/torch_uncertainty.post_processing.MatrixScaler.rst", "generated/torch_uncertainty.post_processing.TemperatureScaler.rst", "generated/torch_uncertainty.post_processing.VectorScaler.rst", "generated/torch_uncertainty.routines.ClassificationRoutine.rst", "generated/torch_uncertainty.routines.PixelRegressionRoutine.rst", "generated/torch_uncertainty.routines.RegressionRoutine.rst", "generated/torch_uncertainty.routines.SegmentationRoutine.rst", "index.rst", "installation.rst", "introduction_uncertainty.rst", "quickstart.rst", "references.rst", "sg_execution_times.rst"], "indexentries": {"adaptivecalibrationerror (class in torch_uncertainty.metrics.classification)": [[126, "torch_uncertainty.metrics.classification.AdaptiveCalibrationError", false]], "augrc (class in torch_uncertainty.metrics.classification)": [[124, "torch_uncertainty.metrics.classification.AUGRC", false]], "aurc (class in torch_uncertainty.metrics.classification)": [[125, "torch_uncertainty.metrics.classification.AURC", false]], "ause (class in torch_uncertainty.metrics)": [[123, "torch_uncertainty.metrics.AUSE", false]], "bankmarketing (class in torch_uncertainty.datasets.classification.uci)": [[79, "torch_uncertainty.datasets.classification.uci.BankMarketing", false]], "bankmarketingdatamodule (class in torch_uncertainty.datamodules)": [[46, "torch_uncertainty.datamodules.BankMarketingDataModule", false]], "batch_ensemble() (in module torch_uncertainty.models)": [[163, "torch_uncertainty.models.batch_ensemble", false]], "batchconv2d (class in torch_uncertainty.layers)": [[87, "torch_uncertainty.layers.BatchConv2d", false]], "batchensemble (class in torch_uncertainty.models)": [[156, "torch_uncertainty.models.BatchEnsemble", false]], "batchlinear (class in torch_uncertainty.layers)": [[88, "torch_uncertainty.layers.BatchLinear", false]], "bayesconv1d (class in torch_uncertainty.layers.bayesian)": [[97, "torch_uncertainty.layers.bayesian.BayesConv1d", false]], "bayesconv2d (class in torch_uncertainty.layers.bayesian)": [[98, "torch_uncertainty.layers.bayesian.BayesConv2d", false]], "bayesconv3d (class in torch_uncertainty.layers.bayesian)": [[99, "torch_uncertainty.layers.bayesian.BayesConv3d", false]], "bayeslinear (class in torch_uncertainty.layers.bayesian)": [[100, "torch_uncertainty.layers.bayesian.BayesLinear", false]], "bcewithlogitslsloss (class in torch_uncertainty.losses)": [[113, "torch_uncertainty.losses.BCEWithLogitsLSLoss", false]], "betanll (class in torch_uncertainty.losses)": [[114, "torch_uncertainty.losses.BetaNLL", false]], "bias (torch_uncertainty.layers.packedconv2d property)": [[91, "torch_uncertainty.layers.PackedConv2d.bias", false]], "bn_update() (torch_uncertainty.models.swag method)": [[161, "torch_uncertainty.models.SWAG.bn_update", false]], "brierscore (class in torch_uncertainty.metrics.classification)": [[127, "torch_uncertainty.metrics.classification.BrierScore", false]], "btsbaseline (class in torch_uncertainty.baselines.depth)": [[42, "torch_uncertainty.baselines.depth.BTSBaseline", false]], "calibrationerror (class in torch_uncertainty.metrics.classification)": [[128, "torch_uncertainty.metrics.classification.CalibrationError", false]], "camvid (class in torch_uncertainty.datasets.segmentation)": [[85, "torch_uncertainty.datasets.segmentation.CamVid", false]], "camviddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[57, "torch_uncertainty.datamodules.segmentation.CamVidDataModule", false]], "categoricalnll (class in torch_uncertainty.metrics.classification)": [[129, "torch_uncertainty.metrics.classification.CategoricalNLL", false]], "cauchyconvnd (class in torch_uncertainty.layers.distributions)": [[103, "torch_uncertainty.layers.distributions.CauchyConvNd", false]], "cauchylinear (class in torch_uncertainty.layers.distributions)": [[104, "torch_uncertainty.layers.distributions.CauchyLinear", false]], "checkpointcollector (class in torch_uncertainty.models)": [[157, "torch_uncertainty.models.CheckpointCollector", false]], "cifar100c (class in torch_uncertainty.datasets.classification)": [[65, "torch_uncertainty.datasets.classification.CIFAR100C", false]], "cifar100datamodule (class in torch_uncertainty.datamodules)": [[47, "torch_uncertainty.datamodules.CIFAR100DataModule", false]], "cifar100n (class in torch_uncertainty.datasets.classification)": [[66, "torch_uncertainty.datasets.classification.CIFAR100N", false]], "cifar10c (class in torch_uncertainty.datasets.classification)": [[67, "torch_uncertainty.datasets.classification.CIFAR10C", false]], "cifar10datamodule (class in torch_uncertainty.datamodules)": [[48, "torch_uncertainty.datamodules.CIFAR10DataModule", false]], "cifar10h (class in torch_uncertainty.datasets.classification)": [[68, "torch_uncertainty.datasets.classification.CIFAR10H", false]], "cifar10n (class in torch_uncertainty.datasets.classification)": [[69, "torch_uncertainty.datasets.classification.CIFAR10N", false]], "cityscapes (class in torch_uncertainty.datasets.segmentation)": [[86, "torch_uncertainty.datasets.segmentation.Cityscapes", false]], "cityscapesdatamodule (class in torch_uncertainty.datamodules.segmentation)": [[58, "torch_uncertainty.datamodules.segmentation.CityscapesDataModule", false]], "classificationroutine (class in torch_uncertainty.routines)": [[179, "torch_uncertainty.routines.ClassificationRoutine", false]], "color_palette (torch_uncertainty.datasets.segmentation.camvid property)": [[85, "torch_uncertainty.datasets.segmentation.CamVid.color_palette", false]], "compute() (torch_uncertainty.metrics.ause method)": [[123, "torch_uncertainty.metrics.AUSE.compute", false]], "compute() (torch_uncertainty.metrics.classification.augrc method)": [[124, "torch_uncertainty.metrics.classification.AUGRC.compute", false]], "compute() (torch_uncertainty.metrics.classification.aurc method)": [[125, "torch_uncertainty.metrics.classification.AURC.compute", false]], "compute() (torch_uncertainty.metrics.classification.brierscore method)": [[127, "torch_uncertainty.metrics.classification.BrierScore.compute", false]], "compute() (torch_uncertainty.metrics.classification.categoricalnll method)": [[129, "torch_uncertainty.metrics.classification.CategoricalNLL.compute", false]], "compute() (torch_uncertainty.metrics.classification.covatxrisk method)": [[131, "torch_uncertainty.metrics.classification.CovAtxRisk.compute", false]], "compute() (torch_uncertainty.metrics.classification.coveragerate method)": [[132, "torch_uncertainty.metrics.classification.CoverageRate.compute", false]], "compute() (torch_uncertainty.metrics.classification.disagreement method)": [[133, "torch_uncertainty.metrics.classification.Disagreement.compute", false]], "compute() (torch_uncertainty.metrics.classification.entropy method)": [[134, "torch_uncertainty.metrics.classification.Entropy.compute", false]], "compute() (torch_uncertainty.metrics.classification.fprx method)": [[136, "torch_uncertainty.metrics.classification.FPRx.compute", false]], "compute() (torch_uncertainty.metrics.classification.groupingloss method)": [[137, "torch_uncertainty.metrics.classification.GroupingLoss.compute", false]], "compute() (torch_uncertainty.metrics.classification.mutualinformation method)": [[138, "torch_uncertainty.metrics.classification.MutualInformation.compute", false]], "compute() (torch_uncertainty.metrics.classification.riskatxcov method)": [[140, "torch_uncertainty.metrics.classification.RiskAtxCov.compute", false]], "compute() (torch_uncertainty.metrics.classification.setsize method)": [[141, "torch_uncertainty.metrics.classification.SetSize.compute", false]], "compute() (torch_uncertainty.metrics.classification.variationratio method)": [[142, "torch_uncertainty.metrics.classification.VariationRatio.compute", false]], "compute() (torch_uncertainty.metrics.regression.distributionnll method)": [[143, "torch_uncertainty.metrics.regression.DistributionNLL.compute", false]], "compute() (torch_uncertainty.metrics.regression.silog method)": [[150, "torch_uncertainty.metrics.regression.SILog.compute", false]], "compute() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[151, "torch_uncertainty.metrics.regression.ThresholdAccuracy.compute", false]], "compute() (torch_uncertainty.metrics.segmentation.meanintersectionoverunion method)": [[152, "torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion.compute", false]], "confidencepenaltyloss (class in torch_uncertainty.losses)": [[115, "torch_uncertainty.losses.ConfidencePenaltyLoss", false]], "conflictualloss (class in torch_uncertainty.losses)": [[116, "torch_uncertainty.losses.ConflictualLoss", false]], "covat5risk (class in torch_uncertainty.metrics.classification)": [[130, "torch_uncertainty.metrics.classification.CovAt5Risk", false]], "covatxrisk (class in torch_uncertainty.metrics.classification)": [[131, "torch_uncertainty.metrics.classification.CovAtxRisk", false]], "coveragerate (class in torch_uncertainty.metrics.classification)": [[132, "torch_uncertainty.metrics.classification.CoverageRate", false]], "decloss (class in torch_uncertainty.losses)": [[117, "torch_uncertainty.losses.DECLoss", false]], "decode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[85, "torch_uncertainty.datasets.segmentation.CamVid.decode_target", false]], "decode_target() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[86, "torch_uncertainty.datasets.segmentation.Cityscapes.decode_target", false]], "deep_ensembles() (in module torch_uncertainty.models)": [[164, "torch_uncertainty.models.deep_ensembles", false]], "deeplabbaseline (class in torch_uncertainty.baselines.segmentation)": [[44, "torch_uncertainty.baselines.segmentation.DeepLabBaseline", false]], "derloss (class in torch_uncertainty.losses)": [[118, "torch_uncertainty.losses.DERLoss", false]], "disagreement (class in torch_uncertainty.metrics.classification)": [[133, "torch_uncertainty.metrics.classification.Disagreement", false]], "distributionnll (class in torch_uncertainty.metrics.regression)": [[143, "torch_uncertainty.metrics.regression.DistributionNLL", false]], "distributionnllloss (class in torch_uncertainty.losses)": [[119, "torch_uncertainty.losses.DistributionNLLLoss", false]], "dota2games (class in torch_uncertainty.datasets.classification.uci)": [[80, "torch_uncertainty.datasets.classification.uci.DOTA2Games", false]], "dota2gamesdatamodule (class in torch_uncertainty.datamodules)": [[49, "torch_uncertainty.datamodules.DOTA2GamesDataModule", false]], "download() (torch_uncertainty.datasets.classification.cifar10c method)": [[67, "torch_uncertainty.datasets.classification.CIFAR10C.download", false]], "download() (torch_uncertainty.datasets.classification.mnistc method)": [[74, "torch_uncertainty.datasets.classification.MNISTC.download", false]], "download() (torch_uncertainty.datasets.classification.tinyimagenetc method)": [[78, "torch_uncertainty.datasets.classification.TinyImageNetC.download", false]], "download() (torch_uncertainty.datasets.classification.uci.bankmarketing method)": [[79, "torch_uncertainty.datasets.classification.uci.BankMarketing.download", false]], "download() (torch_uncertainty.datasets.classification.uci.dota2games method)": [[80, "torch_uncertainty.datasets.classification.uci.DOTA2Games.download", false]], "download() (torch_uncertainty.datasets.regression.uciregression method)": [[84, "torch_uncertainty.datasets.regression.UCIRegression.download", false]], "download() (torch_uncertainty.datasets.segmentation.camvid method)": [[85, "torch_uncertainty.datasets.segmentation.CamVid.download", false]], "download_h() (torch_uncertainty.datasets.classification.cifar10h method)": [[68, "torch_uncertainty.datasets.classification.CIFAR10H.download_h", false]], "elboloss (class in torch_uncertainty.losses)": [[120, "torch_uncertainty.losses.ELBOLoss", false]], "ema (class in torch_uncertainty.models)": [[158, "torch_uncertainty.models.EMA", false]], "encode_target() (torch_uncertainty.datasets.muad method)": [[63, "torch_uncertainty.datasets.MUAD.encode_target", false]], "encode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[85, "torch_uncertainty.datasets.segmentation.CamVid.encode_target", false]], "encode_target() (torch_uncertainty.datasets.segmentation.cityscapes class method)": [[86, "torch_uncertainty.datasets.segmentation.Cityscapes.encode_target", false]], "energycriterion (class in torch_uncertainty.ood_criteria)": [[166, "torch_uncertainty.ood_criteria.EnergyCriterion", false]], "entropy (class in torch_uncertainty.metrics.classification)": [[134, "torch_uncertainty.metrics.classification.Entropy", false]], "entropycriterion (class in torch_uncertainty.ood_criteria)": [[167, "torch_uncertainty.ood_criteria.EntropyCriterion", false]], "eval_forward() (torch_uncertainty.models.checkpointcollector method)": [[157, "torch_uncertainty.models.CheckpointCollector.eval_forward", false]], "eval_forward() (torch_uncertainty.models.swag method)": [[161, "torch_uncertainty.models.SWAG.eval_forward", false]], "evaluation_forward() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.evaluation_forward", false]], "evaluation_forward() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.evaluation_forward", false]], "fit() (torch_uncertainty.post_processing.matrixscaler method)": [[176, "torch_uncertainty.post_processing.MatrixScaler.fit", false]], "fit() (torch_uncertainty.post_processing.mcbatchnorm method)": [[175, "torch_uncertainty.post_processing.MCBatchNorm.fit", false]], "fit() (torch_uncertainty.post_processing.temperaturescaler method)": [[177, "torch_uncertainty.post_processing.TemperatureScaler.fit", false]], "fit() (torch_uncertainty.post_processing.vectorscaler method)": [[178, "torch_uncertainty.post_processing.VectorScaler.fit", false]], "focalloss (class in torch_uncertainty.losses)": [[121, "torch_uncertainty.losses.FocalLoss", false]], "forward() (torch_uncertainty.layers.packedmultiheadattention method)": [[94, "torch_uncertainty.layers.PackedMultiheadAttention.forward", false]], "forward() (torch_uncertainty.layers.packedtransformerdecoderlayer method)": [[95, "torch_uncertainty.layers.PackedTransformerDecoderLayer.forward", false]], "forward() (torch_uncertainty.layers.packedtransformerencoderlayer method)": [[96, "torch_uncertainty.layers.PackedTransformerEncoderLayer.forward", false]], "forward() (torch_uncertainty.losses.confidencepenaltyloss method)": [[115, "torch_uncertainty.losses.ConfidencePenaltyLoss.forward", false]], "forward() (torch_uncertainty.losses.conflictualloss method)": [[116, "torch_uncertainty.losses.ConflictualLoss.forward", false]], "forward() (torch_uncertainty.losses.distributionnllloss method)": [[119, "torch_uncertainty.losses.DistributionNLLLoss.forward", false]], "forward() (torch_uncertainty.losses.elboloss method)": [[120, "torch_uncertainty.losses.ELBOLoss.forward", false]], "forward() (torch_uncertainty.models.batchensemble method)": [[156, "torch_uncertainty.models.BatchEnsemble.forward", false]], "forward() (torch_uncertainty.models.checkpointcollector method)": [[157, "torch_uncertainty.models.CheckpointCollector.forward", false]], "forward() (torch_uncertainty.models.mcdropout method)": [[159, "torch_uncertainty.models.MCDropout.forward", false]], "forward() (torch_uncertainty.ood_criteria.energycriterion method)": [[166, "torch_uncertainty.ood_criteria.EnergyCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.entropycriterion method)": [[167, "torch_uncertainty.ood_criteria.EntropyCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.maxlogitcriterion method)": [[168, "torch_uncertainty.ood_criteria.MaxLogitCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.maxsoftmaxcriterion method)": [[169, "torch_uncertainty.ood_criteria.MaxSoftmaxCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.mutualinformationcriterion method)": [[170, "torch_uncertainty.ood_criteria.MutualInformationCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.postprocessingcriterion method)": [[171, "torch_uncertainty.ood_criteria.PostProcessingCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.tuoodcriterion method)": [[172, "torch_uncertainty.ood_criteria.TUOODCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.variationratiocriterion method)": [[173, "torch_uncertainty.ood_criteria.VariationRatioCriterion.forward", false]], "forward() (torch_uncertainty.routines.classificationroutine method)": [[179, "torch_uncertainty.routines.ClassificationRoutine.forward", false]], "forward() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.forward", false]], "forward() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.forward", false]], "forward() (torch_uncertainty.routines.segmentationroutine method)": [[182, "torch_uncertainty.routines.SegmentationRoutine.forward", false]], "fpr95 (class in torch_uncertainty.metrics.classification)": [[135, "torch_uncertainty.metrics.classification.FPR95", false]], "fprx (class in torch_uncertainty.metrics.classification)": [[136, "torch_uncertainty.metrics.classification.FPRx", false]], "fractals (class in torch_uncertainty.datasets)": [[60, "torch_uncertainty.datasets.Fractals", false]], "freeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[100, "torch_uncertainty.layers.bayesian.BayesLinear.freeze", false]], "from_conv2d() (torch_uncertainty.layers.batchconv2d class method)": [[87, "torch_uncertainty.layers.BatchConv2d.from_conv2d", false]], "from_linear() (torch_uncertainty.layers.batchlinear class method)": [[88, "torch_uncertainty.layers.BatchLinear.from_linear", false]], "frostimages (class in torch_uncertainty.datasets)": [[61, "torch_uncertainty.datasets.FrostImages", false]], "groupingloss (class in torch_uncertainty.metrics.classification)": [[137, "torch_uncertainty.metrics.classification.GroupingLoss", false]], "htru2 (class in torch_uncertainty.datasets.classification.uci)": [[81, "torch_uncertainty.datasets.classification.uci.HTRU2", false]], "htru2datamodule (class in torch_uncertainty.datamodules)": [[50, "torch_uncertainty.datamodules.HTRU2DataModule", false]], "imageneta (class in torch_uncertainty.datasets.classification)": [[70, "torch_uncertainty.datasets.classification.ImageNetA", false]], "imagenetc (class in torch_uncertainty.datasets.classification)": [[71, "torch_uncertainty.datasets.classification.ImageNetC", false]], "imagenetdatamodule (class in torch_uncertainty.datamodules)": [[51, "torch_uncertainty.datamodules.ImageNetDataModule", false]], "imageneto (class in torch_uncertainty.datasets.classification)": [[72, "torch_uncertainty.datasets.classification.ImageNetO", false]], "imagenetr (class in torch_uncertainty.datasets.classification)": [[73, "torch_uncertainty.datasets.classification.ImageNetR", false]], "initialize_stats() (torch_uncertainty.models.swag method)": [[161, "torch_uncertainty.models.SWAG.initialize_stats", false]], "kittidepth (class in torch_uncertainty.datasets)": [[62, "torch_uncertainty.datasets.KITTIDepth", false]], "kldiv (class in torch_uncertainty.losses)": [[122, "torch_uncertainty.losses.KLDiv", false]], "laplaceapprox (class in torch_uncertainty.post_processing)": [[174, "torch_uncertainty.post_processing.LaplaceApprox", false]], "laplaceconvnd (class in torch_uncertainty.layers.distributions)": [[105, "torch_uncertainty.layers.distributions.LaplaceConvNd", false]], "laplacelinear (class in torch_uncertainty.layers.distributions)": [[106, "torch_uncertainty.layers.distributions.LaplaceLinear", false]], "log10 (class in torch_uncertainty.metrics.regression)": [[144, "torch_uncertainty.metrics.regression.Log10", false]], "log_segmentation_plots() (torch_uncertainty.routines.segmentationroutine method)": [[182, "torch_uncertainty.routines.SegmentationRoutine.log_segmentation_plots", false]], "lpbnnconv2d (class in torch_uncertainty.layers.bayesian)": [[101, "torch_uncertainty.layers.bayesian.LPBNNConv2d", false]], "lpbnnlinear (class in torch_uncertainty.layers.bayesian)": [[102, "torch_uncertainty.layers.bayesian.LPBNNLinear", false]], "make_dataset() (torch_uncertainty.datasets.classification.cifar10c method)": [[67, "torch_uncertainty.datasets.classification.CIFAR10C.make_dataset", false]], "make_dataset() (torch_uncertainty.datasets.classification.mnistc method)": [[74, "torch_uncertainty.datasets.classification.MNISTC.make_dataset", false]], "maskedconv2d (class in torch_uncertainty.layers)": [[89, "torch_uncertainty.layers.MaskedConv2d", false]], "maskedlinear (class in torch_uncertainty.layers)": [[90, "torch_uncertainty.layers.MaskedLinear", false]], "matrixscaler (class in torch_uncertainty.post_processing)": [[176, "torch_uncertainty.post_processing.MatrixScaler", false]], "maxlogitcriterion (class in torch_uncertainty.ood_criteria)": [[168, "torch_uncertainty.ood_criteria.MaxLogitCriterion", false]], "maxsoftmaxcriterion (class in torch_uncertainty.ood_criteria)": [[169, "torch_uncertainty.ood_criteria.MaxSoftmaxCriterion", false]], "mc_dropout() (in module torch_uncertainty.models)": [[165, "torch_uncertainty.models.mc_dropout", false]], "mcbatchnorm (class in torch_uncertainty.post_processing)": [[175, "torch_uncertainty.post_processing.MCBatchNorm", false]], "mcdropout (class in torch_uncertainty.models)": [[159, "torch_uncertainty.models.MCDropout", false]], "meanabsoluteerrorinverse (class in torch_uncertainty.metrics.regression)": [[145, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse", false]], "meangtrelativeabsoluteerror (class in torch_uncertainty.metrics.regression)": [[146, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError", false]], "meangtrelativesquarederror (class in torch_uncertainty.metrics.regression)": [[147, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError", false]], "meanintersectionoverunion (class in torch_uncertainty.metrics.segmentation)": [[152, "torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion", false]], "meansquarederrorinverse (class in torch_uncertainty.metrics.regression)": [[148, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse", false]], "meansquaredlogerror (class in torch_uncertainty.metrics.regression)": [[149, "torch_uncertainty.metrics.regression.MeanSquaredLogError", false]], "mlpbaseline (class in torch_uncertainty.baselines.regression)": [[43, "torch_uncertainty.baselines.regression.MLPBaseline", false]], "mnistc (class in torch_uncertainty.datasets.classification)": [[74, "torch_uncertainty.datasets.classification.MNISTC", false]], "mnistdatamodule (class in torch_uncertainty.datamodules)": [[52, "torch_uncertainty.datamodules.MNISTDataModule", false]], "muad (class in torch_uncertainty.datasets)": [[63, "torch_uncertainty.datasets.MUAD", false]], "muaddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[59, "torch_uncertainty.datamodules.segmentation.MUADDataModule", false]], "mutualinformation (class in torch_uncertainty.metrics.classification)": [[138, "torch_uncertainty.metrics.classification.MutualInformation", false]], "mutualinformationcriterion (class in torch_uncertainty.ood_criteria)": [[170, "torch_uncertainty.ood_criteria.MutualInformationCriterion", false]], "normalconvnd (class in torch_uncertainty.layers.distributions)": [[107, "torch_uncertainty.layers.distributions.NormalConvNd", false]], "normalinversegammaconvnd (class in torch_uncertainty.layers.distributions)": [[108, "torch_uncertainty.layers.distributions.NormalInverseGammaConvNd", false]], "normalinversegammalinear (class in torch_uncertainty.layers.distributions)": [[109, "torch_uncertainty.layers.distributions.NormalInverseGammaLinear", false]], "normallinear (class in torch_uncertainty.layers.distributions)": [[110, "torch_uncertainty.layers.distributions.NormalLinear", false]], "notmnist (class in torch_uncertainty.datasets.classification)": [[75, "torch_uncertainty.datasets.classification.NotMNIST", false]], "nyuv2 (class in torch_uncertainty.datasets)": [[64, "torch_uncertainty.datasets.NYUv2", false]], "on_test_epoch_end() (torch_uncertainty.routines.classificationroutine method)": [[179, "torch_uncertainty.routines.ClassificationRoutine.on_test_epoch_end", false]], "on_test_epoch_end() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.on_test_epoch_end", false]], "on_test_epoch_end() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.on_test_epoch_end", false]], "on_test_epoch_end() (torch_uncertainty.routines.segmentationroutine method)": [[182, "torch_uncertainty.routines.SegmentationRoutine.on_test_epoch_end", false]], "on_test_start() (torch_uncertainty.routines.classificationroutine method)": [[179, "torch_uncertainty.routines.ClassificationRoutine.on_test_start", false]], "on_test_start() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.on_test_start", false]], "on_test_start() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.on_test_start", false]], "on_train_start() (torch_uncertainty.routines.classificationroutine method)": [[179, "torch_uncertainty.routines.ClassificationRoutine.on_train_start", false]], "on_train_start() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.on_train_start", false]], "on_train_start() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.on_train_start", false]], "on_validation_epoch_end() (torch_uncertainty.routines.classificationroutine method)": [[179, "torch_uncertainty.routines.ClassificationRoutine.on_validation_epoch_end", false]], "on_validation_epoch_end() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.on_validation_epoch_end", false]], "on_validation_epoch_end() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.on_validation_epoch_end", false]], "on_validation_epoch_end() (torch_uncertainty.routines.segmentationroutine method)": [[182, "torch_uncertainty.routines.SegmentationRoutine.on_validation_epoch_end", false]], "on_validation_start() (torch_uncertainty.routines.classificationroutine method)": [[179, "torch_uncertainty.routines.ClassificationRoutine.on_validation_start", false]], "on_validation_start() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.on_validation_start", false]], "on_validation_start() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.on_validation_start", false]], "onlineshoppers (class in torch_uncertainty.datasets.classification.uci)": [[82, "torch_uncertainty.datasets.classification.uci.OnlineShoppers", false]], "onlineshoppersdatamodule (class in torch_uncertainty.datamodules)": [[53, "torch_uncertainty.datamodules.OnlineShoppersDataModule", false]], "openimageo (class in torch_uncertainty.datasets.classification)": [[76, "torch_uncertainty.datasets.classification.OpenImageO", false]], "packedconv2d (class in torch_uncertainty.layers)": [[91, "torch_uncertainty.layers.PackedConv2d", false]], "packedlayernorm (class in torch_uncertainty.layers)": [[92, "torch_uncertainty.layers.PackedLayerNorm", false]], "packedlinear (class in torch_uncertainty.layers)": [[93, "torch_uncertainty.layers.PackedLinear", false]], "packedmultiheadattention (class in torch_uncertainty.layers)": [[94, "torch_uncertainty.layers.PackedMultiheadAttention", false]], "packedtransformerdecoderlayer (class in torch_uncertainty.layers)": [[95, "torch_uncertainty.layers.PackedTransformerDecoderLayer", false]], "packedtransformerencoderlayer (class in torch_uncertainty.layers)": [[96, "torch_uncertainty.layers.PackedTransformerEncoderLayer", false]], "partial_compute() (torch_uncertainty.metrics.classification.aurc method)": [[125, "torch_uncertainty.metrics.classification.AURC.partial_compute", false]], "pixelregressionroutine (class in torch_uncertainty.routines)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine", false]], "plot() (torch_uncertainty.metrics.ause method)": [[123, "torch_uncertainty.metrics.AUSE.plot", false]], "plot() (torch_uncertainty.metrics.classification.augrc method)": [[124, "torch_uncertainty.metrics.classification.AUGRC.plot", false]], "plot() (torch_uncertainty.metrics.classification.aurc method)": [[125, "torch_uncertainty.metrics.classification.AURC.plot", false]], "plot_sample() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[86, "torch_uncertainty.datasets.segmentation.Cityscapes.plot_sample", false]], "postprocessingcriterion (class in torch_uncertainty.ood_criteria)": [[171, "torch_uncertainty.ood_criteria.PostProcessingCriterion", false]], "prepare_data() (torch_uncertainty.datamodules.mnistdatamodule method)": [[52, "torch_uncertainty.datamodules.MNISTDataModule.prepare_data", false]], "prepare_data() (torch_uncertainty.datamodules.uciregressiondatamodule method)": [[56, "torch_uncertainty.datamodules.UCIRegressionDataModule.prepare_data", false]], "raise_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[175, "torch_uncertainty.post_processing.MCBatchNorm.raise_counters", false]], "regressionroutine (class in torch_uncertainty.routines)": [[181, "torch_uncertainty.routines.RegressionRoutine", false]], "replace_layers() (torch_uncertainty.post_processing.mcbatchnorm method)": [[175, "torch_uncertainty.post_processing.MCBatchNorm.replace_layers", false]], "reset_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[175, "torch_uncertainty.post_processing.MCBatchNorm.reset_counters", false]], "resnetbaseline (class in torch_uncertainty.baselines.classification)": [[39, "torch_uncertainty.baselines.classification.ResNetBaseline", false]], "riskat80cov (class in torch_uncertainty.metrics.classification)": [[139, "torch_uncertainty.metrics.classification.RiskAt80Cov", false]], "riskatxcov (class in torch_uncertainty.metrics.classification)": [[140, "torch_uncertainty.metrics.classification.RiskAtxCov", false]], "sample() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[100, "torch_uncertainty.layers.bayesian.BayesLinear.sample", false]], "sample() (torch_uncertainty.models.swag method)": [[161, "torch_uncertainty.models.SWAG.sample", false]], "segformerbaseline (class in torch_uncertainty.baselines.segmentation)": [[45, "torch_uncertainty.baselines.segmentation.SegFormerBaseline", false]], "segmentationbinaryauroc (class in torch_uncertainty.metrics.segmentation)": [[153, "torch_uncertainty.metrics.segmentation.SegmentationBinaryAUROC", false]], "segmentationbinaryaverageprecision (class in torch_uncertainty.metrics.segmentation)": [[154, "torch_uncertainty.metrics.segmentation.SegmentationBinaryAveragePrecision", false]], "segmentationfpr95 (class in torch_uncertainty.metrics.segmentation)": [[155, "torch_uncertainty.metrics.segmentation.SegmentationFPR95", false]], "segmentationroutine (class in torch_uncertainty.routines)": [[182, "torch_uncertainty.routines.SegmentationRoutine", false]], "set_accumulate() (torch_uncertainty.post_processing.mcbatchnorm method)": [[175, "torch_uncertainty.post_processing.MCBatchNorm.set_accumulate", false]], "set_temperature() (torch_uncertainty.post_processing.matrixscaler method)": [[176, "torch_uncertainty.post_processing.MatrixScaler.set_temperature", false]], "set_temperature() (torch_uncertainty.post_processing.temperaturescaler method)": [[177, "torch_uncertainty.post_processing.TemperatureScaler.set_temperature", false]], "set_temperature() (torch_uncertainty.post_processing.vectorscaler method)": [[178, "torch_uncertainty.post_processing.VectorScaler.set_temperature", false]], "setsize (class in torch_uncertainty.metrics.classification)": [[141, "torch_uncertainty.metrics.classification.SetSize", false]], "setup() (torch_uncertainty.datamodules.mnistdatamodule method)": [[52, "torch_uncertainty.datamodules.MNISTDataModule.setup", false]], "setup() (torch_uncertainty.datamodules.uciregressiondatamodule method)": [[56, "torch_uncertainty.datamodules.UCIRegressionDataModule.setup", false]], "silog (class in torch_uncertainty.metrics.regression)": [[150, "torch_uncertainty.metrics.regression.SILog", false]], "spambase (class in torch_uncertainty.datasets.classification.uci)": [[83, "torch_uncertainty.datasets.classification.uci.SpamBase", false]], "spambasedatamodule (class in torch_uncertainty.datamodules)": [[54, "torch_uncertainty.datamodules.SpamBaseDataModule", false]], "state_dict() (torch_uncertainty.models.swag method)": [[161, "torch_uncertainty.models.SWAG.state_dict", false]], "stochasticmodel (class in torch_uncertainty.models)": [[162, "torch_uncertainty.models.StochasticModel", false]], "studenttconvnd (class in torch_uncertainty.layers.distributions)": [[111, "torch_uncertainty.layers.distributions.StudentTConvNd", false]], "studenttlinear (class in torch_uncertainty.layers.distributions)": [[112, "torch_uncertainty.layers.distributions.StudentTLinear", false]], "subsample() (torch_uncertainty.routines.segmentationroutine method)": [[182, "torch_uncertainty.routines.SegmentationRoutine.subsample", false]], "swa (class in torch_uncertainty.models)": [[160, "torch_uncertainty.models.SWA", false]], "swag (class in torch_uncertainty.models)": [[161, "torch_uncertainty.models.SWAG", false]], "temperaturescaler (class in torch_uncertainty.post_processing)": [[177, "torch_uncertainty.post_processing.TemperatureScaler", false]], "test_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[47, "torch_uncertainty.datamodules.CIFAR100DataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[48, "torch_uncertainty.datamodules.CIFAR10DataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.imagenetdatamodule method)": [[51, "torch_uncertainty.datamodules.ImageNetDataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.mnistdatamodule method)": [[52, "torch_uncertainty.datamodules.MNISTDataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.segmentation.muaddatamodule method)": [[59, "torch_uncertainty.datamodules.segmentation.MUADDataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[55, "torch_uncertainty.datamodules.TinyImageNetDataModule.test_dataloader", false]], "test_step() (torch_uncertainty.routines.classificationroutine method)": [[179, "torch_uncertainty.routines.ClassificationRoutine.test_step", false]], "test_step() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.test_step", false]], "test_step() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.test_step", false]], "test_step() (torch_uncertainty.routines.segmentationroutine method)": [[182, "torch_uncertainty.routines.SegmentationRoutine.test_step", false]], "thresholdaccuracy (class in torch_uncertainty.metrics.regression)": [[151, "torch_uncertainty.metrics.regression.ThresholdAccuracy", false]], "tinyimagenet (class in torch_uncertainty.datasets.classification)": [[77, "torch_uncertainty.datasets.classification.TinyImageNet", false]], "tinyimagenetc (class in torch_uncertainty.datasets.classification)": [[78, "torch_uncertainty.datasets.classification.TinyImageNetC", false]], "tinyimagenetdatamodule (class in torch_uncertainty.datamodules)": [[55, "torch_uncertainty.datamodules.TinyImageNetDataModule", false]], "to() (torch_uncertainty.models.checkpointcollector method)": [[157, "torch_uncertainty.models.CheckpointCollector.to", false]], "train() (torch_uncertainty.models.mcdropout method)": [[159, "torch_uncertainty.models.MCDropout.train", false]], "train_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[47, "torch_uncertainty.datamodules.CIFAR100DataModule.train_dataloader", false]], "train_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[48, "torch_uncertainty.datamodules.CIFAR10DataModule.train_dataloader", false]], "training_step() (torch_uncertainty.routines.classificationroutine method)": [[179, "torch_uncertainty.routines.ClassificationRoutine.training_step", false]], "training_step() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.training_step", false]], "training_step() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.training_step", false]], "training_step() (torch_uncertainty.routines.segmentationroutine method)": [[182, "torch_uncertainty.routines.SegmentationRoutine.training_step", false]], "tuoodcriterion (class in torch_uncertainty.ood_criteria)": [[172, "torch_uncertainty.ood_criteria.TUOODCriterion", false]], "uciregression (class in torch_uncertainty.datasets.regression)": [[84, "torch_uncertainty.datasets.regression.UCIRegression", false]], "uciregressiondatamodule (class in torch_uncertainty.datamodules)": [[56, "torch_uncertainty.datamodules.UCIRegressionDataModule", false]], "unfreeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[100, "torch_uncertainty.layers.bayesian.BayesLinear.unfreeze", false]], "update() (torch_uncertainty.metrics.ause method)": [[123, "torch_uncertainty.metrics.AUSE.update", false]], "update() (torch_uncertainty.metrics.classification.aurc method)": [[125, "torch_uncertainty.metrics.classification.AURC.update", false]], "update() (torch_uncertainty.metrics.classification.brierscore method)": [[127, "torch_uncertainty.metrics.classification.BrierScore.update", false]], "update() (torch_uncertainty.metrics.classification.categoricalnll method)": [[129, "torch_uncertainty.metrics.classification.CategoricalNLL.update", false]], "update() (torch_uncertainty.metrics.classification.covatxrisk method)": [[131, "torch_uncertainty.metrics.classification.CovAtxRisk.update", false]], "update() (torch_uncertainty.metrics.classification.coveragerate method)": [[132, "torch_uncertainty.metrics.classification.CoverageRate.update", false]], "update() (torch_uncertainty.metrics.classification.disagreement method)": [[133, "torch_uncertainty.metrics.classification.Disagreement.update", false]], "update() (torch_uncertainty.metrics.classification.entropy method)": [[134, "torch_uncertainty.metrics.classification.Entropy.update", false]], "update() (torch_uncertainty.metrics.classification.fprx method)": [[136, "torch_uncertainty.metrics.classification.FPRx.update", false]], "update() (torch_uncertainty.metrics.classification.groupingloss method)": [[137, "torch_uncertainty.metrics.classification.GroupingLoss.update", false]], "update() (torch_uncertainty.metrics.classification.mutualinformation method)": [[138, "torch_uncertainty.metrics.classification.MutualInformation.update", false]], "update() (torch_uncertainty.metrics.classification.riskatxcov method)": [[140, "torch_uncertainty.metrics.classification.RiskAtxCov.update", false]], "update() (torch_uncertainty.metrics.classification.setsize method)": [[141, "torch_uncertainty.metrics.classification.SetSize.update", false]], "update() (torch_uncertainty.metrics.regression.distributionnll method)": [[143, "torch_uncertainty.metrics.regression.DistributionNLL.update", false]], "update() (torch_uncertainty.metrics.regression.log10 method)": [[144, "torch_uncertainty.metrics.regression.Log10.update", false]], "update() (torch_uncertainty.metrics.regression.meanabsoluteerrorinverse method)": [[145, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.update", false]], "update() (torch_uncertainty.metrics.regression.meangtrelativeabsoluteerror method)": [[146, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.update", false]], "update() (torch_uncertainty.metrics.regression.meangtrelativesquarederror method)": [[147, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.update", false]], "update() (torch_uncertainty.metrics.regression.meansquarederrorinverse method)": [[148, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.update", false]], "update() (torch_uncertainty.metrics.regression.meansquaredlogerror method)": [[149, "torch_uncertainty.metrics.regression.MeanSquaredLogError.update", false]], "update() (torch_uncertainty.metrics.regression.silog method)": [[150, "torch_uncertainty.metrics.regression.SILog.update", false]], "update() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[151, "torch_uncertainty.metrics.regression.ThresholdAccuracy.update", false]], "update_wrapper() (torch_uncertainty.models.checkpointcollector method)": [[157, "torch_uncertainty.models.CheckpointCollector.update_wrapper", false]], "update_wrapper() (torch_uncertainty.models.ema method)": [[158, "torch_uncertainty.models.EMA.update_wrapper", false]], "update_wrapper() (torch_uncertainty.models.swag method)": [[161, "torch_uncertainty.models.SWAG.update_wrapper", false]], "validation_step() (torch_uncertainty.routines.classificationroutine method)": [[179, "torch_uncertainty.routines.ClassificationRoutine.validation_step", false]], "validation_step() (torch_uncertainty.routines.pixelregressionroutine method)": [[180, "torch_uncertainty.routines.PixelRegressionRoutine.validation_step", false]], "validation_step() (torch_uncertainty.routines.regressionroutine method)": [[181, "torch_uncertainty.routines.RegressionRoutine.validation_step", false]], "validation_step() (torch_uncertainty.routines.segmentationroutine method)": [[182, "torch_uncertainty.routines.SegmentationRoutine.validation_step", false]], "variationratio (class in torch_uncertainty.metrics.classification)": [[142, "torch_uncertainty.metrics.classification.VariationRatio", false]], "variationratiocriterion (class in torch_uncertainty.ood_criteria)": [[173, "torch_uncertainty.ood_criteria.VariationRatioCriterion", false]], "vectorscaler (class in torch_uncertainty.post_processing)": [[178, "torch_uncertainty.post_processing.VectorScaler", false]], "vggbaseline (class in torch_uncertainty.baselines.classification)": [[40, "torch_uncertainty.baselines.classification.VGGBaseline", false]], "weight (torch_uncertainty.layers.packedconv2d property)": [[91, "torch_uncertainty.layers.PackedConv2d.weight", false]], "wideresnetbaseline (class in torch_uncertainty.baselines.classification)": [[41, "torch_uncertainty.baselines.classification.WideResNetBaseline", false]]}, "objects": {"torch_uncertainty.baselines.classification": [[39, 0, 1, "", "ResNetBaseline"], [40, 0, 1, "", "VGGBaseline"], [41, 0, 1, "", "WideResNetBaseline"]], "torch_uncertainty.baselines.depth": [[42, 0, 1, "", "BTSBaseline"]], "torch_uncertainty.baselines.regression": [[43, 0, 1, "", "MLPBaseline"]], "torch_uncertainty.baselines.segmentation": [[44, 0, 1, "", "DeepLabBaseline"], [45, 0, 1, "", "SegFormerBaseline"]], "torch_uncertainty.datamodules": [[46, 0, 1, "", "BankMarketingDataModule"], [47, 0, 1, "", "CIFAR100DataModule"], [48, 0, 1, "", "CIFAR10DataModule"], [49, 0, 1, "", "DOTA2GamesDataModule"], [50, 0, 1, "", "HTRU2DataModule"], [51, 0, 1, "", "ImageNetDataModule"], [52, 0, 1, "", "MNISTDataModule"], [53, 0, 1, "", "OnlineShoppersDataModule"], [54, 0, 1, "", "SpamBaseDataModule"], [55, 0, 1, "", "TinyImageNetDataModule"], [56, 0, 1, "", "UCIRegressionDataModule"]], "torch_uncertainty.datamodules.CIFAR100DataModule": [[47, 1, 1, "", "test_dataloader"], [47, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.CIFAR10DataModule": [[48, 1, 1, "", "test_dataloader"], [48, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.ImageNetDataModule": [[51, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.MNISTDataModule": [[52, 1, 1, "", "prepare_data"], [52, 1, 1, "", "setup"], [52, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.TinyImageNetDataModule": [[55, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.UCIRegressionDataModule": [[56, 1, 1, "", "prepare_data"], [56, 1, 1, "", "setup"]], "torch_uncertainty.datamodules.segmentation": [[57, 0, 1, "", "CamVidDataModule"], [58, 0, 1, "", "CityscapesDataModule"], [59, 0, 1, "", "MUADDataModule"]], "torch_uncertainty.datamodules.segmentation.MUADDataModule": [[59, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datasets": [[60, 0, 1, "", "Fractals"], [61, 0, 1, "", "FrostImages"], [62, 0, 1, "", "KITTIDepth"], [63, 0, 1, "", "MUAD"], [64, 0, 1, "", "NYUv2"]], "torch_uncertainty.datasets.MUAD": [[63, 1, 1, "", "encode_target"]], "torch_uncertainty.datasets.classification": [[65, 0, 1, "", "CIFAR100C"], [66, 0, 1, "", "CIFAR100N"], [67, 0, 1, "", "CIFAR10C"], [68, 0, 1, "", "CIFAR10H"], [69, 0, 1, "", "CIFAR10N"], [70, 0, 1, "", "ImageNetA"], [71, 0, 1, "", "ImageNetC"], [72, 0, 1, "", "ImageNetO"], [73, 0, 1, "", "ImageNetR"], [74, 0, 1, "", "MNISTC"], [75, 0, 1, "", "NotMNIST"], [76, 0, 1, "", "OpenImageO"], [77, 0, 1, "", "TinyImageNet"], [78, 0, 1, "", "TinyImageNetC"]], "torch_uncertainty.datasets.classification.CIFAR10C": [[67, 1, 1, "", "download"], [67, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.CIFAR10H": [[68, 1, 1, "", "download_h"]], "torch_uncertainty.datasets.classification.MNISTC": [[74, 1, 1, "", "download"], [74, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.TinyImageNetC": [[78, 1, 1, "", "download"]], "torch_uncertainty.datasets.classification.uci": [[79, 0, 1, "", "BankMarketing"], [80, 0, 1, "", "DOTA2Games"], [81, 0, 1, "", "HTRU2"], [82, 0, 1, "", "OnlineShoppers"], [83, 0, 1, "", "SpamBase"]], "torch_uncertainty.datasets.classification.uci.BankMarketing": [[79, 1, 1, "", "download"]], "torch_uncertainty.datasets.classification.uci.DOTA2Games": [[80, 1, 1, "", "download"]], "torch_uncertainty.datasets.regression": [[84, 0, 1, "", "UCIRegression"]], "torch_uncertainty.datasets.regression.UCIRegression": [[84, 1, 1, "", "download"]], "torch_uncertainty.datasets.segmentation": [[85, 0, 1, "", "CamVid"], [86, 0, 1, "", "Cityscapes"]], "torch_uncertainty.datasets.segmentation.CamVid": [[85, 2, 1, "", "color_palette"], [85, 1, 1, "", "decode_target"], [85, 1, 1, "", "download"], [85, 1, 1, "", "encode_target"]], "torch_uncertainty.datasets.segmentation.Cityscapes": [[86, 1, 1, "", "decode_target"], [86, 1, 1, "", "encode_target"], [86, 1, 1, "", "plot_sample"]], "torch_uncertainty.layers": [[87, 0, 1, "", "BatchConv2d"], [88, 0, 1, "", "BatchLinear"], [89, 0, 1, "", "MaskedConv2d"], [90, 0, 1, "", "MaskedLinear"], [91, 0, 1, "", "PackedConv2d"], [92, 0, 1, "", "PackedLayerNorm"], [93, 0, 1, "", "PackedLinear"], [94, 0, 1, "", "PackedMultiheadAttention"], [95, 0, 1, "", "PackedTransformerDecoderLayer"], [96, 0, 1, "", "PackedTransformerEncoderLayer"]], "torch_uncertainty.layers.BatchConv2d": [[87, 1, 1, "", "from_conv2d"]], "torch_uncertainty.layers.BatchLinear": [[88, 1, 1, "", "from_linear"]], "torch_uncertainty.layers.PackedConv2d": [[91, 2, 1, "", "bias"], [91, 2, 1, "", "weight"]], "torch_uncertainty.layers.PackedMultiheadAttention": [[94, 1, 1, "", "forward"]], "torch_uncertainty.layers.PackedTransformerDecoderLayer": [[95, 1, 1, "", "forward"]], "torch_uncertainty.layers.PackedTransformerEncoderLayer": [[96, 1, 1, "", "forward"]], "torch_uncertainty.layers.bayesian": [[97, 0, 1, "", "BayesConv1d"], [98, 0, 1, "", "BayesConv2d"], [99, 0, 1, "", "BayesConv3d"], [100, 0, 1, "", "BayesLinear"], [101, 0, 1, "", "LPBNNConv2d"], [102, 0, 1, "", "LPBNNLinear"]], "torch_uncertainty.layers.bayesian.BayesLinear": [[100, 1, 1, "", "freeze"], [100, 1, 1, "", "sample"], [100, 1, 1, "", "unfreeze"]], "torch_uncertainty.layers.distributions": [[103, 0, 1, "", "CauchyConvNd"], [104, 0, 1, "", "CauchyLinear"], [105, 0, 1, "", "LaplaceConvNd"], [106, 0, 1, "", "LaplaceLinear"], [107, 0, 1, "", "NormalConvNd"], [108, 0, 1, "", "NormalInverseGammaConvNd"], [109, 0, 1, "", "NormalInverseGammaLinear"], [110, 0, 1, "", "NormalLinear"], [111, 0, 1, "", "StudentTConvNd"], [112, 0, 1, "", "StudentTLinear"]], "torch_uncertainty.losses": [[113, 0, 1, "", "BCEWithLogitsLSLoss"], [114, 0, 1, "", "BetaNLL"], [115, 0, 1, "", "ConfidencePenaltyLoss"], [116, 0, 1, "", "ConflictualLoss"], [117, 0, 1, "", "DECLoss"], [118, 0, 1, "", "DERLoss"], [119, 0, 1, "", "DistributionNLLLoss"], [120, 0, 1, "", "ELBOLoss"], [121, 0, 1, "", "FocalLoss"], [122, 0, 1, "", "KLDiv"]], "torch_uncertainty.losses.ConfidencePenaltyLoss": [[115, 1, 1, "", "forward"]], "torch_uncertainty.losses.ConflictualLoss": [[116, 1, 1, "", "forward"]], "torch_uncertainty.losses.DistributionNLLLoss": [[119, 1, 1, "", "forward"]], "torch_uncertainty.losses.ELBOLoss": [[120, 1, 1, "", "forward"]], "torch_uncertainty.metrics": [[123, 0, 1, "", "AUSE"]], "torch_uncertainty.metrics.AUSE": [[123, 1, 1, "", "compute"], [123, 1, 1, "", "plot"], [123, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification": [[124, 0, 1, "", "AUGRC"], [125, 0, 1, "", "AURC"], [126, 0, 1, "", "AdaptiveCalibrationError"], [127, 0, 1, "", "BrierScore"], [128, 0, 1, "", "CalibrationError"], [129, 0, 1, "", "CategoricalNLL"], [130, 0, 1, "", "CovAt5Risk"], [131, 0, 1, "", "CovAtxRisk"], [132, 0, 1, "", "CoverageRate"], [133, 0, 1, "", "Disagreement"], [134, 0, 1, "", "Entropy"], [135, 0, 1, "", "FPR95"], [136, 0, 1, "", "FPRx"], [137, 0, 1, "", "GroupingLoss"], [138, 0, 1, "", "MutualInformation"], [139, 0, 1, "", "RiskAt80Cov"], [140, 0, 1, "", "RiskAtxCov"], [141, 0, 1, "", "SetSize"], [142, 0, 1, "", "VariationRatio"]], "torch_uncertainty.metrics.classification.AUGRC": [[124, 1, 1, "", "compute"], [124, 1, 1, "", "plot"]], "torch_uncertainty.metrics.classification.AURC": [[125, 1, 1, "", "compute"], [125, 1, 1, "", "partial_compute"], [125, 1, 1, "", "plot"], [125, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.BrierScore": [[127, 1, 1, "", "compute"], [127, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CategoricalNLL": [[129, 1, 1, "", "compute"], [129, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CovAtxRisk": [[131, 1, 1, "", "compute"], [131, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CoverageRate": [[132, 1, 1, "", "compute"], [132, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Disagreement": [[133, 1, 1, "", "compute"], [133, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Entropy": [[134, 1, 1, "", "compute"], [134, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.FPRx": [[136, 1, 1, "", "compute"], [136, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.GroupingLoss": [[137, 1, 1, "", "compute"], [137, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.MutualInformation": [[138, 1, 1, "", "compute"], [138, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.RiskAtxCov": [[140, 1, 1, "", "compute"], [140, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.SetSize": [[141, 1, 1, "", "compute"], [141, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.VariationRatio": [[142, 1, 1, "", "compute"]], "torch_uncertainty.metrics.regression": [[143, 0, 1, "", "DistributionNLL"], [144, 0, 1, "", "Log10"], [145, 0, 1, "", "MeanAbsoluteErrorInverse"], [146, 0, 1, "", "MeanGTRelativeAbsoluteError"], [147, 0, 1, "", "MeanGTRelativeSquaredError"], [148, 0, 1, "", "MeanSquaredErrorInverse"], [149, 0, 1, "", "MeanSquaredLogError"], [150, 0, 1, "", "SILog"], [151, 0, 1, "", "ThresholdAccuracy"]], "torch_uncertainty.metrics.regression.DistributionNLL": [[143, 1, 1, "", "compute"], [143, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.Log10": [[144, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse": [[145, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError": [[146, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError": [[147, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse": [[148, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredLogError": [[149, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.SILog": [[150, 1, 1, "", "compute"], [150, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.ThresholdAccuracy": [[151, 1, 1, "", "compute"], [151, 1, 1, "", "update"]], "torch_uncertainty.metrics.segmentation": [[152, 0, 1, "", "MeanIntersectionOverUnion"], [153, 0, 1, "", "SegmentationBinaryAUROC"], [154, 0, 1, "", "SegmentationBinaryAveragePrecision"], [155, 0, 1, "", "SegmentationFPR95"]], "torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion": [[152, 1, 1, "", "compute"]], "torch_uncertainty.models": [[156, 0, 1, "", "BatchEnsemble"], [157, 0, 1, "", "CheckpointCollector"], [158, 0, 1, "", "EMA"], [159, 0, 1, "", "MCDropout"], [160, 0, 1, "", "SWA"], [161, 0, 1, "", "SWAG"], [162, 0, 1, "", "StochasticModel"], [163, 3, 1, "", "batch_ensemble"], [164, 3, 1, "", "deep_ensembles"], [165, 3, 1, "", "mc_dropout"]], "torch_uncertainty.models.BatchEnsemble": [[156, 1, 1, "", "forward"]], "torch_uncertainty.models.CheckpointCollector": [[157, 1, 1, "", "eval_forward"], [157, 1, 1, "", "forward"], [157, 1, 1, "", "to"], [157, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.EMA": [[158, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.MCDropout": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "train"]], "torch_uncertainty.models.SWAG": [[161, 1, 1, "", "bn_update"], [161, 1, 1, "", "eval_forward"], [161, 1, 1, "", "initialize_stats"], [161, 1, 1, "", "sample"], [161, 1, 1, "", "state_dict"], [161, 1, 1, "", "update_wrapper"]], "torch_uncertainty.ood_criteria": [[166, 0, 1, "", "EnergyCriterion"], [167, 0, 1, "", "EntropyCriterion"], [168, 0, 1, "", "MaxLogitCriterion"], [169, 0, 1, "", "MaxSoftmaxCriterion"], [170, 0, 1, "", "MutualInformationCriterion"], [171, 0, 1, "", "PostProcessingCriterion"], [172, 0, 1, "", "TUOODCriterion"], [173, 0, 1, "", "VariationRatioCriterion"]], "torch_uncertainty.ood_criteria.EnergyCriterion": [[166, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.EntropyCriterion": [[167, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.MaxLogitCriterion": [[168, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.MaxSoftmaxCriterion": [[169, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.MutualInformationCriterion": [[170, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.PostProcessingCriterion": [[171, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.TUOODCriterion": [[172, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.VariationRatioCriterion": [[173, 1, 1, "", "forward"]], "torch_uncertainty.post_processing": [[174, 0, 1, "", "LaplaceApprox"], [175, 0, 1, "", "MCBatchNorm"], [176, 0, 1, "", "MatrixScaler"], [177, 0, 1, "", "TemperatureScaler"], [178, 0, 1, "", "VectorScaler"]], "torch_uncertainty.post_processing.MCBatchNorm": [[175, 1, 1, "", "fit"], [175, 1, 1, "", "raise_counters"], [175, 1, 1, "", "replace_layers"], [175, 1, 1, "", "reset_counters"], [175, 1, 1, "", "set_accumulate"]], "torch_uncertainty.post_processing.MatrixScaler": [[176, 1, 1, "", "fit"], [176, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.TemperatureScaler": [[177, 1, 1, "", "fit"], [177, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.VectorScaler": [[178, 1, 1, "", "fit"], [178, 1, 1, "", "set_temperature"]], "torch_uncertainty.routines": [[179, 0, 1, "", "ClassificationRoutine"], [180, 0, 1, "", "PixelRegressionRoutine"], [181, 0, 1, "", "RegressionRoutine"], [182, 0, 1, "", "SegmentationRoutine"]], "torch_uncertainty.routines.ClassificationRoutine": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "on_test_epoch_end"], [179, 1, 1, "", "on_test_start"], [179, 1, 1, "", "on_train_start"], [179, 1, 1, "", "on_validation_epoch_end"], [179, 1, 1, "", "on_validation_start"], [179, 1, 1, "", "test_step"], [179, 1, 1, "", "training_step"], [179, 1, 1, "", "validation_step"]], "torch_uncertainty.routines.PixelRegressionRoutine": [[180, 1, 1, "", "evaluation_forward"], [180, 1, 1, "", "forward"], [180, 1, 1, "", "on_test_epoch_end"], [180, 1, 1, "", "on_test_start"], [180, 1, 1, "", "on_train_start"], [180, 1, 1, "", "on_validation_epoch_end"], [180, 1, 1, "", "on_validation_start"], [180, 1, 1, "", "test_step"], [180, 1, 1, "", "training_step"], [180, 1, 1, "", "validation_step"]], "torch_uncertainty.routines.RegressionRoutine": [[181, 1, 1, "", "evaluation_forward"], [181, 1, 1, "", "forward"], [181, 1, 1, "", "on_test_epoch_end"], [181, 1, 1, "", "on_test_start"], [181, 1, 1, "", "on_train_start"], [181, 1, 1, "", "on_validation_epoch_end"], [181, 1, 1, "", "on_validation_start"], [181, 1, 1, "", "test_step"], [181, 1, 1, "", "training_step"], [181, 1, 1, "", "validation_step"]], "torch_uncertainty.routines.SegmentationRoutine": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "log_segmentation_plots"], [182, 1, 1, "", "on_test_epoch_end"], [182, 1, 1, "", "on_validation_epoch_end"], [182, 1, 1, "", "subsample"], [182, 1, 1, "", "test_step"], [182, 1, 1, "", "training_step"], [182, 1, 1, "", "validation_step"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "terms": {"": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 28, 29, 32, 33, 34, 37, 63, 74, 79, 80, 81, 82, 83, 84, 91, 92, 93, 94, 95, 96, 100, 111, 112, 127, 128, 137, 156, 163, 179, 180, 181, 183, 185, 187], "0": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 74, 79, 80, 81, 82, 83, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 112, 113, 114, 119, 124, 125, 126, 127, 128, 129, 131, 133, 134, 136, 140, 142, 143, 144, 146, 147, 149, 150, 151, 156, 161, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188], "00": [2, 3, 6, 8, 9, 11, 13, 16, 17, 19, 20, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 36, 188], "000": [3, 4, 6, 11, 14, 20, 23, 32, 33, 36], "00000": 23, "000133": 3, "000456": 3, "0009886363986879587": 3, "001": [3, 9, 11, 13, 14], "00123": 3, "002": [12, 97, 98, 99], "004": 20, "004121227655559778": 3, "00445": 20, "004667955916374922": 3, "0049": [6, 32, 33, 34], "005": 12, "0055183894000947475": 9, "006000000052154064": 3, "00677": 20, "00745416572317481": 3, "00767": 3, "008316105231642723": 12, "00832": 12, "00b": 29, "00g": 11, "00it": [6, 11, 13, 20, 23, 32, 34], "00mb": [13, 23], "01": [2, 3, 6, 9, 11, 13, 20, 22, 23, 24, 29, 32, 33, 34, 44, 101, 102, 182, 188], "010": [11, 20, 32, 33], "012": 9, "013": 9, "01437": 187, "01454": 20, "015081148594617844": 12, "016": 6, "017": 10, "017277222126722336": 3, "01787": 20, "01g": 11, "01it": [11, 13, 20, 23, 33, 34], "01m": 20, "01mb": [9, 11], "02": [3, 6, 9, 11, 13, 20, 23, 24, 26, 31, 32, 33, 34, 188], "020": [6, 11, 20], "02025": 29, "02147": [6, 32, 33, 34], "023": 20, "02500000037252903": 12, "02816": 20, "02g": 11, "02it": [6, 11, 13, 20, 23, 32, 33], "02m": 3, "02mb": [9, 20, 23], "03": [2, 3, 6, 9, 11, 13, 20, 23, 24, 32, 33, 34, 188], "030": [6, 11, 20, 32, 34], "030442357063293457": 12, "03416": 4, "035": 32, "03668594": 144, "039": 6, "03g": 11, "03it": [6, 11, 13, 20, 23, 32], "03mb": [11, 23], "04": [6, 8, 11, 13, 20, 23, 24, 32, 33, 34, 188], "040": [5, 6, 9, 11, 20, 32, 33], "043": 9, "044": 12, "04g": 11, "04it": [6, 11, 13, 20, 23, 32, 34], "04mb": 20, "05": [6, 8, 11, 13, 16, 20, 23, 24, 32, 33, 34, 37, 92, 95, 96, 126, 140, 188], "050": [11, 20], "053": 33, "05386843904852867": 149, "054": 31, "0550990030169487": 12, "05511810630559921": 12, "05796": 29, "059": 12, "05g": 11, "05it": [6, 11, 13, 20, 23, 32, 33, 34], "05m": 13, "05mb": [23, 24], "06": [6, 8, 11, 13, 20, 23, 24, 26, 32, 33, 34, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 161, 188], "060": [11, 13, 20], "0600": [6, 32, 33, 34], "06597": 20, "066": 8, "06823": 9, "0686": 150, "06948": 4, "06g": 11, "06it": [11, 13, 20, 23, 32, 33, 34], "06mb": 23, "07": [3, 6, 9, 11, 13, 20, 23, 24, 26, 32, 33, 34, 188], "070": [6, 11, 20, 34], "0736033245921135": 9, "07424": 3, "074241504073143": 3, "075": 4, "078": 14, "07936099916696548": 9, "07g": 11, "07it": [6, 11, 13, 20, 23, 24, 32], "07mb": 23, "08": [6, 11, 13, 20, 23, 24, 32, 33, 34, 176, 177, 178], "080": [6, 11, 20, 33, 34], "08073": 4, "081": [16, 17, 188], "08174270391464233": 9, "083": 24, "0833": 125, "084": [8, 11, 188], "085": 23, "086": 6, "08849": [13, 23], "08g": 11, "08it": [11, 13, 20, 23, 24, 32, 33], "08m": 23, "08mb": 23, "09": [6, 11, 13, 20, 23, 32, 33, 34], "090": [11, 20], "092": 20, "095": [12, 20], "096": 11, "09821434319019318": 147, "099": [4, 34], "09g": 11, "09it": [11, 13, 20, 23, 24, 32, 34], "09mb": [9, 23], "0m": [11, 13, 23, 24], "0mb": [3, 9, 11, 13, 20, 23, 24], "0x7b8ef84b8510": 20, "0x7b8ef84bbed0": 20, "1": [11, 13, 16, 19, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 74, 76, 78, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 160, 161, 164, 166, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187], "10": [3, 4, 9, 11, 13, 14, 17, 20, 21, 22, 24, 28, 29, 32, 33, 34, 35, 37, 64, 65, 67, 99, 126, 128, 144, 151, 156, 183, 184, 186, 188], "100": [3, 4, 6, 9, 11, 13, 14, 17, 20, 23, 24, 28, 32, 33, 34, 65, 144, 176, 177, 178, 186], "1000": [24, 27, 144], "10000": [3, 9, 11, 14, 20], "100c": 47, "100h": 66, "100n": 66, "101": [11, 20, 23, 39], "101m": 11, "102": [11, 13, 20, 23], "1020": 144, "1024": [6, 32, 33, 34, 58, 59], "102m": [11, 24], "103": [11, 20, 23], "103m": 23, "104": [4, 11, 20, 23], "104m": 11, "105": [11, 20, 23], "105m": 11, "106": [4, 11, 13, 20, 23], "106m": [11, 23, 24], "107": [4, 11, 20, 23], "10759": 29, "107m": 11, "108": [11, 20, 23], "10812": [13, 23], "108m": 11, "109": [11, 12, 20, 23], "10910": 23, "109m": 23, "10c": 48, "10g": 11, "10h": [68, 69], "10it": [6, 11, 13, 20, 23, 32, 34], "10k": 20, "10m": [23, 24], "10n": 69, "11": [3, 8, 9, 10, 11, 13, 14, 20, 23, 24, 27, 29, 32, 33, 34, 40, 57, 85, 188], "110": [6, 11, 20, 23, 32, 33, 34], "110m": [11, 24], "111": [11, 12, 20, 23], "111m": 11, "112": [11, 20, 23], "11267": 12, "11267015337944031": 12, "113": [11, 13, 20, 23], "113m": [11, 23], "114": [11, 13, 20, 23], "114m": 11, "115": [11, 20, 23], "115m": [11, 24], "116": [11, 20, 23], "116m": 23, "117": [11, 20, 23], "117m": 11, "118": [11, 20, 23], "118m": [11, 24], "119": [11, 20, 23], "11929": 29, "119m": 23, "11g": 11, "11it": [6, 11, 13, 20, 23, 32, 33], "11m": 23, "12": [5, 6, 10, 11, 13, 17, 20, 23, 24, 27, 32, 33, 34, 144], "120": [11, 12, 14, 20, 23, 32, 33, 186], "120m": 11, "121": [11, 20, 23], "121m": 11, "122": [11, 20, 23], "122m": 11, "123": [11, 20, 23], "123m": [11, 23], "124": [11, 20, 23], "124m": 11, "125": [11, 20, 23], "125m": 11, "126": [11, 20, 23], "126m": 23, "127": [11, 20, 23], "127m": 11, "128": [3, 4, 6, 10, 11, 13, 20, 23, 28, 37], "128m": 11, "129": [11, 20, 23], "1299": 127, "129m": [11, 23, 24], "12g": 11, "12it": [6, 11, 13, 20, 23, 32, 33, 34], "12mb": [20, 23], "13": [3, 6, 11, 13, 20, 23, 24, 32, 33, 34, 40], "130": [6, 11, 20, 23, 34], "1307": [10, 20], "131": [11, 20, 23], "13120": 9, "1312037706375122": 9, "131k": [13, 23], "131m": 11, "132": [11, 20, 23], "132m": 11, "133": [11, 20, 23], "133m": 23, "134": [11, 20, 23], "134m": [11, 24], "135": [11, 23], "135m": 11, "136": [11, 23], "136m": [11, 23], "137": [11, 23], "138": [11, 23], "138m": [11, 24], "139": [11, 23], "13g": 11, "13it": [6, 11, 13, 20, 23, 24, 32], "13m": [23, 24, 28], "13mb": 23, "14": [6, 9, 11, 13, 20, 23, 24, 31, 32, 33, 34, 87], "140": [11, 12, 14, 20, 23, 33, 34], "140m": [11, 23], "141": [11, 23], "14134": 28, "14178141951560974": 9, "142": [11, 13, 23], "14231": 29, "142m": 11, "143": [11, 13, 23], "143m": [23, 24], "144": [11, 23, 34], "144m": 11, "145": [11, 23], "146": [11, 12, 20, 23], "146m": [11, 23], "147": [11, 23], "14778": 20, "147m": 24, "148": [11, 23], "148m": 11, "149": [11, 23], "14g": 11, "14it": [11, 13, 20, 23, 32, 34], "14mb": 23, "15": [3, 6, 9, 11, 12, 13, 20, 23, 24, 32, 33, 34, 39, 44, 126, 140, 179, 182], "150": [6, 11, 20, 23, 27, 34], "150m": [11, 23], "151": [11, 20, 23], "151m": 11, "152": [11, 23, 39], "152m": 24, "153": [11, 23], "15356": 5, "153m": [11, 23], "154": [11, 23], "155": [11, 13, 23], "155m": 11, "156": [11, 23], "156m": [23, 24], "157": [11, 23], "15710": 20, "157m": 11, "158": [11, 23], "159": [11, 23], "159m": 11, "15g": 11, "15it": [6, 11, 13, 20, 23, 24], "15k": 20, "15m": 23, "15mb": [20, 23], "16": [2, 3, 4, 5, 6, 10, 11, 13, 14, 20, 22, 23, 24, 27, 29, 32, 33, 34, 40, 87, 161, 175, 186, 188], "160": [11, 14, 20, 23, 34], "1604684740304947": 3, "16047": 3, "1606": [6, 32, 33, 34], "1607142984867096": 146, "160m": [23, 24], "161": [11, 23, 34], "161m": 11, "162": [6, 11, 23], "163": [11, 23], "163m": [11, 23], "164": [11, 23], "165": [11, 23], "165m": [11, 24], "166": [11, 23], "166m": [11, 23], "167": [11, 20, 23], "168": [11, 20, 23], "168m": 11, "169": [11, 13, 20, 23], "169m": 24, "16g": 11, "16it": [6, 11, 13, 20, 23, 24, 34], "16m": [11, 23], "16mb": 23, "17": [6, 8, 9, 10, 11, 13, 20, 23, 24, 26, 32, 33, 34, 188], "170": [6, 11, 13, 20, 23], "17036": 28, "170m": [11, 23], "171": [11, 23], "172": [11, 20, 23], "172m": 11, "173": [11, 23], "173m": 11, "174": [9, 11, 23], "175": [11, 23], "175m": 11, "176": [11, 23], "177": [11, 23], "177m": 11, "178": [9, 11, 23], "179": [11, 23], "179m": 11, "17g": 11, "17it": [6, 11, 13, 20, 23, 33, 34], "17mb": [3, 11], "18": [6, 11, 13, 20, 23, 24, 32, 33, 34, 37, 39, 186], "180": [6, 11, 14, 20, 23, 32, 33], "181": [11, 23], "181m": 11, "182": [11, 23], "183": [11, 23], "18379": 10, "183m": 11, "184": [11, 20, 23], "185": [11, 20, 23], "185m": 11, "186": [11, 14, 20, 23], "186m": 11, "187": [11, 20, 23], "188": [11, 20, 23], "188m": 11, "189": [11, 20, 23], "18g": 11, "18it": [6, 11, 13, 20, 23, 24, 33], "18m": [11, 13, 23], "19": [6, 9, 10, 11, 13, 14, 20, 23, 24, 32, 33, 34, 40], "190": [6, 11, 20, 23, 33], "190000": 11, "190m": 11, "191": [11, 20, 23], "192": [11, 23], "192m": 11, "193": [11, 23], "194": [11, 23], "19442": 20, "194m": 11, "195": [11, 23], "196": [11, 23], "196m": 11, "197": [11, 20, 23], "197k": [13, 23], "197m": 11, "198": [11, 23], "199": [11, 23, 128], "1994": 11, "1998": [3, 9, 187], "199m": 11, "19g": 11, "19it": [6, 11, 13, 20, 23, 32], "19m": 3, "19mb": [9, 23], "1e": [3, 6, 12, 27, 32, 33, 34, 64, 92, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 161, 176, 177, 178, 182, 186], "1m": [11, 13, 23], "1mb": [11, 13, 23, 24], "2": [11, 13, 22, 37, 38, 45, 46, 49, 50, 53, 54, 58, 59, 76, 79, 80, 81, 82, 83, 87, 101, 102, 111, 112, 121, 125, 127, 128, 131, 133, 134, 136, 140, 142, 146, 147, 148, 149, 150, 151, 156, 164, 179, 182, 186], "20": [6, 7, 8, 11, 13, 14, 20, 23, 24, 29, 32, 33, 34, 35, 88, 151, 161, 188], "200": [11, 13, 20, 23, 32, 33, 34, 176, 178], "2000": 24, "2007": 9, "2009": 187, "201": [11, 23], "2011": 187, "2014": [3, 9, 150, 187], "2015": [3, 9, 24, 100, 128, 187], "2016": [5, 13, 187], "20167": 27, "201674461364746": 27, "2017": [5, 13, 24, 121, 125, 164, 176, 177, 178, 185, 187], "2018": [12, 117, 123, 157, 160, 175, 187], "2019": [13, 17, 65, 67, 74, 78, 118, 126, 161, 187], "201m": 11, "202": [11, 23], "2020": [27, 187], "2021": [174, 187], "2022": [13, 76, 114, 183, 187], "2023": [11, 20, 137, 183, 186, 187], "2024": [183, 187], "202m": 11, "203": [11, 23], "204": [11, 23], "20463": 6, "2048": [20, 58, 59, 95, 96], "204m": 11, "205": [11, 20], "20550": 34, "206": 11, "20640": 6, "20662963390350342": 3, "206m": 11, "207": [2, 5, 11, 188], "20761831104755402": 3, "20762": 3, "208": 11, "208m": 11, "209": 11, "209m": 11, "20g": 11, "20it": [11, 13, 20, 23, 24, 32, 34], "21": [6, 9, 11, 13, 20, 23, 24, 32, 33, 34], "210": [3, 10, 11, 20, 33], "21013134717941284": 9, "211": 11, "212": 11, "212m": 11, "213": 11, "213m": 11, "214": 11, "2141": [6, 32, 33, 34], "215": 11, "215m": 11, "216": [11, 13], "217": [11, 20], "217m": 11, "218": 11, "21893027": [79, 80, 81, 82, 83], "219": [11, 23], "219m": 11, "21g": 11, "21it": [11, 13, 20, 23, 34], "21m": 20, "22": [2, 3, 6, 9, 11, 13, 20, 23, 24, 32, 33, 34, 188], "220": [6, 11, 20, 32, 33], "2203": 187, "221": 11, "221m": 11, "222": 11, "223": 11, "223m": 11, "224": [11, 17, 32, 33, 34, 51, 55, 58, 59], "22457": 28, "225": [11, 32, 33, 34, 58, 59], "225m": 11, "226": 11, "227": 11, "227m": 11, "228": [11, 23], "229": [5, 11, 32, 33, 34, 58, 59], "229k": [11, 23, 24], "229m": 11, "22g": 11, "22it": [6, 11, 13, 20, 23, 24, 32], "23": [5, 6, 11, 13, 20, 23, 32, 33, 34], "230": [6, 11, 20], "231": 11, "231m": 11, "232": [4, 11], "233": 11, "233m": 11, "234": [11, 19, 20, 188], "23446": 20, "234m": 11, "235": 11, "236": [11, 20], "236m": 11, "237": 11, "238": 11, "23872": 29, "238m": 11, "239": 11, "239kb": [13, 23], "23g": 11, "23it": [6, 11, 13, 20, 23, 32, 33, 34], "23mb": 23, "24": [6, 11, 13, 19, 20, 23, 24, 32, 33, 34, 188], "240": [11, 20, 23, 32, 33], "24075": 29, "240kb": [13, 23], "240m": 11, "241": 11, "241kb": 13, "242": 11, "242m": 11, "243": [11, 20], "244": [11, 13], "244m": 11, "245": [6, 11, 20], "246": 11, "246m": 11, "247": [11, 23], "247m": 11, "248": 11, "249": [11, 20], "249m": 11, "24g": 11, "24it": [6, 11, 13, 20, 23, 32, 33, 34], "24m": [3, 13], "24mb": 3, "25": [6, 11, 13, 20, 23, 24, 27, 32, 33, 34, 37, 140, 151], "250": [11, 20, 32, 33], "251": 11, "25175": 28, "251m": 11, "252": [11, 22, 24, 31, 33, 188], "252m": 11, "253": 11, "254": 11, "254m": 11, "255": [6, 11, 32, 33, 34], "256": [6, 11, 14, 17, 20, 32, 33, 34, 37], "256m": 11, "257": 11, "258": 11, "258m": 11, "259": 11, "259m": 11, "25g": 11, "25it": [11, 13, 20, 23, 24], "25m": 23, "25mb": [9, 23], "26": [6, 11, 13, 20, 22, 23, 24, 32, 33, 34], "260": [11, 20, 31, 32, 188], "261": 11, "261m": 11, "262": 11, "263": [2, 11], "263m": 11, "264": 11, "26405": 23, "26408": 13, "265": 11, "265m": 11, "266": 11, "267": [11, 12], "267m": 11, "268": [11, 23], "268m": 11, "269": [11, 20], "26g": 11, "26it": [11, 13, 20, 23, 34], "26m": 24, "26mb": 23, "27": [6, 8, 11, 13, 20, 23, 24, 32, 33, 34], "270": [11, 20, 33], "270m": 11, "271": 11, "272": 11, "272m": 11, "273": 11, "274": [11, 20], "274m": 11, "275": 11, "276": [11, 12], "276m": 11, "277": 11, "278": 11, "278m": 11, "279": 11, "27g": 11, "27it": [6, 11, 13, 20, 23, 34], "27m": 23, "27mb": 23, "28": [3, 6, 9, 11, 13, 20, 23, 24, 32, 33, 34], "280": [11, 20, 33], "280m": 11, "281": [6, 11], "28176": 28, "282": 11, "282m": 11, "283": 11, "283m": 11, "284": 11, "285": 11, "285m": 11, "286": 11, "287": 11, "287m": 11, "288": 11, "289": [11, 20], "289m": 11, "28belen": 17, "28g": 11, "28it": [6, 11, 13, 20, 23, 33, 34], "28m": 11, "28mb": [3, 13], "28x28": 20, "29": [6, 11, 13, 17, 20, 23, 24, 32, 33, 34], "290": [11, 20, 23], "291": [4, 11], "291m": 11, "292": 11, "293": [11, 24, 32], "293m": 11, "294": 11, "294m": 11, "295": [11, 20], "295k": [13, 23], "296": 11, "296m": 11, "297": 11, "298": 11, "298m": 11, "299": 11, "299m": 11, "29g": 11, "29it": [6, 11, 13, 20, 23, 33, 34], "29m": 20, "29mb": 9, "2c_border_collie_los_bagan": 17, "2c_usa_": 17, "2d": [87, 94, 101], "2e": [6, 9, 12, 32, 33, 34], "2f": [140, 151], "2m": [11, 13, 23, 24], "2mb": [9, 11, 13, 23, 24], "3": [11, 13, 26, 31, 37, 45, 64, 87, 88, 125, 127, 128, 129, 131, 133, 134, 140, 142, 143, 146, 147, 149, 150, 151, 179, 182, 183, 184, 186], "30": [6, 11, 13, 20, 23, 24, 32, 33, 34, 88, 161], "300": [11, 20, 27], "301": [11, 23], "3011": [6, 32, 33, 34], "301m": 11, "302": 11, "303": 11, "303m": 11, "304": [11, 34], "305": 11, "305m": 11, "306": 11, "307": 11, "307m": 11, "308": 11, "3081": [10, 20], "308m": 11, "309": 11, "30g": 11, "30it": [11, 13, 20, 23, 34], "31": [5, 6, 11, 13, 20, 23, 24, 32, 33, 34, 188], "310": [11, 20, 27, 32], "310m": 11, "311": [8, 10, 11, 20, 188], "312": [11, 12], "312m": 11, "313": 11, "314": 11, "3141452074050903": 9, "31428": 28, "314m": 11, "315": 11, "315m": 11, "316": 11, "317": 11, "317m": 11, "318": 11, "319": [6, 11], "31966": 9, "319663643836975": 9, "319m": 11, "31g": 11, "31it": [6, 11, 13, 20, 23, 34], "31mb": [3, 23], "32": [4, 6, 11, 13, 20, 23, 24, 29, 32, 33, 34, 39, 57, 85, 87, 101, 102, 175, 186], "320": [11, 20, 32], "321": 11, "321m": 11, "322": 11, "323": [11, 20], "323m": 11, "324": 11, "324m": 11, "325": 11, "326": 11, "326kb": [13, 23], "326m": 11, "327": 11, "328": 11, "328m": 11, "329": 11, "32g": 11, "32it": [6, 11, 13, 20, 23, 34], "32x32": 14, "33": [3, 6, 11, 12, 13, 20, 23, 24, 32, 33, 34], "330": [11, 13, 20], "330m": 11, "331": 11, "332": [11, 20], "332m": 11, "333": [11, 14], "3333": 133, "333m": 11, "334": 11, "335": 11, "335m": 11, "336": 11, "33639": 11, "337": [6, 11, 20], "337m": 11, "338": [11, 20], "338m": 11, "339": 11, "33g": 11, "33it": [6, 11, 13, 20, 23, 32, 33, 34], "33m": [20, 23], "33mb": [13, 23], "34": [6, 8, 9, 11, 13, 20, 23, 24, 32, 33, 34, 37, 188], "340": [11, 13, 20], "340m": 11, "341": 11, "342": 11, "342m": 11, "343": 11, "343m": 11, "344": 11, "34437501430511475": 9, "345": 11, "345m": 11, "346": [11, 20], "347": 11, "347m": 11, "348": 11, "34802": 28, "348m": 11, "349": 11, "34g": 11, "34it": [6, 11, 13, 20, 23, 34], "34m": [9, 23], "34mb": 23, "35": [6, 9, 11, 13, 20, 23, 24, 32, 33, 34], "350": [6, 11, 13, 20, 34], "350m": 11, "351": 11, "352": 11, "352m": 11, "353": 11, "353m": 11, "354": [11, 12], "355": 11, "355m": 11, "356": 11, "35625": 20, "357": 11, "357m": 11, "358": [6, 11, 26], "35853": 28, "358m": 11, "359": 11, "35g": 11, "35it": [6, 11, 13, 20, 23, 34], "35mb": 23, "36": [6, 11, 13, 20, 23, 24, 31, 32, 33, 34, 188], "360": [11, 13, 20, 32, 33, 34], "360k": [3, 9, 20], "360m": 11, "361": 11, "361m": 11, "362": [5, 11, 20], "363": 11, "363m": 11, "364": 11, "364m": 11, "365": 11, "366": 11, "36688": 28, "366m": 11, "367": 11, "367m": 11, "368": 11, "36880": 23, "368kb": 20, "368m": 11, "369": 11, "36g": 11, "36it": [6, 11, 13, 20, 23, 33, 34], "36m": 11, "36mb": 23, "37": [2, 6, 11, 12, 13, 20, 23, 24, 32, 33, 34], "370": [11, 13, 20, 34], "370m": 11, "371": 11, "371m": 11, "372": 11, "373": 12, "373kb": [3, 9], "373m": 11, "374m": 11, "375": 11, "37595": 28, "375m": 11, "377m": 11, "378m": 11, "379m": 11, "37g": 11, "37it": [6, 11, 13, 20, 23, 34], "38": [6, 11, 13, 20, 23, 24, 28, 32, 33, 34], "380": [11, 13, 20, 23, 34], "381": 12, "3817": [6, 32, 33, 34], "381m": 11, "38256": 11, "382m": 11, "383m": 11, "385": 11, "385kb": 23, "385m": 11, "386m": 11, "38779": 20, "387m": 11, "38860": 20, "388m": 11, "389": 6, "38g": 11, "38it": [6, 11, 13, 20, 23, 34], "38m": [11, 24], "39": [6, 11, 13, 20, 23, 24, 31, 32, 33, 34, 188], "390": [11, 13, 20, 33], "390m": 11, "3913": [6, 32, 33, 34], "391m": 11, "392m": 11, "394m": 11, "395": 11, "395kb": [11, 24], "395m": 11, "397m": 11, "39873": 6, "398m": 11, "39975": 34, "399m": 11, "39g": 11, "39it": [6, 11, 13, 20, 23, 33, 34], "39m": 23, "39mb": [13, 28], "3d": [94, 127], "3f": [9, 12, 14], "3k": [3, 9, 13, 20, 23], "3m": [11, 13, 23, 24], "3mb": [3, 11, 13, 23, 24], "4": [2, 11, 13, 37, 45, 74, 87, 100, 125, 129, 131, 133, 134, 136, 140, 142, 143, 150, 151, 156, 180, 186], "40": [6, 11, 13, 14, 20, 23, 24, 32, 33, 34], "400": [11, 13, 20], "401m": 11, "402": [11, 20], "402m": 11, "403": 34, "40304": 6, "403m": 11, "404m": 11, "406": [32, 33, 34, 58, 59], "406m": 11, "407": 11, "407m": 11, "408": [6, 11], "40907": 20, "409m": 11, "40g": 11, "40it": [6, 11, 13, 20, 23], "40mb": [20, 23], "41": [6, 11, 13, 20, 23, 33, 34], "410": [11, 13, 20], "410m": 11, "411": 11, "411m": 11, "412": 3, "41274": 28, "413": [6, 11, 14, 20, 32, 33, 34], "413m": 11, "414": 11, "414m": 11, "415m": 11, "417m": 11, "418": 20, "418m": 11, "419kb": 3, "41g": 11, "41it": [6, 11, 13, 20, 23, 32, 33, 34], "42": [6, 11, 13, 20, 23, 24, 32, 33, 34, 56, 84], "420": [6, 11, 20], "420m": 11, "421m": 11, "422": 11, "42205": 20, "423": 11, "423m": 11, "424m": 11, "425": 10, "426k": [13, 23], "426m": 11, "427": 33, "427m": 11, "428": [8, 13, 188], "429m": 11, "42g": 11, "42it": [6, 11, 13, 20, 23, 32, 33, 34], "42m": [11, 20], "42mb": 23, "43": [11, 12, 13, 20, 23, 24], "430": [11, 13, 20, 34], "430m": 11, "431m": 11, "4338": [129, 143], "433m": 11, "434m": 11, "435": 20, "435m": 11, "436": 11, "437m": 11, "438": [9, 11], "438m": 11, "439": 11, "43g": 11, "43it": [6, 11, 13, 20, 23, 32, 33], "43mb": 3, "44": [11, 13, 20, 23, 24, 32, 33], "440": [11, 13, 20, 32, 33], "4401": [6, 32, 33, 34], "440m": 11, "441m": 11, "442m": 11, "44465": 10, "444m": 11, "445m": 11, "4465": 11, "446m": 11, "448m": 11, "449": [10, 12], "449m": 11, "44g": 11, "44it": [6, 11, 13, 20, 23, 32, 33], "44m": [3, 13, 23], "44mb": [23, 28], "45": [6, 11, 12, 13, 20, 23, 32, 33, 34], "450": [11, 13, 20], "4500": 142, "450m": 11, "451": [20, 34], "452": 20, "452m": 11, "453m": 11, "454m": 11, "456": [32, 33, 34, 58, 59], "456m": 11, "457": 20, "457m": 11, "458m": 11, "459": 20, "459kb": [13, 23], "45g": 11, "45it": [6, 11, 13, 20, 23, 24, 32, 33, 34], "46": [11, 13, 20, 23], "460": [11, 13, 20, 33], "460m": 11, "461m": 11, "462": 11, "463": 12, "463m": 11, "464m": 11, "465m": 11, "467": [3, 20], "467m": 11, "468": 34, "468m": 11, "469": 20, "469m": 11, "46g": 11, "46it": [6, 11, 13, 20, 23], "46m": 23, "46mb": 20, "47": [6, 11, 12, 13, 20, 23, 24, 32, 33, 34], "470": [11, 20, 33], "471m": 11, "472": [14, 20], "472m": 11, "47389": 28, "473m": 11, "474": 20, "475": 10, "475m": 11, "476": 20, "476m": 11, "477m": 11, "478": 11, "479m": 11, "47g": 11, "47it": [6, 11, 13, 20, 23, 33, 34], "47m": 9, "47mb": 23, "48": [6, 9, 11, 13, 17, 20, 23, 24, 32, 33, 34], "480": [6, 11, 13, 20], "4807": [6, 32, 33, 34], "480m": 11, "481m": 11, "4822": 11, "483m": 11, "484": 6, "484m": 11, "485": [32, 33, 34, 58, 59], "48667": 32, "486m": 11, "487m": 11, "489m": 11, "48g": 11, "48it": [6, 11, 20, 23, 33], "48mb": [11, 13, 23, 24], "49": [11, 13, 20, 23], "490": [11, 12, 13, 20], "490m": 11, "4914": 11, "492": 11, "492m": 11, "493089437484741": 27, "49309": 27, "493m": 11, "495m": 11, "496": 12, "496m": 11, "4984": [6, 32, 33, 34], "498m": 11, "499": [13, 23], "499m": 11, "49g": 11, "49it": [6, 11, 20, 23, 34], "49mb": 20, "4e": 27, "4f": 150, "4m": [11, 13, 20, 23, 24], "4mb": [11, 13, 23, 24, 29], "5": [11, 13, 20, 37, 45, 58, 59, 65, 67, 78, 87, 88, 92, 95, 96, 114, 126, 127, 128, 130, 131, 133, 134, 140, 142, 146, 147, 149, 150, 151, 156, 186], "50": [6, 11, 13, 20, 23, 24, 27, 28, 32, 33, 34, 37, 39, 140], "500": [11, 12, 13, 20, 33], "50000": 14, "500m": 11, "501": 14, "50175": 28, "502": 14, "502m": 11, "503m": 11, "505m": 11, "506": 11, "506m": 11, "508": 12, "508m": 11, "509m": 11, "50g": 11, "50it": [6, 11, 13, 20, 23, 33, 34], "50mb": 23, "51": [11, 13, 20, 23, 33], "510": [11, 12, 13, 20, 23, 34], "511": 20, "511m": 11, "512": [5, 6, 9, 11, 12, 13, 20, 32, 33, 34], "513": [8, 14, 188], "5130": [6, 32, 33, 34], "513m": 11, "514": [11, 20], "514m": 11, "51561": 28, "516": 20, "516m": 11, "518m": 11, "5199": 127, "519m": 11, "51g": 11, "51it": [6, 11, 13, 20, 23, 33, 34], "51m": [9, 23], "51mb": 23, "52": [3, 6, 11, 13, 20, 23, 24, 32, 33, 34], "520": [10, 13, 20], "521m": 11, "522": [14, 20], "52273": 5, "522m": 11, "524": [22, 23, 188], "524m": 11, "526m": 11, "527": 20, "528": 14, "528m": 11, "5296294689178467": 9, "52963": 9, "529m": 11, "52g": 11, "52it": [6, 11, 13, 20, 23, 33, 34], "52mb": 23, "53": [11, 12, 13, 20, 23, 24], "530": [11, 13, 20], "531": 20, "531m": 11, "533m": 11, "534": [2, 4, 14, 188], "535m": 11, "536": 23, "537": 23, "537m": 11, "539": 6, "539m": 11, "53g": 11, "53it": [6, 11, 13, 20, 23, 33, 34], "53mb": 23, "54": [2, 6, 11, 13, 20, 23, 188], "540": [6, 11, 13, 20, 32], "541": 14, "541m": 11, "542": [31, 34, 188], "542m": 11, "544": [11, 14], "544m": 11, "546": 13, "546m": 11, "548": 11, "54880": 20, "548m": 11, "54g": 11, "54it": [6, 11, 13, 20, 23, 33, 34], "54k": [3, 9, 20], "54m": [3, 20, 23], "54mb": 23, "55": [6, 11, 13, 20, 23, 24, 32, 33, 34], "550": [9, 11, 12, 13, 20], "551m": 11, "553": 20, "553m": 11, "555m": 11, "556": 11, "557": 11, "557k": 23, "557m": 11, "559m": 11, "55g": 11, "55it": [11, 13, 20, 23, 33], "55m": 11, "55mb": [11, 23], "56": [9, 11, 13, 20, 23, 24], "560": [13, 20, 32, 34], "56210": 34, "562m": 11, "564": 11, "564m": 11, "565": 20, "566m": 11, "567": [11, 20], "568m": 11, "56g": 11, "56it": [11, 20, 23, 33], "56mb": 23, "57": [6, 11, 13, 20, 23, 24, 32, 33, 34], "570": [11, 20, 34], "570m": 11, "571": 11, "572m": 11, "573": 20, "574": 20, "57444": 11, "574m": 11, "575": [11, 14], "576m": 11, "578m": 11, "579": [11, 20], "57g": 11, "57it": [11, 13, 20, 23, 33], "57m": 23, "57mb": 23, "58": [6, 11, 13, 20, 23, 31, 32, 33, 34, 38, 188], "580": [11, 13, 20, 33, 34], "580m": 11, "582": 14, "582m": 11, "584": 11, "584m": 11, "585": 20, "586m": 11, "587": [11, 20], "588m": 11, "589": 11, "58g": 11, "58it": [6, 11, 20, 23, 33, 34], "58mb": 9, "59": [11, 13, 20, 23], "590": [11, 13, 20], "590k": 13, "591m": 11, "592": [11, 20], "593": 11, "593m": 11, "594": 20, "595": 14, "595m": 11, "597m": 11, "598": [11, 20], "599": [11, 20], "599m": 11, "59g": 11, "59it": [11, 13, 20, 23, 33], "5d": [14, 17], "5e": 28, "5k": [3, 11, 13, 20, 23, 24], "5m": [11, 13, 23, 24], "5mb": [9, 11, 13, 20, 23, 24], "5risk": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 32, 33, 34], "6": [3, 5, 8, 9, 11, 13, 14, 17, 20, 37, 97, 98, 115, 125, 127, 129, 131, 133, 134, 136, 140, 142, 143, 186], "60": [6, 9, 11, 13, 14, 20, 23, 24, 32, 33, 34], "600": [3, 11, 13, 20], "6000": 14, "601": 20, "60267": 20, "602m": 11, "60313": 34, "604": [11, 20], "604m": 11, "6054999828338623": 9, "606": 11, "606m": 11, "607": 11, "608": [14, 20], "608m": 11, "609": [11, 20], "60g": 11, "60it": [11, 13, 20, 23, 33, 34], "60m": 9, "60mb": 23, "61": [11, 13, 20, 23], "610": [11, 13, 20], "6109": 134, "610m": 11, "611": 11, "612": [11, 20], "612m": 11, "613": 11, "614": 20, "615": [11, 33], "615m": 11, "616": 11, "617": [11, 33], "617m": 11, "618": 11, "619": [11, 14], "619m": 11, "61g": 11, "61it": [11, 20, 23, 32, 33], "61mb": [3, 23], "62": [3, 4, 6, 11, 13, 20, 23, 24, 32, 33, 34], "620": [11, 13, 20], "621": 11, "621kb": [13, 23], "621m": 11, "622": 11, "623": 11, "62356": 20, "623k": [11, 24], "624": 20, "624m": 11, "625": 11, "626": 11, "6269": 134, "626kb": [3, 20], "626m": 11, "627": 11, "628": [11, 12], "628m": 11, "629": [11, 20], "62g": 11, "62it": [11, 13, 20, 23, 33], "62m": [11, 23], "62mb": 23, "63": [11, 13, 20, 23, 24], "630": [11, 13, 20, 32, 33], "630m": 11, "631": 11, "632": [11, 20], "632kb": 20, "632m": 11, "633": [11, 20], "633kb": 9, "634": 11, "634m": 11, "635": 11, "636": 11, "637": 11, "637kb": 9, "637m": 11, "638": 11, "639": [12, 20, 32], "639m": 11, "63g": 11, "63it": [6, 11, 20, 23, 33, 34], "63mb": [13, 23], "64": [9, 11, 13, 20, 23, 27, 91], "640": [11, 13, 20, 33, 57], "641": 11, "641m": 11, "642": [11, 20], "643": 11, "64367": 20, "643m": 11, "644": [11, 20], "645": 11, "645m": 11, "646": [11, 20], "647": [6, 11, 20], "647m": 11, "648": 11, "649m": 11, "64g": 11, "64it": [6, 11, 13, 20, 23], "64mb": 23, "65": [3, 6, 11, 13, 20, 23, 24, 32, 33, 34], "650": [11, 20, 32], "651": [11, 20], "651m": 11, "652": [11, 20], "65224": 32, "653": 11, "654m": 11, "655": [11, 20], "655k": 23, "656": 11, "65623": 28, "656m": 11, "657": 11, "658": [11, 14], "658m": 11, "659": [11, 20], "65g": 11, "65it": [6, 11, 13, 20, 23], "65m": [3, 9, 20], "65mb": 23, "66": [11, 13, 20, 23, 24], "660": [11, 13, 20], "660m": 11, "661": [11, 20], "662": 11, "662m": 11, "663": [11, 33], "664": 11, "664m": 11, "665": 11, "666": 11, "666m": 11, "667": [11, 14], "668": 11, "668m": 11, "669": 11, "66g": 11, "66it": [6, 11, 13, 20, 23], "66mb": 23, "67": [6, 11, 13, 20, 23, 32, 33, 34], "670": [11, 20, 32], "670m": 11, "67128": 6, "672": 11, "672m": 11, "673": [11, 20], "6730": 134, "674": 11, "674m": 11, "675": [6, 11, 20], "676": 11, "677": 11, "677m": 11, "678": [11, 20], "679": [11, 20], "679m": 11, "67g": 11, "67it": [6, 11, 13, 20, 23, 34], "67m": 9, "67mb": 23, "68": [6, 11, 13, 20, 23, 24, 32, 33, 34], "680": [11, 13, 20, 33], "68033": 6, "681": 11, "681m": 11, "682": 11, "683": 11, "683m": 11, "684": [11, 26, 29, 188], "685": 11, "685m": 11, "686": [11, 20], "687": [11, 34], "687m": 11, "688": 11, "688k": 20, "689": 11, "68g": 11, "68it": [11, 13, 20, 23], "68mb": [9, 23], "69": [11, 13, 20, 23, 24], "690": [11, 20, 32], "690m": 11, "691": [11, 20], "692": [11, 20], "692m": 11, "693": 11, "694": 11, "69457": 27, "6945736408233643": 27, "694m": 11, "695": [6, 11, 20], "69656": 28, "696m": 11, "697": 11, "697m": 11, "698": [5, 11], "69865": 11, "699": 11, "699m": 11, "69g": 11, "69it": [11, 13, 20, 23], "69mb": 23, "6kb": 29, "6m": [11, 13, 23, 24], "6mb": [11, 13, 20, 23, 24], "7": [3, 4, 5, 9, 10, 11, 12, 13, 17, 20, 27, 37, 100, 125, 127, 129, 131, 133, 134, 136, 140, 142, 143, 146, 147, 149], "70": [6, 11, 13, 20, 23, 24, 32, 33, 34], "700": [4, 6, 11, 13, 20, 32], "701": [6, 11, 34], "701m": 11, "702": 11, "702m": 11, "703": [11, 20], "704": 11, "704m": 11, "705": 11, "705m": 11, "706": [11, 14], "707": [6, 11], "707m": 11, "708": 11, "709": 11, "709m": 11, "70g": 11, "70it": [11, 20, 23], "70m": 23, "70mb": 23, "71": [5, 11, 13, 20, 23], "710": [6, 11, 13, 20, 34], "710m": 11, "711": [11, 20], "712": 11, "712m": 11, "713": 11, "713m": 11, "714": 11, "715": 20, "715m": 11, "716": 20, "716m": 11, "717": 20, "718": 11, "718m": 11, "719m": 11, "71g": 11, "71it": [6, 11, 20, 23], "71mb": 23, "72": [6, 11, 13, 20, 23, 32, 33, 34], "720": [6, 11, 20, 34, 57], "721": [11, 20, 34], "721k": 20, "721m": 11, "722": 11, "722m": 11, "723": [11, 20], "723m": 11, "724": 11, "725": [11, 20], "725m": 11, "726": 11, "726m": 11, "727": 6, "727kb": 23, "727m": 11, "728": [3, 11], "729": [11, 20], "729m": 11, "72g": 11, "72it": [11, 13, 20, 23, 33, 34], "72m": [13, 23], "72mb": 23, "73": [11, 13, 20, 23], "730": [11, 13, 20, 32, 34], "730m": 11, "731": 11, "731m": 11, "732": 20, "73291": 27, "73291277885437": 27, "733": 11, "733m": 11, "734": [2, 3, 11, 188], "734m": 11, "735": 11, "736": 11, "736kb": 23, "736m": 11, "737": 11, "737m": 11, "738": 11, "739": [6, 11, 34], "739m": 11, "73g": 11, "73it": [6, 11, 13, 20, 23, 32, 34], "74": [11, 13, 20, 23], "740": [8, 9, 11, 13, 20, 34, 188], "740kb": 24, "741": [11, 20], "741m": 11, "742": 11, "742m": 11, "743": [11, 32], "74395": 33, "743kb": 11, "743m": 11, "744": [11, 14], "745": 11, "745m": 11, "746": 11, "7467": [6, 32, 33, 34], "746m": 11, "747": [11, 20], "748": 11, "748m": 11, "749": [6, 11, 20], "749m": 11, "74g": 11, "74it": [11, 13, 20, 23, 33], "74mb": 23, "75": [6, 11, 13, 20, 23, 24, 28, 32, 33, 34, 37, 136], "750": [6, 13, 20, 32, 34], "750m": 11, "751": [11, 20], "752": 11, "752m": 11, "753": [11, 20], "754": 11, "754m": 11, "755m": 11, "756": [11, 20], "757": 11, "757m": 11, "758": 11, "758m": 11, "759": 11, "75g": 11, "75it": [11, 13, 20, 23], "76": [11, 13, 20, 23, 24], "760": [11, 13, 20, 32, 34], "760m": 11, "761": 11, "761m": 11, "762": 11, "763": 11, "763m": 11, "764": 11, "764m": 11, "765": 11, "765m": 11, "766": 11, "767": [11, 20, 34], "767m": 11, "768": [11, 20], "769": 11, "769m": 11, "76g": 11, "76it": [11, 13, 20, 23], "76m": 13, "76mb": 23, "77": [11, 13, 20, 23], "770": [11, 13, 20, 33, 34], "77075": 5, "770m": 11, "771": [11, 12], "771m": 11, "772": 11, "773": [6, 11, 34], "773m": 11, "774": 11, "774m": 11, "775": [11, 22], "776": [11, 20], "776m": 11, "777": 11, "777m": 11, "778": [11, 20], "778m": 11, "779": [13, 23], "77g": 11, "77it": [6, 11, 13, 20, 23], "77m": 13, "77mb": [11, 13, 23], "78": [6, 11, 13, 20, 23, 32, 33, 34], "780": [6, 10, 11, 20], "780m": 11, "781": 11, "782": [11, 32], "782m": 11, "783": 20, "783m": 11, "784": 11, "785": [11, 20], "785m": 11, "786k": [9, 13, 23], "786m": 11, "787": 11, "788": [2, 6, 11, 20, 188], "788m": 11, "789": 11, "789m": 11, "78g": 11, "78it": [11, 20, 23], "78m": 17, "78mb": [13, 20, 23], "79": [11, 13, 20, 23, 24], "790": [6, 20], "791": 11, "791m": 11, "792": 11, "7927": [6, 32, 33, 34], "792m": 11, "793": 11, "793m": 11, "794": [11, 20], "795": 20, "795m": 11, "796": 11, "796m": 11, "797": [11, 20], "797m": 11, "798": 20, "799": 11, "799m": 11, "79g": 11, "79it": [6, 11, 13, 20, 23, 34], "79mb": 23, "7m": [11, 13, 20, 23, 24], "7mb": [11, 13, 20, 23, 24], "8": [4, 5, 9, 11, 12, 13, 14, 17, 20, 24, 28, 37, 87, 88, 125, 127, 128, 131, 133, 134, 136, 140, 142, 146, 147, 149, 151, 176, 177, 178], "80": [6, 11, 13, 14, 20, 23, 32, 33, 34, 62, 139, 151], "800": [6, 11, 13, 20, 33, 34], "800000011920929": 131, "80057": 20, "800m": 11, "801": [11, 20], "802m": 11, "803": [11, 20], "8031": [6, 32, 33, 34], "803m": 11, "804kb": 13, "804m": 11, "805": 11, "806": 11, "80648": 11, "806m": 11, "807m": 11, "808": 20, "809": 11, "809m": 11, "80cov": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 32, 33, 34], "80g": 11, "80it": [6, 11, 20, 23, 34], "80mb": 23, "81": [9, 11, 13, 20, 23, 24], "810": [6, 11, 13, 20, 32], "810m": 11, "811": 11, "812": [11, 20], "812m": 11, "813": 11, "813m": 11, "814": [11, 20], "815": [11, 20], "815m": 11, "816": 20, "817": 11, "817m": 11, "818": [11, 34], "818m": 11, "819": 11, "8192": 28, "819k": 11, "819m": 11, "81g": 11, "81it": [6, 11, 20, 23, 32], "81mb": 23, "82": [6, 11, 13, 20, 23, 24, 32, 33, 34], "820": [11, 20, 32, 33, 34], "821m": 11, "822": [11, 20], "82258": 33, "822m": 11, "823": 11, "823m": 11, "824": 11, "825": [11, 20], "825m": 11, "826": [11, 20], "826m": 11, "827": 20, "828": [11, 26, 27, 188], "828m": 11, "829": 11, "829m": 11, "82g": 11, "82it": [11, 13, 20, 23, 34], "82m": 23, "82mb": 23, "83": [6, 11, 13, 20, 23, 24, 32, 33, 34], "830": [13, 14, 20, 34], "831": [11, 20], "831m": 11, "832": [11, 20, 188], "832m": 11, "833": 11, "834": [11, 12], "834m": 11, "835": 11, "835m": 11, "836": 11, "836m": 11, "838": [11, 32], "838m": 11, "839": 11, "839m": 11, "83g": 11, "83it": [11, 13, 20, 23, 32, 34], "83mb": [17, 23], "84": [11, 13, 14, 20, 23, 24, 186], "840": [6, 11, 13, 20, 32, 34], "841": [11, 34], "841m": 11, "842": 20, "842m": 11, "843": 11, "843m": 11, "844": 11, "845": 11, "845m": 11, "846": [11, 26, 28, 188], "846m": 11, "848": 11, "848m": 11, "849": 11, "849m": 11, "84g": 11, "84it": [6, 11, 13, 20, 23, 33, 34], "85": [6, 11, 13, 20, 23, 32, 33, 34, 126, 140], "850": [13, 20], "851": 11, "851m": 11, "852": [11, 20], "852k": [3, 17, 28], "852m": 11, "853": 11, "854": 11, "854m": 11, "856": [11, 20], "8560": [6, 32, 33, 34], "856m": 11, "857m": 11, "859": [11, 20], "859m": 11, "85g": 11, "85it": [6, 11, 13, 20, 23], "85mb": 23, "86": [11, 13, 20, 23], "860": [11, 20, 32], "86009": 10, "861": [11, 20], "861m": 11, "862": 20, "863": 11, "863m": 11, "864": [11, 20], "864m": 11, "865": 11, "866": 11, "866m": 11, "867": 20, "868m": 11, "869": 11, "86g": 11, "86it": [6, 11, 13, 20, 23], "86m": 11, "87": [11, 13, 20, 23, 24], "870": [6, 11, 13, 20, 32, 34], "870m": 11, "871": [11, 20], "872": 20, "872m": 11, "873": 11, "874": [11, 14, 20], "874m": 11, "8762": [6, 32, 33, 34], "876m": 11, "877": 11, "878": 11, "878m": 11, "879": [11, 20], "879m": 11, "87g": 11, "87it": [6, 11, 13, 20, 23, 32], "87mb": [3, 23], "88": [6, 11, 13, 20, 23, 24, 32, 33, 34], "880": [11, 20], "881": [11, 20], "881m": 11, "882": [11, 20], "883": [11, 12], "883m": 11, "884": [11, 20], "885": [11, 20], "885m": 11, "886": 20, "887": 11, "887kb": 9, "887m": 11, "889": 20, "889m": 11, "88g": 11, "88it": [6, 11, 13, 20, 23, 34], "89": [11, 13, 20, 23], "890": [6, 11, 20, 32], "891": 11, "891m": 11, "892": [11, 20], "893": 20, "893m": 11, "894": [11, 20], "895": 13, "895m": 11, "896": 11, "897": 20, "897m": 11, "898": 20, "899": 20, "899m": 11, "89g": 11, "89it": [11, 20, 23, 33], "89mb": 23, "8b": 17, "8k": [13, 23], "8m": [11, 13, 23], "8mb": [11, 13, 20, 23, 24], "9": [3, 4, 9, 11, 13, 14, 20, 23, 24, 28, 32, 33, 37, 128, 131, 136, 140], "90": [6, 10, 11, 12, 13, 20, 23, 24, 32, 33, 34], "900": [6, 13, 20, 34], "901": 11, "901m": 11, "902": 11, "903": [12, 20], "903m": 11, "904": [11, 20], "905": 11, "905m": 11, "906": [11, 20], "907": 11, "907m": 11, "908": [11, 20], "909": 11, "909m": 11, "90g": 11, "90it": [11, 13, 20, 23, 34], "90m": 20, "90mb": [3, 23], "91": [11, 13, 20, 23], "910": [11, 13, 20, 32, 34], "911": 11, "911m": 11, "912": [11, 20], "913": 11, "913m": 11, "914": 20, "915m": 11, "916": 20, "917": 11, "917m": 11, "918k": 9, "919": 11, "919m": 11, "91g": 11, "91it": [6, 11, 13, 20, 23, 32, 33, 34], "91m": [3, 9, 20], "91mb": 23, "92": [6, 11, 13, 20, 23, 24, 32, 33, 34], "920": [11, 20, 32, 33], "921m": 11, "922": [11, 12, 14], "923": [11, 20], "923m": 11, "924": 11, "925m": 11, "926": 11, "927": 11, "927m": 11, "929": 11, "929m": 11, "92g": 11, "92it": [6, 11, 13, 20, 23, 32], "93": [3, 11, 13, 20, 23], "930": [11, 20, 32], "930m": 11, "931": 11, "932": 11, "93380": 23, "933m": 11, "934": 11, "935m": 11, "936": [9, 11], "937m": 11, "939": [11, 20], "939m": 11, "93g": 11, "93it": [6, 11, 13, 20, 23], "93m": [11, 23], "93mb": [17, 24], "94": [11, 12, 13, 20, 23, 24], "940": [13, 20], "941": 11, "9413999915122986": 12, "941m": 11, "943": 11, "944": [11, 20], "944m": 11, "945": 11, "946": 11, "946m": 11, "948": [11, 20], "948m": 11, "949": [11, 20], "94g": 11, "94it": [6, 11, 13, 20, 23, 32, 34], "94mb": 20, "95": [3, 6, 11, 13, 20, 23, 24, 32, 33, 34, 126, 135, 136, 140, 144], "950": [6, 13, 20], "95010": 23, "950m": 11, "951": 11, "952": 11, "9520999789237976": 3, "952m": 11, "953": [11, 20], "954m": 11, "955": [11, 32], "956": 11, "956m": 11, "957": 11, "958": [11, 20], "959": [11, 23], "959m": 11, "95g": 11, "95it": [11, 13, 20, 23], "95mb": 23, "96": [11, 13, 20, 23, 24], "960": [6, 11, 13, 20, 57], "960m": 11, "961": 11, "962m": 11, "964": 11, "964m": 11, "965": 20, "966m": 11, "967": 11, "967m": 11, "968": [11, 13, 20], "969": [11, 20], "969m": 11, "96g": 11, "96it": [6, 11, 13, 20, 23, 34], "96m": 23, "97": [4, 9, 11, 13, 20, 23, 24], "970": [11, 20, 33, 34], "97011": 20, "970m": 11, "971": [11, 12], "972m": 11, "973": [11, 20], "974": 11, "974m": 11, "975": [11, 20], "975m": 11, "976": [11, 20], "977": 20, "977m": 11, "978": 11, "97880": 23, "979": 11, "979m": 11, "97g": 11, "97it": [11, 13, 20, 23, 32, 34], "97m": 13, "98": [3, 6, 9, 11, 12, 13, 20, 23, 32, 33, 34], "980": [5, 20, 32, 33, 34], "980m": 11, "981": [11, 20], "9811999797821045": 12, "982": [11, 20], "982m": 11, "983": 11, "983k": 23, "983m": 11, "984": [11, 20], "985": [11, 20], "985m": 11, "986": 11, "987": 11, "987m": 11, "989": 20, "989m": 11, "98g": 11, "98it": [6, 11, 13, 20, 23, 33, 34], "98mb": 23, "99": [6, 11, 13, 20, 23, 32, 33, 34], "990": [6, 11, 20, 34], "991": [8, 11, 12, 20, 188], "991m": 11, "992": [11, 20], "993": [11, 20], "993m": 11, "994": 11, "994m": 11, "995": 11, "996": 11, "996m": 11, "997": 20, "998": [11, 20], "998m": 11, "999": 11, "99g": 11, "99it": [11, 13, 20, 23, 32, 33, 34], "99mb": [3, 23, 24], "9k": [3, 9, 20], "9m": [11, 13, 23, 24], "9mb": [11, 13, 20, 23, 24], "A": [3, 6, 9, 13, 32, 33, 34, 36, 38, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 121, 123, 124, 125, 127, 129, 133, 134, 137, 138, 142, 143, 145, 146, 147, 148, 149, 150, 152, 161, 183, 186], "And": 187, "As": [3, 4, 9, 20, 28, 29, 124, 125, 145, 146, 147, 148, 149, 152, 186], "Be": [89, 90], "But": 37, "By": [11, 20, 37, 57, 58, 59, 150], "For": [3, 5, 6, 9, 11, 13, 17, 20, 23, 28, 32, 33, 34, 37, 38, 66, 68, 69, 70, 71, 72, 73, 94, 129, 141, 142, 143, 158, 161, 179, 184, 186, 187], "IN": 185, "If": [14, 20, 24, 37, 38, 39, 40, 41, 47, 48, 51, 52, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 101, 102, 111, 112, 113, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 142, 143, 147, 148, 149, 150, 152, 156, 157, 163, 164, 175, 176, 177, 178, 179, 180, 181, 184, 186], "In": [3, 4, 5, 9, 10, 12, 14, 20, 23, 24, 27, 28, 29, 37, 51, 55, 65, 67, 74, 76, 78, 87, 88, 123, 125, 128, 136, 137, 156, 157, 160, 161, 164, 174, 175, 176, 177, 178, 185, 186, 187], "It": [5, 6, 10, 11, 13, 29, 32, 33, 34, 37, 60, 75, 88, 90, 93, 120, 124, 125, 127, 136, 142, 149, 150, 153, 154, 161, 164, 184, 185, 186], "No": [6, 20, 23, 179], "Of": 76, "On": [24, 35, 114, 116, 176, 177, 178, 185, 187], "One": [56, 66, 69, 84], "The": [0, 11, 13, 14, 17, 20, 24, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 63, 65, 66, 67, 69, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 150, 151, 152, 155, 156, 157, 158, 159, 161, 164, 172, 175, 179, 180, 181, 182, 183, 186, 187], "Then": [3, 9, 12, 27, 37, 38, 184], "There": [11, 14, 24, 60, 75, 182], "These": [0, 11, 17, 20, 28, 186], "To": [3, 4, 5, 6, 9, 11, 12, 13, 24, 27, 28, 29, 37, 38, 87, 88, 183, 184, 185, 186], "With": [11, 13, 20, 87, 88, 186], "_": [3, 6, 9, 14, 17, 20, 23, 32, 33, 34, 170], "__": 187, "__init__": [5, 14, 20, 28, 37, 159, 186], "__main__": 37, "__name__": [17, 37], "_channel": 91, "_deepensembl": 164, "_description_": 94, "_estim": [91, 93], "_featur": 93, "_get": 37, "_j": 87, "_regdeepensembl": 164, "_tool": [10, 13, 27], "_work": [10, 13, 27], "a9": 17, "aaai": [24, 128, 187], "aaron": 187, "ab": [6, 32, 33, 34], "abil": [125, 186], "abl": 20, "about": [20, 37], "abov": [6, 14, 20, 32, 33, 34, 37], "absolut": [28, 144, 145, 146, 149], "abstract": [11, 13, 20, 172], "ac": 126, "acc": [3, 4, 5, 9, 10, 11, 12, 13, 20, 23], "acceler": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 27, 28, 29, 32, 33, 34, 37], "accept": [124, 125, 145, 146, 147, 148, 149, 152], "access": [6, 11, 32, 33, 34, 184, 186], "accord": [67, 74, 172], "account": [20, 132, 150, 186], "accumul": [129, 137, 175], "accuraci": [20, 127, 128, 147, 151, 187], "achiev": [3, 9, 20, 94, 136], "across": [6, 32, 33, 34, 94, 126, 127, 129, 132, 133, 134, 138, 141, 142, 143, 153, 154, 155, 168], "action": [10, 13, 27], "activ": [11, 13, 95, 96, 184, 185], "actual": [126, 127, 128, 186], "ad": [87, 89, 91, 92, 94, 101, 186], "adam": [3, 6, 9, 11, 12, 13, 27, 28, 29, 32, 33, 34, 186, 187], "adapt": [20, 23, 126, 128], "adaptive_calibration_error": 126, "adaptiveavgpool2d": 20, "add": [4, 20, 37, 38, 87, 88, 89, 90, 91, 93, 94, 101, 102, 113, 123, 124, 125, 161], "add_arguments_to_pars": 37, "add_bias_kv": 94, "add_lr_scheduler_arg": 37, "add_optimizer_arg": 37, "add_zero_attn": 94, "addit": [6, 32, 33, 34, 37, 59, 65, 70, 71, 72, 73, 92, 93, 94, 95, 96, 104, 106, 108, 109, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155], "adeelh": 121, "adjust": [23, 126], "adopt": [11, 13], "adrien": [183, 187], "advanc": [123, 127, 129, 132, 133, 134, 137, 138, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152], "advers": [6, 11, 32, 33, 34], "adversari": 187, "advis": [37, 38, 88, 186], "aec": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 32, 33, 34], "affect": [39, 40, 41], "affin": 92, "aforement": 184, "after": [12, 23, 24, 27, 37, 95, 96, 161], "again": [20, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 184], "aggre_label": 69, "aggreg": [120, 153, 154], "agustinu": 187, "ai": [20, 184], "aim": [12, 28], "al": [76, 100, 116, 124, 126, 128, 174, 186, 187], "alch\u00e9": 187, "aldea": [183, 187], "aleator": 27, "alessandro": 187, "alex": 187, "alexand": [27, 187], "alexandr": 187, "align": 128, "alina": 187, "all": [3, 9, 12, 13, 14, 17, 20, 24, 28, 35, 37, 39, 41, 65, 67, 74, 78, 87, 89, 91, 94, 95, 96, 104, 106, 109, 110, 112, 132, 142, 153, 154, 155, 156, 163, 175, 184, 186, 188], "all_model": 20, "alldrin": 187, "allow": [0, 6, 20, 94, 135], "along": [87, 88, 152, 156, 186], "alpha": [6, 12, 14, 20, 23, 27, 32, 33, 34, 37, 39, 40, 41, 43, 91, 92, 93, 94, 95, 96, 108, 109, 121, 179, 186], "alreadi": [3, 4, 5, 9, 12, 20, 27, 38, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 157, 184], "also": [3, 4, 5, 9, 11, 12, 13, 17, 20, 23, 24, 27, 38, 138, 151, 169, 171, 179, 180, 181, 183, 185, 186], "altern": [87, 88, 187], "although": 28, "alwai": 94, "amini": [27, 118, 187], "among": [46, 49, 50, 53, 54, 142, 173], "amount": [4, 20, 39, 40, 41, 142, 182], "an": [3, 4, 5, 6, 9, 10, 12, 17, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 57, 58, 59, 74, 87, 88, 94, 95, 96, 114, 123, 124, 125, 128, 132, 133, 138, 152, 156, 175, 179, 180, 181, 186, 187, 188], "analysi": 187, "analyz": [11, 13], "andrei": [183, 187], "andrew": 187, "angel": 183, "angl": 12, "ani": [24, 28, 35, 38, 39, 40, 41, 60, 87, 88, 89, 90, 92, 93, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 126, 156, 186], "ann": 187, "anneal": [20, 117], "annealing_step": 117, "annot": 187, "anomali": 136, "anoth": 29, "antialia": [6, 17, 32, 33, 34, 58, 59], "antic": [114, 187], "anyth": [179, 181, 182], "ap": [23, 154], "apach": 38, "api": [38, 66, 68, 69, 70, 71, 72, 73, 76, 141, 158, 183, 186], "appear": 138, "append": [17, 20], "appli": [3, 4, 9, 11, 20, 23, 39, 40, 41, 47, 48, 51, 52, 55, 57, 58, 60, 64, 67, 87, 88, 89, 90, 95, 96, 113, 114, 115, 116, 117, 118, 119, 132, 152, 159, 165, 187], "applic": [12, 20, 27, 38, 186], "approach": [1, 12, 27, 35, 87, 88, 187], "approxim": [4, 5, 20, 27, 174], "ar": [0, 3, 4, 9, 11, 13, 14, 17, 20, 24, 28, 37, 38, 45, 63, 87, 88, 91, 93, 94, 95, 96, 104, 106, 109, 110, 112, 126, 127, 128, 129, 130, 131, 133, 137, 138, 142, 143, 145, 148, 156, 157, 169, 171, 175, 179, 185, 186, 187], "arang": [6, 32, 33, 34], "arash": 187, "arch": [11, 13, 23, 24, 37, 39, 40, 42, 44, 45, 186], "architectur": [0, 11, 13, 37, 39, 40, 45, 87, 88, 156, 183, 186], "area": [20, 123, 124, 125, 153], "arerel": 146, "arg": [6, 12, 13, 32, 33, 34, 157, 161], "argmax": [9, 12, 152], "argument": [4, 10, 11, 12, 37, 65, 70, 71, 72, 73, 104, 106, 108, 109, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 158, 186], "around": [28, 37, 128, 186], "arrai": [38, 79, 80, 81, 82, 83, 84], "arxiv": [6, 9, 32, 33, 34, 157, 187], "assess": [11, 124, 125, 128], "associ": [24, 123, 125, 131, 140], "assum": [28, 29], "ast": [93, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "attempt": 156, "attend": 94, "attent": [20, 94, 95, 96], "attn_mask": 94, "attn_output": 94, "attn_output_weight": 94, "attn_weight": 94, "attr": 164, "attribut": [74, 100, 179], "augment": [20, 39, 40, 41, 47, 48, 51, 52, 55, 57, 58, 60, 179, 183], "augrc": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 32, 33, 34], "aupr": [13, 20, 23], "aurc": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 32, 33, 34, 124], "auroc": [13, 20, 23, 153], "author": [4, 74, 183, 187], "auto": [47, 48], "auto_aug": [47, 48], "auto_tutori": [2, 8, 16, 19, 22, 26, 31, 36], "auto_tutorial_sourc": 188, "auto_tutorials_jupyt": 35, "auto_tutorials_python": 35, "autom": 179, "automat": [3, 5, 9, 10, 11, 13, 20, 24, 29, 37, 87, 88, 120, 152, 156, 180, 181, 184, 186], "autonom": [6, 32, 33, 34, 183, 187], "ava": [27, 187], "avail": [14, 17, 24, 37, 93, 128, 165, 179], "averag": [3, 6, 9, 20, 32, 33, 94, 127, 129, 132, 133, 134, 138, 141, 142, 143, 153, 154, 158, 160, 161], "average_attn_weight": 94, "avg_prob": [3, 9], "avoid": [0, 4, 20, 24, 38, 84, 115, 124, 138, 157], "awar": [20, 183], "ax": [6, 17, 23, 24, 27, 32, 33, 34, 86, 123, 124, 125], "axi": [3, 4, 5, 6, 9, 10, 12, 14, 17, 23, 32, 33, 34, 86, 87, 123, 124, 125, 156], "azizpour": [175, 187], "b": [3, 5, 9, 11, 13, 14, 17, 20, 23, 24, 28, 29, 87, 88, 91, 93, 94, 95, 96, 123, 127, 129, 132, 133, 134, 137, 138, 141, 142, 143, 152, 159, 179, 187], "b0": 45, "b1": 45, "b2": 45, "b3": 45, "b4": 45, "b5": 45, "b862013c0dc2b540cf96a123a6766e54": 77, "b_i": 128, "ba": [3, 9, 187], "bachnorm": 161, "back": [11, 13, 14], "backbon": [37, 39, 40, 41, 45, 186], "backward": [14, 95, 96], "bagautdinov": [89, 90, 187], "balaji": 187, "balanc": 126, "bank": [46, 54, 79], "bao": 187, "baqu": [89, 90, 187], "bar": [176, 177, 178], "barh": 23, "basart": [13, 187], "base": [0, 3, 4, 5, 9, 12, 18, 20, 27, 35, 37, 47, 48, 51, 52, 55, 57, 58, 104, 106, 108, 109, 110, 111, 112, 123, 125, 127, 129, 133, 134, 135, 137, 138, 143, 144, 151, 152, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 187], "base_lay": [28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "baselin": [13, 37, 39, 40, 41, 42, 43, 44, 45, 161, 183, 187], "basic_aug": [47, 48, 51, 52, 55, 57, 58], "batch": [1, 2, 3, 6, 9, 11, 13, 14, 27, 32, 33, 34, 35, 37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 88, 89, 90, 91, 93, 94, 95, 96, 103, 105, 107, 108, 111, 113, 123, 127, 129, 132, 133, 134, 137, 138, 141, 142, 143, 144, 150, 153, 154, 155, 156, 159, 163, 175, 179, 180, 181, 182, 188], "batch_first": [94, 95, 96], "batch_idx": [179, 180, 181, 182], "batch_img": [6, 32, 33, 34], "batch_repeat": [39, 41], "batch_siz": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 88, 165, 166, 167, 168, 169, 170, 171, 173, 175, 186], "batch_target": [6, 32, 33, 34], "batchconv2d": 156, "batchensembl": [39, 41, 87, 88, 163], "batchensemblewrapp": 87, "batchlinear": 156, "batchnorm": [4, 39, 161, 175, 179, 180, 181], "batchnorm2d": [4, 39, 175], "battledai": 187, "bauer": 187, "baumgartn": 187, "bayesian": [2, 4, 5, 7, 8, 12, 24, 38, 97, 98, 99, 100, 101, 102, 115, 120, 122, 128, 161, 174, 175, 183, 188], "bayesian_lenet": [3, 9], "bayesian_method": [2, 188], "bcewithlogitsloss": 113, "be_conv2d": 87, "be_linear": 88, "becaus": 84, "been": [13, 157], "befor": [11, 20, 23, 24, 29, 38, 63, 79, 80, 81, 82, 83, 84, 87, 88, 127, 156], "begin": [11, 186], "beginin": 161, "behavior": [11, 57, 58, 59], "being": 156, "belong": 185, "below": [5, 10, 11, 13, 20, 29, 187], "benchmark": [0, 15, 16, 35, 65, 67, 74, 78, 183, 186, 187, 188], "benefit": 186, "bengio": [3, 9, 20, 187], "best": [6, 20, 28, 32, 33, 34, 37, 38, 94], "beta": [108, 109, 114], "better": [6, 20, 24, 28, 29, 37, 127, 160, 186, 187], "between": [5, 20, 65, 67, 78, 87, 88, 89, 91, 114, 124, 125, 127, 140, 142, 147, 149, 150, 151, 157, 160, 161, 170], "bewar": 165, "beyond": [137, 187], "bia": [39, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 176, 178], "bias": 92, "big": [146, 147, 149, 150, 170], "bilinear": [6, 32, 33, 34, 51, 55], "bin": [24, 39, 126, 128, 179, 182, 187], "binari": [20, 39, 40, 41, 46, 49, 50, 53, 54, 79, 80, 81, 82, 83, 94, 113, 126, 127, 128, 136, 137, 153, 154, 179, 182], "bincount": [6, 32, 33, 34], "bird": 14, "birmakatze_s": 17, "bissacco": 187, "bit": [9, 20], "black": 38, "blitz": [3, 9], "bloch": [183, 187], "block": [0, 11, 13, 87, 89, 90, 91, 101, 161], "blue": [23, 27], "blueprint": [3, 5, 6, 9, 10, 28, 29, 32, 33, 34], "blundel": [3, 9, 100, 187], "blur": 11, "bmvc": [183, 187], "bn_updat": 161, "bnn": [3, 9], "bo": 187, "bool": [39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 123, 124, 125, 126, 127, 128, 132, 142, 152, 156, 157, 159, 161, 163, 164, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186], "boolean": 92, "border_collie_blanca_y_negra_hembra_": 17, "boston": [56, 84], "both": [11, 13, 23, 28, 37, 91, 93, 94, 101, 145, 148, 150, 156, 163], "bottleneck": 10, "bottom": [6, 32, 33, 34], "bottou": [3, 9, 20, 187], "bound": [9, 120], "bouniot": 187, "branch": 38, "break": 38, "bridg": 174, "bridge_norm": 174, "brier": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 32, 33, 34, 127, 137], "brier_scor": 127, "brieuc": 187, "bright": [17, 58, 59], "broadcast": 94, "brokenpipeerror": 14, "buc": 187, "buffer": [13, 87, 88, 142], "build": [0, 6, 11, 13, 24, 32, 33, 34, 67, 74, 164, 182], "built": [11, 13, 20, 24, 185], "bulatov": 187, "bungert": 187, "burden": 37, "burg": 20, "bursuc": [183, 187], "c": [3, 5, 6, 9, 11, 14, 20, 24, 32, 33, 34, 47, 48, 51, 55, 65, 67, 74, 78, 125, 127, 129, 131, 132, 133, 134, 137, 138, 140, 141, 142, 143, 152, 166, 167, 179, 185, 186], "c_": [87, 91, 103, 105, 107, 108, 111], "c_i": 128, "cal": [3, 9, 12], "cal_dataset": 24, "calcul": [124, 125, 126, 128, 129, 133, 140, 143, 152], "calibr": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 21, 22, 23, 32, 33, 34, 35, 39, 47, 48, 51, 52, 55, 116, 125, 126, 127, 128, 137, 176, 177, 178, 179, 182, 185, 186, 188], "calibration_dataload": 24, "calibration_error": [126, 128], "calibration_set": 186, "calibrationerror": [24, 126], "call": [4, 5, 9, 11, 20, 24, 37, 87, 88, 161, 169, 171, 185], "callabl": [60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 95, 96], "camvid": 57, "can": [0, 3, 4, 5, 9, 10, 11, 13, 20, 23, 24, 27, 28, 29, 37, 38, 39, 40, 41, 57, 58, 59, 63, 87, 95, 96, 138, 157, 165, 179, 181, 182, 184, 186, 187], "cannot": 63, "capabl": [11, 13], "capac": [91, 93], "capit": 28, "car": 14, "carduelis_tristis_": 17, "carefulli": [63, 175], "carlo": [1, 2, 35, 38, 39, 40, 41, 175, 188], "carsten": 187, "case": [11, 20, 24, 27, 28, 29, 37, 87, 130, 135, 139, 185, 186], "cat": 14, "categor": [12, 185], "categori": [11, 13], "categorical_nl": [129, 143], "categoricalnl": 143, "cauchi": [28, 103, 104], "causal": [95, 96], "cd": 184, "cell": 20, "center": [17, 186], "centercrop": [17, 20], "certain": [20, 94, 126], "chang": [20, 23, 38, 91, 93, 157], "channel": [20, 39, 40, 41, 87, 89, 90, 91, 93, 101, 103, 105, 107], "characterist": 153, "charl": [100, 187], "check": [6, 11, 13, 20, 28, 32, 33, 34, 37, 38, 79, 80, 81, 82, 83, 84, 183, 184, 186], "checkpoint": [11, 13, 37, 157, 164, 187], "chen": [157, 187], "cheng": 187, "chocolatin": [10, 13, 27], "choic": [20, 186], "choos": [37, 67, 74, 184, 186], "chosen": [67, 74, 142, 175], "christian": 187, "christoph": 20, "chuan": 187, "cifar": [13, 14, 21, 22, 24, 35, 37, 47, 48, 65, 66, 67, 68, 69, 188], "cifar10": [37, 48, 186], "cifar100": [37, 47], "cifar100datamodul": 24, "cifar10c": [11, 65], "cifar10datamodul": [11, 13, 23, 37, 186], "cifar_packed_net": 14, "cifarc_subset": [65, 67, 78], "circ": 88, "circular": [91, 101], "ciss": 187, "cite": 187, "cityscap": [37, 58], "ckpt": [13, 20, 23, 37], "ckpt_path": [6, 23, 32, 33, 34, 37, 164], "cl": [3, 9, 12, 20], "clamp": 138, "class": [3, 4, 5, 9, 10, 11, 13, 14, 20, 23, 24, 28, 29, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186], "class_count": [6, 32, 33, 34], "class_weight": [6, 32, 33, 34], "classic": [27, 37, 157, 186], "classif": [3, 4, 5, 6, 8, 9, 14, 23, 24, 29, 32, 33, 34, 37, 39, 40, 41, 46, 49, 50, 53, 54, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 117, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 164, 174, 179, 183, 186, 188], "classifi": [3, 4, 5, 7, 8, 9, 10, 20, 35, 188], "classificationroutin": [3, 4, 5, 9, 10, 11, 12, 13, 20, 23, 37, 120, 186], "classmethod": [86, 87, 88], "clean": 28, "clear": 38, "cli": [179, 181, 182, 183], "cli_main": 37, "clip": 23, "clone": [38, 184], "close": 20, "cnn": 20, "coarse_label": 66, "coat": 187, "code": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 38, 186], "coeffici": 161, "cohes": [11, 13], "coincid": 123, "collect": [157, 179, 180, 181, 182], "color": [6, 23, 32, 33, 34, 85], "color_palett": [6, 32, 33, 34, 85], "colorjitt": [58, 59], "colour": 14, "com": [77, 187], "combin": 118, "come": [11, 13, 38], "command": [37, 184, 186], "commenc": [11, 13], "comment": 38, "commerci": [60, 63, 75], "commit": [38, 184], "common": [17, 65, 67, 74, 78, 124, 172, 183, 187], "commonli": [146, 149], "commun": [11, 13], "compar": [13, 20, 27, 28, 151], "comparison": 144, "compat": [11, 13, 95, 96], "complet": [20, 29], "compli": [38, 63, 91, 93], "compon": [11, 13, 95, 96], "compos": [6, 11, 12, 14, 17, 20, 32, 33, 34, 57, 58, 59, 87], "comprehens": [38, 183], "comput": [0, 3, 5, 9, 11, 13, 20, 28, 74, 76, 90, 93, 94, 115, 116, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 186, 187], "computation": [5, 20, 138], "conan": 187, "concentr": 126, "conceptu": 185, "concern": 84, "concret": [56, 84], "conda": 184, "condit": [6, 11, 32, 33, 34, 38], "conf": 136, "confer": [20, 183], "confid": [6, 12, 20, 23, 32, 33, 34, 115, 124, 128, 131, 133, 134, 136, 140, 176, 177, 178], "confidence_img": [6, 32, 33, 34], "confidence_scor": 23, "config": [24, 37, 186], "configur": [183, 186], "configure_optim": [39, 40, 41, 179, 181, 182], "conflictu": 116, "conform": [21, 22, 35, 141, 188], "conformal_model": 23, "confus": 0, "connect": [87, 90, 93, 101], "connector": 10, "connexion": [89, 91], "consid": [3, 9, 10, 140, 152, 174, 179, 187], "consist": [14, 20, 28, 66, 68, 69, 70, 71, 72, 73, 76, 87, 88, 141, 158], "constant": [0, 121], "constrain": 159, "constraint": [20, 91, 93], "constrast": 20, "construct": 128, "constructor": 159, "consum": 182, "contain": [11, 20, 24, 27, 37, 38, 51, 55, 67, 74, 124, 125, 129, 143, 152, 156, 159, 180, 181, 183, 186], "content": [37, 187], "context": [0, 28, 169, 171], "continu": [6, 34, 38], "contrari": 28, "contrast": [3, 9, 17, 58, 59, 125], "contribut": [29, 152, 183, 184], "contributor": 38, "control": [4, 100, 114], "conv1": [14, 20, 186], "conv1d": [93, 97], "conv2": [14, 20, 186], "conv2d": [14, 20, 87, 89, 91, 98, 156, 163], "conv3d": 99, "conv_bia": [13, 23, 24, 39], "conveni": [11, 13, 37], "convers": 156, "convert": [4, 6, 17, 32, 33, 34, 87, 88, 152, 156, 163, 174, 175], "convert_lay": [156, 163], "convolut": [11, 13, 14, 20, 39, 40, 41, 87, 89, 91, 101, 103, 105, 107, 108, 111, 187], "convolv": [87, 89, 91, 101], "cooper": [24, 187], "core": [10, 29, 159], "corinna": 20, "cornebis": [3, 9, 187], "correct": [20, 28, 125, 128, 131, 140, 152, 156], "correctli": 20, "correspond": [3, 4, 9, 11, 13, 20, 29, 38, 39, 40, 41, 87, 88, 94, 114, 123, 124, 125, 129, 130, 131, 143, 151, 179, 180, 181, 182, 185, 186], "corrupt": [11, 15, 16, 35, 47, 48, 65, 67, 74, 78, 187, 188], "cort": 20, "cosin": 20, "cosineannealinglr": 20, "cost": 20, "cottontail_rabbit": 17, "couceiro": 187, "could": [13, 20, 24, 28, 29, 138], "count": [6, 32, 33, 34, 173], "counter": 175, "counterpart": [156, 163], "cov": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 32, 33, 34, 124, 125], "cov_threshold": 140, "covari": 161, "covatxrisk": 130, "cover": [28, 186], "coverag": [20, 38, 124, 125, 130, 131, 132, 139, 140, 141], "coverage_at_risk": 131, "coverager": 23, "cpu": [6, 13, 20, 23, 32, 33, 34, 157, 164, 175, 176, 177, 178, 183, 184], "creat": [5, 6, 13, 17, 28, 29, 32, 33, 34, 37, 38, 79, 80, 81, 82, 83, 87, 88, 161, 184, 186], "creativ": 74, "criteria": [13, 172], "criterion": [11, 14, 39, 40, 41, 166, 167, 168, 169, 170, 171, 172, 173, 179, 182], "critic": [147, 187], "crop": [20, 51, 55, 57, 58, 59], "crop_siz": [57, 58, 59], "cross": [11, 14, 20, 24, 113], "crossentropyloss": [3, 4, 5, 6, 9, 10, 11, 13, 14, 20, 29, 32, 33, 34, 37, 186], "crucial": [0, 11, 13, 128], "csv": [39, 40, 41, 179, 180, 181, 182], "csv_filenam": [179, 180, 181, 182], "cubic": 27, "cuda": [11, 13, 23, 175, 176, 177, 178], "curat": [76, 187], "current": [24, 38, 127, 134, 138, 157, 158, 161, 179, 180, 181, 185], "curv": [20, 123, 124, 125, 153], "custom": [13, 47, 48, 51, 52, 55, 57, 58, 59, 135, 186], "cutmix": 179, "cutmix_alpha": [39, 40, 41], "cutout": [47, 48, 52], "cvpr": [76, 126, 187], "cvpr2023": 187, "cvprw": 187, "cycl": 161, "cycle_length": [157, 160, 161], "cycle_start": [157, 160, 161], "d": [3, 9, 13, 17, 114, 118, 133, 187], "d1": 151, "d2": 151, "d3": 151, "d9": 17, "d_model": [95, 96], "daan": 187, "dai": 187, "dan": [11, 17, 65, 67, 78, 187], "daniel": [183, 187], "daniela": [27, 187], "data": [3, 4, 5, 6, 9, 10, 12, 20, 23, 24, 29, 32, 33, 34, 37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 87, 88, 89, 90, 100, 101, 102, 114, 144, 156, 176, 177, 178, 179, 180, 181, 182, 183, 186], "data_augment": [16, 188], "data_connector": 10, "databas": 187, "datait": [3, 4, 5, 12, 14], "dataload": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 28, 29, 32, 33, 34, 47, 48, 51, 52, 55, 57, 58, 59, 161, 175, 176, 177, 178, 182, 186], "dataloader_idx": [179, 180, 181, 182], "datamodul": [3, 4, 5, 9, 12, 20, 23, 27, 28, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 183, 186], "datapoint": 11, "dataset": [3, 4, 5, 6, 9, 10, 11, 12, 13, 24, 27, 28, 29, 30, 31, 35, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 126, 131, 142, 149, 175, 179, 183, 186, 188], "dataset_nam": [28, 29, 56, 84], "datatyp": [103, 105, 107], "dauphin": 187, "david": [183, 187], "dawn": 187, "daxberg": [174, 187], "de": 20, "decai": [6, 12, 20, 32, 33, 34], "decid": 20, "decis": 128, "declar": 159, "decloss": 12, "decod": [85, 86, 95], "decode_target": [85, 86], "decreas": 27, "decrib": 6, "dedic": 29, "deep": [3, 5, 7, 8, 9, 11, 13, 25, 26, 30, 31, 35, 38, 117, 118, 125, 126, 150, 161, 164, 174, 175, 186, 188], "deep_ensembl": [20, 32], "deer": 14, "def": [3, 4, 5, 6, 9, 10, 12, 14, 17, 20, 23, 27, 28, 32, 33, 34, 37, 186], "default": [3, 6, 12, 32, 33, 34, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 113, 115, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 141, 142, 143, 150, 151, 152, 156, 157, 159, 161, 163, 164, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182], "defaut": [145, 148], "defin": [0, 3, 4, 6, 9, 10, 12, 20, 24, 27, 28, 32, 33, 34, 129, 131, 132, 142, 143, 164, 172, 179, 181, 182], "defocusblur": 17, "degrad": 11, "degre": [12, 111, 112], "demonstr": [6, 12, 13, 27, 32, 33, 34], "deng": 187, "denomin": 92, "dens": [121, 187], "densiti": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "depend": [4, 13, 28, 37, 145, 148, 159, 184, 185, 187], "depth": [6, 32, 33, 34, 42, 63, 64, 146, 147, 149, 150], "derloss": 27, "desai": 187, "descent": 20, "describ": [6, 32, 33, 34, 87, 121, 129, 143, 186], "design": [0, 6, 32, 33, 34, 126, 150], "desir": [11, 57, 58, 59, 89, 90, 186], "destin": 161, "detail": [6, 11, 24, 32, 33, 34, 37, 87, 128, 174, 179, 181, 182, 183, 185], "detect": [3, 6, 7, 8, 9, 11, 14, 20, 23, 32, 33, 34, 35, 38, 39, 40, 41, 76, 121, 136, 155, 172, 179, 182, 186, 187, 188], "determin": [3, 4, 9, 39, 40, 41, 45, 127, 129, 133, 134, 138, 140, 141, 142, 143, 151], "dev": [3, 9, 38, 184], "develop": [20, 184], "deviat": [28, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 146], "devic": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 27, 28, 29, 32, 33, 34, 37, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 157, 161, 175, 176, 177, 178], "df": [111, 112], "diag_covari": 161, "diagon": [20, 161], "diagram": 24, "dict": [39, 40, 41, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 161, 179, 180, 181, 182, 186], "dict_kwarg": 37, "dictionari": 161, "dictionnari": [20, 28], "did": 14, "dietterich": [11, 17, 65, 67, 78, 187], "differ": [0, 4, 6, 11, 17, 20, 23, 37, 79, 80, 81, 82, 83, 84, 94, 127, 149, 150, 157, 161, 186], "digamma": 117, "digit": [3, 4, 9, 12, 20, 187], "dilat": [87, 89, 91, 97, 98, 99, 103, 105, 107], "dim": [3, 4, 5, 6, 9, 10, 12, 14, 32, 33, 34, 94], "dim_feedforward": [95, 96], "dimens": [3, 4, 6, 9, 28, 32, 33, 34, 88, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 127, 129, 133, 134, 138, 141, 142, 143, 152, 168], "dimension": [180, 181], "dimitrij": 187, "dirac": [3, 9], "directli": [20, 24, 37, 94, 176, 177, 178, 184, 186], "directori": [37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85], "dirichlet": [12, 117], "disabl": [28, 159], "disagr": [5, 142], "discard": 87, "discov": [10, 29], "discrimin": 125, "displai": [14, 37], "dist": [27, 119, 143], "dist_arg": 43, "dist_estim": [28, 180, 181], "dist_famili": [27, 28, 29, 42, 43, 120, 180, 181], "dist_lay": 28, "dist_param": 27, "dist_sim": [39, 40, 41], "distanc": 179, "distmlp": 28, "distribut": [3, 5, 6, 7, 8, 9, 12, 20, 23, 24, 27, 29, 32, 33, 34, 35, 38, 47, 48, 51, 52, 55, 76, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 118, 119, 120, 126, 128, 136, 143, 157, 167, 172, 179, 180, 181, 182, 185, 186, 187, 188], "distributionnllloss": [28, 29], "dive": 14, "diverg": [12, 120, 122, 138], "divers": [3, 6, 9, 20, 32, 33, 34, 131], "divid": [113, 126, 128], "divis": [87, 88, 91, 93], "dm": [24, 186], "dmitri": 187, "dmitrii": 187, "do": [3, 5, 6, 13, 14, 20, 24, 27, 28, 29, 37, 38, 94, 164, 179, 181, 182, 186], "doc": [37, 38, 184], "docstr": 38, "document": [3, 9, 20, 183, 184, 187], "doe": [10, 38, 74, 113, 132, 152], "doesn": 85, "dog": 14, "dokania": 187, "doll\u00e1r": [121, 187], "don": [4, 5, 20, 35, 156], "done": [11, 13, 24, 95, 96], "dong": 187, "dorundo": 187, "dot": [166, 167, 169, 171], "dota": 80, "dota2": 49, "download": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 23, 24, 27, 28, 29, 32, 33, 34, 35, 52, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85], "download_h": 68, "download_img": 17, "downstream": 128, "draw_segmentation_mask": [6, 32, 33, 34], "drawn": 24, "drive": [6, 32, 33, 34, 183, 187], "drop": 38, "dropout": [1, 2, 35, 38, 39, 40, 41, 94, 95, 96, 159, 165, 188], "dropout_r": [5, 6, 10, 39, 40, 41, 43], "dtd": [51, 55], "dtype": [6, 32, 33, 34, 57, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107], "dubuisson": [183, 187], "due": 138, "duplic": 156, "durasov": [89, 90, 187], "durat": [20, 27], "dure": [3, 6, 9, 12, 20, 27, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 120, 126, 128, 156, 158, 159, 163, 164, 179, 186], "dusenberri": 187, "dustin": 187, "e": [4, 37, 38, 57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 94, 95, 96, 123, 131, 135, 136, 166, 184, 186, 187], "e_k": 94, "e_q": 94, "e_v": 94, "each": [6, 11, 13, 20, 23, 27, 32, 33, 34, 37, 38, 39, 40, 41, 87, 88, 89, 91, 93, 94, 113, 121, 124, 125, 127, 129, 132, 143, 156, 157, 159, 161, 166, 167, 168, 169, 170, 171, 173], "earli": 38, "eas": [20, 37], "easi": [0, 186, 187], "easili": [0, 6, 10, 24, 28, 29, 32, 33, 34, 186], "ec": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 32, 33, 34, 128], "eccv": 123, "edg": [57, 58, 59], "edgecolor": 27, "edit": [38, 184], "effect": [4, 11, 17, 57, 58, 59, 94, 149], "effici": [5, 18, 19, 24, 35, 87, 88, 141, 183, 186, 187, 188], "effortless": [174, 187], "egal": 20, "einop": [5, 9, 14, 186], "einsum": 93, "either": [20, 37, 39, 40, 41, 59, 74, 126, 128, 157, 159, 184, 186], "el": [125, 187], "elast": 17, "elbo": [3, 9, 120], "elboloss": [3, 9], "element": [24, 87, 89, 91, 94, 113, 144], "elif": 17, "elimin": 187, "elisa": 187, "ell": [129, 143], "ell_i": 129, "els": 27, "emanuel": [183, 187], "embed": 94, "embed_dim": [92, 94], "embeddingd": 94, "emili": 187, "emoji": 38, "empir": [132, 187], "emselog": 149, "enabl": [4, 5, 6, 11, 13, 37], "enable_model_summari": 28, "enable_progress_bar": [3, 4, 5, 6, 9, 10, 12, 27, 28, 29, 32, 33, 34], "encod": [63, 85, 86, 95, 96, 101, 102, 127, 183, 187], "encode_target": [63, 85, 86], "encompass": 28, "end": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 156, 157, 161], "energi": [56, 84, 166], "enet": [6, 32, 33, 34], "enet_weigh": [6, 32, 33, 34], "enough": [20, 165], "ens_disagr": [3, 9, 20], "ens_entropi": [3, 9, 20], "ens_mi": [3, 9, 20], "ens_perf": 20, "ens_routin": [20, 32], "ensembl": [3, 4, 5, 7, 8, 9, 10, 19, 29, 30, 31, 38, 39, 40, 41, 45, 87, 88, 89, 91, 92, 93, 94, 95, 96, 133, 138, 156, 157, 158, 163, 164, 170, 172, 173, 179, 180, 181, 183, 186, 188], "ensemble_method": [19, 188], "ensemble_onli": [170, 172, 173], "ensemble_s": [170, 173], "ensta": [20, 184], "ensur": [20, 37, 38, 87, 88, 126, 127, 129, 143, 156, 179, 186], "entri": [85, 94, 127], "entropi": [3, 4, 5, 9, 10, 11, 12, 13, 14, 20, 23, 24, 113, 167], "enumer": [14, 17], "environ": [11, 13, 38, 184], "enzo": [183, 187], "ep": [92, 95, 96, 115, 176, 177, 178], "epistem": [27, 116, 138, 187], "epoch": [6, 9, 11, 12, 13, 14, 20, 27, 32, 33, 34, 37, 157, 158, 160, 161], "equal": [87, 114, 156, 185], "equival": [20, 138], "erik": 187, "erron": 4, "error": [12, 20, 24, 28, 38, 114, 123, 125, 126, 128, 131, 140, 144, 145, 146, 147, 148, 149, 150, 156, 165, 179, 182], "eschenhagen": 187, "especi": 128, "estim": [1, 3, 4, 5, 6, 9, 12, 18, 20, 27, 28, 29, 32, 33, 34, 35, 37, 39, 40, 41, 45, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 114, 123, 125, 127, 133, 134, 137, 138, 142, 146, 147, 149, 150, 156, 159, 161, 164, 165, 167, 170, 173, 174, 175, 179, 180, 181, 183, 185, 186, 187], "et": [76, 100, 116, 124, 126, 128, 174, 186, 187], "etc": [6, 10, 11, 20, 29, 32, 33, 34, 38, 186], "ethic": 84, "eval": [3, 4, 5, 6, 9, 10, 12, 23, 32, 33, 34, 161, 175], "eval_after_fit": 37, "eval_batch_s": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_forward": [157, 161], "eval_grouping_loss": [20, 39, 40, 41, 179, 186], "eval_ood": [3, 9, 11, 13, 20, 23, 24, 39, 40, 41, 47, 48, 51, 52, 55, 59, 179, 182, 186], "eval_s": [57, 58, 59], "eval_shift": [9, 11, 13, 20, 39, 40, 41, 47, 48, 51, 52, 55, 179, 180, 181, 182], "evalu": [0, 4, 5, 7, 8, 14, 20, 23, 24, 27, 28, 29, 35, 37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 123, 124, 125, 127, 128, 129, 140, 143, 144, 147, 150, 151, 156, 157, 158, 159, 163, 179, 180, 181, 182, 186, 187, 188], "evaluation_forward": [180, 181], "evan": 187, "event": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "event_dim": [28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "eventu": [37, 180, 181], "everi": [14, 160, 161], "evid": [9, 12, 120], "evidenti": [7, 8, 25, 26, 35, 117, 118, 188], "evolv": [20, 38], "exampl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 87, 88, 125, 126, 127, 128, 129, 131, 133, 134, 136, 140, 142, 143, 144, 146, 147, 149, 150, 151, 156, 182, 184, 187, 188], "except": [38, 159], "execut": [2, 6, 8, 16, 19, 22, 26, 31, 36, 37, 95, 96, 188], "exhaust": 187, "exist": [66, 68, 69, 85, 87, 88], "exp": 166, "expans": [39, 40, 41], "expect": [4, 20, 24, 39, 40, 41, 95, 96, 128, 166, 167, 168, 169, 170, 171, 172, 173], "experi": [27, 183, 184, 186], "explain": 38, "explan": [91, 93, 186], "explicitli": 38, "explor": [11, 23, 37, 183], "exponenti": [158, 185], "express": 20, "extens": 24, "extract": [24, 79, 80, 84], "f": [3, 4, 5, 6, 9, 10, 12, 14, 17, 20, 23, 24, 28, 32, 33, 34, 77, 95, 96, 126, 128, 131, 136, 137, 140, 144, 146, 147, 149, 150, 151, 186, 187], "f8": 17, "face": [11, 20, 24, 38, 187], "facecolor": 27, "fact": 20, "factor": [39, 40, 41, 101, 102, 113, 145, 148], "falkner": 187, "fall": [128, 151], "fals": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 39, 40, 41, 44, 47, 48, 51, 52, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 91, 93, 94, 95, 96, 97, 98, 99, 100, 127, 128, 135, 136, 147, 148, 149, 150, 152, 156, 157, 161, 163, 164, 165, 176, 177, 178, 179, 180, 181, 182, 186], "famili": [28, 120, 180, 181], "familiar": 14, "farina": 187, "fashion": 52, "fashionmnist": [20, 52], "fast_dev_run": 37, "faster": 152, "fc1": [14, 20, 28, 186], "fc2": [14, 20, 28, 186], "fc3": [14, 20, 186], "featur": [6, 28, 29, 32, 33, 34, 88, 90, 92, 93, 94, 95, 96, 100, 102, 137, 179], "featureless": 38, "feedforward": [95, 96], "feel": [20, 38, 186], "fei": 187, "fellaji": [116, 187], "feng": 187, "few": 20, "field": 38, "fig": [6, 24, 27, 32, 33, 34], "figsiz": [6, 14, 17, 23, 32, 33, 34], "figur": [6, 14, 24, 27, 32, 33, 34, 123, 124, 125, 182], "file": [2, 3, 8, 9, 16, 19, 22, 26, 31, 36, 39, 40, 41, 51, 55, 66, 68, 69, 179, 180, 181, 182, 183, 184, 186, 188], "file_arg": [66, 69], "filenam": [6, 13, 20, 23, 34, 37], "fill": [120, 157], "fill_between": 27, "filliat": 183, "filter": 187, "filterwarn": 28, "final": [3, 9, 24, 27, 28, 127, 129, 137, 157, 185, 186], "find": [5, 10, 20, 29, 35, 132, 152, 179, 181, 182, 186, 187], "fine": 86, "fine_label": 66, "finish": [14, 27, 38], "first": [4, 5, 6, 9, 10, 11, 13, 14, 17, 20, 24, 28, 29, 32, 33, 34, 38, 87, 91, 93, 94, 95, 96, 100, 156, 161, 180], "fit": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 27, 28, 29, 32, 33, 34, 37, 52, 164, 175, 176, 177, 178, 179, 186], "fit_loop": 27, "fix": [20, 28, 111, 112, 117, 130, 135, 139, 176, 177, 178], "fixed_df": [111, 112], "flag": [10, 11, 13, 24, 29, 38, 94, 175], "flake8": 38, "flat_label": [6, 32, 33, 34], "flatten": [6, 14, 20, 32, 33, 34, 186], "flaw": [124, 187], "float": [20, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 79, 80, 81, 82, 83, 89, 90, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 125, 130, 131, 136, 140, 152, 158, 161, 176, 177, 178, 182], "float32": [6, 32, 33, 34, 57, 58, 59], "florenc": 187, "flow": 123, "focal": 121, "focus": [21, 35], "fog": 17, "folder": [3, 9, 38, 183, 184, 186], "follow": [3, 4, 5, 6, 9, 10, 12, 17, 20, 27, 28, 29, 32, 33, 34, 37, 38, 57, 58, 59, 66, 69, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 132, 145, 146, 147, 148, 149, 152, 184, 185, 186, 187], "fontsiz": 17, "footprint": [13, 142, 165], "foral": [129, 143], "forc": 157, "forecast": [94, 95, 96], "forget": [4, 5, 13], "fork": 38, "formal": [169, 171], "format": [37, 38, 156, 179, 180, 181, 182], "format_batch_fn": [20, 32, 33, 156, 179, 180, 181, 182, 186], "formul": [28, 94, 95, 96], "fort": 187, "forward": [5, 6, 14, 20, 28, 32, 33, 34, 87, 88, 94, 95, 96, 115, 116, 119, 120, 122, 124, 125, 145, 146, 147, 148, 149, 152, 156, 157, 159, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 186], "found": [64, 156], "foundat": 20, "four": [87, 89, 91], "fox": 187, "fpr": 136, "fpr95": [13, 20, 23, 155], "fprx": 135, "frac": [87, 88, 91, 93, 127, 129, 143, 144, 145, 146, 147, 148, 149, 150, 170, 173], "fraction": [79, 80, 81, 82, 83, 128, 140], "framework": [0, 4], "francesco": 187, "franchi": [20, 183, 187], "frank": 187, "free": [20, 186, 187], "freedom": [111, 112], "freez": 100, "freq_class": [6, 32, 33, 34], "frequent": [142, 173], "fritz": 187, "frog": 14, "from": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 22, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 57, 58, 59, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 101, 102, 114, 120, 122, 125, 126, 127, 128, 129, 131, 133, 134, 136, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 161, 164, 170, 173, 174, 179, 180, 182, 183, 186, 187, 188], "from_conv2d": 87, "from_dataset": 27, "from_linear": 88, "frost": 17, "frozen": [97, 98, 99, 100], "frustratingli": 187, "fr\u00e9d\u00e9ric": 187, "fua": [89, 90, 187], "full": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 59, 63, 93], "fulli": [6, 34, 90, 93], "function": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 24, 27, 28, 32, 33, 34, 37, 38, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 95, 96, 120, 128, 159, 164, 166, 174, 179, 180, 181, 182, 185, 186, 187], "functionn": [15, 35], "functool": 3, "further": 23, "g": [24, 37, 38, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 114, 135, 136, 185], "gabriel": 115, "gal": 187, "galleri": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 188], "game": [49, 80], "gamma": [6, 14, 27, 33, 34, 39, 40, 41, 43, 91, 93, 94, 95, 96, 101, 108, 109, 118, 121, 186], "gang": 187, "gao": 187, "garipov": 187, "garranos_fight": 17, "gather": [67, 74, 120, 122], "gaussian": [20, 27, 98, 99, 161], "gaussianblur": 17, "gaussiannois": 17, "ga\u00ebl": 187, "gca": 27, "geifman": [125, 187], "gener": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 38, 124, 130, 135, 138, 139, 160], "geoff": 187, "geoffrei": [183, 187], "georg": 187, "get": [5, 11, 14, 24, 28, 29, 38, 47, 48, 51, 52, 55, 120, 180, 181, 186, 187], "get_dist_class": 27, "get_dist_linear_lay": 28, "get_imag": 17, "getlogg": 28, "ghahramani": 187, "ghassen": 187, "gianni": [20, 183, 187], "gilmer": [74, 187], "gimpel": 13, "giovanni": 187, "girshick": [121, 187], "gist": 77, "git": 184, "github": [63, 77, 186], "given": [17, 20, 28, 90, 93, 94, 113, 119, 120, 130, 131, 140, 145, 148, 158, 170, 173, 179, 185], "gjsd": 138, "glassblur": 17, "glest": 20, "glm": 174, "go": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 23, 24, 27, 28, 29, 32, 33, 34, 186], "good": [4, 14, 28, 185], "gordon": 187, "goyal": [121, 187], "gpu": [3, 4, 5, 6, 9, 10, 12, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 46, 49, 50, 53, 54, 56, 164, 183, 184, 186], "gradient": [3, 9, 14, 20, 157, 158], "grayscal": 20, "greater": [149, 161, 166, 167, 168, 169, 171, 173], "gregori": 187, "grid": 27, "griffith": 187, "ground": [3, 4, 9, 10, 12, 20, 27, 124, 125, 127, 128, 129, 131, 136, 137, 140, 143, 145, 146, 147, 148, 149, 150], "ground_truth": 140, "groundtruth": 14, "group": [38, 39, 40, 41, 57, 85, 87, 88, 89, 90, 91, 93, 97, 98, 99, 101, 103, 105, 107, 137, 179, 186], "group_class": [57, 85], "guestrin": 187, "guez": 187, "guid": [183, 186], "guidanc": [146, 147, 149, 150], "guidelin": 183, "guo": [24, 185, 187], "h": [57, 58, 59, 76, 167, 170, 175, 186], "h_": [87, 88, 91, 93, 104, 106, 109, 110, 112], "ha": [11, 24, 57, 58, 59, 92, 94, 113, 124, 125], "haffner": [3, 9, 20, 187], "haicon24": 20, "hand": [3, 9], "handl": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 24, 29, 32, 33, 34, 87, 88, 179, 180, 181, 186], "handwritten": 20, "hao": 187, "haoqi": 187, "happen": [24, 156], "hardwar": [6, 10, 29, 32, 33, 34], "harri": 187, "hassan": 187, "hat": [144, 145, 146, 147, 148, 149, 150], "hauskrecht": [24, 187], "havasi": 187, "have": [3, 4, 5, 6, 9, 10, 12, 13, 20, 27, 29, 35, 37, 38, 94, 156, 157, 175, 183, 184, 185, 186], "he": [121, 187], "head": [94, 95, 96], "heavili": [14, 87, 88], "height": [57, 58, 59, 91], "hein": 187, "helmholtz": 20, "help": [20, 37, 38], "henc": [11, 20, 27], "hendryck": [11, 13, 17, 65, 67, 78, 136, 187], "heng": 187, "hennig": 187, "here": [0, 3, 4, 5, 6, 9, 10, 13, 14, 20, 24, 28, 29, 32, 33, 34, 37, 87, 88, 128, 179, 181, 182, 186], "hesit": [35, 186], "hessian": 174, "hessian_struct": 174, "heteroscedast": [28, 114, 187], "hf_hub_download": [6, 13, 20, 23, 34], "hidden": [27, 101, 102], "hidden_dim": [27, 29, 43], "hidden_s": [101, 102], "hierarch": [94, 95, 96, 187], "high": [3, 9, 20, 114], "higher": [20, 123, 133, 134, 138, 142, 166, 167, 170, 173], "highest": [4, 152, 168, 169, 171], "highlight": 4, "hint": [95, 96], "hoc": [4, 47, 48, 51, 52, 55, 183], "hold": 24, "home": [10, 13, 27], "hongyi": 187, "hook": [38, 184], "hopcroft": 187, "horizontalalign": 17, "hors": 14, "hossein": 187, "host": 38, "hot": 127, "hous": [56, 84, 183], "how": [6, 11, 13, 14, 20, 23, 24, 28, 29, 32, 33, 34, 37, 46, 49, 50, 53, 54, 56, 123, 127, 128, 129, 133, 134, 138, 141, 142, 143, 174, 186], "howev": [20, 24, 28, 29, 37, 38, 91, 93, 185], "html": 38, "htru2": 50, "http": [6, 9, 17, 20, 32, 33, 34, 63, 77, 187], "huang": 187, "hub": 20, "hug": [20, 24, 38], "huggingfac": 20, "huggingface_hub": [6, 13, 23, 34], "hugh": [157, 187], "human": 187, "hutter": 187, "hyper": [6, 32, 33, 34], "hyperparamet": [3, 9, 12, 28, 37, 179, 180, 181], "hypothes": 123, "i": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 38, 39, 40, 41, 47, 48, 51, 52, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 93, 94, 95, 96, 101, 102, 103, 105, 107, 108, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186], "iacca": 187, "iccv": 187, "iclr": [3, 9, 13, 17, 20, 65, 67, 78, 137, 183, 186, 187], "icml": [3, 5, 9, 13, 24, 100, 175, 176, 177, 178, 185, 187], "icml2015": [3, 9], "icmlw": [74, 187], "id": [51, 55, 63, 136, 179, 180], "idea": [20, 185, 186], "ideal": [3, 9, 20], "identifi": 20, "ieee": [3, 9, 20, 183, 187], "ignor": [6, 28, 32, 33, 34, 94, 126, 128, 152], "ignore_index": [6, 32, 33, 34, 126, 128, 152, 153, 154], "iid": 13, "ijcv": 187, "illustr": [14, 15, 35], "im": [6, 32, 33, 34], "ima": 145, "imag": [3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 20, 23, 32, 33, 34, 35, 47, 48, 51, 52, 55, 57, 58, 59, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 85, 86, 87, 89, 91, 150, 179, 180, 181, 182, 184, 187, 188], "image_id": [4, 5, 10], "imagenet": [39, 40, 41, 51, 55], "imagenetc": 51, "imagenetvari": [70, 71, 72, 73], "images_d": 17, "imbal": 132, "img": [3, 4, 5, 6, 9, 10, 12, 14, 23, 32, 33, 34], "img_pil": [6, 32, 33, 34], "img_seg": [6, 32, 33, 34], "immer": 187, "impact": [17, 124, 125, 175], "implement": [3, 4, 5, 9, 11, 12, 13, 27, 29, 37, 38, 87, 88, 93, 113, 138, 157, 172, 182, 187], "import": [3, 4, 5, 6, 9, 10, 12, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 38, 57, 58, 59, 125, 126, 127, 128, 129, 131, 133, 134, 136, 140, 142, 143, 144, 146, 147, 149, 150, 151, 186], "improv": [10, 18, 19, 21, 22, 35, 136, 185, 188], "impulsenois": 17, "ims": 148, "imshow": [3, 4, 5, 6, 9, 10, 12, 14, 17, 23, 32, 33, 34], "in_channel": [4, 5, 6, 10, 11, 12, 13, 20, 23, 24, 32, 33, 34, 37, 39, 40, 41, 87, 89, 91, 97, 98, 99, 101, 103, 105, 107, 108, 111, 186], "in_featur": [27, 28, 29, 43, 88, 90, 93, 100, 102, 104, 106, 109, 110, 112, 156], "inaturalist": 51, "incept": 187, "includ": [3, 6, 9, 11, 13, 20, 32, 33, 34, 38, 39, 40, 41, 70, 71, 72, 73, 95, 96, 104, 106, 109, 110, 112, 157, 176, 177, 178, 179, 184, 185], "incom": [87, 88], "incorrect": [3, 9, 20, 87, 88, 95, 96, 125, 131, 140], "increas": [10, 20, 27, 38, 91, 93, 165], "independ": [20, 187], "index": [6, 17, 32, 33, 34, 86, 126, 128, 182, 183, 185], "indic": [4, 20, 28, 39, 40, 41, 94, 127, 142, 152, 166, 167, 168, 169, 170, 171, 173, 179, 180, 181, 182], "inf": 12, "infer": [3, 4, 9, 20, 59, 164], "info": 152, "inform": [3, 5, 9, 13, 20, 29, 60, 75, 138, 170], "inherit": [0, 37], "init_b": [176, 178], "init_v": 177, "init_w": [176, 178], "initi": [20, 24, 57, 58, 59, 70, 71, 72, 73, 87, 88, 92, 100, 136, 140, 144, 146, 147, 149, 150, 151, 156, 159, 161, 176, 177, 178, 186], "initialize_stat": 161, "inject": [57, 58, 59], "inner": [158, 179], "inner_loss": [3, 9, 120], "inplac": 11, "input": [6, 14, 20, 23, 24, 28, 29, 32, 33, 34, 39, 40, 41, 56, 57, 58, 59, 60, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 119, 120, 123, 124, 125, 126, 127, 128, 129, 133, 134, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 152, 156, 157, 159, 163, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 185], "input_shap": 56, "input_typ": [166, 167, 168, 169, 170, 171, 172, 173], "insight": 35, "inspir": [14, 38, 77, 87, 88, 121], "instabl": [115, 138], "instanc": [29, 37, 86], "instanci": 37, "instanti": [3, 5, 9, 131], "instead": [29, 38, 57, 58, 59, 63], "insur": 186, "int": [6, 12, 17, 20, 28, 32, 33, 34, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 124, 125, 126, 127, 128, 132, 135, 136, 152, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 186], "int64": [6, 32, 33, 34, 57, 58, 59], "integ": [128, 129, 132, 143, 152], "integr": [11, 13, 38], "intellig": [3, 9], "intend": 38, "intent": [53, 82], "interest": [20, 28, 37, 38, 186], "interfac": [20, 172], "intermedi": [95, 96], "intern": [20, 76], "internet": [63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85], "interpol": [51, 55], "interpret": [11, 27, 57, 58, 59, 138], "intersect": 152, "interv": [6, 27, 32, 33, 34], "introduc": [12, 20, 27, 87, 88], "introduct": [27, 183], "introductori": 12, "intuit": [3, 9], "invari": 150, "invers": [27, 108, 109, 118, 145, 148, 151], "investig": 74, "involv": [12, 27], "io": 63, "ioff": 187, "iou": 152, "ipynb": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34], "is_caus": [94, 96], "is_ensembl": [3, 5, 9, 10, 20, 29, 179, 180, 181], "isabel": [183, 187], "isort": 38, "issu": [35, 38, 74, 186], "item": [4, 5, 10, 14, 20, 131, 136, 140, 144, 146, 147, 149, 150, 151], "iter": [3, 4, 5, 6, 9, 10, 12, 14, 23, 32, 33, 34, 176, 177, 178], "its": [11, 13, 14, 27, 28, 85, 87, 88, 91, 93, 124, 125, 151, 157, 159, 185, 186], "itself": 159, "ivan": 187, "izmailov": 187, "j": [3, 4, 5, 9, 10, 12, 13, 14, 17, 20, 23, 187], "jacob": 187, "jaeger": 187, "jasper": 187, "jean": [183, 187], "jenatton": 187, "jensen": 138, "jeremi": 187, "jeremia": 187, "jeremiah": 187, "jerfel": 187, "jia": 187, "jiaheng": 187, "jian": 187, "jimmi": 187, "john": 187, "join": [3, 4, 5, 9, 10, 12, 14], "jonathon": 187, "jordi": 187, "joshua": 187, "jost": 187, "journal": [76, 183], "jpegcompress": 17, "jpg": 17, "julien": 187, "jupyt": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35], "just": [3, 6, 9, 13, 20, 24, 29, 32, 33, 34, 186], "justin": [74, 187], "k": [3, 9, 13, 20, 24, 27, 87, 88, 121, 170, 173, 175, 185, 187], "kadavath": 187, "kai": 187, "kaim": 187, "kamali": 187, "kandemir": [12, 117, 187], "kaplan": [12, 117, 187], "karen": 187, "kavukcuoglu": [3, 9, 187], "kazmierczak": 183, "kdim": 94, "keep": 28, "keep_var": 161, "keepdim": 12, "kei": [13, 14, 24, 65, 67, 74, 78, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "kera": 20, "kernel": [87, 89, 91, 101, 103, 105, 107, 179, 187], "kernel_s": [87, 89, 91, 97, 98, 99, 101, 103, 105, 107], "kernel_tau_max": [39, 40, 41], "kernel_tau_std": [39, 40, 41], "keuper": 187, "kevin": 187, "key_padding_mask": 94, "keyword": [65, 70, 71, 72, 73, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155], "kilian": 187, "kin8nm": [28, 56, 84], "kingma": [3, 9], "kl": [12, 120, 122], "kl_weight": [3, 9, 120], "klau": 187, "klein": 187, "km": [145, 148], "know": [37, 38], "known": [11, 13, 185], "komodaki": 187, "korai": 187, "krasin": 187, "krishnan": 187, "kristiadi": 187, "krizhevski": 187, "kron": 174, "kuznetsova": [76, 187], "kwarg": [13, 65, 70, 71, 72, 73, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "kwon": 13, "l": [3, 9, 20, 94, 95, 96, 117, 187], "l1": [126, 128], "l2": [126, 128], "label": [3, 4, 5, 6, 9, 10, 12, 14, 20, 21, 22, 23, 27, 32, 33, 34, 35, 60, 66, 67, 69, 74, 113, 124, 125, 126, 127, 129, 131, 132, 135, 136, 137, 140, 142, 143, 150, 152, 155, 176, 177, 178, 179, 188], "label_smooth": 113, "lafag": [183, 186, 187], "lakshminarayanan": 187, "lambda": [108, 109, 151], "lanc": [12, 187], "languag": 187, "lanq": 187, "laplac": [28, 29, 105, 106, 174], "larg": [13, 20, 37, 75, 142, 164, 187], "larger": [4, 20, 132], "last": [6, 11, 14, 20, 37, 39, 40, 41, 91, 93, 94, 95, 96, 104, 106, 109, 110, 112, 159, 165, 185, 186], "last_lay": [5, 6, 159, 165, 174], "last_layer_dropout": [39, 40, 41], "lastli": 159, "latent": [101, 102, 183, 187], "later": [6, 20, 29, 123, 125, 131, 140, 183, 184], "latest": 184, "latter": 184, "laurent": [20, 183, 186, 187], "layer": [4, 5, 6, 12, 14, 20, 27, 29, 39, 40, 41, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 156, 159, 163, 165, 175, 183, 185], "layer_arg": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "layer_norm_ep": [95, 96], "layernorm": [92, 95, 96], "le": 187, "lead": [13, 87, 88, 142, 160, 187], "learn": [3, 5, 6, 9, 11, 12, 13, 20, 27, 28, 32, 33, 34, 37, 38, 87, 88, 95, 96, 111, 112, 117, 126, 161, 174, 176, 177, 178, 187], "learnabl": [87, 88, 89, 90, 91, 92, 93, 101, 102], "learning_r": [6, 32, 33, 34], "learnt": 29, "lebel": 187, "lectur": 20, "lecun": [3, 9, 20, 187], "lee": [157, 187], "left": [6, 27, 32, 33, 34, 87, 145, 150, 166], "leftdepth": 63, "leftimg8bit": 63, "leftlabel": 63, "legend": 27, "len": [17, 23, 24], "lena": 187, "lenet": [1, 2, 7, 8, 20, 35, 188], "length": [57, 58, 59, 94, 161, 164], "lengthi": 24, "leon": 187, "less": [4, 156, 164, 175], "let": [3, 4, 5, 6, 9, 10, 11, 12, 14, 20, 28, 32, 33, 34, 37, 38, 185, 186], "level": [11, 17, 20, 74, 130, 135, 136, 139, 140, 186], "leverag": 186, "lfloor": 87, "li": [3, 4, 9, 12, 187], "lib": [10, 13, 27], "librari": [0, 3, 9, 11, 13, 17, 20, 38, 174, 186, 187], "licens": [60, 63, 74, 75, 79, 80, 81, 82, 83, 84, 183], "lifelong": [87, 88, 187], "light": [6, 32, 33, 34, 94, 95, 96], "lightn": [0, 10, 11, 12, 13, 20, 24, 28, 179, 183], "lightning_log": [20, 37], "lightningargumentpars": 37, "lightningcli": 37, "lightningdatamodul": [27, 37], "lightningmodul": [37, 39, 40, 41, 179, 181, 182, 186], "ligthn": 186, "like": [6, 11, 13, 14, 20, 29, 32, 33, 34, 37, 38, 57, 58, 59, 136, 186], "likelihood": [3, 4, 5, 9, 10, 12, 13, 20, 24, 27, 28, 29, 114, 118, 119, 129, 138, 143, 169, 171, 185], "lim": 187, "lin": [121, 187], "linchuan": 187, "line": [11, 13, 37], "linear": [14, 20, 28, 88, 90, 93, 95, 96, 100, 102, 104, 106, 109, 110, 112, 156, 163], "liner": 24, "linewidth": 27, "ling": 187, "link": [6, 10, 20, 29, 32, 33, 34, 38, 174], "link_approx": 174, "linspac": 27, "lint": 38, "list": [6, 14, 24, 32, 33, 34, 38, 47, 48, 51, 52, 55, 157, 164, 179, 183, 186, 187], "liter": [52, 64, 142, 164, 174, 175, 176, 177, 178], "litong": 187, "liu": 187, "lmbda": [108, 109, 150, 151], "ln": [6, 32, 33, 34], "load": [11, 17, 20, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 164], "load_from_checkpoint": 13, "load_hf": 24, "load_state_dict": [6, 13, 14, 20, 23, 24, 34], "loader": [6, 32, 33, 34, 161], "loc": [27, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "local": [146, 147, 149, 150], "local_dir": 20, "locat": [11, 28, 63], "log": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 24, 27, 28, 29, 32, 33, 34, 39, 40, 41, 114, 117, 118, 119, 129, 143, 144, 149, 150, 166, 167, 179, 180, 181, 182], "log10_metr": 144, "log_": 144, "log_every_n_step": 27, "log_plot": [24, 39, 40, 41, 44, 179, 180, 182, 186], "log_segmentation_plot": 182, "logarithm": [144, 149, 150], "logdir": 20, "logger": 182, "logic": [3, 9, 10, 20, 29], "logit": [3, 4, 5, 9, 10, 13, 14, 24, 76, 113, 115, 116, 152, 166, 168, 176, 177, 178, 179, 185], "longer": 20, "look": [14, 20, 24, 38, 186], "loop": [11, 13, 14, 27, 159, 165], "lopez": 187, "lose": 13, "loss": [11, 13, 23, 37, 39, 40, 41, 42, 43, 44, 45, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 129, 137, 143, 150, 179, 180, 181, 182, 183, 186], "loss_typ": 117, "lot": [20, 28], "low": [12, 20, 114], "lower": [9, 20, 27, 28, 29, 120, 123, 127, 133, 134, 168, 169, 170, 171], "lpbnn": [101, 102], "lr": [3, 6, 9, 11, 12, 13, 14, 20, 27, 28, 29, 32, 33, 34, 37, 176, 177, 178, 186], "lr_decai": [6, 32, 33, 34], "lr_decay_epoch": [6, 32, 33, 34], "lr_mult": 20, "lr_schedul": [6, 20, 32, 33, 34, 37], "lr_updat": [6, 32, 33, 34], "lundberg": [157, 187], "lvert": 128, "lvl5": 11, "l\u00fcth": 187, "m": [5, 9, 13, 14, 24, 38, 87, 88, 91, 93, 114, 117, 145, 148, 175, 179, 186, 187], "macc": [6, 32, 33, 34], "machin": [20, 38], "macro": 132, "maddox": 187, "made": [20, 57, 58, 59, 95, 96], "mae": [27, 28, 29], "mae_rel_metr": 146, "maerel": 146, "magazin": [3, 9], "magnitud": [144, 149], "mahdi": 187, "mai": [10, 13, 24, 38, 60, 75, 79, 80, 81, 82, 83, 84, 87, 88, 142, 185], "maier": 187, "main": [0, 3, 9, 12, 28, 38, 125], "main_corrupt": 17, "mainli": 37, "maintain": 38, "major": 183, "make": [5, 20, 38, 67, 91, 93, 128, 133, 137, 138, 159, 183, 186, 187], "make_dataset": [67, 74], "make_grid": [3, 4, 5, 9, 10, 12, 14], "male": 17, "manag": [11, 13], "mancini": 187, "mandatori": 184, "mani": [10, 46, 49, 50, 53, 54, 56, 186, 187], "manual": 113, "map": [20, 150], "map_loc": [13, 20], "marc": [183, 187], "margret": 187, "marin": 187, "mario": 187, "market": [46, 54, 79], "martinez": [183, 187], "martiu": [114, 187], "marton": 187, "mask": [6, 32, 33, 34, 39, 40, 41, 57, 58, 59, 89, 90, 94, 95, 96, 119, 143], "masked_fil": [6, 32, 33, 34], "masksembl": [39, 41, 89, 90, 186], "massimiliano": 187, "match": [13, 14, 24, 37, 57, 58, 59, 76, 94, 126, 187], "mathbf": [166, 167, 169, 170, 171], "mathcal": [87, 88], "mathia": 187, "matplotlib": [3, 4, 5, 6, 9, 10, 12, 14, 17, 23, 27, 32, 33, 34, 86, 123, 124, 125], "matric": [87, 88], "matrix": [174, 176], "matteo": 187, "matter": [11, 13], "matthia": 187, "max": [3, 4, 5, 6, 10, 11, 13, 14, 32, 33, 34, 126, 128, 151, 179, 187], "max_": [128, 169, 171], "max_depth": [42, 62, 63, 64], "max_epoch": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 23, 27, 28, 29, 32, 33, 34, 37, 186], "max_fpr": 153, "max_it": [176, 177, 178], "max_num_model": 161, "max_pool2d": 20, "max_scal": [58, 59], "maximilian": 187, "maximum": [6, 11, 13, 20, 32, 33, 34, 39, 40, 41, 63, 64, 128, 130, 131, 151, 161, 168, 169, 171, 176, 177, 178, 179, 182, 187], "maxlogitcriterion": 13, "maxpool2d": [14, 186], "maxsoftmaxcriterion": 13, "mazeika": 13, "mb": [2, 8, 16, 19, 22, 26, 31, 36, 188], "mc": [4, 39, 40, 41, 159, 165, 174, 175], "mc_batch_norm": 4, "mc_batch_siz": [4, 175], "mc_dropout": [5, 6], "mc_model": [5, 6], "mcbatchnorm2d": 175, "mce": 128, "mean": [3, 5, 6, 9, 11, 14, 20, 23, 27, 28, 29, 32, 33, 34, 58, 59, 92, 93, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 128, 129, 132, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 161, 167, 180, 181], "mean_absolute_inverse_error": 145, "mean_iou": 152, "mean_squared_error": 148, "meangtrelativeabsoluteerror": 147, "meangtrelativesquarederror": 146, "meaning": 144, "measur": [20, 125, 126, 127, 128, 136, 142, 186, 187], "medium": 20, "melih": [12, 187], "mem": [2, 8, 16, 19, 22, 26, 31, 36, 188], "member": [20, 87, 88, 91, 93, 156, 163], "memori": [6, 13, 20, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 142, 159, 164, 165, 176, 177, 178, 182], "memory_is_caus": 95, "memory_key_padding_mask": 95, "memory_mask": 95, "merg": [3, 4, 9], "messag": 38, "method": [3, 4, 5, 9, 10, 12, 13, 23, 24, 27, 29, 37, 39, 40, 41, 47, 48, 51, 52, 55, 87, 88, 141, 157, 159, 172, 175, 179, 183, 186], "metric": [3, 4, 5, 6, 9, 10, 12, 13, 20, 23, 24, 27, 28, 29, 32, 33, 34, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 179, 180, 181, 182, 183], "metric_subsampling_r": [44, 182], "mha": 94, "michael": 187, "michigan": 17, "micro": 132, "might": 186, "miguel": 187, "mike": 187, "mileston": 37, "milo": 187, "mimo": [39, 41, 186], "min": 187, "min_alpha": [108, 109], "min_beta": [108, 109], "min_depth": [62, 63, 64], "min_df": [111, 112], "min_lmbda": [108, 109], "min_scal": [58, 59, 103, 104, 105, 106, 107, 110, 111, 112], "mind": 183, "mini": 14, "minim": [12, 20, 24, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 187], "minimum": [64, 161], "minimum_channels_per_group": 91, "minlength": [6, 32, 33, 34], "minu": 161, "minut": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 188], "miou": [6, 32, 33, 34, 152], "misclassifi": [13, 136], "miss": 37, "mit": 187, "mix": [11, 13, 24], "mixmod": [39, 40, 41], "mixtur": [97, 98, 99, 100], "mixtyp": [39, 40, 41], "mixup": [39, 40, 41, 179], "mixup_alpha": [39, 40, 41], "mixup_param": [39, 40, 41, 179], "mlp": [12, 25, 26, 35, 37, 43, 188], "mm": [145, 148], "mnist": [3, 4, 5, 9, 10, 12, 20, 52, 74], "mnist1d": 20, "mnistc": 52, "mnistc_subset": 74, "mnistdatamodul": [3, 4, 5, 9, 10, 12], "mode": [3, 5, 9, 20, 28, 38, 86, 157, 159, 161, 173, 175, 179, 184], "model": [7, 8, 14, 21, 25, 30, 35, 37, 38, 45, 87, 88, 95, 96, 101, 102, 116, 120, 122, 124, 125, 126, 128, 129, 133, 134, 136, 140, 143, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188], "model_path": [6, 34], "modern": [24, 137, 176, 177, 178, 185, 187], "modif": 20, "modifi": [14, 20, 57, 58, 59, 161], "modul": [3, 4, 5, 9, 10, 14, 20, 27, 28, 39, 40, 41, 45, 47, 48, 51, 52, 55, 57, 58, 59, 87, 88, 92, 104, 106, 108, 109, 110, 111, 112, 120, 122, 156, 157, 158, 159, 160, 161, 163, 164, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186], "moham": [116, 187], "momentum": [14, 158], "monitor": 186, "monocular": [146, 147, 149, 150], "monoton": 131, "mont": [1, 2, 35, 38, 39, 40, 41, 175, 188], "more": [3, 5, 9, 11, 13, 24, 27, 28, 29, 37, 126, 130, 131, 135, 139, 144, 149, 152, 169, 171, 174, 175, 179, 181, 182, 185, 187], "moreov": 5, "morvan": 187, "most": [4, 5, 11, 13, 20, 38, 124, 142, 173, 186], "most_uncertain": 4, "mostajabi": 13, "mostli": [4, 6, 10, 29, 32, 33, 34, 38], "motionblur": 17, "moustapha": 187, "move": [157, 158], "mozharovskyi": 187, "mse": [27, 28, 29, 117, 148], "mse_log": 149, "mse_rel_metr": 147, "mselog": 149, "mseloss": 29, "mserel": 147, "msle": 149, "msle_metr": 149, "msp": [13, 39, 40, 41, 179, 182, 186], "mu": [74, 187], "mu_init": [97, 98, 99, 100], "muad": [1, 2, 30, 31, 35, 37, 59, 183, 188], "muad_mean": [6, 32, 33, 34], "muad_std": [6, 32, 33, 34], "muad_tutori": [6, 34], "muaddatamodul": [6, 32, 33, 34], "much": [29, 123, 124], "multi": [11, 12, 27, 29, 95, 121, 123, 127, 146, 147, 149, 150], "multiclass": [24, 126, 128], "multihead": [94, 95, 96], "multiheadattent": [94, 95, 96], "multimod": [94, 95, 96], "multinoulli": 185, "multioutput": [147, 148], "multipl": [5, 14, 20, 130, 131, 142, 144, 161, 183, 187], "multipli": [20, 38, 91, 92, 93, 94, 95, 96, 101, 102], "multisteplr": 37, "murat": [12, 187], "must": [94, 126, 128, 145, 148, 149, 156, 164, 172, 179, 181, 182], "mutual": [138, 170], "mymodel": 186, "n": [36, 87, 88, 92, 103, 105, 107, 108, 111, 124, 125, 127, 128, 131, 133, 134, 137, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 184], "n_": [87, 173], "n_estim": 93, "n_i": 87, "naeini": [24, 128, 187], "nam": 187, "name": [0, 10, 29, 37, 38, 56, 67, 74, 84, 124, 125, 179, 180, 181, 182], "nan": [5, 6, 9, 11, 20, 32, 33, 34, 130, 131], "natur": 187, "naval": [56, 84], "navig": 38, "nb_epoch": [6, 32, 33, 34], "nbatch": 113, "ndarrai": [67, 74], "ndim": [6, 32, 33, 34], "necessari": [11, 13, 14], "need": [3, 4, 5, 6, 9, 11, 12, 13, 17, 20, 23, 24, 27, 37, 38, 94, 95, 96, 179, 180, 181, 186], "need_weight": 94, "neg": [5, 9, 10, 20, 27, 28, 29, 114, 118, 119, 129, 138, 143, 149, 166, 168, 169, 171], "neil": 187, "neither": 156, "net": 14, "network": [1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 17, 20, 24, 27, 35, 65, 67, 78, 87, 88, 91, 93, 94, 95, 96, 100, 101, 102, 114, 115, 120, 122, 125, 137, 150, 175, 176, 177, 178, 183, 188], "netzer": 187, "neural": [1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 17, 20, 24, 27, 35, 65, 67, 78, 100, 101, 102, 114, 115, 120, 122, 125, 137, 176, 177, 178, 183, 188], "neurip": [5, 12, 27, 117, 125, 150, 161, 164, 174, 187], "neuron": 27, "new": [29, 37, 94, 127, 134, 138, 184], "next": [3, 4, 5, 9, 10, 11, 12, 13, 14, 23, 27], "ng": 187, "nguyen": 187, "nhead": [95, 96], "nig": 27, "nikita": [89, 90, 187], "niko": 187, "niu": 187, "nixon": [126, 187], "nll": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 27, 28, 29, 32, 33, 34, 119, 129, 143], "nn": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 27, 28, 29, 32, 33, 34, 37, 39, 40, 41, 47, 48, 51, 52, 55, 57, 58, 59, 87, 88, 104, 106, 108, 109, 110, 111, 112, 120, 122, 156, 157, 158, 159, 160, 161, 163, 164, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186], "no_grad": [6, 12, 27, 32, 33, 34], "nois": [11, 66, 69, 101, 102], "noisi": [27, 187], "non": [3, 9, 46, 49, 50, 53, 54, 149, 164], "none": [3, 4, 5, 6, 9, 10, 12, 14, 17, 20, 23, 27, 28, 32, 33, 34, 37, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 137, 138, 141, 142, 143, 152, 153, 154, 157, 158, 161, 164, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186], "noplot": 38, "noqa": 17, "nor": [38, 156], "norm": [4, 95, 96, 126, 128], "norm_first": [95, 96], "normal": [1, 2, 6, 11, 20, 27, 28, 32, 33, 34, 35, 39, 58, 59, 95, 96, 97, 98, 99, 100, 107, 108, 109, 110, 118, 124, 125, 127, 129, 133, 136, 137, 138, 143, 175, 185, 188], "normalinversegamma": 27, "normalinversegammalinear": 27, "normalization_lay": 39, "normallinear": 28, "norman": [74, 187], "note": [3, 4, 9, 11, 13, 14, 20, 27, 28, 37, 63, 80, 91, 93, 94, 164, 179, 180, 181, 182], "notebook": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35], "notmnist": 52, "now": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 24, 27, 28, 29, 34, 37, 38], "np": [3, 4, 5, 9, 10, 12, 14, 23, 67, 74], "npimg": [3, 4, 5, 9, 10, 12, 14], "npy": [66, 68, 69], "num": [9, 91, 93], "num_bin": [126, 128], "num_bins_cal_err": [39, 44, 179, 182], "num_channel": [3, 4, 5, 6, 9, 10, 12, 32, 33, 34], "num_class": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 24, 32, 33, 34, 37, 39, 40, 41, 44, 45, 126, 127, 128, 132, 137, 152, 166, 167, 168, 169, 170, 171, 173, 176, 178, 179, 182, 186], "num_corrupt": 17, "num_dataload": [47, 48], "num_estim": [3, 4, 5, 6, 9, 14, 20, 32, 33, 37, 39, 40, 41, 43, 45, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 127, 137, 156, 159, 161, 163, 164, 165, 175, 179, 186], "num_exampl": 23, "num_featur": 137, "num_head": 94, "num_image_plot": 180, "num_output": [27, 29, 147, 148], "num_output_channel": 20, "num_repeat": [156, 179], "num_sampl": [3, 9, 27, 120, 162], "num_samples_to_plot": 182, "num_tta": [47, 48, 51, 52, 55, 179], "num_work": [5, 6, 9, 10, 11, 12, 13, 14, 20, 23, 27, 28, 29, 32, 33, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "number": [4, 5, 6, 10, 11, 12, 13, 20, 27, 29, 32, 33, 34, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 124, 125, 126, 127, 128, 132, 133, 134, 137, 138, 141, 142, 144, 147, 148, 152, 156, 157, 159, 160, 161, 163, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 186], "numer": [92, 115, 138], "numpi": [3, 4, 5, 9, 10, 12, 14, 17, 23, 38, 79, 80, 81, 82, 83, 84], "o": [51, 55, 76, 186], "object": [3, 6, 9, 12, 27, 32, 33, 34, 38, 76, 120, 121, 123, 124, 125, 187], "observ": [20, 124, 125], "obstacl": 38, "obtain": [24, 29, 128, 187], "occur": 161, "off": [3, 4, 5, 6, 9, 10, 12, 14, 17, 23, 32, 33, 34, 140], "offici": [12, 87, 88], "often": [20, 28, 151], "olga": 187, "olivi": [20, 183, 187], "on_batch": [6, 159, 165], "on_test_epoch_end": [179, 180, 181, 182], "on_test_start": [179, 180, 181], "on_train_start": [179, 180, 181], "on_validation_epoch_end": [179, 180, 181, 182], "on_validation_start": [179, 180, 181], "onc": 179, "one": [9, 11, 13, 20, 24, 37, 39, 65, 67, 74, 75, 78, 127, 129, 132, 133, 134, 137, 138, 142, 143, 145, 148, 156, 164, 180, 181, 186], "ones": 92, "onli": [3, 9, 11, 13, 14, 17, 20, 38, 39, 40, 41, 47, 48, 51, 57, 58, 63, 91, 93, 94, 127, 152, 156, 159, 160, 161, 163, 164, 165, 175, 179, 180, 181, 182, 186], "onlin": [53, 82], "onto": 182, "ood": [3, 6, 9, 14, 20, 23, 32, 33, 34, 39, 40, 41, 51, 55, 59, 63, 135, 136, 155, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183], "ood_criteria": [13, 166, 167, 168, 169, 170, 171, 172, 173], "ood_criterion": [13, 23, 39, 40, 41, 179, 182, 186], "ood_d": [51, 52, 55], "ood_data": 20, "ood_dl": 20, "ood_transform": 52, "ood_viz_data": 20, "oodcriterioninputtyp": [166, 167, 168, 169, 170, 171, 172, 173], "open": [17, 35, 38, 76, 187], "openaccess": 187, "opencv": 184, "openimag": [51, 55, 76], "oper": [90, 93, 95, 96, 153, 156], "optic": 123, "optim": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 29, 32, 33, 34, 37, 39, 40, 41, 94, 125, 157, 174, 176, 177, 178, 179, 180, 181, 182, 186, 187], "optim_cifar10_resnet18": [4, 5, 10], "optim_recip": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 27, 28, 29, 32, 33, 34, 39, 40, 41, 179, 180, 181, 182, 186], "optim_regress": 27, "optima": [160, 187], "optimize_prior_precis": 174, "option": [6, 11, 20, 32, 33, 34, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 141, 142, 143, 152, 156, 159, 161, 163, 164, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "oracl": [123, 125], "order": [3, 4, 9, 20, 144], "org": [6, 9, 17, 32, 33, 34, 187], "organ": 37, "origin": [11, 12, 13, 17, 24, 27, 38, 39, 40, 41, 45, 63, 76, 87, 94, 95, 96, 113, 128, 164, 187], "orthogon": 20, "other": [6, 13, 20, 23, 24, 28, 32, 33, 34, 57, 58, 59, 156, 183], "otherwis": [13, 20, 24, 57, 58, 59, 79, 80, 81, 82, 83, 91, 93, 94, 95, 96, 111, 112, 126, 128, 129, 157, 159, 160, 161, 165], "our": [3, 4, 5, 9, 10, 11, 12, 13, 14, 27, 28, 29, 37, 128, 186], "out": [6, 7, 8, 11, 20, 23, 24, 28, 29, 32, 33, 34, 35, 37, 38, 47, 48, 51, 52, 55, 76, 87, 88, 91, 93, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 136, 164, 172, 179, 180, 181, 186, 187, 188], "out_channel": [87, 89, 91, 97, 98, 99, 101, 103, 105, 107, 108, 111], "out_featur": [28, 88, 90, 93, 100, 102, 104, 106, 109, 110, 112, 156], "outlin": 14, "output": [4, 9, 11, 12, 13, 14, 27, 28, 32, 33, 34, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 128, 129, 133, 136, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 159, 168, 172, 179, 180, 181, 185], "output_dim": [27, 28, 29, 43, 180, 181], "output_prob": 6, "output_probs_per_est": 6, "output_strid": 44, "outputs_proba": [32, 33, 34], "outsid": 24, "over": [3, 6, 9, 12, 14, 20, 27, 32, 33, 34, 37, 87, 127, 129, 132, 133, 134, 138, 141, 142, 143, 145, 146, 149, 152, 153, 154], "overcom": [124, 187], "overestim": 149, "overrid": [37, 159], "overview": [11, 12, 28], "own": [13, 20, 159], "p": [3, 9, 20, 24, 121, 129, 143, 167, 169, 170, 171], "p_": [129, 143], "p_1": [167, 169, 171], "p_2": [167, 169, 171], "p_c": [167, 169, 171], "p_class": [6, 32, 33, 34], "p_i": [128, 167, 169, 171], "pack": [7, 8, 18, 19, 30, 31, 35, 37, 39, 40, 41, 91, 92, 93, 94, 95, 96, 183, 186, 188], "packag": [10, 13, 14, 27, 38, 184, 186], "packed_model": 20, "packed_net": [14, 186], "packed_perf": 20, "packed_resnet": 186, "packed_routin": [20, 33], "packed_small_unet": 33, "packedconv2d": [14, 20, 186], "packedlenet": 20, "packedlinear": [14, 20, 186], "packednet": [14, 186], "pad": [5, 10, 12, 20, 87, 89, 91, 94, 97, 98, 99, 101, 103, 105, 107, 119, 143], "pad_if_need": [58, 59], "pad_valu": 14, "padding_mask": [119, 143], "padding_mod": [91, 97, 98, 99, 101], "page": [35, 38, 183, 185, 186], "pai": 20, "pakdaman": 187, "palett": 85, "panda": 184, "paper": [6, 12, 17, 20, 27, 32, 33, 34, 38, 87, 88, 121, 183, 186, 187], "paperswithcod": 38, "paradigm": 20, "paradox": [116, 187], "parajuli": 187, "parallel": 94, "parametparent": [65, 124, 130, 139], "parser": 37, "part": [3, 4, 5, 9, 12, 20, 27, 38], "partial": 3, "partial_comput": 125, "particular": 186, "particularli": [20, 38, 126, 147, 149], "partli": 20, "pascal": [89, 90, 187], "pass": [5, 6, 10, 20, 29, 37, 38, 65, 70, 71, 72, 73, 87, 88, 95, 96, 122, 123, 124, 125, 126, 127, 131, 133, 134, 135, 136, 137, 138, 140, 143, 156, 157, 159, 161, 172, 179, 180, 181, 182, 186], "path": [3, 4, 5, 9, 10, 12, 13, 14, 29, 46, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 63, 64, 67, 74, 75, 78, 79, 80, 81, 82, 83, 85, 164], "pathlib": [3, 4, 5, 9, 10, 12, 29], "patrick": 187, "pattern": 29, "paul": 187, "pavel": 187, "pavlo": 187, "paz": 187, "pdf": [9, 187], "peilin": 187, "penal": [115, 149], "penalti": 115, "pennerath": 187, "per": [14, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 91, 94, 95, 96, 133, 134, 138, 141, 142, 155], "per_channel": 92, "percentag": 151, "perceptron": [12, 27, 29], "pereyra": 115, "perez": 187, "perf": [4, 20], "perf_ap": 23, "perf_rap": 23, "perf_thr": 23, "perfectli": 20, "perform": [5, 7, 8, 10, 13, 14, 20, 23, 28, 29, 35, 37, 47, 51, 55, 94, 124, 125, 129, 143, 159, 161, 165, 179, 180, 181, 182, 188], "permut": [17, 23], "persist": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "persistent_work": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "person": 38, "perturb": [17, 20, 65, 67, 78, 187], "peter": 20, "peterson": 187, "phase": [23, 37], "pheng": 187, "philip": 187, "philipp": 187, "pierr": [89, 90, 187], "pil": [17, 20, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 85, 86], "pilimag": 14, "pin": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "pin_memori": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "pinto": 187, "piotr": 187, "pip": [38, 183, 184], "pipelin": [11, 13, 186], "pitfal": [114, 187], "pixacc": [6, 32, 33, 34], "pixel": [6, 17, 20, 32, 33, 34, 180], "pixel_regress": 164, "pixmix": 60, "planar": [146, 147, 149, 150], "plane": [14, 87], "plant": [56, 84], "pleas": [3, 4, 9, 20, 27, 38, 185, 187], "pleiss": [24, 185, 187], "plot": [4, 24, 27, 39, 40, 41, 86, 123, 124, 125, 128, 179, 180, 182], "plot_oracl": 123, "plot_sampl": 86, "plot_valu": [123, 124, 125], "plt": [3, 4, 5, 6, 9, 10, 12, 14, 17, 23, 27, 32, 33, 34], "png": 17, "podoprikhin": 187, "point": [17, 20, 28, 114, 120, 152, 157, 180, 181], "pointwis": [28, 185], "pont": 187, "pool": [14, 20, 186], "popul": 175, "popular": 38, "pos_label": [135, 136, 155], "posit": [94, 135, 136, 155], "possibl": [38, 91], "post": [4, 20, 23, 24, 47, 48, 51, 52, 55, 175, 176, 177, 178, 179, 182, 183, 186], "post_hoc_method": [22, 188], "post_process": [4, 23, 24, 174, 175, 176, 177, 178, 179, 182], "posterior": [3, 5, 9, 97, 98, 99, 100, 101, 102, 157, 161, 174, 183, 187], "posteriori": 20, "postprocess": [179, 182], "postprocess_dataload": 24, "postprocess_set": [24, 47, 48, 51, 52, 55], "power": [56, 84, 151], "pr": 38, "practic": [12, 20, 27, 37], "pre": [20, 24, 38, 184], "precis": [6, 10, 11, 13, 20, 29, 32, 33, 34, 87, 154, 174], "pred": [6, 32, 33, 34, 124, 125, 132, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 182], "pred_img": [6, 32, 33, 34], "pred_mask": [6, 32, 33, 34], "pred_typ": 174, "predefin": [28, 37], "predict": [3, 4, 5, 9, 10, 12, 13, 14, 20, 21, 22, 24, 25, 27, 28, 29, 35, 37, 39, 40, 41, 45, 119, 120, 125, 126, 127, 128, 129, 131, 132, 133, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 164, 167, 170, 173, 174, 175, 179, 180, 181, 182, 185, 187, 188], "predicted_prob": [126, 128, 140], "predictor": 23, "prefer": 186, "prefix": [37, 161], "prepar": [3, 9, 20, 179, 180, 181], "prepare_data": [6, 11, 23, 24, 32, 33, 34, 52, 56], "preprocess": [11, 13, 20], "present": [27, 60, 87, 88], "pretrain": [20, 39], "pretrained_backbon": [42, 44], "pretti": 14, "prevent": 94, "previou": [13, 24, 37], "previous": [134, 138, 143], "principl": [116, 187], "print": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 23, 24, 28, 32, 33, 34, 87, 88, 124, 125, 126, 127, 128, 129, 131, 133, 134, 136, 140, 142, 143, 144, 146, 147, 149, 150, 151], "prior": [12, 20, 27, 95, 96, 97, 98, 99, 100, 174], "prior_pi": [97, 98, 99, 100], "prior_sigma_1": [97, 98, 99, 100], "prior_sigma_2": [97, 98, 99, 100], "pritzel": 187, "priya": 187, "prob": [3, 4, 5, 9, 10, 12, 24, 66, 68, 69, 125, 127, 129, 131, 133, 134, 137, 138, 140, 142, 143], "prob_routin": 29, "probabilist": [25, 26, 27, 35, 114, 127, 128, 129, 142, 143, 164, 180, 181, 187, 188], "probabl": [6, 13, 20, 24, 32, 33, 34, 39, 40, 41, 94, 124, 125, 126, 127, 128, 129, 131, 133, 134, 137, 138, 140, 143, 152, 167, 169, 170, 171, 173, 176, 177, 178, 179, 182, 185, 187], "probit": 174, "problem": [4, 5, 10, 12, 27, 29, 38, 149], "probs_per_est": 14, "procedur": [51, 55], "proceed": [3, 9, 20, 187], "process": [11, 13, 14, 20, 23, 24, 47, 48, 51, 52, 55, 153, 154, 156, 157, 175, 176, 177, 178, 179, 182, 183, 184, 186], "prod_": 87, "produc": [87, 89, 90, 91, 93], "progress": [176, 177, 178, 185], "project": [38, 94, 184], "propag": [6, 32, 33, 34], "propens": [6, 32, 33, 34], "propensity_scor": [6, 32, 33, 34], "proper": [24, 186], "properli": 38, "properti": [85, 91], "proport": [20, 136, 142], "propos": [3, 9, 17], "propuls": [56, 84], "protein": [56, 84], "protocol": [11, 13], "provid": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 39, 40, 41, 43, 45, 47, 48, 51, 52, 55, 57, 58, 59, 94, 95, 96, 123, 124, 125, 126, 128, 130, 131, 144, 164, 186], "pth": [6, 14, 34], "publish": 20, "pull": 38, "puneet": 187, "purpos": [20, 37, 63, 94], "push": 38, "put": [3, 9, 20, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 124, 157, 179, 180, 181], "py": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 37, 186, 188], "pypi": 183, "pyplot": [3, 4, 5, 6, 9, 10, 12, 14, 17, 23, 27, 32, 33, 34], "pytest": 38, "python": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 37, 183, 184, 186], "python3": [10, 13, 27, 38], "pytorch": [3, 9, 10, 11, 13, 14, 20, 24, 28, 37, 38, 87, 88, 113, 121, 160, 161, 164, 181, 183, 184], "q": [24, 185, 187], "qi": 187, "quad": [129, 143], "qualiti": [11, 20, 56, 84, 123, 125, 127], "quantif": [14, 20, 38, 101, 102, 183, 187], "quantifi": [12, 27, 117, 187], "quentin": 187, "queri": 94, "question": [20, 35], "quickstart": 183, "r": [14, 27, 121], "r_": [87, 88], "r_group": [87, 88], "rahul": 187, "rais": [38, 39, 40, 41, 74, 126, 127, 128, 129, 132, 133, 134, 137, 138, 142, 143, 151, 156, 164, 165, 175, 186], "raise_count": 175, "ran": 187, "rand_augment_opt": [51, 55], "randaug": [47, 48, 51, 55], "randn": [87, 88], "random": [3, 9, 14, 20, 29, 79, 80, 81, 82, 83, 84, 161, 182], "random_label1": 69, "random_label2": 69, "random_label3": 69, "random_split": 24, "randomcrop": [20, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78], "randomhorizontalflip": [6, 32, 33, 34, 58, 59], "randomrescal": [58, 59], "rang": [3, 4, 5, 9, 10, 11, 12, 14, 17, 20, 23, 114, 128, 129, 143, 149], "rank": 125, "rank_zero": 28, "rap": 23, "rate": [3, 6, 9, 11, 12, 20, 27, 28, 32, 33, 34, 37, 39, 40, 41, 125, 132, 135, 136, 140, 141, 176, 177, 178, 182], "ratio": [20, 142, 151, 173], "rc": 125, "re": 14, "reach": 29, "read": [20, 63, 187], "reader": [3, 5], "readi": [39, 40, 41, 186], "real": [13, 20, 24, 187], "rearrang": [5, 9, 14, 186], "recal": [135, 136, 185], "recall_level": 136, "receiv": [88, 153, 156], "recip": [4, 5, 10, 20, 29, 39, 40, 41, 186], "recognit": [3, 9, 20, 187], "reconsid": 38, "red": [56, 84], "redefin": 3, "reduc": [6, 13, 38, 91, 93, 127, 129, 133, 134, 138, 141, 142, 143, 165], "reduct": [113, 114, 115, 116, 117, 118, 119, 121, 127, 129, 132, 133, 134, 137, 138, 141, 142, 143], "redux": [174, 187], "refer": [5, 6, 11, 14, 32, 33, 34, 38, 63, 65, 67, 74, 76, 78, 87, 88, 89, 90, 94, 95, 96, 100, 101, 102, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 136, 137, 146, 147, 149, 150, 151, 157, 160, 161, 164, 174, 175, 176, 177, 178, 183, 186], "reflect": [91, 101], "reg": 27, "reg_weight": [12, 27, 115, 116, 117, 118], "region": 126, "regress": [26, 37, 43, 56, 84, 118, 143, 144, 145, 146, 147, 148, 149, 150, 151, 164, 174, 180, 181, 183, 186, 188], "regressionroutin": [27, 28, 29], "regroup": 13, "regular": [12, 23, 27, 115, 116, 117, 118, 150, 187], "regularli": 158, "reinstal": 38, "reject": 20, "rel": [114, 146, 147, 149], "rel_mean_absolute_error": 146, "rel_mean_squared_error": 147, "relat": [20, 179], "relationship": [76, 187], "releas": 74, "reliabl": [20, 24, 128], "relu": [12, 14, 20, 28, 95, 96, 156, 186], "remain": [13, 38], "rememb": 38, "remov": [0, 6, 32, 33, 34], "remove_unus": 62, "ren": 187, "repeat": [14, 32, 33, 37, 39, 41, 87, 88, 89, 90, 156, 159, 163], "repeat_training_input": [156, 163], "repeattarget": [20, 32, 33, 156, 179], "replac": [6, 13, 20, 34, 38, 175], "replace_lay": 175, "replic": [20, 91, 101, 156], "repo_id": [6, 13, 20, 23, 34], "report": 187, "repositori": [38, 184, 186], "repres": [5, 12, 20, 24, 27, 28, 29, 144, 172, 185, 187], "represent": [20, 91, 93, 126], "reproduc": [27, 38, 186], "request": [17, 38], "requir": [20, 126, 128, 170, 172, 173, 186], "rescal": [57, 58, 59, 113, 161], "reset": [24, 164, 175], "reset_count": 175, "reset_model_paramet": [20, 32, 164], "reshap": [3, 4, 9], "residu": [11, 13, 187], "resiz": [6, 17, 32, 33, 34, 51, 55, 57, 58, 59], "resnet": [11, 13, 23, 24, 37, 39, 41, 186], "resnet18": [11, 13, 23, 37, 186], "resnet18_c10": [13, 23], "resnet18_c100": 24, "resnet28x10": 41, "resnetbaselin": 37, "resnetcli": 37, "resourc": [3, 5, 9], "respect": [20, 37, 95, 96, 146], "respons": 187, "rest": 164, "restrict": [6, 24, 32, 33, 34], "result": [4, 5, 6, 10, 11, 13, 14, 28, 29, 32, 33, 34, 37, 39, 40, 41, 87, 88, 95, 96, 125, 133, 134, 136, 138, 140, 142, 144, 146, 147, 149, 150, 151, 179, 180, 181, 182, 186], "rethink": 187, "return": [6, 14, 17, 20, 27, 28, 32, 33, 34, 37, 39, 40, 41, 47, 48, 51, 52, 55, 59, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 115, 116, 120, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 157, 159, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 186], "revisit": 187, "rewrit": 28, "rfloor": 87, "rgb": [6, 17, 32, 33, 34, 86], "rho": [39, 41], "ricci": 187, "richard": 187, "right": [6, 17, 32, 33, 34, 87, 145, 150, 166], "risk": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 32, 33, 34, 124, 125, 130, 131, 139, 140], "risk_at_cov": 140, "risk_threshold": 131, "riskatxcov": 139, "rmsce": 128, "rmse": [27, 28, 29, 148], "rmserel": 147, "robust": [11, 15, 16, 35, 65, 67, 74, 78, 187, 188], "rodolph": 187, "rom": 187, "root": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 23, 24, 28, 29, 32, 33, 34, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 128, 150, 161, 186], "ross": 187, "rotat": [12, 17], "rotated_imag": 12, "rotated_mnist": 12, "roughli": 38, "routin": [20, 23, 24, 37, 156, 179, 180, 181, 182, 183], "routine_ap": 23, "routine_rap": 23, "routine_thr": 23, "row": [87, 88, 129, 143], "ru": [27, 118, 187], "ruairidh": 187, "ruff": [38, 184], "run": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 38, 184, 186], "runa": 187, "runner": [10, 13, 27], "running_loss": 14, "russakovski": 187, "rvert": 128, "r\u00e9mi": 183, "s310": 17, "s_": [87, 88], "s_group": [87, 88], "sai": [24, 28], "sake": [9, 12, 20], "same": [4, 6, 11, 12, 13, 20, 24, 27, 28, 32, 33, 34, 37, 39, 41, 88, 92, 104, 106, 109, 110, 112, 159, 164], "sampl": [3, 5, 6, 9, 14, 20, 23, 24, 27, 28, 29, 32, 33, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 67, 74, 85, 86, 87, 100, 101, 102, 120, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 138, 140, 141, 142, 143, 157, 161, 166, 167, 168, 169, 170, 171, 173, 182], "sample_idx": 6, "samyak": 187, "saniti": [6, 11, 13, 20, 32, 33, 34], "satur": [17, 58, 59], "saurabh": 187, "saurav": 187, "save": [3, 4, 9, 13, 14, 37, 39, 40, 41, 66, 68, 69, 85, 142, 152, 157, 176, 177, 178, 179, 180, 181, 182], "save_feat": 179, "save_in_csv": [39, 40, 41, 179, 180, 181, 182, 186], "save_logit": [176, 177, 178], "save_schedul": 157, "sc": [3, 9, 12, 124, 125], "scalabl": [164, 187], "scalar": [124, 125, 129], "scale": [6, 11, 13, 21, 22, 28, 32, 33, 34, 35, 38, 39, 40, 41, 57, 58, 59, 76, 89, 90, 103, 104, 105, 106, 107, 110, 111, 112, 145, 146, 147, 148, 149, 150, 161, 176, 177, 178, 186, 188], "scale_dot_product_attent": 94, "scaled_model": 24, "scenario": 144, "schedul": [6, 20, 32, 33, 34, 37, 157, 179, 180, 181, 182], "scheme": 20, "schwart": [27, 118, 187], "scikit": [38, 184], "scope": 183, "score": [3, 6, 9, 13, 20, 23, 24, 28, 32, 33, 34, 39, 40, 41, 123, 125, 127, 129, 131, 133, 134, 136, 137, 138, 140, 141, 142, 152, 166, 169, 171, 172, 176, 177, 178, 179, 182, 183, 186], "scott": [157, 187], "scratch": 24, "script": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 186], "search": 183, "sebastian": 20, "second": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 100, 188], "section": [20, 28, 186, 187], "see": [4, 5, 13, 14, 20, 24, 27, 28, 37, 38, 87, 91, 93, 123, 126, 127, 128, 132, 133, 134, 137, 138, 141, 142, 144, 146, 147, 149, 150, 151, 152, 174, 185], "seed": [56, 79, 80, 81, 82, 83, 84, 161], "seek": 120, "seem": [14, 28], "seemlessli": 37, "seen": [3, 9, 20, 37], "seg": 136, "seg_routin": [6, 34], "segform": [37, 45], "segment": [1, 2, 31, 37, 38, 44, 45, 57, 58, 59, 85, 86, 152, 153, 154, 155, 164, 182, 183, 186, 188], "segmentationroutin": [6, 32, 33, 34], "seitzer": [114, 187], "select": [3, 4, 5, 6, 9, 10, 11, 12, 13, 23, 32, 33, 34, 124, 125, 159, 182, 187], "self": [14, 20, 28, 37, 95, 96, 156, 179, 186], "semant": [1, 2, 32, 33, 34, 35, 63, 188], "sensoi": [12, 117, 187], "separ": [20, 44, 94, 132], "seq": [94, 95, 96], "sequenc": [57, 58, 59, 94, 95, 96], "sequenti": [6, 20, 156], "ser": 187, "sergei": 187, "set": [0, 3, 6, 9, 11, 12, 13, 14, 20, 27, 29, 32, 33, 34, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 69, 79, 80, 81, 82, 83, 85, 92, 94, 100, 119, 120, 123, 127, 129, 132, 133, 134, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 156, 157, 159, 175, 176, 177, 178, 179, 182, 185, 186], "set_accumul": 175, "set_temperatur": [176, 177, 178], "set_titl": [17, 23], "set_xlabel": 23, "set_xlim": [23, 27], "set_ylim": 27, "setlevel": 28, "setsiz": 23, "setup": [6, 23, 24, 32, 33, 34, 52, 56, 179], "sever": [3, 9, 11, 17, 47, 48, 51, 55, 74, 87], "severin": [183, 187], "sgd": [14, 20, 37, 187], "sghmc": [157, 187], "sgld": [157, 187], "shahab": 187, "shankar": 187, "shannon": [134, 138], "shaoq": 187, "shape": [9, 56, 87, 88, 91, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 124, 125, 127, 129, 131, 132, 137, 138, 140, 141, 150, 152, 159, 166, 167, 168, 169, 170, 171, 173, 179], "share": [39, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 88], "shift": [7, 8, 9, 13, 24, 35, 39, 40, 41, 47, 48, 51, 52, 55, 179, 180, 181, 182, 186, 188], "shift_sever": [11, 47, 48, 51, 55, 65, 67, 78], "ship": 14, "shlen": 187, "shopper": [53, 82], "shortli": [11, 13], "shotnois": 17, "should": [3, 9, 11, 20, 24, 37, 91, 93, 94, 132, 152, 175, 176, 177, 178, 186], "show": [3, 4, 5, 6, 9, 10, 12, 14, 17, 23, 24, 32, 33, 34, 176, 177, 178], "show_imag": 17, "shown": 11, "shuffl": [14, 20, 84], "side": [87, 89, 91, 101], "sigma_init": [97, 98, 99, 100], "signal": 87, "signatur": 38, "silog_metr": 150, "similar": [0, 20, 179], "similarli": 20, "simonyan": 187, "simpl": [20, 27, 28, 161, 164, 186, 187], "simplest": 87, "simpli": [13, 20], "simplifi": [11, 13, 20, 87, 88], "simul": [11, 136, 140], "sinc": 4, "singh": 187, "singl": [3, 9, 12, 13, 20, 45, 134, 150, 152, 157, 179, 180, 181, 182, 187], "singleton": 164, "site": [10, 13, 27], "size": [6, 9, 20, 32, 33, 34, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 88, 89, 91, 93, 94, 101, 102, 103, 105, 107, 108, 111, 113, 123, 126, 127, 128, 129, 132, 133, 134, 137, 138, 141, 142, 143, 150, 159, 175, 179], "small": [6, 11, 20, 32, 33, 34, 59, 63, 75, 115, 124, 125, 146, 147, 149, 150, 176, 177, 178], "small_unet": [6, 32, 34], "smaller": [27, 57, 58, 59, 175], "smallest": 91, "smith": [175, 187], "smooth": 113, "snapshot": 187, "snoek": 187, "snow": 17, "so": [14, 20, 29, 37, 88, 91, 93], "socher": 187, "softmax": [3, 4, 5, 6, 9, 10, 13, 14, 20, 24, 32, 33, 34, 39, 40, 41, 169, 171, 179, 182, 185], "soleimani": [27, 118, 187], "solv": 38, "some": [5, 12, 14, 20, 28, 29, 37], "someon": 74, "sometim": [4, 20], "song": [13, 187], "soon": 0, "sort": [4, 140], "sourc": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "space": [87, 89, 91, 126, 128, 144, 150], "span": 144, "spars": 93, "sparsif": 123, "special": 9, "specif": [0, 3, 9, 11, 27, 29, 38, 130, 135, 139, 186], "specifi": [4, 11, 13, 38, 94, 95, 96, 113, 114, 115, 116, 117, 118, 119, 126, 128, 136, 140, 151, 152, 157, 164], "specklenois": 17, "sphinx": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 184], "split": [23, 24, 51, 52, 56, 62, 63, 64, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 85, 86, 186], "split_se": [56, 79, 80, 81, 82, 83], "springenberg": 187, "sqrt": [27, 87, 88, 128, 150], "squar": [12, 20, 28, 57, 58, 59, 87, 127, 128, 147, 148, 149, 150, 161], "squeez": [6, 27, 32, 33, 34, 180, 181], "src": 96, "src_key_padding_mask": 96, "src_mask": 96, "sre": 147, "stabil": [92, 176, 177, 178], "stage": [38, 52, 56], "stand": 52, "standard": [3, 7, 8, 9, 11, 13, 20, 28, 35, 37, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 186, 188], "standardtransform": 11, "stanislav": 187, "star": 87, "stark": 20, "start": [24, 38, 89, 90, 157, 160, 161], "state": [29, 37, 38, 129, 132, 133, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 161], "state_dict": [13, 14, 20, 161], "statist": [14, 132, 161, 175], "std": [3, 6, 9, 11, 23, 32, 33, 34, 37, 39, 40, 41, 45, 58, 59, 179], "std_factor": [101, 102], "stefan": 187, "steinbach": 20, "steinhardt": 187, "step": [14, 38, 117, 179, 180, 181, 182, 184], "step_siz": [6, 34], "steplr": [6, 32, 33, 34], "steven": 187, "stochast": [3, 4, 9, 20, 157, 160, 161, 175], "storag": 179, "store": [37, 64, 101, 102, 103, 105, 107, 123, 125, 131, 140, 161, 164, 179], "store_on_cpu": [157, 164], "str": [4, 5, 10, 28, 39, 40, 41, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 93, 101, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 138, 141, 143, 164, 174, 179, 180, 181, 182, 186], "streamlin": [11, 13], "strength": [11, 12], "strict": [6, 32, 33, 34], "stride": [87, 89, 91, 97, 98, 99, 101, 103, 105, 107], "string": [50, 56, 66], "strong": 11, "structur": [174, 186], "student": [28, 111, 112], "studi": 187, "style": [13, 23, 24, 37, 38, 39, 40, 41, 44, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102], "su": [157, 187], "sub": [20, 156], "subclass": [37, 70, 71, 72, 73, 172], "subcommand": 37, "submodul": 159, "subnetwork": 187, "subplot": [6, 17, 23, 27, 32, 33, 34], "subplots_adjust": [6, 32, 33, 34], "subprocess": [46, 49, 50, 53, 54, 56], "subsampl": 182, "subset": [20, 24, 65, 67, 74, 75, 78, 174], "successfulli": [13, 14, 24], "suggest": [4, 35, 38], "suitabl": [60, 75], "sum": [4, 6, 12, 32, 33, 34, 113, 114, 115, 116, 117, 118, 119, 121, 127, 129, 132, 133, 134, 137, 138, 141, 142, 143, 166, 185], "sum_": [87, 127, 128, 129, 143, 144, 150, 166, 167, 170], "sum_i": [145, 146, 147, 148, 149], "sun": [24, 185, 187], "super": [14, 20, 28, 186], "superclass": [57, 70, 71, 72, 73, 85], "supervis": 20, "support": [6, 32, 33, 34, 37, 39, 40, 41, 43, 45, 70, 71, 72, 73, 85, 94, 113, 124, 125, 164, 186], "suppress": 187, "sure": [5, 89, 90, 91, 93, 133, 137, 138, 156, 159, 183], "surprisingli": 187, "svhn": [13, 47, 48, 51, 55], "swa_gaussian": 161, "symmetri": 183, "synthet": [6, 27, 32, 33, 34], "system": [38, 124, 184, 187], "szegedi": 187, "s\u00e9verin": 183, "t": [4, 5, 14, 20, 28, 35, 85, 88, 111, 112, 121, 127, 156, 187], "t_max": 20, "t_muad_mean": [6, 32, 33, 34], "t_muad_std": [6, 32, 33, 34], "tabl": [5, 10, 20, 29], "tabular": [25, 26, 35, 184, 188], "tackl": [12, 27], "tailor": 187, "take": [20, 37, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 132, 185, 186], "taken": 23, "talk": 20, "tao": 187, "target": [6, 13, 20, 24, 32, 33, 34, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 94, 115, 116, 119, 120, 124, 125, 127, 129, 131, 132, 133, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 179, 180, 181, 182], "target_mask": [6, 32, 33, 34], "target_transform": [60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86], "target_typ": [63, 86], "tartaglion": [183, 187], "task": [6, 7, 20, 24, 25, 30, 32, 33, 34, 35, 37, 39, 40, 41, 121, 126, 128, 129, 136, 143, 146, 147, 150, 153, 154, 155, 164, 174, 179, 180, 181, 182, 183, 186], "tau": 179, "tavakoli": [114, 187], "team": [23, 29], "tech": 187, "technic": 20, "techniqu": [6, 18, 21, 35, 182], "teh": 187, "tell": [5, 10, 29], "temper": 24, "temperatur": [21, 22, 35, 38, 176, 177, 178, 186, 188], "temperaturescal": 24, "tena": 183, "tensor": [6, 14, 20, 32, 33, 34, 37, 63, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 113, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 159, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182], "tensorboard": [20, 24, 179, 180, 181], "tensorflow": [20, 87, 88], "term": [12, 27, 100, 115, 116, 117, 118, 120], "test": [10, 11, 20, 23, 24, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 74, 79, 80, 81, 82, 83, 85, 160, 161, 179, 180, 181, 182, 186], "test_alt": [48, 51, 55], "test_data": 20, "test_dataload": [10, 23, 24, 47, 48, 51, 52, 55, 59], "test_dataset": [24, 27], "test_dl": 20, "test_split": [46, 49, 50, 53, 54, 79, 80, 81, 82, 83], "test_step": [179, 180, 181, 182], "test_transform": [6, 20, 32, 33, 34, 47, 48, 51, 52, 55, 57, 58, 59], "testload": 14, "testset": 14, "text": [14, 17, 57, 58, 59, 87, 88, 91, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 128, 144, 145, 146, 147, 148, 149, 150, 169, 171, 173], "tey": [175, 187], "tgt": [6, 32, 33, 34, 95], "tgt_is_caus": 95, "tgt_key_padding_mask": 95, "tgt_mask": [6, 32, 33, 34, 95], "th": [87, 88], "than": [24, 27, 29, 132, 149, 156, 161, 164, 175], "thank": 28, "thecvf": 187, "thei": [0, 5, 11, 20, 37, 123], "them": [14, 20, 37, 127, 186], "therefor": [20, 91, 93, 94, 185], "theta": 170, "thi": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 37, 38, 51, 55, 57, 58, 59, 63, 70, 71, 72, 73, 74, 87, 88, 90, 91, 92, 93, 94, 95, 96, 111, 112, 113, 118, 120, 123, 124, 125, 126, 128, 129, 130, 132, 135, 139, 140, 142, 143, 144, 146, 147, 149, 150, 151, 156, 157, 159, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 185, 186, 187], "think": [20, 186], "thoma": [11, 17, 65, 67, 78, 187], "those": 13, "thr": 23, "three": [1, 2, 23, 35, 88, 128, 186, 188], "threshold": [20, 23, 131, 140, 151, 153, 154], "threshold_accuraci": 151, "through": [5, 24, 27, 87, 88, 95, 96, 156, 159], "throughout": 20, "thu": 94, "tianqi": 187, "tight_layout": [3, 4, 5, 9, 10, 23], "till": 187, "time": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 39, 41, 47, 48, 51, 52, 55, 57, 58, 59, 87, 88, 91, 93, 94, 156, 158, 159, 160, 161, 164, 179], "timothi": 187, "timur": [89, 90, 187], "tini": 55, "tinyimagenet": [55, 78], "tinyimagenetc": 55, "tmp_": 17, "tmp_target": [6, 32, 33, 34], "tmp_tgt": [6, 32, 33, 34], "to_dtyp": [6, 32, 33, 34], "to_pil_imag": [6, 32, 33, 34], "tobia": 187, "todtyp": [6, 11, 32, 33, 34, 57, 58, 59], "toi": [7, 8, 25, 26, 35, 188], "toimag": [11, 58], "tongliang": 187, "too": 124, "tool": [10, 20, 29, 37, 183], "top": [3, 6, 9, 11, 13, 20, 21, 22, 32, 33, 34, 35, 126, 127, 137, 188], "top_class": 127, "top_k": 152, "topk": 4, "torch": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 37, 38, 39, 57, 58, 59, 63, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 101, 102, 103, 105, 107, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 161, 164, 174, 175, 179, 181, 182, 184, 186], "torch_uncertainti": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186], "torchmetr": 13, "torchuncertainti": [0, 6, 7, 8, 15, 16, 21, 22, 25, 26, 32, 33, 34, 35, 79, 80, 81, 82, 83, 84, 157, 183, 188], "torchvis": [3, 4, 5, 6, 9, 10, 12, 14, 17, 20, 32, 33, 34, 57, 58, 59], "torr": 187, "total": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 94, 128, 188], "total_pixel": [6, 32, 33, 34], "totensor": [14, 17, 20], "tpami": [183, 187], "trade": 140, "train": [0, 1, 2, 7, 8, 23, 24, 25, 26, 35, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 68, 69, 74, 77, 79, 80, 81, 82, 83, 85, 86, 89, 90, 120, 156, 157, 158, 159, 160, 161, 163, 164, 179, 180, 181, 182, 183, 185, 187, 188], "train_d": 27, "train_data": 20, "train_dataload": [4, 10, 20, 47, 48], "train_dl": 20, "train_loss": [6, 11, 13, 20, 32, 33, 34], "train_siz": [51, 55], "train_transform": [6, 20, 32, 33, 34, 47, 48, 51, 52, 55, 57, 58, 59], "trainer": [3, 4, 9, 11, 12, 13, 20, 24, 27, 37, 186], "training_step": [179, 180, 181, 182], "training_task": 27, "trainload": 14, "trainset": 14, "trajectori": [94, 95, 96, 157], "tran": 187, "tranform": [94, 95, 96], "transax": 17, "transform": [3, 4, 5, 6, 9, 10, 11, 12, 14, 17, 20, 29, 32, 33, 34, 47, 48, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 179], "transformerdecoderlay": 95, "transformerencoderlay": 96, "translat": 136, "transpos": [3, 4, 5, 9, 10, 12, 14], "traub": [124, 187], "treat": 94, "truck": 14, "true": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 29, 32, 33, 34, 37, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 132, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 156, 157, 159, 163, 164, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186], "true_label": [126, 128], "trust": 185, "truth": [3, 4, 9, 10, 12, 20, 27, 124, 125, 127, 128, 129, 131, 136, 137, 140, 143, 145, 146, 147, 148, 149, 150], "try": [14, 20, 29, 38], "ts_": 186, "tsung": 187, "tta": [47, 48, 51, 52, 55, 179], "tu": [3, 4, 5, 9, 12, 27, 28], "tulightningcli": 37, "tuoodcriterion": [39, 40, 41, 179, 182, 186], "tupl": [56, 63, 67, 74, 87, 89, 91, 94, 101, 103, 105, 107, 123, 124, 125, 179, 180, 181, 182], "tuset": 187, "tutori": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 38, 183, 185, 186, 188], "tutorial_bayesian": [2, 3, 8, 9, 188], "tutorial_classif": [8, 10, 188], "tutorial_conform": [22, 23, 188], "tutorial_corrupt": [16, 17, 188], "tutorial_der_cub": [26, 27, 188], "tutorial_distribution_shift": [8, 11, 188], "tutorial_evidential_classif": [8, 12, 188], "tutorial_from_de_to_p": [19, 20, 188], "tutorial_mc_batch_norm": [2, 4, 188], "tutorial_mc_dropout": [2, 5, 188], "tutorial_muad_deep_en": [31, 32, 188], "tutorial_muad_mc_drop": [2, 6, 188], "tutorial_muad_pack": [31, 33, 188], "tutorial_muad_seg": [31, 34, 188], "tutorial_ood_detect": [8, 13, 188], "tutorial_pe_cifar10": [8, 14, 188], "tutorial_probabilistic_regress": [26, 28, 188], "tutorial_regress": [26, 29, 188], "tutorial_scal": [22, 24, 188], "tutrain": [3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 27, 28, 29, 32, 33, 34, 186], "tv_tensor": [6, 32, 33, 34, 57, 58, 59], "twice": 179, "two": [10, 13, 20, 29], "tyler": 187, "type": [11, 13, 38, 39, 40, 41, 45, 47, 48, 51, 52, 55, 63, 66, 67, 69, 74, 85, 86, 87, 88, 89, 90, 94, 95, 96, 100, 101, 102, 104, 106, 108, 109, 110, 111, 112, 115, 116, 117, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 136, 137, 140, 141, 142, 156, 157, 159, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183], "typeerror": [126, 128], "typic": [87, 88], "u": [6, 14, 20, 28, 38, 87, 88, 184, 186], "u2i": [20, 184], "uai": [160, 187], "uci": [28, 29, 37, 46, 49, 50, 53, 54, 56, 79, 80, 81, 82, 83, 84], "uci_dataset": 37, "uciregressiondatamodul": [28, 29], "uijl": 187, "uint8": [6, 32, 33, 34], "unari": [95, 96], "unbatch": 94, "uncalibr": 186, "uncertain": 4, "uncertainti": [0, 1, 3, 5, 7, 9, 10, 12, 13, 14, 15, 18, 23, 27, 28, 29, 30, 38, 89, 90, 100, 101, 102, 114, 116, 117, 123, 125, 138, 142, 161, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 184], "unchang": 20, "under": [6, 7, 8, 20, 32, 33, 34, 35, 74, 123, 124, 125, 153, 186, 188], "underestim": 149, "underli": [24, 91], "understand": 11, "underus": 20, "undo": [6, 32, 33, 34], "unet": [6, 32, 33, 34], "unexpect": [87, 88], "unfreez": 100, "unifi": [76, 187], "uniform": 126, "uniformli": 128, "union": 152, "unit": [145, 148], "unit_factor": [145, 148], "unknown": 29, "unlik": 126, "unnorm": [10, 14], "unsqueez": [6, 27, 32, 33, 34], "unsupervis": 187, "unus": [24, 76, 157, 179, 180, 181], "unweight": 132, "up": [6, 11, 13, 32, 33, 34, 37, 52, 57, 58, 59, 95, 96], "updat": [20, 24, 123, 124, 125, 127, 129, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 158, 160, 161, 179, 180, 181, 184], "update_wrapp": [157, 158, 161], "upload": 17, "upper": 27, "url": 17, "urllib": 17, "urlretriev": 17, "us": [6, 10, 11, 13, 14, 17, 20, 23, 24, 29, 30, 31, 35, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 74, 75, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 119, 120, 126, 127, 128, 134, 136, 140, 142, 144, 146, 147, 149, 150, 156, 157, 158, 159, 160, 161, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188], "usag": [6, 183], "use_final_model": 157, "use_train_id": 63, "use_tu_ckpt_format": 164, "user": [3, 9, 37, 186], "userwarn": 13, "usual": [6, 11, 32, 33, 34], "util": [13, 14, 17, 20], "v": 20, "v2": [6, 32, 33, 34, 57, 58, 59], "v4": [76, 187], "v_num": [6, 11, 13, 20, 32, 33, 34], "val": [24, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 85, 177, 186], "val_b": [176, 178], "val_d": 27, "val_dataload": [3, 4, 5, 6, 9, 10, 12, 20, 32, 33, 34], "val_dataset": 27, "val_split": [23, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "val_w": [176, 178], "valid": [6, 11, 13, 20, 23, 32, 33, 34, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 128, 132, 152, 179, 180, 181, 182], "validate_arg": [126, 128, 132, 152, 153, 154], "validation_step": [179, 180, 181, 182], "valu": [4, 5, 6, 10, 11, 12, 13, 20, 27, 28, 32, 33, 34, 37, 63, 64, 87, 88, 92, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 119, 120, 123, 124, 125, 127, 130, 131, 134, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 166, 167, 168, 170, 173, 176, 177, 178, 179, 180, 181, 182, 185], "valueerror": [39, 40, 41, 127, 129, 132, 133, 134, 137, 138, 142, 143, 156, 164, 175], "vanhouck": 187, "var": 4, "var_clamp": 161, "var_prob": [3, 9], "variabl": [28, 87, 88, 100, 166, 167, 168, 169, 170, 171, 172, 173, 175], "varianc": [3, 4, 5, 9, 27, 28, 150, 161], "variance_loc": 27, "variat": [3, 9, 142, 173], "variou": [39, 40, 41, 43, 45, 172, 186], "varoquaux": 187, "vdim": 94, "vector": [87, 88, 166, 167, 169, 171, 178, 185], "veri": [11, 12, 20, 24, 28, 186, 187], "verifi": 63, "version": [6, 11, 20, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 59, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 128, 184, 187], "version_": [20, 37], "vertic": 17, "verticalalign": 17, "vetrov": 187, "vgg": [37, 40], "via": [3, 9, 184, 186, 187], "vibnn": 9, "vim": [76, 187], "vincent": 187, "virtual": [76, 187], "vision": [5, 11, 74, 76, 187], "visit": [6, 32, 33, 34], "visual": [6, 32, 33, 34, 76, 187], "visualize_prediction_set": 23, "viz_data": 20, "vr": [142, 173], "vram": 157, "w": [14, 57, 58, 59, 88, 118, 186], "w_": [87, 91], "w_class": [6, 32, 33, 34], "wa": [20, 86, 124, 125], "wai": [3, 9, 28, 186], "wait": 185, "wang": [76, 187], "wang_on_the_pitfall_of_mixup_for_uncertainty_calibration_cvpr_2023_pap": 187, "want": [4, 6, 11, 13, 20, 27, 29, 37, 74, 84, 156, 184], "warn": [13, 28, 95, 96, 182], "wasn": 14, "wayn": 187, "we": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 38, 87, 88, 94, 152, 157, 161, 179, 185, 186], "weather": [6, 11, 32, 33, 34], "websit": [6, 32, 33, 34, 183], "wei": 187, "weight": [3, 9, 12, 20, 24, 27, 37, 38, 39, 87, 88, 91, 92, 94, 100, 113, 114, 115, 116, 117, 118, 120, 121, 124, 160, 161, 174, 176, 178], "weight_decai": [6, 12, 27, 32, 33, 34], "weight_subset": 174, "weights_onli": [13, 14, 20, 23], "weinberg": [24, 185, 187], "weird": 165, "well": [3, 9, 11, 13, 24, 128, 183, 186, 187], "wen": 187, "were": 17, "weslei": 187, "what": [5, 11, 13, 14, 20, 37, 39, 40, 41], "when": [3, 6, 9, 11, 13, 20, 24, 32, 33, 34, 37, 38, 87, 88, 91, 92, 93, 94, 124, 125, 126, 128, 136, 152, 156, 157, 159, 161, 164, 179, 180, 181, 186], "where": [6, 20, 24, 32, 33, 34, 63, 64, 66, 68, 69, 85, 87, 88, 91, 92, 93, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 123, 126, 127, 129, 130, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 166, 167, 169, 171, 173, 179], "whether": [37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 79, 80, 81, 82, 83, 85, 91, 93, 94, 95, 96, 100, 123, 124, 125, 126, 128, 132, 142, 156, 157, 159, 161, 163, 164, 165, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182], "which": [0, 3, 4, 6, 9, 10, 11, 12, 13, 20, 27, 28, 29, 32, 33, 34, 39, 40, 41, 45, 47, 48, 51, 52, 55, 86, 87, 88, 94, 101, 102, 131, 136, 140, 142, 157, 182, 186], "whichev": 37, "while": [94, 164, 185, 186], "why": 185, "whye": 187, "wide": [11, 13, 41, 149], "widehat": [87, 88], "wider": [160, 187], "wideresnet": 37, "width": [39, 40, 41, 57, 58, 59, 91, 92, 93, 94, 95, 96], "width_multipli": 39, "wierstra": [3, 9, 187], "wikimedia": 17, "wikipedia": [17, 127], "wilko": [27, 187], "wilson": 187, "window": 14, "wine": [56, 84], "wise": [28, 120, 180, 181], "within": [4, 5, 12, 27, 39, 40, 41, 94, 120, 151], "without": [20, 24, 129, 143], "wjmaddox": 161, "wojna": 187, "won": 156, "work": [20, 152, 159, 185], "worker": [10, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "workshop": [126, 187], "world": [13, 20, 24, 187], "wors": [11, 13], "worse_label": 69, "would": [20, 29, 37, 38, 186], "wrap": [5, 6, 87, 88, 156, 159, 163, 165, 186], "wrapper": [3, 4, 5, 9, 10, 12, 20, 28, 29, 37, 88, 128, 156, 157, 159, 163, 165, 174, 175, 179, 180, 181, 186], "wrong": 20, "wspace": [6, 32, 33, 34], "wu": 187, "x": [3, 4, 9, 14, 20, 27, 28, 88, 131, 136, 156, 157, 159, 161, 186], "x64": [10, 13, 27], "xiangyu": 187, "xuanlong": [183, 187], "xudong": 187, "y": [3, 9, 20, 24, 27, 88, 121, 129, 143, 145, 146, 147, 148, 149, 170, 185, 187], "y_i": [129, 143, 144, 145, 146, 147, 148, 149, 150], "yacht": [29, 56, 84], "yaml": [37, 51, 55, 186], "yan": 187, "yang": 187, "yaniv": [125, 187], "yann": [20, 187], "yarin": 187, "yaroslav": 187, "yee": 187, "yeme": 187, "yet": [37, 94, 182, 186], "yi": 187, "yixuan": 187, "yonatan": 187, "yoshua": 187, "you": [4, 5, 10, 11, 13, 14, 20, 23, 24, 27, 28, 29, 35, 37, 38, 63, 74, 84, 89, 90, 91, 93, 94, 95, 96, 120, 156, 159, 179, 181, 182, 183, 184, 186], "your": [13, 20, 37, 38, 87, 88, 184], "yu": [183, 187], "yuval": 187, "yuxuan": 187, "z": [77, 166], "z_1": 166, "z_2": 166, "z_c": 166, "z_i": 166, "zagoruyko": 187, "zbigniew": 187, "zero": [14, 91, 92, 94, 97, 98, 99, 101, 138], "zero_grad": 14, "zhang": 187, "zhao": 187, "zhaowei": 187, "zhe": 187, "zhi": 187, "zhizhong": 187, "zhou": 187, "zhu": 187, "zhuang": 187, "zip": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35], "zisserman": 187, "zoomblur": 17, "zorder": 27, "zou": 13, "zoubin": 187, "\u00ec": 94}, "titles": ["API Reference", "Bayesian Methods", "Computation times", "Train a Bayesian Neural Network in Three Minutes", "Training a LeNet with Monte Carlo Batch Normalization", "Training a LeNet with Monte-Carlo Dropout", "Monte Carlo Dropout for Semantic Segmentation on MUAD", "Classification", "Computation times", "Train a Bayesian Neural Network in 20 seconds", "Training a LeNet for Image Classification with TorchUncertainty", "Evaluating Model Performance Under Distribution Shift with TorchUncertainty", "Deep Evidential Classification on a Toy Example", "Out-of-distribution detection with TorchUncertainty", "From a Standard Classifier to a Packed-Ensemble", "Data Augmentation", "Computation times", "Corrupting Images with TorchUncertainty to Benchmark Robustness", "Ensemble Methods", "Computation times", "Improved Ensemble parameter-efficiency with Packed-Ensembles", "Post-hoc Methods", "Computation times", "Conformal Prediction on CIFAR-10 with TorchUncertainty", "Improve Top-label Calibration with Temperature Scaling", "Regression with Uncertainty", "Computation times", "Deep Evidential Regression on a Toy Example", "Deep Probabilistic Regression", "Training an MLP for Tabular Regression with TorchUncertainty", "Segmentation", "Computation times", "Deep ensembles Segmentation Tutorial using Muad Dataset", "Packed ensembles Segmentation Tutorial using Muad Dataset", "Segmentation Tutorial using Muad Dataset", "Tutorials", "Computation times", "CLI Guide", "Contributing", "ResNetBaseline", "VGGBaseline", "WideResNetBaseline", "BTSBaseline", "MLPBaseline", "DeepLabBaseline", "SegFormerBaseline", "BankMarketingDataModule", "CIFAR100DataModule", "CIFAR10DataModule", "DOTA2GamesDataModule", "HTRU2DataModule", "ImageNetDataModule", "MNISTDataModule", "OnlineShoppersDataModule", "SpamBaseDataModule", "TinyImageNetDataModule", "UCIRegressionDataModule", "CamVidDataModule", "CityscapesDataModule", "MUADDataModule", "Fractals", "FrostImages", "KITTIDepth", "MUAD", "NYUv2", "CIFAR100C", "CIFAR100N", "CIFAR10C", "CIFAR10H", "CIFAR10N", "ImageNetA", "ImageNetC", "ImageNetO", "ImageNetR", "MNISTC", "NotMNIST", "OpenImageO", "TinyImageNet", "TinyImageNetC", "BankMarketing", "DOTA2Games", "HTRU2", "OnlineShoppers", "SpamBase", "UCIRegression", "CamVid", "Cityscapes", "BatchConv2d", "BatchLinear", "MaskedConv2d", "MaskedLinear", "PackedConv2d", "PackedLayerNorm", "PackedLinear", "PackedMultiheadAttention", "PackedTransformerDecoderLayer", "PackedTransformerEncoderLayer", "BayesConv1d", "BayesConv2d", "BayesConv3d", "BayesLinear", "LPBNNConv2d", "LPBNNLinear", "CauchyConvNd", "CauchyLinear", "LaplaceConvNd", "LaplaceLinear", "NormalConvNd", "NormalInverseGammaConvNd", "NormalInverseGammaLinear", "NormalLinear", "StudentTConvNd", "StudentTLinear", "BCEWithLogitsLSLoss", "BetaNLL", "ConfidencePenaltyLoss", "ConflictualLoss", "DECLoss", "DERLoss", "DistributionNLLLoss", "ELBOLoss", "FocalLoss", "KLDiv", "AUSE", "AUGRC", "AURC", "AdaptiveCalibrationError", "BrierScore", "CalibrationError", "CategoricalNLL", "CovAt5Risk", "CovAtxRisk", "CoverageRate", "Disagreement", "Entropy", "FPR95", "FPRx", "GroupingLoss", "MutualInformation", "RiskAt80Cov", "RiskAtxCov", "SetSize", "VariationRatio", "DistributionNLL", "Log10", "MeanAbsoluteErrorInverse", "MeanGTRelativeAbsoluteError", "MeanGTRelativeSquaredError", "MeanSquaredErrorInverse", "MeanSquaredLogError", "SILog", "ThresholdAccuracy", "MeanIntersectionOverUnion", "SegmentationBinaryAUROC", "SegmentationBinaryAveragePrecision", "SegmentationFPR95", "BatchEnsemble", "CheckpointCollector", "EMA", "MCDropout", "SWA", "SWAG", "StochasticModel", "batch_ensemble", "deep_ensembles", "mc_dropout", "EnergyCriterion", "EntropyCriterion", "MaxLogitCriterion", "MaxSoftmaxCriterion", "MutualInformationCriterion", "PostProcessingCriterion", "TUOODCriterion", "VariationRatioCriterion", "LaplaceApprox", "MCBatchNorm", "MatrixScaler", "TemperatureScaler", "VectorScaler", "ClassificationRoutine", "PixelRegressionRoutine", "RegressionRoutine", "SegmentationRoutine", "Welcome to Torch Uncertainty", "Installation", "Introduction to Classification Uncertainty", "Quickstart", "References", "Computation times"], "titleterms": {"": [24, 186], "0": 187, "1": [3, 4, 5, 6, 9, 10, 12, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34], "10": [6, 23, 187], "100": 187, "10c": 11, "11": 6, "2": [3, 4, 5, 6, 9, 10, 12, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34], "20": 9, "3": [3, 4, 5, 6, 9, 10, 12, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34], "4": [3, 4, 5, 6, 9, 10, 12, 14, 17, 20, 23, 24, 27, 28, 29, 32, 33, 34], "5": [3, 4, 5, 6, 9, 10, 12, 14, 17, 23, 24, 27, 28, 29, 32, 33, 34], "6": [4, 6, 10, 23, 24, 27, 28, 29, 32, 33, 34], "7": [6, 23, 28, 29, 32, 33, 34], "8": [6, 23, 32, 33, 34], "9": [6, 34], "A": 187, "In": [11, 13], "Not": 187, "The": [3, 4, 5, 6, 9, 10, 12, 27, 28, 29, 32, 33, 34, 38, 185], "To": 20, "adapt": 187, "adaptivecalibrationerror": 126, "again": 24, "an": [14, 20, 29], "api": 0, "appli": 6, "approxim": 187, "architectur": 187, "area": 187, "augment": [15, 35, 187], "augrc": 124, "aurc": 125, "aus": 123, "averag": 187, "awar": 186, "background": 185, "bankmarket": 79, "bankmarketingdatamodul": 46, "base": 186, "baselin": 0, "batch": [4, 187], "batch_ensembl": 163, "batchconv2d": 87, "batchensembl": [156, 187], "batchlinear": 88, "bayesconv1d": 97, "bayesconv2d": 98, "bayesconv3d": 99, "bayesian": [0, 1, 3, 9, 35, 187], "bayeslinear": 100, "bcewithlogitslsloss": 113, "benchmark": [17, 28], "beta": 187, "betanl": 114, "binari": 187, "blur": 17, "brierscor": 127, "btsbaselin": 42, "build": [28, 38, 186], "c": 187, "calibr": [0, 24, 187], "calibrationerror": 128, "camvid": 85, "camviddatamodul": 57, "carlo": [4, 5, 6, 187], "categori": 0, "categoricalnl": 129, "cauchyconvnd": 103, "cauchylinear": 104, "chang": 13, "checkpointcollector": [157, 187], "cifar": [11, 23, 187], "cifar10": 14, "cifar100c": 65, "cifar100datamodul": 47, "cifar100n": 66, "cifar10c": 67, "cifar10datamodul": 48, "cifar10h": 68, "cifar10n": 69, "cityscap": 86, "cityscapesdatamodul": 58, "class": [0, 6, 32, 33, 34], "classif": [0, 7, 10, 11, 12, 13, 20, 35, 185, 187], "classifi": 14, "classificationroutin": 179, "clean": 38, "cli": [37, 186], "common": 38, "comput": [2, 6, 8, 16, 19, 22, 24, 26, 31, 32, 33, 34, 36, 188], "concept": 20, "confidencepenaltyloss": 115, "configur": 37, "conflictu": 187, "conflictualloss": 116, "conform": [0, 23], "conformalclsap": 23, "conformalclsrap": 23, "conformalclsthr": 23, "content": 183, "contribut": 38, "convolut": 0, "corrupt": 17, "covat5risk": 130, "covatxrisk": 131, "coverag": 187, "coverager": 132, "creat": [3, 4, 9, 10, 12, 20, 27], "criterion": 13, "cross": [0, 187], "curv": 187, "data": [11, 13, 14, 15, 28, 35, 187], "dataload": [23, 24], "datamodul": [0, 6, 10, 11, 13, 24, 29, 32, 33, 34, 38], "dataset": [0, 14, 20, 23, 32, 33, 34, 38, 187], "dec": 12, "decloss": 117, "deep": [12, 20, 27, 28, 32, 187], "deep_ensembl": 164, "deeplabbaselin": 44, "defin": [5, 11, 13, 14, 23, 29], "densiti": 0, "depth": 0, "der": 27, "derloss": 118, "detect": [0, 13], "develop": 38, "differ": 28, "disagr": 133, "distribut": [0, 11, 13, 28], "distributionnl": 143, "distributionnllloss": 119, "divers": 0, "document": 38, "dota2gam": 80, "dota2gamesdatamodul": 49, "download": 20, "dropout": [5, 6, 187], "dynam": 187, "ec": 24, "effici": 20, "elboloss": 120, "ema": 158, "energycriterion": 166, "ensembl": [0, 14, 18, 20, 32, 33, 35, 187], "entropi": [134, 187], "entropycriterion": 167, "error": 187, "estim": [0, 23], "evalu": [6, 10, 11, 13, 32, 33, 34], "everyth": [3, 4, 5, 9, 10, 12, 27, 29], "evidenti": [12, 27, 187], "exampl": [12, 27, 186], "expect": 187, "experi": 37, "face": 23, "featur": 187, "file": 37, "first": 186, "fit": 24, "fix": 187, "focal": 187, "focalloss": 121, "folder": 37, "foreword": [3, 9], "fpr95": 135, "fprx": 136, "fractal": 60, "from": [13, 14, 20, 23, 24, 184], "frostimag": 61, "function": [0, 14, 23], "further": 20, "gather": [3, 4, 5, 9, 10, 12, 27, 29], "gaussian": 187, "gener": 187, "go": 20, "gradient": 187, "group": [20, 187], "groupingloss": 137, "guid": 37, "guidelin": 38, "h": 187, "hamiltonian": 187, "hf": 24, "hoc": [21, 35], "htru2": 81, "htru2datamodul": 50, "hug": 23, "huggingfac": 13, "imag": [10, 14, 17], "imagenet": 187, "imageneta": 70, "imagenetc": 71, "imagenetdatamodul": 51, "imageneto": 72, "imagenetr": 73, "implement": 183, "import": [11, 13], "improv": [20, 24, 187], "inbal": [6, 32, 33, 34], "indic": 183, "infer": 187, "initi": [6, 11, 13, 32, 33, 34], "instal": [38, 183, 184], "instanti": [6, 10, 20, 29, 32, 33, 34], "introduct": [37, 185], "iter": 24, "its": 29, "kittidepth": 62, "kldiv": 122, "label": [24, 187], "langevin": 187, "laplac": 187, "laplaceapprox": 174, "laplaceconvnd": 105, "laplacelinear": 106, "layer": [0, 28, 186, 187], "lenet": [3, 4, 5, 9, 10, 12], "licens": 38, "lightn": [3, 4, 5, 9, 23, 27, 37, 186], "linear": 0, "load": [3, 4, 5, 6, 9, 10, 12, 13, 14, 23, 24, 27, 28, 29, 32, 33, 34], "local": 38, "log10": 144, "logit": 187, "loss": [0, 3, 4, 5, 6, 9, 10, 12, 14, 20, 27, 28, 29, 32, 33, 34, 187], "lpbnn": 187, "lpbnnconv2d": 101, "lpbnnlinear": 102, "maskedconv2d": 89, "maskedlinear": 90, "masksembl": 187, "matrix": 187, "matrixscal": 176, "maxlogitcriterion": 168, "maxsoftmaxcriterion": 169, "maxsup": 187, "mc": [5, 6], "mc_dropout": 165, "mcbatchnorm": [4, 175], "mcbn": 4, "mcdropout": 159, "mcp": [6, 32, 33, 34], "meanabsoluteerrorinvers": 145, "meangtrelativeabsoluteerror": 146, "meangtrelativesquarederror": 147, "meanintersectionoverunion": 152, "meansquarederrorinvers": 148, "meansquaredlogerror": 149, "method": [0, 1, 18, 21, 35, 38, 187], "metric": [0, 11, 186, 187], "mimo": 187, "minut": 3, "mitig": [6, 32, 33, 34], "mixup": 187, "mixupio": 187, "ml": 20, "mlp": [27, 28, 29], "mlpbaselin": 43, "mnist": 187, "mnistc": 74, "mnistdatamodul": 52, "model": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 23, 24, 27, 28, 29, 32, 33, 34, 186, 187], "monocular": 0, "mont": [4, 5, 6, 187], "more": [20, 186], "muad": [6, 32, 33, 34, 63, 187], "muaddatamodul": 59, "mutualinform": 138, "mutualinformationcriterion": 170, "n": 187, "necessari": [3, 4, 9, 12, 27], "network": [3, 9, 185, 187], "neural": [3, 9, 185, 187], "nll": 187, "nois": 17, "normal": [4, 14, 187], "normalconvnd": 107, "normalinversegammaconvnd": 108, "normalinversegammalinear": 109, "normallinear": 110, "normalmlp": 28, "note": 24, "notmnist": 75, "nyuv2": 64, "o": 187, "offici": 183, "onlineshopp": 82, "onlineshoppersdatamodul": 53, "ood": [0, 13], "openimag": 187, "openimageo": 76, "optim": [14, 27, 28], "option": 184, "other": [0, 17, 186], "out": [0, 13], "overconfid": 185, "pack": [14, 20, 33, 187], "packedconv2d": 91, "packedlayernorm": 92, "packedlinear": 93, "packedmultiheadattent": 94, "packedtransformerdecoderlay": 95, "packedtransformerencoderlay": 96, "paramet": 20, "perform": 11, "pixelregressionroutin": 180, "pixelwis": 0, "pointwis": 29, "post": [0, 21, 35, 38, 187], "postprocessingcriterion": 171, "pre": [6, 34], "predict": [0, 23], "pretrain": 23, "probabilist": [28, 29], "procedur": 186, "process": [0, 38, 187], "proper": 0, "pypi": 184, "pytorch": [4, 5, 27, 186], "quickstart": 186, "r": 187, "recip": 27, "refer": [0, 3, 9, 12, 13, 17, 24, 27, 185, 187], "regmixup": 187, "regress": [0, 25, 27, 28, 29, 35, 187], "regressionroutin": 181, "repositori": 23, "represent": 187, "resnet": 187, "resnetbaselin": 39, "risk": 187, "riskat80cov": 139, "riskatxcov": 140, "robust": 17, "routin": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 27, 28, 29, 32, 33, 34, 186], "scale": [0, 24, 187], "scaler": 24, "scope": 38, "score": 0, "second": 9, "segformerbaselin": 45, "segment": [0, 6, 30, 32, 33, 34, 35], "segmentationbinaryauroc": 153, "segmentationbinaryaverageprecis": 154, "segmentationfpr95": 155, "segmentationroutin": 182, "select": [0, 20], "semant": 6, "set": [23, 24, 28], "setsiz": 141, "setup": [11, 13], "shift": 11, "short": 185, "silog": 150, "smooth": 187, "snapshotensembl": 187, "sourc": 184, "spambas": 83, "spambasedatamodul": 54, "standard": 14, "stochast": 187, "stochasticmodel": 162, "studenttconvnd": 111, "studenttlinear": 112, "summari": 23, "svhn": 187, "swa": 160, "swag": 161, "tabl": 183, "tabular": [0, 29], "temperatur": [24, 187], "temperaturescal": 177, "test": [3, 4, 5, 6, 9, 12, 13, 14, 27, 28, 29, 32, 33, 34, 187], "textur": 187, "three": 3, "thresholdaccuraci": 151, "time": [2, 8, 16, 19, 22, 26, 31, 36, 187, 188], "tini": 187, "tinyimagenet": 77, "tinyimagenetc": 78, "tinyimagenetdatamodul": 55, "toi": [12, 27], "tool": 186, "top": 24, "torch": 183, "torchuncertainti": [3, 4, 5, 9, 10, 11, 12, 13, 17, 20, 23, 24, 27, 28, 29, 38, 186], "train": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 27, 28, 29, 32, 33, 34, 186], "trainer": [5, 6, 10, 23, 28, 29, 32, 33, 34], "tuoodcriterion": 172, "tutori": [32, 33, 34, 35], "uci": 0, "uciregress": 84, "uciregressiondatamodul": 56, "uncertain": 29, "uncertainti": [6, 20, 25, 32, 33, 34, 35, 183, 185, 186, 187], "under": [11, 187], "unus": 17, "up": [24, 28], "us": [3, 4, 5, 9, 12, 27, 28, 32, 33, 34, 186], "usag": [37, 186], "util": [3, 4, 5, 6, 9, 10, 12, 24, 27, 28, 29, 32, 33, 34], "variabl": [3, 4, 9, 12, 27], "variat": 187, "variationratio": 142, "variationratiocriterion": 173, "vector": 187, "vectorscal": 178, "vgg": 187, "vggbaselin": 40, "visual": [20, 23], "warp": 187, "weather": 17, "weight": [6, 32, 33, 34, 187], "welcom": 183, "wide": 187, "wideresnetbaselin": 41, "wrap": 4, "wrapper": [0, 6], "your": 186, "zero": 187}})