Search.setIndex({"docnames": ["api", "auto_tutorials/index", "auto_tutorials/sg_execution_times", "auto_tutorials/tutorial_bayesian", "auto_tutorials/tutorial_corruption", "auto_tutorials/tutorial_der_cubic", "auto_tutorials/tutorial_evidential_classification", "auto_tutorials/tutorial_from_de_to_pe", "auto_tutorials/tutorial_mc_batch_norm", "auto_tutorials/tutorial_mc_dropout", "auto_tutorials/tutorial_pe_cifar10", "auto_tutorials/tutorial_scaler", "cli_guide", "contributing", "generated/torch_uncertainty.baselines.classification.ResNetBaseline", "generated/torch_uncertainty.baselines.classification.VGGBaseline", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline", "generated/torch_uncertainty.baselines.depth.BTSBaseline", "generated/torch_uncertainty.baselines.regression.MLPBaseline", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline", "generated/torch_uncertainty.datamodules.CIFAR100DataModule", "generated/torch_uncertainty.datamodules.CIFAR10DataModule", "generated/torch_uncertainty.datamodules.ImageNetDataModule", "generated/torch_uncertainty.datamodules.MNISTDataModule", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule", "generated/torch_uncertainty.datamodules.UCIDataModule", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule", "generated/torch_uncertainty.datasets.Fractals", "generated/torch_uncertainty.datasets.FrostImages", "generated/torch_uncertainty.datasets.KITTIDepth", "generated/torch_uncertainty.datasets.MUAD", "generated/torch_uncertainty.datasets.NYUv2", "generated/torch_uncertainty.datasets.classification.CIFAR100C", "generated/torch_uncertainty.datasets.classification.CIFAR100N", "generated/torch_uncertainty.datasets.classification.CIFAR10C", "generated/torch_uncertainty.datasets.classification.CIFAR10H", "generated/torch_uncertainty.datasets.classification.CIFAR10N", "generated/torch_uncertainty.datasets.classification.ImageNetA", "generated/torch_uncertainty.datasets.classification.ImageNetC", "generated/torch_uncertainty.datasets.classification.ImageNetO", "generated/torch_uncertainty.datasets.classification.ImageNetR", "generated/torch_uncertainty.datasets.classification.MNISTC", "generated/torch_uncertainty.datasets.classification.NotMNIST", "generated/torch_uncertainty.datasets.classification.OpenImageO", "generated/torch_uncertainty.datasets.classification.TinyImageNet", "generated/torch_uncertainty.datasets.classification.TinyImageNetC", "generated/torch_uncertainty.datasets.regression.UCIRegression", "generated/torch_uncertainty.datasets.segmentation.CamVid", "generated/torch_uncertainty.datasets.segmentation.Cityscapes", "generated/torch_uncertainty.layers.BatchConv2d", "generated/torch_uncertainty.layers.BatchLinear", "generated/torch_uncertainty.layers.MaskedConv2d", "generated/torch_uncertainty.layers.MaskedLinear", "generated/torch_uncertainty.layers.PackedConv2d", "generated/torch_uncertainty.layers.PackedLinear", "generated/torch_uncertainty.layers.bayesian.BayesConv1d", "generated/torch_uncertainty.layers.bayesian.BayesConv2d", "generated/torch_uncertainty.layers.bayesian.BayesConv3d", "generated/torch_uncertainty.layers.bayesian.BayesLinear", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear", "generated/torch_uncertainty.losses.BetaNLL", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss", "generated/torch_uncertainty.losses.ConflictualLoss", "generated/torch_uncertainty.losses.DECLoss", "generated/torch_uncertainty.losses.DERLoss", "generated/torch_uncertainty.losses.DistributionNLLLoss", "generated/torch_uncertainty.losses.ELBOLoss", "generated/torch_uncertainty.losses.FocalLoss", "generated/torch_uncertainty.losses.KLDiv", "generated/torch_uncertainty.metrics.AUSE", "generated/torch_uncertainty.metrics.classification.AUGRC", "generated/torch_uncertainty.metrics.classification.AURC", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError", "generated/torch_uncertainty.metrics.classification.BrierScore", "generated/torch_uncertainty.metrics.classification.CalibrationError", "generated/torch_uncertainty.metrics.classification.CategoricalNLL", "generated/torch_uncertainty.metrics.classification.CovAt5Risk", "generated/torch_uncertainty.metrics.classification.CovAtxRisk", "generated/torch_uncertainty.metrics.classification.Disagreement", "generated/torch_uncertainty.metrics.classification.Entropy", "generated/torch_uncertainty.metrics.classification.FPR95", "generated/torch_uncertainty.metrics.classification.FPRx", "generated/torch_uncertainty.metrics.classification.GroupingLoss", "generated/torch_uncertainty.metrics.classification.MeanIntersectionOverUnion", "generated/torch_uncertainty.metrics.classification.MutualInformation", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov", "generated/torch_uncertainty.metrics.classification.RiskAtxCov", "generated/torch_uncertainty.metrics.classification.VariationRatio", "generated/torch_uncertainty.metrics.regression.DistributionNLL", "generated/torch_uncertainty.metrics.regression.Log10", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError", "generated/torch_uncertainty.metrics.regression.SILog", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy", "generated/torch_uncertainty.models.CheckpointEnsemble", "generated/torch_uncertainty.models.EMA", "generated/torch_uncertainty.models.MCDropout", "generated/torch_uncertainty.models.SWA", "generated/torch_uncertainty.models.SWAG", "generated/torch_uncertainty.models.StochasticModel", "generated/torch_uncertainty.models.deep_ensembles", "generated/torch_uncertainty.models.mc_dropout", "generated/torch_uncertainty.post_processing.LaplaceApprox", "generated/torch_uncertainty.post_processing.MCBatchNorm", "generated/torch_uncertainty.post_processing.MatrixScaler", "generated/torch_uncertainty.post_processing.TemperatureScaler", "generated/torch_uncertainty.post_processing.VectorScaler", "generated/torch_uncertainty.routines.ClassificationRoutine", "generated/torch_uncertainty.routines.PixelRegressionRoutine", "generated/torch_uncertainty.routines.RegressionRoutine", "generated/torch_uncertainty.routines.SegmentationRoutine", "index", "installation", "introduction_uncertainty", "quickstart", "references", "sg_execution_times"], "filenames": ["api.rst", "auto_tutorials/index.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/tutorial_bayesian.rst", "auto_tutorials/tutorial_corruption.rst", "auto_tutorials/tutorial_der_cubic.rst", "auto_tutorials/tutorial_evidential_classification.rst", "auto_tutorials/tutorial_from_de_to_pe.rst", "auto_tutorials/tutorial_mc_batch_norm.rst", "auto_tutorials/tutorial_mc_dropout.rst", "auto_tutorials/tutorial_pe_cifar10.rst", "auto_tutorials/tutorial_scaler.rst", "cli_guide.rst", "contributing.rst", "generated/torch_uncertainty.baselines.classification.ResNetBaseline.rst", "generated/torch_uncertainty.baselines.classification.VGGBaseline.rst", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline.rst", "generated/torch_uncertainty.baselines.depth.BTSBaseline.rst", "generated/torch_uncertainty.baselines.regression.MLPBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline.rst", "generated/torch_uncertainty.datamodules.CIFAR100DataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR10DataModule.rst", "generated/torch_uncertainty.datamodules.ImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.MNISTDataModule.rst", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.UCIDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule.rst", "generated/torch_uncertainty.datasets.Fractals.rst", "generated/torch_uncertainty.datasets.FrostImages.rst", "generated/torch_uncertainty.datasets.KITTIDepth.rst", "generated/torch_uncertainty.datasets.MUAD.rst", "generated/torch_uncertainty.datasets.NYUv2.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100N.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10H.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10N.rst", "generated/torch_uncertainty.datasets.classification.ImageNetA.rst", "generated/torch_uncertainty.datasets.classification.ImageNetC.rst", "generated/torch_uncertainty.datasets.classification.ImageNetO.rst", "generated/torch_uncertainty.datasets.classification.ImageNetR.rst", "generated/torch_uncertainty.datasets.classification.MNISTC.rst", "generated/torch_uncertainty.datasets.classification.NotMNIST.rst", "generated/torch_uncertainty.datasets.classification.OpenImageO.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNet.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNetC.rst", "generated/torch_uncertainty.datasets.regression.UCIRegression.rst", "generated/torch_uncertainty.datasets.segmentation.CamVid.rst", "generated/torch_uncertainty.datasets.segmentation.Cityscapes.rst", "generated/torch_uncertainty.layers.BatchConv2d.rst", "generated/torch_uncertainty.layers.BatchLinear.rst", "generated/torch_uncertainty.layers.MaskedConv2d.rst", "generated/torch_uncertainty.layers.MaskedLinear.rst", "generated/torch_uncertainty.layers.PackedConv2d.rst", "generated/torch_uncertainty.layers.PackedLinear.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv1d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv2d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv3d.rst", "generated/torch_uncertainty.layers.bayesian.BayesLinear.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear.rst", "generated/torch_uncertainty.losses.BetaNLL.rst", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss.rst", "generated/torch_uncertainty.losses.ConflictualLoss.rst", "generated/torch_uncertainty.losses.DECLoss.rst", "generated/torch_uncertainty.losses.DERLoss.rst", "generated/torch_uncertainty.losses.DistributionNLLLoss.rst", "generated/torch_uncertainty.losses.ELBOLoss.rst", "generated/torch_uncertainty.losses.FocalLoss.rst", "generated/torch_uncertainty.losses.KLDiv.rst", "generated/torch_uncertainty.metrics.AUSE.rst", "generated/torch_uncertainty.metrics.classification.AUGRC.rst", "generated/torch_uncertainty.metrics.classification.AURC.rst", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError.rst", "generated/torch_uncertainty.metrics.classification.BrierScore.rst", "generated/torch_uncertainty.metrics.classification.CalibrationError.rst", "generated/torch_uncertainty.metrics.classification.CategoricalNLL.rst", "generated/torch_uncertainty.metrics.classification.CovAt5Risk.rst", "generated/torch_uncertainty.metrics.classification.CovAtxRisk.rst", "generated/torch_uncertainty.metrics.classification.Disagreement.rst", "generated/torch_uncertainty.metrics.classification.Entropy.rst", "generated/torch_uncertainty.metrics.classification.FPR95.rst", "generated/torch_uncertainty.metrics.classification.FPRx.rst", "generated/torch_uncertainty.metrics.classification.GroupingLoss.rst", "generated/torch_uncertainty.metrics.classification.MeanIntersectionOverUnion.rst", "generated/torch_uncertainty.metrics.classification.MutualInformation.rst", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov.rst", "generated/torch_uncertainty.metrics.classification.RiskAtxCov.rst", "generated/torch_uncertainty.metrics.classification.VariationRatio.rst", "generated/torch_uncertainty.metrics.regression.DistributionNLL.rst", "generated/torch_uncertainty.metrics.regression.Log10.rst", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError.rst", "generated/torch_uncertainty.metrics.regression.SILog.rst", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy.rst", "generated/torch_uncertainty.models.CheckpointEnsemble.rst", "generated/torch_uncertainty.models.EMA.rst", "generated/torch_uncertainty.models.MCDropout.rst", "generated/torch_uncertainty.models.SWA.rst", "generated/torch_uncertainty.models.SWAG.rst", "generated/torch_uncertainty.models.StochasticModel.rst", "generated/torch_uncertainty.models.deep_ensembles.rst", "generated/torch_uncertainty.models.mc_dropout.rst", "generated/torch_uncertainty.post_processing.LaplaceApprox.rst", "generated/torch_uncertainty.post_processing.MCBatchNorm.rst", "generated/torch_uncertainty.post_processing.MatrixScaler.rst", "generated/torch_uncertainty.post_processing.TemperatureScaler.rst", "generated/torch_uncertainty.post_processing.VectorScaler.rst", "generated/torch_uncertainty.routines.ClassificationRoutine.rst", "generated/torch_uncertainty.routines.PixelRegressionRoutine.rst", "generated/torch_uncertainty.routines.RegressionRoutine.rst", "generated/torch_uncertainty.routines.SegmentationRoutine.rst", "index.rst", "installation.rst", "introduction_uncertainty.rst", "quickstart.rst", "references.rst", "sg_execution_times.rst"], "titles": ["API Reference", "Tutorials", "Computation times", "Train a Bayesian Neural Network in Three Minutes", "Corrupting Images with TorchUncertainty to Benchmark Robustness", "Deep Evidential Regression on a Toy Example", "Deep Evidential Classification on a Toy Example", "Improved Ensemble parameter-efficiency with Packed-Ensembles", "Training a LeNet with Monte Carlo Batch Normalization", "Training a LeNet with Monte-Carlo Dropout", "From a Standard Classifier to a Packed-Ensemble", "Improve Top-label Calibration with Temperature Scaling", "CLI Guide", "Contributing", "ResNetBaseline", "VGGBaseline", "WideResNetBaseline", "BTSBaseline", "MLPBaseline", "DeepLabBaseline", "SegFormerBaseline", "CIFAR100DataModule", "CIFAR10DataModule", "ImageNetDataModule", "MNISTDataModule", "TinyImageNetDataModule", "UCIDataModule", "CamVidDataModule", "CityscapesDataModule", "MUADDataModule", "Fractals", "FrostImages", "KITTIDepth", "MUAD", "NYUv2", "CIFAR100C", "CIFAR100N", "CIFAR10C", "CIFAR10H", "CIFAR10N", "ImageNetA", "ImageNetC", "ImageNetO", "ImageNetR", "MNISTC", "NotMNIST", "OpenImageO", "TinyImageNet", "TinyImageNetC", "UCIRegression", "CamVid", "Cityscapes", "BatchConv2d", "BatchLinear", "MaskedConv2d", "MaskedLinear", "PackedConv2d", "PackedLinear", "BayesConv1d", "BayesConv2d", "BayesConv3d", "BayesLinear", "LPBNNConv2d", "LPBNNLinear", "BetaNLL", "ConfidencePenaltyLoss", "ConflictualLoss", "DECLoss", "DERLoss", "DistributionNLLLoss", "ELBOLoss", "FocalLoss", "KLDiv", "AUSE", "AUGRC", "AURC", "AdaptiveCalibrationError", "BrierScore", "CalibrationError", "CategoricalNLL", "CovAt5Risk", "CovAtxRisk", "Disagreement", "Entropy", "FPR95", "FPRx", "GroupingLoss", "MeanIntersectionOverUnion", "MutualInformation", "RiskAt80Cov", "RiskAtxCov", "VariationRatio", "DistributionNLL", "Log10", "MeanAbsoluteErrorInverse", "MeanGTRelativeAbsoluteError", "MeanGTRelativeSquaredError", "MeanSquaredErrorInverse", "MeanSquaredLogError", "SILog", "ThresholdAccuracy", "CheckpointEnsemble", "EMA", "MCDropout", "SWA", "SWAG", "StochasticModel", "torch_uncertainty.models.deep_ensembles", "torch_uncertainty.models.mc_dropout", "LaplaceApprox", "MCBatchNorm", "MatrixScaler", "TemperatureScaler", "VectorScaler", "ClassificationRoutine", "PixelRegressionRoutine", "RegressionRoutine", "SegmentationRoutine", "Welcome to Torch Uncertainty", "Installation", "Introduction to Classification Uncertainty", "Quickstart", "References", "Computation times"], "terms": {"The": [0, 4, 7, 10, 11, 12, 26, 33, 37, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 99, 100, 101, 102, 103, 105, 107, 114, 115, 116, 117, 118, 121, 122], "ar": [0, 3, 4, 7, 8, 10, 11, 12, 13, 20, 33, 52, 53, 56, 57, 77, 79, 80, 81, 82, 86, 88, 91, 92, 94, 97, 114, 120, 121, 122], "main": [0, 3, 7, 10, 11, 13, 74, 75], "build": [0, 11, 37, 44, 107, 117], "block": [0, 52, 54, 55, 56, 62, 105], "librari": [0, 3, 4, 7, 13, 109, 121, 122], "thei": [0, 7, 9, 10, 11, 12, 73], "defin": [0, 3, 5, 6, 7, 8, 11, 107, 114, 116, 117], "framework": [0, 8], "which": [0, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 20, 21, 22, 23, 24, 51, 62, 63, 81, 85, 90, 91, 101, 121], "train": [0, 1, 2, 11, 12, 14, 15, 16, 20, 21, 22, 23, 25, 26, 27, 28, 29, 33, 34, 36, 38, 39, 44, 47, 49, 50, 51, 54, 55, 70, 101, 102, 103, 104, 105, 110, 114, 115, 116, 117, 118, 120, 122, 123], "evalu": [0, 7, 8, 9, 10, 11, 12, 14, 15, 16, 21, 22, 23, 24, 27, 28, 74, 75, 101, 103, 114, 115, 116, 117, 121, 122], "allow": [0, 7, 10, 11], "easi": [0, 121], "comput": [0, 3, 7, 9, 44, 46, 55, 57, 65, 66, 69, 70, 72, 73, 74, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 114, 117, 121, 122], "differ": [0, 4, 7, 8, 12, 49, 101, 105, 121], "crucial": 0, "uncertainti": [0, 3, 5, 6, 9, 10, 13, 54, 55, 61, 62, 63, 64, 66, 67, 73, 74, 75, 88, 105, 107, 109, 110, 119], "context": 0, "name": [0, 12, 13, 26, 37, 44, 49, 74, 75], "torchuncertainti": [0, 1, 2, 49, 118, 123], "provid": [0, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 20, 27, 28, 29, 73, 74, 75, 78, 88, 121], "lightn": [0, 6, 7, 11, 114, 118], "base": [0, 3, 5, 6, 7, 8, 9, 12, 21, 22, 23, 24, 27, 28, 73, 74, 75, 77, 79, 82, 83, 86, 87, 88, 92, 104, 105, 118, 119, 120, 122], "can": [0, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 27, 28, 29, 33, 52, 88, 114, 116, 117, 119, 121, 122], "easili": [0, 11, 121], "These": [0, 4, 7, 121], "inherit": [0, 12], "from": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 27, 28, 29, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 64, 70, 72, 73, 79, 82, 83, 85, 88, 94, 95, 96, 97, 98, 99, 101, 105, 109, 114, 115, 117, 118, 121, 122, 123], "specif": [0, 3, 5, 13, 121], "design": 0, "benchmark": [0, 1, 2, 37, 41, 44, 48, 118, 121, 122, 123], "similar": [0, 7, 114], "set": [0, 3, 5, 7, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 38, 39, 49, 50, 61, 69, 70, 73, 77, 79, 82, 83, 86, 88, 92, 93, 95, 96, 97, 98, 99, 100, 103, 110, 111, 112, 113, 114, 117, 120, 121], "here": [0, 3, 7, 8, 9, 10, 11, 12, 52, 53, 114, 116, 117, 121], "constant": [0, 71], "architectur": [0, 12, 14, 15, 20, 118, 121], "On": [1, 11, 64, 66, 111, 112, 113, 120, 122], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 28, 29, 44, 52, 53, 55, 56, 57, 68, 70, 73, 74, 75, 80, 101, 103, 109, 110, 118, 120, 121, 122], "page": [1, 13, 118, 120, 121], "you": [1, 5, 7, 8, 9, 10, 11, 12, 13, 33, 44, 49, 54, 55, 56, 57, 70, 103, 114, 116, 117, 118, 119, 121], "find": [1, 7, 9, 114, 116, 117, 121, 122], "insight": 1, "don": [1, 7, 8, 9, 10, 11], "t": [1, 7, 8, 9, 10, 11, 50, 53, 71, 77, 104, 122], "hesit": [1, 121], "open": [1, 4, 7, 10, 11, 13, 46, 122], "an": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 27, 28, 29, 44, 52, 53, 64, 73, 74, 75, 82, 88, 114, 115, 116, 121, 122], "issu": [1, 7, 10, 11, 13, 44, 121], "have": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 118, 119, 120, 121], "ani": [1, 7, 10, 11, 13, 14, 15, 16, 52, 53, 54, 55, 121], "question": [1, 7], "suggest": [1, 8, 13], "improv": [1, 2, 3, 5, 6, 8, 9, 85, 120, 122, 123], "top": [1, 2, 3, 7, 76, 77, 78, 86, 123], "label": [1, 2, 3, 5, 6, 7, 8, 9, 10, 37, 44, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 90, 91, 92, 99, 111, 112, 113, 122, 123], "calibr": [1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 66, 74, 75, 76, 78, 86, 111, 112, 113, 114, 117, 120, 121, 123], "temperatur": [1, 2, 13, 111, 112, 113, 121, 123], "scale": [1, 2, 13, 14, 15, 16, 27, 28, 29, 46, 54, 55, 94, 95, 96, 97, 98, 99, 105, 111, 112, 113, 121, 123], "lenet": [1, 2, 7, 123], "mont": [1, 2, 13, 14, 15, 16, 110, 123], "carlo": [1, 2, 13, 14, 15, 16, 110, 123], "dropout": [1, 2, 13, 14, 15, 16, 103, 108, 123], "batch": [1, 2, 3, 5, 10, 12, 14, 15, 16, 21, 22, 23, 24, 26, 27, 28, 29, 53, 54, 55, 73, 77, 79, 82, 83, 86, 88, 92, 93, 99, 103, 109, 110, 114, 115, 116, 117, 123], "normal": [1, 2, 5, 7, 14, 28, 29, 58, 59, 60, 61, 68, 74, 75, 77, 79, 82, 86, 88, 92, 110, 120, 123], "deep": [1, 2, 3, 9, 13, 67, 68, 74, 75, 76, 99, 105, 107, 109, 110, 121, 123], "evidenti": [1, 2, 67, 68, 123], "regress": [1, 2, 12, 18, 26, 49, 68, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 109, 115, 116, 121, 123], "toi": [1, 2, 123], "exampl": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 52, 53, 117, 119, 122, 123], "bayesian": [1, 2, 6, 8, 9, 11, 13, 58, 59, 60, 61, 62, 63, 65, 70, 72, 78, 105, 109, 110, 118, 123], "neural": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 37, 41, 48, 61, 62, 63, 64, 65, 70, 72, 74, 75, 86, 111, 112, 113, 118, 123], "network": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 37, 41, 48, 56, 57, 61, 62, 63, 64, 65, 70, 72, 74, 75, 86, 99, 110, 111, 112, 113, 118, 123], "three": [1, 2, 53, 121, 123], "minut": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 123], "classif": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 67, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 107, 109, 114, 121, 123], "corrupt": [1, 2, 21, 22, 37, 41, 44, 48, 122, 123], "imag": [1, 2, 3, 6, 7, 8, 9, 21, 22, 23, 24, 27, 28, 29, 33, 37, 38, 39, 44, 45, 46, 48, 50, 51, 52, 54, 56, 99, 115, 119, 122, 123], "robust": [1, 2, 37, 41, 44, 48, 122, 123], "standard": [1, 2, 3, 7, 12, 61, 62, 63, 121, 123], "classifi": [1, 2, 3, 7, 8, 9, 123], "pack": [1, 2, 12, 14, 15, 16, 56, 57, 118, 121, 123], "ensembl": [1, 2, 3, 8, 9, 13, 14, 15, 16, 20, 52, 53, 54, 56, 57, 82, 88, 101, 102, 107, 114, 115, 116, 118, 121, 123], "paramet": [1, 2, 3, 5, 6, 10, 11, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 37, 38, 39, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123], "effici": [1, 2, 9, 11, 52, 53, 118, 121, 122, 123], "download": [1, 3, 4, 5, 6, 8, 9, 10, 11, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50], "all": [1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 35, 37, 44, 48, 52, 54, 56, 110, 119, 121, 123], "python": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 118, 119, 121], "sourc": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "code": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 121], "auto_tutorials_python": 1, "zip": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "jupyt": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "notebook": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "auto_tutorials_jupyt": 1, "galleri": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 123], "gener": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 74, 88, 104], "sphinx": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 119], "10": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 34, 37, 60, 76, 78, 93, 118, 119, 121, 123], "04": [2, 7, 9, 10, 11, 123], "495": [2, 7, 123], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 123], "execut": [2, 7, 10, 11, 12, 57, 123], "9": [2, 5, 6, 7, 8, 9, 10, 11, 12, 123], "file": [2, 3, 4, 7, 10, 11, 14, 15, 16, 23, 38, 39, 118, 119, 121, 123], "auto_tutori": 2, "mem": [2, 123], "mb": [2, 123], "tutorial_from_de_to_p": [2, 7, 123], "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 121, 123], "03": [2, 7, 10, 11, 123], "47": [2, 5, 6, 7, 9, 10, 11, 123], "173": [2, 7, 123], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 32, 34, 44, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 69, 74, 75, 77, 85, 92, 99, 105, 110, 111, 112, 113, 117, 120, 123], "tutorial_pe_cifar10": [2, 10, 123], "02": [2, 4, 7, 10, 11, 123], "05": [2, 4, 7, 10, 11, 12, 123], "832": [2, 7, 10, 123], "tutorial_bayesian": [2, 3, 123], "00": [2, 3, 4, 5, 7, 8, 9, 10, 11, 123], "59": [2, 3, 5, 7, 10, 11, 123], "383": [2, 3, 7, 123], "tutorial_evidential_classif": [2, 6, 123], "57": [2, 6, 7, 10, 11, 123], "071": [2, 6, 7, 123], "tutorial_mc_dropout": [2, 9, 123], "707": [2, 7, 9, 123], "tutorial_mc_batch_norm": [2, 8, 123], "39": [2, 5, 7, 8, 10, 11, 123], "775": [2, 7, 8, 123], "tutorial_scal": [2, 11, 123], "30": [2, 5, 7, 10, 11, 53, 105, 123], "246": [2, 5, 7, 11, 123], "tutorial_corrupt": [2, 4, 123], "207": [2, 4, 7, 123], "tutorial_der_cub": [2, 5, 123], "07": [2, 7, 11, 123], "101": [2, 5, 7, 14, 123], "go": [3, 4, 5, 6, 8, 9, 10, 11, 121], "end": [3, 4, 5, 6, 7, 8, 9, 10, 11, 105], "full": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "In": [3, 5, 6, 7, 8, 9, 10, 11, 12, 37, 41, 44, 46, 48, 52, 73, 74, 75, 76, 78, 86, 101, 104, 105, 107, 109, 110, 111, 112, 113, 120, 121, 122], "tutori": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 118, 120, 121], "we": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 52, 53, 105, 120, 121], "variat": [3, 14, 15, 16, 91, 114], "infer": [3, 7, 8, 29], "bnn": 3, "mnist": [3, 6, 7, 8, 9, 24, 44], "dataset": [3, 5, 6, 8, 9, 11, 12, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 110, 111, 112, 113, 114, 118, 121], "class": [3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121], "estim": [3, 5, 6, 7, 8, 9, 12, 14, 15, 16, 20, 52, 53, 54, 55, 56, 57, 64, 73, 74, 75, 77, 82, 83, 86, 88, 91, 95, 96, 98, 99, 103, 105, 107, 108, 109, 110, 118, 120, 121, 122], "predict": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 20, 69, 74, 75, 79, 81, 82, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 109, 114, 120, 122], "via": [3, 7, 10, 11, 119, 121], "weight": [3, 5, 7, 11, 12, 13, 14, 52, 53, 56, 61, 64, 65, 66, 67, 68, 70, 71, 74, 104, 105, 109, 111, 113], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29, 30, 33, 34, 37, 38, 39, 44, 45, 46, 48, 49, 50, 52, 53, 56, 57, 62, 63, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 88, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 107, 109, 110, 114, 115, 116, 119, 120, 121], "achiev": [3, 7], "consid": [3, 5, 6, 7, 8, 9, 109, 122], "random": [3, 7, 10, 105], "learn": [3, 6, 7, 9, 12, 13, 52, 53, 67, 76, 105, 109, 111, 112, 113, 122], "posterior": [3, 9, 58, 59, 60, 61, 62, 63, 105, 109, 118, 122], "distribut": [3, 5, 6, 7, 9, 11, 13, 18, 21, 22, 23, 24, 25, 46, 61, 65, 68, 69, 92, 114, 115, 116, 117, 120, 121, 122], "contrast": [3, 4, 28, 29, 74, 75], "onli": [3, 4, 6, 7, 10, 13, 14, 15, 16, 56, 57, 77, 103, 104, 105, 108, 110, 121], "singl": [3, 6, 7, 20, 83, 99, 101, 115, 116, 122], "seen": [3, 7, 12], "dirac": 3, "For": [3, 4, 7, 9, 12, 13, 38, 39, 99, 102, 105, 119, 121, 122], "more": [3, 5, 8, 9, 10, 11, 12, 109, 114, 116, 117, 120, 122], "inform": [3, 7, 9, 14, 15, 16, 30, 45, 88, 114], "reader": [3, 9], "follow": [3, 4, 5, 6, 7, 8, 9, 12, 13, 27, 28, 29, 74, 75, 94, 95, 96, 97, 98, 119, 120, 121, 122], "resourc": [3, 9], "icml2015": 3, "hand": 3, "user": [3, 7, 10, 11, 12, 121], "ieee": [3, 7, 118, 122], "intellig": 3, "magazin": 3, "part": [3, 5, 6, 7, 8, 9, 13], "alreadi": [3, 5, 6, 7, 8, 9, 10, 11, 13, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 119], "implement": [3, 5, 6, 8, 9, 12, 13, 52, 53, 57, 71, 88, 122], "tu": [3, 5, 6, 8, 9], "To": [3, 5, 6, 8, 9, 11, 12, 13, 118, 119, 120, 121], "modul": [3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 20, 52, 53, 70, 72, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121], "our": [3, 5, 6, 8, 9, 10, 12, 78, 121], "tutrain": [3, 5, 6, 7, 8, 9, 121], "bayesian_lenet": 3, "li": [3, 6, 8, 122], "torch_uncertainti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121], "object": [3, 5, 6, 7, 10, 11, 13, 46, 70, 71, 73, 74, 75, 122], "elboloss": 3, "datamodul": [3, 5, 6, 7, 8, 9, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 118, 121], "handl": [3, 6, 7, 8, 9, 11, 121], "dataload": [3, 5, 6, 7, 8, 9, 10, 21, 22, 23, 24, 25, 27, 28, 29, 105, 121], "mnistdatamodul": [3, 6, 8, 9], "also": [3, 4, 5, 6, 7, 8, 9, 11, 13, 88, 118, 120, 121], "need": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 121], "torch": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28, 29, 33, 50, 51, 52, 53, 56, 57, 62, 63, 82, 83, 85, 86, 88, 92, 101, 105, 109, 110, 114, 116, 117, 119, 121], "pytorch": [3, 6, 7, 10, 11, 12, 13, 52, 53, 71, 104, 105, 115, 116, 118, 119], "": [3, 4, 5, 6, 7, 8, 9, 10, 12, 33, 44, 49, 56, 57, 61, 77, 86, 118, 120, 122], "nn": [3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 70, 72, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121], "pathlib": [3, 6, 8, 9], "import": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 28, 29, 121], "path": [3, 6, 8, 9, 10, 23, 27, 28, 29, 34, 37, 44], "classificationroutin": [3, 6, 7, 8, 9, 12, 70, 121], "adam": [3, 5, 6, 121, 122], "default": [3, 6, 7, 10, 11, 12, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 37, 38, 39, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 57, 61, 62, 63, 65, 69, 71, 73, 74, 75, 77, 79, 82, 83, 88, 92, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "rate": [3, 5, 6, 7, 12, 14, 15, 16, 75, 84, 85, 111, 112, 113, 117], "001": [3, 6, 10], "def": [3, 4, 5, 6, 7, 8, 9, 10, 12, 121], "optim_lenet": [3, 6], "lr": [3, 5, 6, 7, 10, 12, 111, 112, 113, 121], "1e": [3, 5, 6, 34, 62, 63, 65, 105, 117, 121], "return": [3, 4, 5, 6, 7, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 51, 54, 55, 65, 66, 70, 73, 74, 75, 77, 79, 80, 81, 82, 83, 85, 86, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 103, 105, 107, 114, 115, 116, 117, 121], "instanti": [3, 9], "trainer": [3, 5, 6, 7, 8, 11, 12, 121], "root": [3, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 99, 105, 121], "log": [3, 5, 6, 7, 8, 9, 11, 14, 15, 16, 64, 67, 68, 69, 79, 92, 98, 99, 114, 115, 117], "transform": [3, 4, 6, 7, 8, 9, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "pleas": [3, 5, 7, 8, 10, 11, 13, 120, 122], "note": [3, 5, 7, 8, 10, 12, 49, 56, 57], "ood": [3, 7, 10, 14, 15, 16, 85, 114], "detect": [3, 7, 10, 13, 14, 15, 16, 46, 71, 114, 121, 122], "eval_ood": [3, 7, 11, 14, 15, 16, 21, 22, 23, 24, 25, 114, 121], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 37, 38, 39, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 73, 74, 75, 76, 77, 78, 87, 91, 96, 97, 98, 99, 101, 103, 108, 109, 110, 111, 112, 113, 116, 120, 121], "final": [3, 5, 11, 77, 86, 101, 120, 121], "blueprint": [3, 9], "acceler": [3, 5, 6, 7, 8, 9, 12], "cpu": [3, 5, 6, 7, 8, 9, 11, 110, 111, 112, 113, 118, 119], "enable_progress_bar": [3, 5, 6, 8, 9], "fals": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 56, 57, 58, 59, 60, 61, 77, 78, 84, 85, 96, 97, 98, 99, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 121], "max_epoch": [3, 5, 6, 7, 8, 9, 12, 121], "data": [3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 50, 52, 53, 54, 55, 61, 62, 63, 64, 111, 112, 113, 118, 121], "batch_siz": [3, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 57, 108, 109, 121], "128": [3, 6, 7, 8, 9, 12], "num_channel": [3, 6, 8, 9], "num_class": [3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 19, 20, 76, 77, 78, 86, 87, 111, 113, 114, 117, 121], "Then": [3, 5, 6, 12, 13, 119], "just": [3, 7, 11, 121], "dure": [3, 5, 6, 7, 10, 11, 27, 28, 29, 70, 103, 121], "do": [3, 5, 7, 9, 10, 11, 12, 13, 114, 116, 117, 121], "redefin": 3, "elbo": [3, 70], "partial": 3, "function": [3, 5, 6, 7, 8, 9, 11, 12, 13, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 70, 78, 103, 109, 114, 115, 116, 117, 120, 121, 122], "functool": 3, "hyperparamet": [3, 12], "propos": [3, 4], "blitz": 3, "As": [3, 7, 8, 74, 75, 94, 95, 96, 97, 98, 121], "crossentropyloss": [3, 7, 8, 9, 10, 12, 121], "likelihood": [3, 5, 6, 7, 8, 9, 11, 64, 68, 69, 79, 88, 92, 120], "inner_loss": [3, 70], "kl_weight": [3, 70], "10000": [3, 7, 10], "num_sampl": [3, 5, 70, 106], "optim_recip": [3, 5, 6, 7, 8, 9, 14, 15, 16, 114, 115, 116, 117, 121], "is_ensembl": [3, 7, 9, 114, 115, 116], "now": [3, 5, 6, 7, 8, 9, 11, 12, 13], "prepar": [3, 7], "wrapper": [3, 7, 8, 9, 12, 78, 103, 108, 109, 110, 121], "includ": [3, 7, 13, 14, 15, 16, 101, 114, 119, 120], "well": [3, 11, 78, 118, 121, 122], "eval": [3, 6, 8, 9, 105, 110], "logic": [3, 7], "automat": [3, 7, 9, 11, 12, 70, 115, 116, 119, 121], "folder": [3, 13, 118, 119, 121], "save": [3, 7, 8, 10, 12, 14, 15, 16, 38, 39, 50, 87, 101, 111, 112, 113, 114], "fit": [3, 5, 6, 7, 8, 9, 12, 110, 111, 112, 113, 121], "opt": [3, 5, 6, 7, 8, 9, 11], "hostedtoolcach": [3, 5, 6, 7, 8, 9, 11], "15": [3, 4, 5, 6, 7, 8, 9, 11, 14, 19, 114, 117], "x64": [3, 5, 6, 7, 8, 9, 11], "lib": [3, 5, 6, 7, 8, 9, 11], "python3": [3, 5, 6, 7, 8, 9, 11, 13], "site": [3, 5, 6, 7, 8, 9, 11], "packag": [3, 5, 6, 7, 8, 9, 10, 11, 13, 119, 121], "connector": [3, 5, 6, 7, 8, 9], "data_connector": [3, 5, 6, 7, 8, 9], "424": [3, 5, 6, 7, 8, 9], "val_dataload": [3, 5, 6, 7, 8, 9, 25], "doe": [3, 5, 6, 7, 8, 9, 13, 44], "mani": [3, 5, 6, 7, 8, 9, 26, 121, 122], "worker": [3, 5, 6, 7, 8, 9, 21, 22, 23, 24, 26, 27, 28, 29], "mai": [3, 5, 6, 7, 8, 9, 11, 13, 30, 45, 49, 120], "bottleneck": [3, 5, 6, 7, 8, 9], "increas": [3, 5, 6, 7, 8, 9, 13, 56, 57, 108], "valu": [3, 5, 6, 7, 8, 9, 10, 11, 12, 33, 34, 52, 53, 65, 66, 69, 70, 73, 74, 75, 77, 80, 81, 85, 86, 88, 92, 93, 94, 95, 96, 97, 98, 99, 111, 112, 113, 120], "num_work": [3, 5, 6, 7, 8, 9, 10, 21, 22, 23, 24, 25, 26, 27, 28, 29], "argument": [3, 5, 6, 7, 8, 9, 12, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 121], "perform": [3, 5, 6, 7, 8, 9, 10, 12, 21, 23, 74, 75, 103, 105, 108, 114, 115, 116, 117], "train_dataload": [3, 5, 6, 7, 8, 9, 21, 22, 25], "test_dataload": [3, 5, 6, 7, 8, 9, 11, 21, 22, 23, 24, 25], "metric": [3, 5, 6, 7, 8, 9, 11, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 114, 115, 117, 118], "acc": [3, 6, 7, 8, 9], "95": [3, 6, 7, 10, 84], "76": [3, 7, 10, 11], "brier": [3, 6, 7, 8, 9, 77, 86], "06663": 3, "entropi": [3, 6, 7, 8, 9, 10, 11, 14, 15, 16, 114, 121], "20715": 3, "nll": [3, 5, 6, 7, 8, 9, 69, 79, 92], "14664": 3, "ec": [3, 6, 7, 8, 9], "02098": 3, "aec": [3, 6, 7, 8, 9], "02092": 3, "select": [3, 6, 8, 9, 74, 75, 103, 122], "augrc": [3, 6, 7, 8, 9], "33": [3, 5, 6, 7, 10, 11], "aurc": [3, 6, 7, 8, 9, 74], "38": [3, 5, 7, 10, 11], "cov": [3, 6, 7, 8, 9, 74, 75], "5risk": [3, 6, 7, 8, 9], "100": [3, 4, 5, 7, 8, 9, 10, 11, 111, 112, 113, 121], "risk": [3, 6, 7, 8, 9, 74, 75, 80, 81, 89, 90], "80cov": [3, 6, 7, 8, 9], "43": [3, 5, 7, 8, 10], "cal": [3, 6], "02098269760608673": 3, "020919786766171455": 3, "cl": [3, 6, 7], "9575999975204468": 3, "06662513315677643": 3, "14663520455360413": 3, "sc": [3, 6, 74, 75], "0033164420165121555": 3, "0037514716386795044": 3, "0042500002309679985": 3, "20715144276618958": 3, "ens_disagr": [3, 7], "005782501772046089": 3, "ens_entropi": [3, 7], "20630016922950745": 3, "ens_mi": [3, 7], "000851309101562947": 3, "let": [3, 6, 7, 8, 9, 10, 12, 13, 120, 121], "appli": [3, 7, 8, 14, 15, 16, 21, 22, 23, 24, 27, 28, 34, 37, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 103, 108, 122], "reshap": [3, 8, 9], "logit": [3, 8, 9, 10, 11, 14, 15, 16, 46, 65, 66, 111, 112, 113, 114, 120, 121, 122], "determin": [3, 8, 14, 15, 16, 20, 77, 79, 82, 83, 88, 92], "dimens": [3, 8, 77, 79, 82, 83, 88, 92], "correspond": [3, 7, 8, 13, 14, 15, 16, 52, 53, 64, 73, 74, 75, 80, 81, 120, 121], "merg": [3, 8], "order": [3, 7, 8], "num_estim": [3, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 52, 53, 54, 55, 56, 57, 62, 63, 77, 86, 103, 105, 107, 108, 110, 121], "x": [3, 5, 7, 8, 10, 53, 81, 85, 101, 103, 105, 121], "matplotlib": [3, 4, 5, 6, 8, 9, 10, 51, 73, 74, 75], "pyplot": [3, 4, 5, 6, 8, 9, 10], "plt": [3, 4, 5, 6, 8, 9, 10], "numpi": [3, 4, 6, 8, 9, 10, 13, 49], "np": [3, 6, 8, 9, 10, 37, 44], "torchvis": [3, 4, 6, 7, 8, 9, 10, 27, 28, 29], "imshow": [3, 4, 6, 8, 9, 10], "img": [3, 6, 8, 9, 10], "npimg": [3, 6, 8, 9, 10], "transpos": [3, 6, 8, 9, 10], "axi": [3, 4, 6, 8, 9, 10, 51, 73, 74, 75], "off": [3, 4, 6, 8, 9, 10], "tight_layout": [3, 8, 9], "show": [3, 4, 6, 8, 9, 10, 11, 111, 112, 113], "datait": [3, 6, 8, 9, 10], "iter": [3, 6, 8, 9, 10, 111, 112, 113], "next": [3, 5, 6, 8, 9, 10], "print": [3, 6, 7, 8, 9, 10, 11, 52, 53, 74, 75], "make_grid": [3, 6, 8, 9, 10], "ground": [3, 5, 6, 7, 8, 9, 74, 75, 77, 79, 81, 86, 90, 92, 94, 95, 96, 97, 98, 99], "truth": [3, 5, 6, 7, 8, 9, 74, 75, 77, 79, 81, 86, 90, 92, 94, 95, 96, 97, 98, 99], "join": [3, 6, 8, 9, 10], "f": [3, 4, 6, 7, 8, 9, 10, 11, 47, 86, 121, 122], "j": [3, 4, 6, 7, 8, 9, 10, 105, 122], "rang": [3, 4, 6, 7, 8, 9, 10, 64], "put": [3, 7, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 74], "mode": [3, 7, 9, 10, 11, 13, 51, 101, 103, 105, 110, 114, 119], "sever": [3, 4, 21, 22, 44, 52], "sampl": [3, 5, 7, 9, 10, 11, 21, 22, 23, 24, 26, 27, 28, 29, 34, 37, 44, 50, 51, 52, 61, 62, 63, 70, 74, 75, 77, 79, 82, 83, 88, 92, 105, 117], "16": [3, 5, 7, 8, 9, 10, 11, 15, 52, 105, 110, 121], "softmax": [3, 7, 8, 9, 10, 11, 14, 15, 16, 114, 120], "averag": [3, 7, 77, 79, 82, 83, 88, 92, 102, 104, 105], "over": [3, 5, 6, 7, 10, 12, 52, 77, 79, 82, 83, 87, 88, 92, 94, 95, 98], "prob": [3, 6, 8, 9, 11, 38, 39, 75, 77, 79, 81, 82, 83, 86, 88, 90, 92], "dim": [3, 5, 6, 8, 9, 10], "avg_prob": 3, "mean": [3, 5, 7, 9, 10, 14, 15, 16, 28, 29, 61, 64, 65, 66, 67, 68, 69, 71, 73, 77, 79, 82, 83, 86, 87, 88, 91, 92, 94, 95, 96, 97, 98, 105, 114], "var_prob": 3, "std": [3, 12, 14, 15, 16, 20, 28, 29, 114], "_": [3, 4, 7, 10], "max": [3, 8, 9, 10, 100, 114], "digit": [3, 6, 7, 8, 122], "dev": [3, 13, 119], "score": [3, 7, 11, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 90, 92, 121], "7": [3, 5, 6, 7, 8, 9, 10, 11, 12, 61], "000226": 3, "000901": 3, "000338": 3, "00271": 3, "varianc": [3, 5, 8, 9, 99, 105], "non": [3, 107], "intuit": 3, "wai": [3, 121], "divers": [3, 7], "ideal": [3, 7], "should": [3, 7, 11, 12, 56, 57, 121], "high": [3, 7, 64], "when": [3, 7, 11, 12, 13, 52, 53, 56, 57, 74, 75, 103, 105, 107, 121], "incorrect": [3, 7, 74, 75], "lecun": [3, 7, 9, 122], "y": [3, 5, 7, 11, 53, 71, 94, 95, 96, 97, 98, 111, 112, 113, 120, 122], "bottou": [3, 7, 122], "l": [3, 7, 67, 122], "bengio": [3, 7, 122], "haffner": [3, 7, 122], "p": [3, 7, 11, 71, 104], "1998": [3, 122], "gradient": [3, 7, 10, 122], "document": [3, 7, 118, 119, 122], "recognit": [3, 7, 122], "proceed": [3, 7, 122], "blundel": [3, 61, 107, 122], "c": [3, 7, 9, 10, 11, 21, 22, 37, 41, 44, 48, 75, 77, 79, 81, 82, 83, 86, 88, 90, 92, 111, 112, 113, 120, 121], "cornebis": [3, 122], "kavukcuoglu": [3, 122], "k": [3, 5, 7, 11, 52, 53, 71, 100, 110, 111, 112, 113, 120, 122], "wierstra": [3, 122], "d": [3, 4, 64, 68, 104, 122], "2015": [3, 11, 61, 78, 122], "icml": [3, 9, 11, 61, 110, 111, 112, 113, 120, 122], "kingma": 3, "ba": [3, 122], "2014": [3, 99], "A": [3, 13, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 64, 65, 68, 71, 73, 74, 75, 77, 82, 83, 86, 88, 94, 95, 96, 97, 98, 99, 104, 105, 118, 121], "method": [3, 5, 6, 8, 9, 11, 12, 14, 15, 16, 23, 52, 53, 101, 103, 110, 114, 118, 121], "stochast": [3, 7, 8, 104, 105, 110], "iclr": [3, 4, 7, 37, 41, 48, 86, 118, 121, 122], "run": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 119, 121], "time": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 27, 28, 29, 52, 56, 57, 103, 104, 105, 114], "script": [3, 4, 5, 6, 7, 8, 9, 10, 11, 121], "second": [3, 4, 5, 6, 7, 8, 9, 10, 11, 61], "ipynb": [3, 4, 5, 6, 7, 8, 9, 10, 11], "impact": [4, 74, 75], "avail": [4, 10, 11, 12, 114], "were": 4, "first": [4, 7, 8, 9, 10, 11, 13, 56, 57, 61, 105], "paper": [4, 5, 6, 7, 13, 52, 53, 61, 71, 73, 118, 121, 122], "common": [4, 37, 41, 44, 48, 74, 118, 122], "perturb": [4, 37, 41, 48, 122], "dan": [4, 37, 41, 48, 122], "hendryck": [4, 37, 41, 48, 85, 122], "thoma": [4, 37, 41, 48, 122], "dietterich": [4, 37, 41, 48, 122], "load": [4, 7, 21, 22, 23, 24, 26], "util": [4, 7, 10], "compos": [4, 6, 7, 10, 27, 28, 29, 52], "totensor": [4, 7, 10], "resiz": [4, 23, 27, 28, 29], "centercrop": [4, 7], "pil": [4, 7, 33, 37, 38, 39, 44, 45, 46, 48, 50, 51], "urllib": 4, "request": [4, 13], "url": 4, "http": [4, 7, 9, 10, 11, 33, 47, 64, 65, 67, 68, 85, 105, 119, 122], "upload": 4, "wikimedia": 4, "org": [4, 64, 65, 67, 68, 122], "wikipedia": 4, "d9": 4, "carduelis_tristis_": 4, "michigan": 4, "2c_usa_": 4, "male": 4, "8": [4, 5, 6, 7, 8, 9, 11, 12, 52, 53], "jpg": 4, "5d": [4, 10], "border_collie_blanca_y_negra_hembra_": 4, "28belen": 4, "2c_border_collie_los_bagan": 4, "29": [4, 5, 7, 10, 11], "png": 4, "f8": 4, "birmakatze_s": 4, "point": [4, 7, 64, 101], "a9": 4, "garranos_fight": 4, "8b": 4, "cottontail_rabbit": 4, "download_img": 4, "urlretriev": 4, "tmp_": 4, "convert": [4, 8, 109, 110], "rgb": [4, 51], "images_d": 4, "enumer": [4, 10], "get_imag": 4, "main_corrupt": 4, "index": [4, 51, 118, 120], "int": [4, 6, 7, 12, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 37, 48, 52, 53, 54, 55, 56, 57, 61, 62, 63, 67, 70, 74, 75, 77, 84, 85, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121], "creat": [4, 9, 12, 13, 49, 105, 119, 121], "6": [4, 7, 9, 10, 12, 58, 59, 65, 121], "level": [4, 7, 44, 85, 121], "given": [4, 7, 55, 57, 69, 70, 80, 81, 90, 94, 97, 101, 120], "256": [4, 5, 7, 12, 109], "antialia": [4, 28, 29], "224": [4, 5, 7, 23, 28, 29], "append": [4, 7], "permut": 4, "show_imag": 4, "effect": [4, 8], "num_corrupt": 4, "len": [4, 11], "ax": [4, 5, 11, 51, 73, 74, 75], "subplot": [4, 5], "figsiz": [4, 10], "text": [4, 10, 27, 28, 29, 52, 53, 56, 57, 93, 94, 95, 96, 97, 98, 99], "__name__": [4, 12], "transax": 4, "rotat": [4, 6], "vertic": 4, "horizontalalign": 4, "right": [4, 52, 99], "verticalalign": 4, "center": [4, 121], "fontsiz": 4, "12": [4, 5, 7, 8, 11], "set_titl": 4, "origin": [4, 5, 6, 11, 13, 14, 15, 16, 20, 46, 78, 105, 107, 122], "elif": 4, "gaussiannois": 4, "shotnois": 4, "impulsenois": 4, "motionblur": 4, "glassblur": 4, "defocusblur": 4, "zoomblur": 4, "frost": 4, "snow": 4, "fog": 4, "zenodo": 4, "record": 4, "10438904": 4, "78m": 4, "b": [4, 7, 9, 10, 11, 52, 53, 73, 77, 79, 82, 83, 86, 88, 92, 103], "4": [4, 12, 20, 44, 52, 61, 115, 121], "65": [4, 6, 7, 11], "5k": [4, 7], "341kb": 4, "262k": 4, "745kb": 4, "61": [4, 7, 10], "08m": 4, "36mb": 4, "09mb": 4, "extract": [4, 7, 9, 10, 11, 49], "other": [4, 7, 11, 27, 28, 29, 118], "bright": [4, 28, 29], "elast": 4, "jpegcompress": 4, "pixel": [4, 7, 115], "us": [4, 7, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 37, 38, 39, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 61, 69, 70, 78, 99, 101, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122], "gaussianblur": 4, "specklenois": 4, "satur": [4, 28, 29], "2019": [4, 37, 41, 44, 48, 68, 76, 105, 122], "introduct": [5, 118], "probabilist": [5, 64, 91, 107, 115, 116, 122], "present": [5, 52, 53], "practic": [5, 6, 7, 12], "demonstr": [5, 6], "applic": [5, 6, 7, 13, 121], "tackl": [5, 6], "problem": [5, 6, 8, 9, 13], "multi": [5, 6, 71, 73, 95, 96, 98, 99], "layer": [5, 6, 7, 8, 9, 10, 14, 15, 16, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 103, 108, 110, 118, 120], "perceptron": [5, 6], "output": [5, 6, 8, 10, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 94, 95, 96, 97, 98, 101, 103, 115, 116, 120], "normalinversegamma": 5, "through": [5, 9, 11, 103], "its": [5, 10, 50, 52, 53, 56, 57, 74, 75, 100, 103, 120, 121], "neg": [5, 7, 9, 64, 68, 69, 79, 88, 92], "repres": [5, 6, 7, 9, 11, 120, 122], "approach": [5, 6, 52, 53, 122], "quantifi": [5, 6, 67, 122], "epistem": [5, 66, 88, 122], "aleator": 5, "involv": [5, 6], "introduc": [5, 6, 7, 52, 53], "prior": [5, 6, 58, 59, 60, 61, 109], "gaussian": [5, 59, 60, 105], "derloss": 5, "contain": [5, 7, 11, 12, 13, 23, 37, 44, 74, 75, 103, 115, 116, 118, 121], "classic": [5, 12, 121], "regular": [5, 6, 65, 66, 67, 68, 99, 122], "term": [5, 6, 61, 65, 66, 67, 68, 70], "noisi": [5, 122], "cubic": 5, "within": [5, 6, 8, 9, 14, 15, 16, 70], "lightningdatamodul": [5, 12], "regressionroutin": 5, "normalinversegammalay": 5, "5e": 5, "optim_regress": 5, "learning_r": 5, "float": [5, 7, 14, 15, 16, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 54, 55, 57, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 80, 81, 85, 90, 102, 105, 111, 112, 113, 117], "weight_decai": [5, 6], "same": [5, 6, 7, 8, 11, 12, 14, 16, 103], "synthet": 5, "simpl": [5, 7, 105, 107, 121, 122], "hidden": [5, 62, 63], "64": [5, 6, 7, 10, 56], "neuron": 5, "each": [5, 7, 12, 13, 14, 15, 16, 52, 53, 54, 56, 57, 71, 74, 75, 103, 105], "finish": [5, 10, 13], "interpret": [5, 27, 28, 29, 88], "invers": [5, 68, 94, 97, 100], "gamma": [5, 6, 10, 14, 15, 16, 18, 56, 57, 62, 68, 71, 121], "50": [5, 7, 11, 12, 14], "train_d": 5, "1000": [5, 7, 11], "val_d": 5, "300": [5, 7], "from_dataset": 5, "val_dataset": 5, "test_dataset": [5, 11], "32": [5, 6, 7, 8, 10, 11, 14, 27, 50, 52, 62, 63, 110, 121], "training_task": 5, "in_featur": [5, 18, 53, 55, 57, 61, 63], "num_output": [5, 96, 97], "hidden_dim": [5, 18], "final_lay": 5, "final_layer_arg": 5, "after": [5, 6, 11, 12, 27, 28, 29, 105], "reg_weight": [5, 6, 65, 66, 67, 68], "output_dim": [5, 18, 115, 116], "saniti": [5, 7], "check": [5, 7, 12, 13, 49, 118, 119, 121], "291": [5, 7], "76it": [5, 7], "373": [5, 7], "62it": [5, 7], "loop": [5, 10, 103, 108], "fit_loop": 5, "298": [5, 7], "number": [5, 7, 8, 9, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 27, 28, 29, 52, 53, 54, 55, 56, 57, 61, 62, 63, 70, 74, 75, 77, 79, 82, 83, 86, 88, 92, 96, 97, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 121], "smaller": [5, 27, 28, 29], "than": [5, 11, 105, 107], "interv": 5, "log_every_n_step": 5, "lower": [5, 7, 70, 73, 82, 83], "want": [5, 7, 8, 12, 44, 49, 119], "see": [5, 7, 8, 9, 10, 11, 12, 13, 56, 57, 73, 77, 78, 79, 82, 83, 86, 88, 92, 93, 95, 96, 98, 99, 100, 109, 120], "epoch": [5, 6, 7, 10, 12, 101, 102, 104, 105], "198": [5, 7], "04it": [5, 7], "188": [5, 7], "56it": [5, 7], "v_num": [5, 7], "train_loss": [5, 7], "390": [5, 7], "233": [5, 7], "43it": [5, 7], "227": [5, 7], "251": [5, 7], "32it": [5, 7], "81it": [5, 7], "670": [5, 7], "264": [5, 7, 10], "31it": [5, 7], "260": [5, 7], "69it": [5, 7], "190": [5, 7], "273": [5, 7], "48it": [5, 7], "270": [5, 7], "35it": [5, 7], "230": [5, 7], "19": [5, 6, 7, 10, 11, 15], "280": [5, 7], "72it": [5, 7], "277": [5, 7], "98it": [5, 7, 11], "140": [5, 7], "22": [5, 7, 9, 10, 11], "285": [5, 7], "283": [5, 7], "23it": [5, 7], "25": [5, 7, 10, 11, 12, 100], "289": [5, 7], "60it": [5, 7], "287": [5, 7], "39it": [5, 7], "880": [5, 7], "28": [5, 6, 7, 9, 10, 11], "292": [5, 7], "77it": [5, 7], "290": [5, 7], "75it": [5, 7], "940": [5, 7], "31": [5, 7, 10, 11], "295": [5, 7], "11it": [5, 7], "293": [5, 7], "600": [5, 7], "34": [5, 7, 10, 11, 12], "11": [5, 7, 8, 11, 15, 27, 50], "296": [5, 7], "97it": [5, 7, 11], "22it": [5, 7], "890": [5, 7], "47it": [5, 7], "89it": [5, 7], "41": [5, 7, 10, 11], "13": [5, 7, 10, 11, 15], "299": [5, 7], "71it": [5, 7], "380": [5, 7], "44": [5, 7, 10, 11], "14": [5, 7, 11, 52], "301": [5, 7], "03it": [5, 7], "66it": [5, 7], "910": [5, 7], "88it": [5, 7], "59it": [5, 7], "690": [5, 7], "303": [5, 7], "01it": [5, 7, 11], "720": [5, 7, 27], "53": [5, 6, 7, 10, 11], "17": [5, 7, 11], "95it": [5, 7, 11], "302": [5, 7], "210": [5, 7], "56": [5, 7, 10, 11], "18": [5, 6, 7, 9, 11, 12, 14, 121], "304": [5, 7], "74it": [5, 7], "68it": [5, 7], "780": [5, 7], "64it": [5, 7], "220": [5, 7], "62": [5, 7, 11], "20": [5, 7, 9, 11, 53, 105], "305": [5, 7], "65it": [5, 7], "520": [5, 7], "66": [5, 7, 10, 11], "21": [5, 7, 10, 11], "306": [5, 7], "54it": [5, 7], "61it": [5, 7], "69": [5, 7, 10, 11], "307": [5, 7], "36it": [5, 7], "560": [5, 7], "72": [5, 7, 10, 11], "23": [5, 7, 11], "308": [5, 7], "18it": [5, 7], "410": [5, 7], "75": [5, 7, 10, 11, 12], "24": [5, 7, 11], "73it": [5, 7], "90it": [5, 7], "78": [5, 7, 10, 11], "309": [5, 7], "19it": [5, 7], "41it": [5, 7], "81": [5, 7, 10, 11], "26": [5, 7, 10, 11], "94it": [5, 7, 11], "460": [5, 7], "84": [5, 7, 10, 11, 121], "27": [5, 6, 7, 10, 11], "92it": [5, 7, 11], "17it": [5, 7], "200": [5, 7, 111, 113], "88": [5, 7, 10, 11], "310": [5, 7], "44it": [5, 7], "350": [5, 7], "91": [5, 7, 11], "311": [5, 7], "970": [5, 7], "94": [5, 7, 11], "49it": [5, 7], "84it": [5, 7], "97": [5, 7, 8, 11], "86it": [5, 7], "20it": [5, 7], "312": [5, 7], "valid": [5, 7, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29], "638": [5, 7], "50it": [5, 7], "611": [5, 7], "612": [5, 7], "37it": [5, 7], "40": [5, 7, 10], "610": [5, 7], "60": [5, 6, 7, 10], "609": [5, 7], "70": [5, 7], "12it": [5, 7], "80": [5, 7, 11, 32, 89], "90": [5, 6, 7, 10], "614": [5, 7], "28it": [5, 7], "08it": [5, 7], "rmse": [5, 97], "254": [5, 7], "96it": [5, 7, 11], "248": [5, 7], "660": [5, 7], "272": [5, 7], "53it": [5, 7], "21it": [5, 7], "430": [5, 7], "278": [5, 7], "000": [5, 7], "282": [5, 7], "16it": [5, 7], "640": [5, 7, 27], "284": [5, 7], "281": [5, 7], "950": [5, 7], "91it": [5, 7, 11], "30it": [5, 7], "15it": [5, 7], "730": [5, 7], "570": [5, 7], "294": [5, 7], "57it": [5, 7], "360": [5, 7], "33it": [5, 7], "550": [5, 7], "297": [5, 7], "83it": [5, 7], "370": [5, 7], "85it": [5, 7], "67it": [5, 7], "680": [5, 7], "07it": [5, 7], "620": [5, 7], "80it": [5, 7], "090": [5, 7], "110": [5, 7], "320": [5, 7], "160": [5, 7], "34it": [5, 7], "530": [5, 7], "06it": [5, 7, 11], "700": [5, 7, 10], "27it": [5, 7], "630": [5, 7], "440": [5, 7], "05it": [5, 7], "42it": [5, 7], "080": [5, 7], "632": [5, 7], "616": [5, 7], "93it": [5, 7, 11], "38it": [5, 7], "247": [5, 7], "58it": [5, 7], "261": [5, 7], "13it": [5, 7], "244": [5, 7], "010": [5, 7], "276": [5, 7], "268": [5, 7], "55it": [5, 7], "279": [5, 7], "29it": [5, 7], "800": [5, 7], "790": [5, 7], "51it": [5, 7], "060": [5, 7], "46it": [5, 7], "710": [5, 7], "52it": [5, 7], "070": [5, 7], "70it": [5, 7], "760": [5, 7], "650": [5, 7], "830": [5, 7], "87it": [5, 7], "313": [5, 7], "00it": [5, 7], "314": [5, 7], "78it": [5, 7], "315": [5, 7], "24it": [5, 7], "470": [5, 7], "10it": [5, 7], "750": [5, 7], "900": [5, 7], "09it": [5, 7], "02it": [5, 7], "510": [5, 7], "250": [5, 7], "050": [5, 7], "316": [5, 7], "643": [5, 7], "619": [5, 7, 10], "615": [5, 7], "258": [5, 7], "257": [5, 7], "271": [5, 7], "286": [5, 7], "45it": [5, 7], "25it": [5, 7], "130": [5, 7], "99it": [5, 7, 11], "26it": [5, 7], "870": [5, 7], "980": [5, 7], "930": [5, 7], "500": [5, 7], "960": [5, 7, 27], "990": [5, 7], "740": [5, 7], "150": [5, 7], "420": [5, 7], "607": [5, 7], "604": [5, 7], "601": [5, 7], "602": [5, 7], "608": [5, 7], "242": [5, 7], "275": [5, 7], "400": [5, 7], "860": [5, 7], "040": [5, 7], "79it": [5, 7], "770": [5, 7], "580": [5, 7], "920": [5, 7], "450": [5, 7], "840": [5, 7], "14it": [5, 7], "180": [5, 7], "490": [5, 7], "820": [5, 7], "030": [5, 7], "82it": [5, 7], "633": [5, 7], "598": [5, 7], "596": [5, 7], "597": [5, 7], "595": [5, 7], "249": [5, 7], "262": [5, 7], "330": [5, 7], "269": [5, 7], "120": [5, 7, 10, 121], "40it": [5, 7], "810": [5, 7], "850": [5, 7], "540": [5, 7], "240": [5, 7], "577": [5, 7, 10], "565": [5, 7], "569": [5, 7], "571": [5, 7], "576": [5, 7], "578": [5, 7], "572": [5, 7], "574": [5, 7], "236": [5, 7], "235": [5, 7], "239": [5, 7], "226": [5, 7], "253": [5, 7], "267": [5, 7], "274": [5, 7], "63it": [5, 7], "170": [5, 7], "480": [5, 7], "573": [5, 7], "575": [5, 7], "584": [5, 7], "243": [5, 7], "241": [5, 7], "228": [5, 7], "263": [5, 7], "255": [5, 7], "020": [5, 7], "288": [5, 7], "603": [5, 7], "579": [5, 7], "583": [5, 7], "585": [5, 7], "588": [5, 7], "591": [5, 7], "592": [5, 7, 10], "594": [5, 7, 10], "658": [5, 7, 10], "613": [5, 7], "266": [5, 7], "590": [5, 7], "636": [5, 7], "605": [5, 7], "606": [5, 7], "252": [5, 7], "589": [5, 7], "582": [5, 7], "581": [5, 7], "586": [5, 7], "245": [5, 7], "265": [5, 7], "564": [5, 7], "545": [5, 7], "543": [5, 7], "538": [5, 7], "537": [5, 7], "541": [5, 7], "547": [5, 7], "551": [5, 7], "555": [5, 7], "202": [5, 7], "189": [5, 7], "215": [5, 7], "208": [5, 7], "223": [5, 7], "217": [5, 7], "229": [5, 7, 28, 29], "234": [5, 7], "238": [5, 7], "340": [5, 7], "259": [5, 7], "566": [5, 7], "567": [5, 7], "225": [5, 7, 28, 29], "231": [5, 7], "237": [5, 7], "232": [5, 7], "219": [5, 7], "599": [5, 7], "587": [5, 7], "593": [5, 7], "221": [5, 7], "622": [5, 7], "222": [5, 7], "625": [5, 7], "218": [5, 7], "568": [5, 7], "206": [5, 7], "194": [5, 7], "553": [5, 7], "559": [5, 7], "562": [5, 7], "204": [5, 7], "552": [5, 7], "542": [5, 7], "546": [5, 7], "548": [5, 7], "554": [5, 7], "196": [5, 7], "417": [5, 7], "404": [5, 7], "432": [5, 7], "426": [5, 7], "425": [5, 7], "429": [5, 7], "214": [5, 7], "212": [5, 7, 10], "168": [5, 7], "158": [5, 7], "181": [5, 7], "176": [5, 7], "184": [5, 7], "192": [5, 7], "195": [5, 7], "193": [5, 7], "199": [5, 7], "197": [5, 7], "201": [5, 7], "203": [5, 7], "205": [5, 7], "209": [5, 7], "211": [5, 7], "216": [5, 7], "561": [5, 6, 7], "549": [5, 7], "556": [5, 7], "563": [5, 7], "628": [5, 7], "624": [5, 7], "617": [5, 7], "35": [5, 7, 10], "36": [5, 7, 10], "37": [5, 7, 10], "213": [5, 7], "42": [5, 7, 10, 26, 49], "627": [5, 7], "45": [5, 6, 7], "536": [5, 7], "534": [5, 7], "544": [5, 7], "46": [5, 7, 10, 11], "503": [5, 7], "502": [5, 7], "506": [5, 7], "511": [5, 7], "514": [5, 7], "518": [5, 7], "527": [5, 7], "48": [5, 7, 10], "535": [5, 7], "557": [5, 7], "49": [5, 7, 9, 10], "187": [5, 7], "519": [5, 7], "471": [5, 7], "mae": 5, "51099": 5, "mse": [5, 67, 97], "18218": 5, "80295": 5, "81479": 5, "reg": 5, "5109879970550537": 5, "18218231201172": 5, "814787864685059": 5, "8029472827911377": 5, "plot": [5, 8, 11, 14, 15, 16, 51, 73, 74, 75, 78, 114, 115, 117], "case": [5, 7, 10, 11, 12, 52, 120, 121], "reproduc": [5, 13, 121], "result": [5, 7, 8, 9, 10, 12, 14, 15, 16, 88, 114, 117, 121], "no_grad": [5, 6], "linspac": 5, "dist": [5, 69, 92], "unsqueez": 5, "loc": 5, "squeez": [5, 115, 116], "sqrt": [5, 52, 53, 99], "variance_loc": 5, "fig": [5, 11], "r": [5, 10, 71], "zorder": 5, "fill_between": 5, "linewidth": 5, "alpha": [5, 6, 7, 10, 12, 14, 15, 16, 18, 56, 57, 71, 114, 121], "edgecolor": 5, "none": [5, 6, 7, 10, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 92, 101, 102, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121], "facecolor": 5, "blue": 5, "els": 5, "gca": 5, "set_ylim": 5, "set_xlim": 5, "legend": 5, "upper": 5, "left": [5, 52, 99], "grid": 5, "alexand": [5, 107, 122], "amini": [5, 68, 122], "wilko": [5, 122], "schwart": [5, 68, 122], "ava": [5, 122], "soleimani": [5, 68, 122], "daniela": [5, 122], "ru": [5, 68, 122], "neurip": [5, 6, 9, 67, 74, 75, 99, 105, 107, 109, 122], "2020": [5, 71, 122], "aim": 6, "introductori": 6, "overview": 6, "mlp": [6, 12, 18], "dirichlet": [6, 67], "minim": [6, 7, 11, 70, 122], "squar": [6, 7, 27, 28, 29, 52, 96, 97, 98, 99, 105], "error": [6, 7, 9, 11, 13, 64, 73, 75, 76, 78, 81, 90, 94, 95, 96, 97, 98, 99], "kl": [6, 70, 72], "diverg": [6, 70, 72, 88], "categor": [6, 120], "decloss": 6, "offici": [6, 52, 53], "step": [6, 10, 13, 67, 119], "schedul": [6, 7, 12, 101, 114, 115, 116, 117], "dict": [6, 14, 15, 16, 105, 114, 115, 116, 117, 121], "005": 6, "exp_lr_schedul": 6, "lr_schedul": [6, 7, 12], "steplr": 6, "step_siz": 6, "sake": [6, 7], "in_channel": [6, 7, 8, 9, 11, 12, 14, 15, 16, 52, 54, 56, 58, 59, 60, 62, 121], "92": [6, 7, 8, 9, 10, 11], "98": [6, 7, 9, 10], "12869": 6, "01974": 6, "inf": 6, "06158": 6, "96": [6, 7], "06158379465341568": 6, "06158360838890076": 6, "9297999739646912": 6, "12868519127368927": 6, "011840693652629852": 6, "01963195577263832": 6, "9559999704360962": 6, "019750000908970833": 6, "01973584294319153": 6, "rotated_mnist": 6, "angl": 6, "confid": [6, 7, 65, 74, 82, 83, 85], "arg": [6, 7, 105], "degre": 6, "rotated_imag": 6, "evid": [6, 70], "relu": [6, 7, 10, 121], "strength": 6, "sum": [6, 8, 64, 65, 66, 67, 68, 69, 71, 77, 79, 82, 83, 86, 88, 92, 120], "keepdim": 6, "argmax": 6, "714": [6, 7], "86": [6, 7, 10], "52": [6, 7, 10, 11], "833": [6, 7], "71": [6, 7, 10], "85": [6, 7, 10, 11], "51": [6, 7, 10], "murat": [6, 122], "sensoi": [6, 67, 122], "lanc": [6, 122], "kaplan": [6, 67, 122], "melih": [6, 122], "kandemir": [6, 67, 122], "2018": [6, 67, 73, 101, 104, 110, 122], "adapt": [7, 76, 78], "lectur": 7, "helmholtz": 7, "ai": [7, 119], "confer": [7, 118], "haicon24": 7, "de": 7, "sebastian": 7, "stark": 7, "peter": 7, "steinbach": 7, "gianni": [7, 118, 122], "franchi": [7, 118, 122], "olivi": [7, 118, 122], "laurent": [7, 118, 121, 122], "work": [7, 10, 103, 120], "wa": [7, 51, 74, 75], "corinna": 7, "cort": 7, "christoph": 7, "burg": 7, "later": [7, 57, 73, 75, 81, 90, 118, 119], "modifi": [7, 10, 27, 28, 29], "yann": [7, 9, 122], "foundat": 7, "consist": [7, 10, 38, 39, 46, 52, 53, 102], "handwritten": 7, "grayscal": 7, "28x28": 7, "size": [7, 12, 21, 22, 23, 24, 26, 27, 28, 29, 52, 53, 54, 56, 62, 63, 73, 77, 79, 82, 83, 86, 88, 92, 93, 99, 103, 109, 110], "task": [7, 11, 12, 71, 76, 78, 107, 109, 114, 115, 116, 117, 118, 121], "respect": [7, 12], "accuraci": [7, 100, 122], "proport": [7, 91], "correctli": 7, "measur": [7, 74, 75, 76, 121, 122], "qualiti": [7, 26, 49, 73, 74, 75], "probabl": [7, 11, 14, 15, 16, 74, 75, 77, 78, 79, 81, 82, 83, 86, 88, 90, 92, 111, 112, 113, 114, 120, 122], "test": [7, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 44, 49, 50, 104, 105, 114, 115, 116, 117, 121], "throughout": 7, "abstract": 7, "process": [7, 10, 101, 111, 112, 113, 114, 118, 119], "similarli": 7, "kera": 7, "tensorflow": [7, 52, 53], "interfac": 7, "simplifi": 7, "partli": 7, "built": [7, 11, 120], "tool": [7, 12, 118], "quantif": [7, 10, 13, 62, 63, 118, 122], "preprocess": 7, "them": [7, 10, 12, 121], "purpos": [7, 12, 33], "few": 7, "bit": 7, "what": [7, 9, 10, 12, 14, 15, 16], "some": [7, 9, 10, 12], "low": [7, 64], "train_transform": [7, 27, 28, 29], "crop": [7, 23, 27, 28, 29], "augment": [7, 14, 15, 16, 21, 22, 23, 24, 27, 28, 30, 114, 118], "randomcrop": [7, 28, 29, 37, 38, 39, 44, 45, 46, 48], "pad": [7, 9, 52, 54, 56, 58, 59, 60, 62, 69, 92], "mnist1d": 7, "1307": 7, "3081": 7, "test_transform": [7, 27, 28, 29], "num_output_channel": 7, "subset": [7, 11, 35, 37, 44, 45, 48, 109], "fashionmnist": [7, 24], "train_data": 7, "test_data": 7, "take": [7, 12, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 120, 121], "10k": 7, "ood_data": 7, "indic": [7, 8, 14, 15, 16, 114, 115, 116, 117], "train_dl": 7, "shuffl": [7, 10, 49], "test_dl": 7, "ood_dl": 7, "fashion": [7, 24], "s3": [7, 9], "websit": [7, 118], "eu": 7, "central": 7, "amazonaw": [7, 9], "com": [7, 9, 10, 11, 47, 71, 85, 105, 119, 122], "idx3": [7, 9], "ubyt": [7, 9], "gz": [7, 9, 10, 11], "raw": [7, 9], "4m": [7, 10], "01": [7, 9, 10, 11, 19, 62, 63, 117], "367kb": 7, "229k": 7, "691kb": 7, "950k": 7, "22mb": 7, "83m": 7, "71mb": 7, "93m": 7, "5mb": [7, 9, 10, 11], "0m": [7, 11], "8mb": [7, 10], "68": 7, "83": [7, 10], "1m": [7, 10], "7mb": [7, 10], "6mb": [7, 10, 11], "idx1": [7, 9], "333kb": 7, "t10k": [7, 9], "42m": 7, "363kb": 7, "5": [7, 12, 20, 28, 29, 37, 48, 52, 53, 64, 80, 121], "06": [7, 11, 65, 105], "682kb": 7, "18mb": 7, "87": [7, 11], "59mb": 7, "07mb": 7, "15k": 7, "1mb": [7, 10], "could": [7, 10, 11, 88], "replac": [7, 13, 110], "cell": 7, "simpli": 7, "viz_data": 7, "without": [7, 11], "unchang": 7, "ood_viz_data": 7, "0x7f09ca4b6350": 7, "out": [7, 11, 12, 13, 21, 22, 23, 24, 25, 46, 52, 53, 107, 121, 122], "0x7f09ca4b6c50": 7, "convolut": [7, 10, 14, 15, 16, 52, 54, 56, 62, 122], "cnn": 7, "__init__": [7, 9, 10, 12, 103, 121], "self": [7, 10, 12, 27, 28, 29, 114, 121], "super": [7, 10, 121], "conv1": [7, 10, 121], "conv2d": [7, 10, 52, 54, 56, 59], "conv2": [7, 10, 121], "pool": [7, 10, 121], "adaptiveavgpool2d": 7, "fc1": [7, 10, 121], "linear": [7, 10, 53, 55, 57, 61, 63], "fc2": [7, 10, 121], "fc3": [7, 10, 121], "forward": [7, 9, 10, 52, 53, 65, 66, 69, 70, 72, 74, 75, 94, 95, 96, 97, 98, 101, 103, 105, 114, 115, 116, 117, 121], "tensor": [7, 10, 12, 33, 50, 51, 52, 53, 54, 55, 65, 66, 69, 70, 71, 73, 74, 75, 77, 79, 81, 82, 83, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 114, 115, 116, 117], "max_pool2d": 7, "flatten": [7, 10, 121], "No": [7, 114], "so": [7, 10, 12, 56, 57], "channel": [7, 14, 15, 16, 52, 54, 55, 56, 57, 62], "optim": [7, 8, 9, 12, 14, 15, 16, 75, 109, 111, 112, 113, 114, 115, 116, 117, 121], "recip": [7, 8, 9, 14, 15, 16, 121], "descent": 7, "sgd": [7, 10, 12], "cosin": 7, "anneal": [7, 67], "lr_mult": 7, "cosineannealinglr": 7, "t_max": 7, "develop": [7, 119], "eas": [7, 12], "supervis": 7, "most": [7, 8, 9, 13, 74, 121], "often": [7, 57, 100], "cross": [7, 10, 11], "With": [7, 52, 53, 121], "decai": 7, "amount": [7, 8, 91], "maximum": [7, 14, 15, 16, 33, 34, 80, 81, 105, 111, 112, 113, 114], "posteriori": 7, "map": [7, 99], "like": [7, 10, 12, 13, 27, 28, 29, 121], "input": [7, 10, 11, 14, 15, 16, 26, 27, 28, 29, 50, 52, 53, 54, 55, 56, 57, 61, 62, 63, 65, 69, 70, 73, 74, 75, 77, 79, 82, 83, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 101, 103, 114, 115, 116, 117, 120], "routin": [7, 11, 12, 114, 115, 116, 117, 118], "etc": [7, 13, 121], "avoid": [7, 8, 11, 13, 49, 65, 74, 88], "torchmetr": 7, "userwarn": 7, "fpr95": 7, "target": [7, 11, 33, 34, 37, 38, 39, 44, 45, 46, 48, 49, 50, 51, 65, 66, 69, 70, 74, 75, 77, 79, 81, 82, 85, 86, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100], "buffer": [7, 52, 53], "larg": [7, 12, 45, 122], "lead": [7, 104, 122], "memori": [7, 21, 22, 23, 24, 26, 27, 28, 29, 103, 108, 117], "footprint": [7, 108], "warn": 7, "kwarg": [7, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "noqa": 7, "b028": 7, "core": [7, 103], "377": 7, "found": [7, 34], "unsupport": 7, "kei": [7, 10, 11, 37, 44, 48], "configur": [7, 118, 121], "155": 7, "1875": 7, "55": 7, "63": [7, 10], "67": [7, 10], "54": [7, 10, 11], "58": [7, 10, 13], "73": 7, "74": [7, 10], "77": 7, "79": [7, 10], "82": 7, "89": [7, 10], "93": [7, 8, 9, 10, 11], "99": [7, 11], "102": 7, "103": 7, "104": 7, "105": 7, "106": 7, "107": 7, "108": 7, "109": 7, "111": [7, 8], "112": 7, "113": 7, "114": 7, "115": 7, "116": 7, "117": 7, "118": [7, 8], "119": 7, "121": 7, "122": 7, "123": 7, "124": 7, "125": 7, "126": 7, "127": 7, "129": 7, "131": 7, "132": 7, "133": 7, "134": 7, "135": 7, "136": 7, "137": 7, "138": 7, "139": 7, "141": 7, "142": 7, "143": 7, "144": 7, "145": 7, "146": 7, "147": 7, "148": 7, "149": 7, "151": 7, "152": [7, 14], "153": 7, "154": 7, "156": 7, "157": 7, "159": 7, "161": 7, "162": 7, "163": 7, "164": 7, "165": 7, "166": 7, "167": 7, "169": 7, "171": 7, "172": 7, "174": 7, "175": 7, "177": 7, "178": 7, "179": 7, "182": 7, "183": 7, "185": 7, "186": 7, "191": 7, "882": 7, "932": 7, "887": 7, "888": 7, "716": 7, "732": 7, "926": 7, "942": 7, "317": 7, "318": 7, "319": 7, "321": 7, "322": 7, "323": 7, "796": 7, "324": 7, "984": 7, "325": 7, "979": 7, "326": 7, "327": 7, "328": 7, "329": 7, "951": 7, "331": 7, "993": 7, "332": 7, "333": 7, "334": 7, "335": 7, "336": 7, "337": 7, "925": 7, "338": 7, "752": 7, "339": 7, "341": 7, "342": 7, "343": 7, "344": 7, "345": 7, "346": 7, "881": 7, "347": 7, "348": 7, "898": 7, "349": 7, "937": 7, "928": 7, "351": 7, "352": 7, "673": 7, "353": 7, "776": 7, "354": 7, "355": 7, "356": 7, "874": 7, "357": 7, "822": 7, "358": 7, "743": 7, "359": 7, "722": [7, 10], "361": 7, "526": 7, "362": 7, "958": 7, "363": 7, "917": [7, 10], "364": 7, "365": 7, "366": [7, 11], "367": 7, "728": 7, "368": 7, "731": 7, "369": 7, "863": 7, "371": 7, "372": 7, "374": 7, "375": 7, "376": 7, "835": 7, "378": 7, "379": 7, "381": 7, "813": 7, "382": 7, "885": 7, "384": 7, "755": 7, "385": 7, "386": 7, "387": 7, "388": 7, "878": 7, "389": 7, "793": 7, "904": 7, "391": 7, "392": 7, "393": 7, "698": 7, "394": 7, "395": 7, "693": 7, "396": 7, "923": 7, "397": 7, "741": 7, "398": 7, "399": 7, "971": 7, "751": 7, "401": 7, "834": 7, "402": 7, "849": 7, "403": 7, "836": 7, "405": 7, "406": [7, 28, 29], "694": 7, "407": 7, "816": 7, "408": 7, "784": 7, "409": 7, "767": 7, "411": 7, "953": 7, "412": 7, "413": 7, "414": 7, "966": 7, "415": 7, "778": 7, "416": 7, "724": 7, "794": 7, "418": 7, "715": 7, "419": 7, "823": 7, "421": 7, "747": 7, "422": 7, "423": 7, "663": 7, "648": 7, "862": 7, "826": 7, "427": 7, "806": 7, "428": 7, "943": 7, "649": 7, "431": 7, "479": 7, "623": 7, "433": 7, "676": 7, "434": 7, "726": 7, "435": 7, "706": 7, "436": 7, "437": 7, "438": 7, "439": 7, "683": 7, "465": 7, "441": 7, "442": 7, "443": 7, "444": 7, "445": 7, "957": 7, "446": 7, "621": 7, "447": 7, "448": 7, "449": 7, "451": 7, "856": 7, "452": 7, "453": 7, "454": 7, "455": 7, "687": 7, "456": [7, 28, 29], "457": 7, "798": 7, "458": 7, "459": 7, "777": 7, "474": 7, "461": 7, "462": 7, "855": 7, "463": 7, "965": 7, "464": 7, "899": 7, "466": 7, "651": 7, "467": 7, "468": 7, "469": 7, "739": 7, "472": 7, "779": 7, "473": 7, "837": 7, "475": 7, "666": 7, "476": 7, "701": 7, "477": 7, "478": 7, "664": 7, "481": 7, "482": 7, "483": 7, "484": 7, "766": 7, "485": [7, 28, 29], "486": 7, "487": 7, "488": 7, "489": 7, "655": 7, "639": 7, "491": 7, "838": 7, "492": 7, "493": 7, "522": 7, "494": 7, "496": 7, "497": 7, "498": 7, "499": 7, "501": 7, "789": 7, "504": 7, "505": 7, "696": 7, "852": 7, "507": 7, "508": 7, "509": 7, "512": 7, "513": 7, "515": 7, "824": 7, "516": 7, "517": 7, "521": 7, "523": 7, "524": 7, "525": 7, "528": 7, "529": 7, "662": 7, "531": 7, "532": 7, "533": 7, "652": 7, "539": 7, "703": 7, "08": 7, "814": 7, "976": 7, "681": 7, "558": 7, "665": 7, "908": 7, "702": 7, "642": 7, "792": 7, "09": 7, "723": 7, "618": 7, "954": 7, "831": 7, "626": 7, "629": 7, "631": 7, "634": 7, "635": 7, "697": 7, "637": 7, "641": 7, "644": 7, "645": 7, "746": 7, "646": 7, "647": 7, "733": 7, "844": 7, "653": 7, "654": 7, "656": 7, "657": 7, "659": 7, "661": 7, "981": 7, "667": 7, "668": 7, "669": 7, "671": 7, "672": 7, "674": 7, "675": 7, "677": 7, "678": 7, "679": 7, "871": 7, "682": 7, "684": 7, "685": 7, "686": 7, "688": 7, "689": 7, "691": 7, "692": 7, "839": 7, "695": 7, "699": 7, "704": 7, "811": 7, "705": 7, "935": 7, "708": 7, "709": 7, "711": 7, "712": 7, "713": 7, "717": 7, "718": 7, "719": 7, "721": 7, "725": 7, "727": 7, "729": 7, "734": 7, "735": 7, "736": 7, "737": 7, "738": 7, "742": 7, "744": 7, "745": 7, "748": 7, "749": 7, "753": 7, "754": 7, "756": 7, "757": 7, "758": 7, "759": 7, "761": 7, "762": 7, "763": 7, "764": 7, "765": 7, "768": 7, "0814": 7, "769": 7, "771": 7, "772": 7, "773": 7, "774": 7, "0983": 7, "781": 7, "782": 7, "783": 7, "785": 7, "786": 7, "787": 7, "788": 7, "791": 7, "795": 7, "797": 7, "799": 7, "801": 7, "802": 7, "803": 7, "804": 7, "805": 7, "807": 7, "808": 7, "809": 7, "812": 7, "815": [7, 10], "817": 7, "818": 7, "819": 7, "821": 7, "825": 7, "827": 7, "828": 7, "829": 7, "841": 7, "842": 7, "843": 7, "845": 7, "846": 7, "847": 7, "848": 7, "851": 7, "853": 7, "854": 7, "857": 7, "858": 7, "859": 7, "861": 7, "864": 7, "865": 7, "866": 7, "867": 7, "868": 7, "869": 7, "872": 7, "873": 7, "875": 7, "876": 7, "877": 7, "879": 7, "883": 7, "884": 7, "0305": 7, "886": 7, "889": 7, "891": 7, "892": 7, "893": 7, "894": 7, "895": 7, "896": 7, "897": 7, "0837": 7, "901": 7, "902": 7, "903": 7, "905": 7, "941": 7, "906": 7, "907": 7, "909": 7, "911": 7, "912": 7, "913": 7, "914": 7, "915": 7, "916": 7, "918": 7, "919": 7, "921": 7, "922": 7, "924": 7, "927": 7, "929": 7, "931": 7, "933": 7, "934": 7, "936": 7, "938": 7, "939": 7, "944": [7, 11], "945": 7, "946": 7, "947": 7, "948": 7, "949": 7, "952": 7, "955": 7, "956": 7, "959": 7, "961": 7, "962": 7, "963": 7, "964": 7, "967": 7, "968": 7, "969": 7, "972": 7, "973": 7, "974": 7, "975": 7, "977": 7, "978": 7, "982": 7, "983": 7, "985": 7, "986": 7, "987": 7, "988": 7, "989": 7, "991": 7, "992": 7, "0896": 7, "994": 7, "995": 7, "996": 7, "997": [7, 10], "998": 7, "999": 7, "1001": 7, "1002": 7, "1003": 7, "1004": 7, "1005": 7, "1006": 7, "1007": [7, 9], "1008": 7, "1009": 7, "1010": 7, "1011": 7, "1012": 7, "1013": 7, "1014": 7, "1015": 7, "1016": 7, "1017": 7, "1018": 7, "1019": 7, "1020": 7, "1021": 7, "1022": 7, "1023": 7, "1024": [7, 28, 29], "1025": 7, "1026": 7, "1027": 7, "1028": 7, "1029": 7, "1030": 7, "1031": 7, "1032": 7, "1033": 7, "1034": 7, "1035": 7, "1036": 7, "1037": 7, "1038": 7, "1039": 7, "1040": 7, "1041": 7, "1042": 7, "1043": 7, "1044": 7, "1045": 7, "1046": 7, "1047": 7, "1048": 7, "1049": 7, "1050": 7, "1051": 7, "1052": 7, "1053": 7, "1054": 7, "1055": 7, "1056": 7, "1057": 7, "1058": 7, "1059": 7, "1060": 7, "0966": 7, "1061": 7, "1062": 7, "1063": 7, "1064": 7, "0842": 7, "1065": 7, "1066": 7, "1067": 7, "1068": 7, "1069": 7, "1070": 7, "1071": 7, "1072": 7, "1073": 7, "1074": 7, "1075": 7, "1076": 7, "1077": 7, "1078": 7, "1079": 7, "1080": 7, "1081": 7, "1082": 7, "1083": 7, "1084": 7, "1085": 7, "1086": 7, "1087": 7, "1088": 7, "0637": 7, "1089": 7, "1090": 7, "1091": 7, "1092": 7, "1093": 7, "1094": 7, "1095": 7, "1096": 7, "1097": 7, "1098": 7, "1099": 7, "1100": 7, "1101": 7, "1102": 7, "1103": 7, "1104": 7, "1105": 7, "1106": 7, "1107": 7, "1108": 7, "1109": 7, "1110": 7, "1111": 7, "1112": 7, "1113": 7, "1114": 7, "1115": 7, "1116": 7, "1117": 7, "1118": 7, "1119": 7, "1120": 7, "1121": 7, "1122": 7, "1123": 7, "0945": 7, "1124": 7, "1125": 7, "1126": 7, "1127": 7, "1128": 7, "1129": 7, "1130": 7, "1131": 7, "1132": 7, "1133": 7, "1134": 7, "1135": 7, "1136": 7, "1137": 7, "1138": 7, "1139": 7, "1140": 7, "1141": 7, "0522": 7, "1142": 7, "1143": 7, "1144": 7, "053": 7, "1145": 7, "1146": 7, "1147": 7, "1148": 7, "1149": 7, "1150": 7, "1151": 7, "1152": 7, "1153": 7, "1154": 7, "1155": 7, "1156": 7, "1157": 7, "1158": 7, "1159": 7, "1160": 7, "1161": 7, "1162": 7, "1163": 7, "1164": 7, "1165": 7, "1166": 7, "1167": 7, "1168": 7, "1169": 7, "0654": 7, "1170": 7, "1171": 7, "1172": 7, "1173": 7, "1174": 7, "1175": 7, "1176": 7, "1177": 7, "1178": 7, "1179": 7, "1180": 7, "1181": 7, "1182": 7, "1183": 7, "1184": 7, "1185": 7, "1186": 7, "1187": 7, "1188": 7, "1189": 7, "1190": 7, "0605": 7, "1191": 7, "1192": 7, "1193": 7, "1194": 7, "1195": 7, "0871": 7, "1196": 7, "1197": 7, "089": 7, "1198": 7, "1199": 7, "1200": 7, "1201": 7, "1202": 7, "0927": 7, "1203": 7, "1204": 7, "1205": 7, "1206": 7, "1207": 7, "1208": 7, "1209": 7, "1210": 7, "0763": 7, "1211": 7, "1212": 7, "1213": 7, "0409": 7, "1214": 7, "1215": 7, "1216": 7, "1217": 7, "1218": 7, "1219": 7, "1220": 7, "1221": 7, "1222": 7, "1223": 7, "1224": 7, "1225": 7, "1226": 7, "1227": 7, "1228": 7, "1229": 7, "1230": 7, "1231": 7, "1232": 7, "1233": 7, "1234": 7, "1235": 7, "1236": 7, "1237": 7, "0803": 7, "1238": 7, "1239": 7, "1240": 7, "1241": 7, "1242": 7, "1243": 7, "1244": 7, "1245": 7, "1246": 7, "1247": 7, "0714": 7, "1248": 7, "1249": 7, "1250": 7, "1251": 7, "0695": 7, "1252": 7, "1253": 7, "1254": 7, "1255": 7, "1256": 7, "1257": 7, "1258": 7, "1259": 7, "1260": 7, "1261": 7, "1262": 7, "1263": 7, "1264": 7, "1265": 7, "1266": 7, "1267": 7, "1268": 7, "1269": 7, "1270": 7, "1271": 7, "1272": 7, "1273": 7, "0961": 7, "1274": 7, "1275": 7, "1276": 7, "1277": 7, "1278": 7, "1279": 7, "1280": 7, "1281": 7, "1282": 7, "1283": 7, "1284": 7, "1285": 7, "1286": 7, "1287": 7, "1288": 7, "1289": 7, "1290": 7, "1291": 7, "1292": 7, "1293": 7, "1294": 7, "1295": 7, "0743": 7, "1296": 7, "1297": 7, "1298": 7, "1299": 7, "1300": 7, "1301": 7, "1302": 7, "1303": 7, "1304": 7, "1305": 7, "1306": 7, "1308": 7, "1309": 7, "1310": 7, "1311": 7, "084": 7, "1312": 7, "1313": 7, "1314": 7, "1315": 7, "1316": 7, "1317": 7, "1318": 7, "1319": 7, "1320": 7, "1321": 7, "1322": 7, "079": 7, "1323": 7, "0689": 7, "1324": 7, "1325": 7, "1326": 7, "1327": 7, "1328": 7, "0788": 7, "1329": 7, "1330": 7, "1331": 7, "1332": 7, "1333": 7, "0785": 7, "1334": 7, "1335": 7, "1336": 7, "1337": 7, "1338": 7, "1339": 7, "1340": 7, "1341": 7, "1342": 7, "1343": 7, "1344": 7, "1345": 7, "1346": 7, "1347": 7, "1348": 7, "1349": 7, "1350": 7, "1351": 7, "1352": 7, "1353": 7, "1354": 7, "1355": 7, "0967": 7, "1356": 7, "1357": 7, "1358": 7, "0322": 7, "1359": 7, "1360": 7, "1361": 7, "1362": 7, "1363": 7, "1364": 7, "1365": 7, "1366": 7, "1367": 7, "0839": 7, "1368": 7, "1369": 7, "0881": 7, "1370": 7, "1371": 7, "1372": 7, "1373": 7, "1374": 7, "1375": 7, "1376": 7, "0815": 7, "1377": 7, "1378": 7, "1379": 7, "1380": 7, "1381": 7, "1382": 7, "1383": 7, "1384": 7, "0741": 7, "1385": 7, "1386": 7, "1387": 7, "1388": 7, "1389": 7, "1390": 7, "1391": 7, "1392": 7, "1393": 7, "1394": 7, "1395": 7, "1396": 7, "1397": 7, "1398": 7, "1399": 7, "1400": 7, "1401": 7, "1402": 7, "1403": 7, "1404": 7, "1405": 7, "1406": 7, "1407": 7, "1408": 7, "1409": 7, "1410": 7, "1411": 7, "1412": 7, "1413": 7, "1414": 7, "1415": 7, "1416": 7, "0821": 7, "1417": 7, "1418": 7, "1419": 7, "0453": 7, "1420": 7, "1421": 7, "0334": 7, "1422": 7, "1423": 7, "1424": 7, "1425": 7, "1426": 7, "1427": 7, "1428": 7, "1429": 7, "0613": 7, "1430": 7, "1431": 7, "1432": 7, "1433": 7, "1434": 7, "1435": 7, "1436": 7, "1437": 7, "0868": 7, "1438": 7, "1439": 7, "1440": 7, "1441": 7, "1442": 7, "1443": 7, "1444": 7, "1445": 7, "1446": 7, "1447": 7, "1448": 7, "1449": 7, "1450": 7, "1451": 7, "1452": 7, "1453": 7, "1454": 7, "1455": 7, "1456": 7, "1457": 7, "1458": 7, "1459": 7, "1460": 7, "1461": 7, "1462": 7, "1463": 7, "1464": 7, "0826": 7, "1465": 7, "1466": 7, "1467": 7, "1468": 7, "1469": 7, "1470": 7, "1471": 7, "1472": 7, "1473": 7, "1474": 7, "1475": 7, "1476": 7, "1477": 7, "1478": 7, "1479": 7, "1480": 7, "1481": 7, "1482": 7, "078": 7, "1483": 7, "1484": 7, "1485": 7, "1486": 7, "1487": 7, "1488": 7, "1489": 7, "1490": 7, "1491": 7, "1492": 7, "1493": 7, "1494": 7, "1495": 7, "1496": 7, "1497": 7, "1498": 7, "1499": 7, "1500": 7, "0624": 7, "1501": 7, "0384": 7, "1502": 7, "0825": 7, "1503": 7, "1504": 7, "1505": 7, "1506": 7, "1507": 7, "1508": 7, "1509": 7, "0937": 7, "1510": 7, "1511": 7, "1512": 7, "1513": 7, "1514": 7, "1515": 7, "1516": 7, "1517": 7, "1518": 7, "1519": 7, "1520": 7, "0949": 7, "1521": 7, "1522": 7, "1523": 7, "1524": 7, "1525": 7, "1526": 7, "1527": 7, "1528": 7, "1529": 7, "0569": 7, "1530": 7, "1531": 7, "1532": 7, "1533": 7, "1534": 7, "1535": 7, "1536": 7, "1537": 7, "1538": 7, "1539": 7, "0524": 7, "1540": 7, "1541": 7, "1542": 7, "1543": 7, "1544": 7, "0514": 7, "1545": 7, "1546": 7, "1547": 7, "1548": 7, "1549": 7, "1550": 7, "1551": 7, "1552": 7, "1553": 7, "1554": 7, "1555": 7, "1556": 7, "1557": 7, "1558": 7, "1559": 7, "1560": 7, "1561": 7, "1562": 7, "1563": 7, "1564": 7, "1565": 7, "0912": 7, "1566": 7, "1567": 7, "1568": 7, "1569": 7, "1570": 7, "1571": 7, "1572": 7, "1573": 7, "1574": 7, "1575": 7, "1576": 7, "1577": 7, "1578": 7, "1579": 7, "1580": 7, "1581": 7, "1582": 7, "1583": 7, "1584": 7, "1585": 7, "1586": 7, "1587": 7, "1588": 7, "1589": 7, "1590": 7, "1591": 7, "0635": 7, "1592": 7, "0874": 7, "1593": 7, "1594": 7, "1595": 7, "1596": 7, "0243": 7, "1597": 7, "1598": 7, "1599": 7, "1600": 7, "1601": 7, "0439": 7, "1602": 7, "1603": 7, "1604": 7, "1605": 7, "0677": 7, "1606": 7, "1607": 7, "1608": 7, "1609": 7, "0887": 7, "1610": 7, "1611": 7, "1612": 7, "1613": 7, "1614": 7, "0551": 7, "1615": 7, "1616": 7, "1617": 7, "1618": 7, "1619": 7, "1620": 7, "1621": 7, "1622": 7, "1623": 7, "0333": 7, "1624": 7, "1625": 7, "1626": 7, "0462": 7, "1627": 7, "0323": 7, "1628": 7, "1629": 7, "1630": 7, "0972": 7, "1631": 7, "1632": 7, "1633": 7, "1634": 7, "1635": 7, "0941": 7, "1636": 7, "1637": 7, "1638": 7, "1639": 7, "1640": 7, "1641": 7, "0932": 7, "1642": 7, "1643": 7, "0797": 7, "1644": 7, "1645": 7, "0448": 7, "1646": 7, "1647": 7, "1648": 7, "1649": 7, "1650": 7, "1651": 7, "0792": 7, "1652": 7, "1653": 7, "1654": 7, "1655": 7, "1656": 7, "1657": 7, "0694": 7, "1658": 7, "1659": 7, "1660": 7, "1661": 7, "1662": 7, "1663": 7, "1664": 7, "1665": 7, "1666": 7, "1667": 7, "1668": 7, "1669": 7, "1670": 7, "1671": 7, "1672": 7, "1673": 7, "0921": 7, "1674": 7, "1675": 7, "1676": 7, "1677": 7, "1678": 7, "0679": 7, "1679": 7, "0673": 7, "1680": 7, "1681": 7, "0474": 7, "1682": 7, "1683": 7, "1684": 7, "1685": 7, "1686": 7, "1687": 7, "1688": 7, "1689": 7, "1690": 7, "049": 7, "1691": 7, "1692": 7, "1693": 7, "0248": 7, "1694": 7, "1695": 7, "0882": 7, "1696": 7, "1697": 7, "0433": 7, "1698": 7, "0918": 7, "1699": 7, "1700": 7, "1701": [7, 65], "1702": 7, "1703": 7, "1704": 7, "1705": 7, "1706": 7, "1707": 7, "1708": 7, "1709": 7, "1710": 7, "1711": 7, "1712": 7, "0664": 7, "1713": 7, "1714": 7, "1715": 7, "1716": 7, "1717": 7, "1718": 7, "1719": 7, "1720": 7, "1721": 7, "1722": 7, "1723": 7, "1724": 7, "1725": 7, "1726": 7, "1727": 7, "0944": 7, "1728": 7, "0724": 7, "1729": 7, "0288": 7, "1730": 7, "0282": 7, "1731": 7, "1732": 7, "1733": 7, "1734": 7, "1735": 7, "0847": 7, "1736": 7, "0753": 7, "1737": 7, "1738": 7, "1739": 7, "1740": 7, "1741": 7, "031": 7, "1742": 7, "1743": 7, "0928": 7, "1744": 7, "1745": 7, "1746": 7, "1747": 7, "1748": 7, "1749": 7, "0888": 7, "1750": 7, "1751": 7, "1752": 7, "0877": 7, "1753": 7, "0314": 7, "1754": 7, "1755": 7, "1756": 7, "1757": 7, "1758": 7, "0499": 7, "1759": 7, "1760": 7, "1761": 7, "1762": 7, "1763": 7, "1764": 7, "1765": 7, "1766": 7, "1767": 7, "1768": 7, "1769": 7, "1770": 7, "1771": 7, "1772": 7, "1773": 7, "1774": 7, "1775": 7, "0326": 7, "1776": 7, "1777": 7, "1778": 7, "1779": 7, "0233": 7, "1780": 7, "1781": 7, "1782": 7, "1783": 7, "1784": 7, "1785": 7, "1786": 7, "1787": 7, "1788": 7, "1789": 7, "0831": 7, "1790": 7, "1791": 7, "1792": 7, "1793": 7, "1794": 7, "0242": 7, "1795": 7, "1796": 7, "0736": 7, "1797": 7, "1798": 7, "0378": 7, "1799": 7, "1800": 7, "1801": 7, "0607": 7, "1802": 7, "1803": 7, "042": 7, "1804": 7, "1805": 7, "1806": [7, 67], "1807": 7, "1808": 7, "1809": 7, "0634": 7, "1810": 7, "1811": 7, "0827": 7, "1812": 7, "0457": 7, "1813": 7, "0973": 7, "1814": 7, "1815": 7, "1816": 7, "1817": 7, "1818": 7, "1819": 7, "1820": 7, "1821": 7, "0999": 7, "1822": 7, "1823": 7, "1824": 7, "1825": 7, "1826": 7, "1827": 7, "1828": 7, "1829": 7, "1830": 7, "1831": 7, "1832": 7, "0214": 7, "1833": 7, "1834": 7, "1835": 7, "1836": 7, "1837": 7, "1838": 7, "1839": 7, "067": 7, "1840": 7, "0911": 7, "1841": 7, "1842": 7, "1843": 7, "1844": 7, "1845": 7, "1846": 7, "0641": 7, "1847": 7, "1848": 7, "1849": 7, "1850": 7, "1851": 7, "1852": 7, "1853": 7, "1854": 7, "1855": 7, "1856": 7, "1857": 7, "1858": 7, "1859": 7, "1860": 7, "1861": 7, "0755": 7, "1862": 7, "0906": 7, "1863": 7, "0856": 7, "1864": 7, "1865": 7, "1866": 7, "1867": 7, "1868": 7, "0577": 7, "1869": 7, "1870": 7, "1871": 7, "1872": 7, "1873": 7, "1874": 7, "0292": 7, "061": 7, "0734": 7, "0645": 7, "0317": 7, "0371": 7, "0706": 7, "0758": 7, "0942": 7, "043": 7, "0984": 7, "047": 7, "0931": 7, "035": 7, "0904": 7, "0193": 7, "0947": 7, "0853": 7, "0893": 7, "0693": 7, "0838": 7, "0746": 7, "098": 7, "0723": 7, "0818": 7, "0798": 7, "0976": 7, "0914": 7, "0857": 7, "0431": 7, "0122": 7, "0483": 7, "0362": 7, "0559": 7, "0502": 7, "0147": 7, "0497": 7, "0731": 7, "0436": 7, "0779": 7, "0924": 7, "0249": 7, "0544": 7, "0735": 7, "0698": 7, "0563": 7, "0784": 7, "0668": 7, "0447": 7, "0552": 7, "038": 7, "0895": 7, "0873": 7, "0388": 7, "0769": 7, "0543": 7, "0444": 7, "055": 7, "0926": 7, "0946": 7, "0772": 7, "0754": 7, "0294": 7, "045": 7, "054": 7, "0477": 7, "029": 7, "0349": 7, "058": 7, "0464": 7, "0683": 7, "0241": 7, "0737": 7, "0806": 7, "0709": 7, "0696": 7, "0681": 7, "0319": 7, "0609": 7, "0978": 7, "0496": 7, "0426": 7, "0255": 7, "0268": 7, "0332": 7, "0869": 7, "0425": 7, "0597": 7, "0377": 7, "027": 7, "0901": 7, "0627": 7, "0766": 7, "0744": 7, "0266": 7, "0542": 7, "0953": 7, "0606": 7, "037": 7, "0957": 7, "0764": 7, "0822": 7, "0739": 7, "0676": 7, "0669": 7, "0596": 7, "0852": 7, "0903": 7, "0381": 7, "0389": 7, "0274": 7, "0434": 7, "0511": 7, "0455": 7, "0581": 7, "0138": 7, "036": 7, "0659": 7, "00574": 7, "0446": 7, "0209": 7, "0866": 7, "077": 7, "0576": 7, "0163": 7, "0726": 7, "0393": 7, "0458": 7, "0473": 7, "0273": 7, "0232": 7, "0469": 7, "0264": 7, "0145": 7, "064": 7, "0368": 7, "0372": 7, "088": 7, "0915": 7, "0687": 7, "081": 7, "0905": 7, "0653": 7, "0557": 7, "0521": 7, "056": 7, "0802": 7, "0157": 7, "033": 7, "0711": 7, "0216": 7, "0885": 7, "0811": 7, "072": 7, "0538": 7, "0351": 7, "0202": 7, "0934": 7, "0883": 7, "0199": 7, "0491": 7, "0867": 7, "0315": 7, "032": 7, "0155": 7, "0623": 7, "0536": 7, "0224": 7, "0219": 7, "0405": 7, "0716": 7, "0611": 7, "0834": 7, "096": 7, "0189": 7, "0617": 7, "083": 7, "0682": 7, "0863": 7, "0537": 7, "00789": 7, "0237": 7, "0226": 7, "0849": 7, "0383": 7, "0408": 7, "00849": 7, "0529": 7, "0686": 7, "0816": 7, "0253": 7, "0804": 7, "0461": 7, "0541": 7, "0385": 7, "0121": 7, "0936": 7, "0275": 7, "0564": 7, "00806": 7, "0311": 7, "0646": 7, "0962": 7, "0859": 7, "0862": 7, "0259": 7, "0793": 7, "0913": 7, "0625": 7, "0506": 7, "0786": 7, "0424": 7, "0745": 7, "0515": 7, "0738": 7, "0406": 7, "0688": 7, "0286": 7, "0854": 7, "0276": 7, "0715": 7, "026": 7, "0526": 7, "014": 7, "0995": 7, "0662": 7, "0591": 7, "0759": 7, "0708": 7, "0628": 7, "0532": 7, "0982": 7, "073": 7, "0478": 7, "0172": 7, "0141": 7, "0725": 7, "0813": 7, "0263": 7, "0604": 7, "0809": 7, "00548": 7, "0465": 7, "0283": 7, "0799": 7, "0907": 7, "0187": 7, "0324": 7, "00992": 7, "0168": 7, "00532": 7, "0376": 7, "0482": 7, "0302": 7, "092": 7, "0361": 7, "0404": 7, "0505": 7, "097": [7, 10], "0707": 7, "0762": 7, "087": 7, "0638": 7, "0663": 7, "0757": 7, "0892": 7, "0657": 7, "0795": 7, "0158": 7, "0567": 7, "0667": 7, "00629": 7, "0925": 7, "0642": 7, "0342": 7, "0631": 7, "059": 7, "0568": 7, "0789": 7, "00752": 7, "00807": 7, "0717": 7, "057": 7, "0169": 7, "0612": 7, "0195": 7, "0401": 7, "0179": 7, "0801": 7, "0971": 7, "0421": 7, "0173": 7, "0442": 7, "0621": 7, "022": 7, "0112": 7, "00851": 7, "0727": 7, "0301": 7, "0684": 7, "0493": 7, "0671": 7, "0703": 7, "0622": 7, "00639": 7, "0194": 7, "0271": 7, "0886": 7, "0101": 7, "0595": 7, "0252": 7, "051": 7, "0116": 7, "0614": 7, "0555": 7, "0525": 7, "00948": 7, "0534": 7, "0513": 7, "0732": 7, "0245": 7, "0191": 7, "018": 7, "0164": 7, "0835": 7, "00466": 7, "093": 7, "0674": 7, "0546": 7, "0119": 7, "0479": 7, "0649": 7, "0355": 7, "0467": 7, "0884": 7, "0796": 7, "0375": 7, "0251": 7, "0475": 7, "0412": 7, "0441": 7, "0501": 7, "0554": 7, "0964": 7, "0476": 7, "0356": 7, "0898": 7, "0411": 7, "00705": 7, "0296": 7, "0162": 7, "0992": 7, "024": 7, "0456": 7, "0545": 7, "0787": 7, "0415": 7, "0843": 7, "0952": 7, "0419": 7, "00491": 7, "0206": 7, "0398": 7, "0618": 7, "0889": 7, "0722": 7, "0651": 7, "091": 7, "0102": 7, "0148": 7, "0437": 7, "066": 7, "0285": 7, "039": 7, "0345": 7, "0752": 7, "076": 7, "0428": 7, "0751": 7, "0488": 7, "0204": 7, "0648": 7, "0261": 7, "0672": 7, "00887": 7, "0916": 7, "0218": 7, "0327": 7, "085": 7, "0547": 7, "0902": 7, "0823": 7, "0445": 7, "099": 7, "0699": 7, "0254": 7, "0463": 7, "0347": 7, "0181": 7, "00897": 7, "0137": 7, "012": 7, "0848": 7, "0222": 7, "0471": 7, "0396": 7, "0429": 7, "0166": 7, "0329": 7, "0451": 7, "0117": 7, "0217": 7, "0297": 7, "0118": 7, "016": 7, "0341": 7, "0574": 7, "0718": 7, "0325": 7, "034": 7, "0629": 7, "0899": 7, "094": 7, "0704": 7, "0747": 7, "0459": 7, "0212": 7, "0269": 7, "0528": 7, "0768": 7, "0205": 7, "0583": 7, "0909": 7, "0697": 7, "052": 7, "0379": 7, "0443": 7, "0655": 7, "0512": 7, "0639": 7, "007": 7, "0468": 7, "0129": 7, "0485": 7, "0126": 7, "0991": 7, "0656": 7, "0531": 7, "0365": 7, "0846": 7, "0965": 7, "0234": 7, "0713": 7, "0413": 7, "pai": 7, "attent": 7, "perf": [7, 8], "03085": 7, "06518": 7, "06372": 7, "00220": 7, "00182": 7, "aupr": 7, "auroc": 7, "91244": 7, "tabl": [7, 9], "lot": 7, "binari": [7, 86], "v": 7, "higher": [7, 73, 82, 83, 88], "better": [7, 11, 12, 104, 121, 122], "reliabl": [7, 11], "expect": [7, 8, 11, 14, 15, 16], "precis": [7, 52, 109], "version": [7, 12, 14, 15, 16, 17, 18, 19, 20, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 78, 119], "ratio": [7, 14, 15, 16, 91, 100, 114], "talk": 7, "about": [7, 12], "section": [7, 121, 122], "two": 7, "option": [7, 13, 14, 15, 16, 20, 26, 27, 28, 29, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 82, 83, 88, 92, 101, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "either": [7, 12, 14, 15, 16, 44, 103, 119, 121], "directli": [7, 11, 12, 119, 121], "enough": 7, "otherwis": [7, 11, 49, 101, 103, 104, 105, 108], "independ": [7, 122], "sometim": [7, 8], "call": [7, 8, 9, 11, 12, 52, 53, 105, 120], "sequenti": 7, "choic": [7, 121], "between": [7, 9, 37, 48, 52, 53, 54, 56, 64, 74, 75, 91, 104, 105], "multipl": [7, 9, 10, 80, 81, 105, 118, 122], "gpu": [7, 11, 12, 26, 118, 119, 121], "pre": [7, 11, 13, 119], "deep_ensembl": 7, "replic": [7, 56, 62], "chang": [7, 13, 56, 57], "initi": [7, 11, 27, 28, 29, 52, 53, 61, 78, 103, 105, 111, 112, 113, 121], "your": [7, 12, 13, 119], "ensur": [7, 12, 13, 121], "repeattarget": 7, "reset_model_paramet": [7, 107], "ens_routin": 7, "format_batch_fn": [7, 114, 115, 116, 117, 121], "how": [7, 10, 11, 12, 26, 73, 77, 79, 82, 83, 88, 92, 109, 121], "compar": [7, 100], "scheme": 7, "dictionnari": 7, "relat": [7, 10, 11], "ens_perf": 7, "0828": 7, "0794": 7, "0819": 7, "0894": 7, "0988": 7, "0336": 7, "0875": 7, "0579": 7, "0987": 7, "0997": 7, "0919": 7, "0328": 7, "0776": 7, "0487": 7, "0262": 7, "0844": 7, "0963": 7, "0572": 7, "0553": 7, "0293": 7, "095": 7, "0998": 7, "0975": 7, "0593": 7, "0782": 7, "0588": 7, "062": 7, "0876": 7, "0636": 7, "0494": 7, "0508": 7, "0666": 7, "0929": 7, "082": 7, "0472": 7, "0571": 7, "0775": 7, "065": 7, "0318": 7, "0578": 7, "0841": 7, "04239": 7, "15455": 7, "09020": 7, "02155": 7, "02156": 7, "11634": 7, "47420": 7, "95686": 7, "15948": 7, "sinc": [7, 8], "one": [7, 11, 12, 37, 44, 45, 48, 77, 79, 82, 83, 86, 88, 92, 94, 97, 115, 116, 121], "reduc": [7, 13, 56, 57, 77, 79, 82, 83, 88, 92, 108], "github": [7, 10, 11, 33, 47, 71, 85, 105, 119, 121], "usag": [7, 118], "feel": [7, 13, 121], "free": [7, 121, 122], "machin": [7, 13], "longer": [7, 10, 11], "durat": 7, "multipli": [7, 13, 56, 57, 62, 63], "account": [7, 121], "fact": 7, "hug": [7, 11, 13], "face": [7, 11, 13, 122], "hf_hub_download": 7, "below": [7, 9, 122], "therefor": [7, 56, 57, 120], "pretrain": [7, 14], "huggingfac": 7, "hub": [7, 11], "all_model": 7, "repo_id": 7, "ensta": [7, 119], "u2i": [7, 119], "filenam": [7, 12], "version_": [7, 12], "ckpt": [7, 12], "local_dir": 7, "state_dict": [7, 10, 105], "map_loc": [7, 11], "item": [7, 8, 9, 10], "load_state_dict": [7, 10, 11], "home": [7, 10], "runner": [7, 10], "auto_tutorials_sourc": [7, 10, 123], "futurewarn": [7, 10, 11], "weights_onli": [7, 10, 11], "current": [7, 10, 11, 13, 77, 83, 88, 101, 102, 105, 120], "pickl": [7, 10, 11], "implicitli": [7, 10, 11], "It": [7, 9, 10, 11, 12, 30, 45, 55, 57, 70, 74, 75, 105, 119, 120, 121], "possibl": [7, 10, 11, 13, 56], "construct": [7, 10, 11], "malici": [7, 10, 11], "arbitrari": [7, 10, 11], "unpickl": [7, 10, 11], "blob": [7, 10, 11], "secur": [7, 10, 11], "md": [7, 10, 11], "untrust": [7, 10, 11], "detail": [7, 10, 11, 12, 78, 109, 114, 116, 117, 118, 120], "futur": [7, 10, 11], "releas": [7, 10, 11, 44], "flip": [7, 10, 11], "limit": [7, 10, 11], "unless": [7, 10, 11], "explicitli": [7, 10, 11, 13], "allowlist": [7, 10, 11], "serial": [7, 10, 11], "add_safe_glob": [7, 10, 11], "recommend": [7, 10, 11], "start": [7, 10, 11, 13, 54, 55, 104, 105], "where": [7, 10, 11, 33, 34, 38, 39, 50, 52, 53, 64, 73, 77, 79, 82, 83, 86, 88, 92, 93, 94, 95, 96, 97, 98, 99], "control": [7, 8, 10, 11, 61, 64], "experiment": [7, 10, 11], "featur": [7, 10, 11, 53, 55, 57, 61, 63, 86, 114, 122], "00677": 7, "02816": 7, "01454": 7, "00459": 7, "00451": 7, "25233": 7, "38779": 7, "01787": 7, "23446": 7, "publish": 7, "intern": [7, 46], "represent": [7, 56, 57], "2023": [7, 86, 118, 121, 122], "modif": 7, "make": [7, 9, 13, 37, 52, 53, 56, 57, 77, 79, 82, 86, 88, 92, 103, 118, 121, 122], "computation": [7, 9, 88], "idea": [7, 120, 121], "member": [7, 52, 53, 56, 57], "u": [7, 10, 13, 52, 53, 119, 121], "pass": [7, 9, 12, 13, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 88, 90, 92, 101, 103, 105, 114, 115, 116, 117, 121], "particularli": [7, 13], "updat": [7, 11, 73, 74, 75, 77, 79, 81, 82, 83, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 119], "equival": [7, 88], "link": [7, 13, 109], "einop": [7, 10, 121], "rearrang": [7, 10, 57, 121], "packedconv2d": [7, 10, 121], "packedlinear": [7, 10, 121], "packedlenet": 7, "last": [7, 10, 12, 14, 15, 16, 56, 57, 103, 108, 120, 121], "e": [7, 8, 10, 12, 13, 27, 28, 29, 37, 38, 39, 44, 45, 46, 48, 73, 81, 95, 96, 98, 115, 116, 119, 121, 122], "m": [7, 10, 11, 13, 52, 53, 64, 67, 94, 97, 110, 121, 122], "h": [7, 10, 27, 28, 29, 46, 110, 121], "w": [7, 10, 27, 28, 29, 53, 68, 105, 121], "again": [7, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 119], "packed_model": 7, "packed_routin": 7, "packed_perf": 7, "0977": 7, "0817": 7, "0938": 7, "0836": 7, "075": 7, "0675": 7, "0812": 7, "0565": 7, "0729": 7, "0626": 7, "0985": 7, "0948": 7, "0986": 7, "0824": 7, "068": 7, "0509": 7, "0566": 7, "0781": 7, "0765": 7, "0337": 7, "0516": 7, "0917": 7, "0994": 7, "0923": 7, "0594": 7, "0791": 7, "0872": 7, "0603": 7, "0968": 7, "0454": 7, "0777": 7, "0808": 7, "0661": 7, "0586": 7, "0313": 7, "03483": 7, "16050": 7, "08046": 7, "03137": 7, "03138": 7, "16201": 7, "52707": 7, "80200": 7, "36001": 7, "approxim": [7, 8, 9, 109], "befor": [7, 11, 13, 33, 49], "howev": [7, 11, 12, 13, 56, 57, 120], "veri": [7, 11, 121, 122], "small": [7, 45, 65, 74, 75, 95, 96, 98, 99], "henc": 7, "complet": 7, "underus": 7, "would": [7, 12, 13, 121], "observ": [7, 74, 75], "larger": [7, 8], "read": [7, 33, 122], "medium": 7, "post": [7, 8, 111, 112, 113, 114, 118], "look": [7, 10, 11, 13, 121], "lightning_log": [7, 12], "If": [7, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29, 33, 37, 38, 39, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 62, 63, 73, 74, 75, 77, 79, 80, 81, 82, 83, 86, 88, 92, 96, 97, 98, 99, 101, 107, 114, 116, 119, 121], "own": [7, 103], "try": [7, 9, 10, 13], "curv": [7, 73, 74, 75], "tensorboard": [7, 11], "logdir": 7, "add": [7, 8, 12, 13, 52, 53, 54, 55, 56, 57, 62, 63, 73, 74, 75, 105], "made": [7, 27, 28, 29], "sub": 7, "think": [7, 10, 121], "help": [7, 12, 13], "identifi": 7, "reject": 7, "paradigm": 7, "awar": [7, 118], "decid": 7, "threshold": [7, 81, 90, 100], "real": [7, 11, 122], "world": [7, 11, 122], "cost": 7, "wrong": 7, "constrast": 7, "best": [7, 12, 13], "correct": [7, 74, 75], "abov": [7, 10, 12], "area": [7, 73, 74, 75], "under": [7, 44, 73, 74, 75, 121], "coverag": [7, 13, 74, 75, 80, 81, 89, 90], "express": 7, "evolv": [7, 13], "abl": 7, "perfectli": 7, "separ": [7, 19], "fix": [7, 67, 111, 112, 113], "interest": [7, 12, 13, 121], "certain": 7, "requir": [7, 121], "technic": 7, "constraint": [7, 56, 57], "egal": 7, "orthogon": 7, "glest": 7, "eval_grouping_loss": [7, 14, 15, 16, 114, 121], "hoc": [8, 114], "mc": [8, 14, 15, 16, 103, 108, 109, 110], "mc_batch_norm": 8, "post_process": [8, 11, 109, 110, 111, 112, 113, 114], "optim_cifar10_resnet18": [8, 9], "norm": [8, 76, 78], "batchnorm2d": [8, 14, 110], "03264": 8, "06677": 8, "06907": 8, "00242": 8, "00206": 8, "specifi": [8, 13, 64, 65, 66, 67, 68, 69, 107], "batchnorm": [8, 14, 105, 110], "mc_batch_siz": [8, 110], "author": [8, 44, 118, 122], "good": [8, 10, 120], "highlight": 8, "forget": [8, 9], "enabl": [8, 9, 12], "uncertain": 8, "highest": 8, "most_uncertain": 8, "sort": 8, "var": 8, "topk": 8, "str": [8, 9, 14, 15, 16, 20, 21, 22, 23, 24, 27, 28, 29, 30, 33, 34, 37, 44, 45, 46, 48, 49, 50, 52, 54, 56, 57, 62, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 82, 83, 88, 92, 109, 114], "image_id": [8, 9], "mostli": [8, 13], "erron": 8, "depend": [8, 12, 94, 97, 103, 119, 120, 122], "refer": [9, 10, 13, 33, 37, 41, 44, 46, 48, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 78, 85, 86, 95, 96, 98, 99, 101, 104, 105, 107, 109, 110, 111, 112, 113, 118, 121], "2016": [9, 122], "vision": [9, 44, 46, 122], "2017": [9, 11, 71, 74, 75, 107, 111, 112, 113, 120, 122], "mc_dropout": 9, "wrap": [9, 103, 108, 121], "sure": [9, 52, 53, 54, 55, 56, 57, 77, 79, 82, 86, 88, 92, 103, 118], "moreov": 9, "dropout_r": [9, 14, 15, 16, 18], "mc_model": 9, "last_lay": [9, 103, 108, 109], "tell": 9, "exdb": 9, "fail": 9, "urlopen": 9, "ssl": 9, "certificate_verify_fail": 9, "certif": 9, "verifi": [9, 10, 11, 33], "ha": [9, 11, 74, 75], "expir": 9, "_ssl": 9, "ossci": 9, "91m": 9, "140mb": 9, "9k": 9, "58mb": 9, "65m": 9, "2mb": [9, 10], "54k": 9, "21749": 9, "14304": 9, "52563": 9, "25892": 9, "get": [9, 10, 11, 13, 21, 22, 23, 24, 25, 70, 121, 122], "disagr": [9, 91], "heavili": [10, 52, 53], "inspir": [10, 13, 47, 52, 53, 71], "dive": 10, "60000": 10, "32x32": 10, "colour": 10, "6000": 10, "per": [10, 21, 22, 23, 24, 27, 28, 29, 56, 77, 79, 82, 83, 88, 92], "There": [10, 11, 30, 45], "50000": 10, "cifar": [10, 11, 12, 37, 38, 39], "outlin": 10, "set_num_thread": 10, "pilimag": 10, "window": 10, "brokenpipeerror": 10, "trainset": 10, "trainload": 10, "testset": 10, "testload": 10, "plane": [10, 52], "car": 10, "bird": 10, "cat": 10, "deer": 10, "dog": 10, "frog": 10, "hors": 10, "ship": 10, "truck": 10, "www": [10, 11], "toronto": [10, 11], "edu": [10, 11], "kriz": [10, 11], "tar": [10, 11], "170m": 10, "786k": 10, "85mb": 10, "24m": 10, "4mb": 10, "7m": [10, 11], "9mb": 10, "9m": [10, 11], "5m": [10, 11], "3m": 10, "2m": [10, 11], "3mb": [10, 11], "8m": 10, "6m": [10, 11], "101m": 10, "104m": 10, "107m": 10, "110m": [10, 11], "112m": 10, "115m": 10, "118m": 10, "120m": 10, "123m": 10, "126m": 10, "130m": 10, "134m": 10, "138m": 10, "142m": 10, "146m": 10, "149m": 10, "153m": 10, "158m": 10, "163m": 10, "167m": [10, 11], "fun": 10, "unnorm": 10, "figur": [10, 11, 73, 74, 75], "pad_valu": 10, "net": 10, "maxpool2d": [10, 121], "packednet": [10, 121], "packed_net": [10, 121], "momentum": [10, 102], "criterion": [10, 14, 15, 16, 114], "running_loss": 10, "list": [10, 11, 13, 21, 22, 23, 24, 25, 101, 107, 118, 121, 122], "zero": [10, 56, 58, 59, 60, 62, 88], "zero_grad": 10, "backward": 10, "repeat": [10, 12, 14, 16, 54, 55, 103], "statist": [10, 105], "2000": [10, 11], "1999": 10, "everi": [10, 101, 104, 105], "mini": 10, "3f": 10, "4000": 10, "8000": 10, "12000": 10, "model": [10, 12, 13, 20, 62, 63, 66, 70, 72, 74, 75, 79, 82, 83, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120], "cifar_packed_net": 10, "pth": 10, "displai": [10, 12], "familiar": 10, "groundtruth": 10, "back": 10, "re": 10, "wasn": 10, "necessari": [10, 57], "did": 10, "illustr": 10, "match": [10, 11, 12, 27, 28, 29, 46, 122], "successfulli": [10, 11], "n": [10, 52, 53, 74, 75, 77, 81, 82, 83, 86, 88, 90, 93, 94, 95, 96, 97, 98, 99, 119], "probs_per_est": 10, "seem": 10, "pretti": 10, "underli": [11, 56], "extens": 11, "temperaturescal": 11, "done": 11, "calibration_set": [11, 14, 15, 16, 111, 112, 113, 114, 121], "val": [11, 14, 15, 16, 26, 33, 34, 50, 112, 114, 121], "outsid": 11, "diagram": 11, "resnet": [11, 12, 14, 16, 121], "log_plot": [11, 14, 15, 16, 19, 114, 115, 117, 121], "flag": [11, 13, 110], "cifar100datamodul": 11, "calibrationerror": 11, "load_hf": 11, "scratch": 11, "liner": 11, "arch": [11, 12, 14, 15, 17, 19, 20, 121], "style": [11, 12, 13, 14, 15, 16, 19, 52, 53, 54, 55, 56, 57, 62, 63], "conv_bia": 11, "config": [11, 12, 121], "resnet18_c100": 11, "weight_path": 11, "devic": [11, 12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 105, 110, 111, 112, 113], "prepare_data": [11, 24, 26], "setup": [11, 26], "element": [11, 52, 54, 56], "dm": [11, 121], "unus": [11, 46], "169m": 11, "852k": 11, "76mb": 11, "0mb": 11, "101mb": 11, "104mb": 11, "107mb": 11, "106mb": 11, "109mb": 11, "121m": 11, "110mb": 11, "132m": 11, "144m": 11, "111mb": 11, "155m": 11, "112mb": 11, "113mb": 11, "103mb": 11, "split": [11, 23, 24, 26, 32, 33, 34, 40, 41, 42, 43, 44, 46, 47, 50, 51, 121], "proper": [11, 121], "associ": [11, 73, 75, 81, 90], "lengthi": 11, "restrict": 11, "random_split": 11, "cal_dataset": 11, "multiclass": 11, "temper": 11, "scaled_model": 11, "reset": [11, 107, 110], "mix": 11, "previou": [11, 12, 57], "sai": 11, "drawn": 11, "hold": 11, "shift": [11, 14, 15, 16, 21, 22, 23, 24, 114, 115, 116, 117, 121], "happen": 11, "naeini": [11, 78, 122], "cooper": [11, 122], "g": [11, 12, 13, 37, 38, 39, 44, 45, 46, 48, 64, 95, 96, 98, 104, 111, 112, 113, 120], "hauskrecht": [11, 122], "obtain": [11, 78, 122], "bin": [11, 14, 78, 114, 117, 122], "aaai": [11, 78, 122], "guo": [11, 111, 112, 113, 120, 122], "pleiss": [11, 111, 112, 113, 120, 122], "sun": [11, 111, 112, 113, 120, 122], "weinberg": [11, 111, 112, 113, 120, 122], "q": [11, 111, 112, 113, 120, 122], "modern": [11, 86, 111, 112, 113, 120, 122], "instanci": 12, "around": [12, 78, 121], "subcommand": 12, "lightningmodul": [12, 14, 15, 16, 114, 116, 117, 121], "lightningcli": 12, "tulightningcli": 12, "new": [12, 77, 83, 88, 119], "eval_after_fit": 12, "know": [12, 13], "whether": [12, 14, 15, 16, 21, 22, 23, 24, 26, 27, 28, 29, 50, 56, 57, 61, 73, 74, 75, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "phase": 12, "cifar10": [12, 22, 121], "lightningargumentpars": 12, "baselin": [12, 14, 15, 16, 17, 18, 19, 20, 105, 118, 122], "resnetbaselin": 12, "cifar10datamodul": [12, 121], "resnetcli": 12, "add_arguments_to_pars": 12, "parser": 12, "add_optimizer_arg": 12, "add_lr_scheduler_arg": 12, "multisteplr": 12, "cli_main": 12, "__main__": 12, "fast_dev_run": 12, "_get": 12, "ckpt_path": 12, "both": [12, 56, 57, 62, 94, 97], "instanc": [12, 51], "subclass": 12, "seemlessli": 12, "But": 12, "command": [12, 119, 121], "whichev": 12, "up": 12, "line": 12, "1": [12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 74, 75, 77, 85, 87, 93, 94, 95, 96, 97, 98, 99, 100, 105, 107, 110, 111, 112, 113, 120, 121, 122], "3": [12, 20, 34, 52, 53, 100, 117, 118, 119, 121], "loss": [12, 14, 15, 16, 17, 18, 19, 20, 64, 65, 66, 67, 68, 69, 70, 71, 72, 86, 92, 99, 114, 115, 116, 117, 118, 121], "mileston": 12, "prefix": [12, 105], "conveni": 12, "store": [12, 34, 62, 63, 73, 75, 81, 90, 105, 114], "burden": 12, "support": [12, 14, 15, 16, 18, 20, 50, 74, 75, 121], "eventu": 12, "By": 12, "yaml": [12, 23, 121], "format": [12, 13, 114, 115, 116, 117], "content": [12, 122], "directori": [12, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 37, 38, 39, 44, 45, 46, 48, 49, 50], "state": [12, 13, 79, 82, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105], "checkpoint": [12, 101, 122], "addit": [12, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100], "advis": [12, 13, 121], "explor": [12, 118], "mainli": 12, "organ": 12, "vgg": [12, 15], "wideresnet": 12, "cifar100": [12, 21], "uci_dataset": 12, "segment": [12, 13, 19, 20, 27, 28, 29, 50, 51, 107, 117, 121], "cityscap": [12, 28], "segform": [12, 20], "muad": [12, 29, 118], "uci": [12, 26, 49], "backbon": [12, 14, 15, 16, 20, 121], "predefin": 12, "resnet18": [12, 121], "choos": [12, 37, 44, 119, 121], "overrid": [12, 27, 28, 29, 103], "dict_kwarg": 12, "2": [12, 13, 20, 28, 29, 52, 62, 63, 96, 97, 98, 99, 100, 107, 117, 121], "yet": [12, 121], "miss": 12, "doc": [12, 13, 119], "earli": 13, "stage": [13, 26], "contributor": 13, "comprehens": [13, 118], "comment": 13, "project": [13, 119], "host": 13, "roughli": 13, "field": 13, "environ": [13, 119], "continu": 13, "integr": 13, "break": 13, "system": [13, 74, 119, 122], "clone": [13, 119], "repositori": [13, 119, 121], "edit": [13, 119], "pip": [13, 118, 119], "commit": [13, 119], "hook": [13, 119], "reinstal": 13, "group": [13, 14, 15, 16, 27, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 86, 114, 121], "navig": 13, "html": 13, "noplot": 13, "instead": [13, 27, 28, 29], "ruff": [13, 119], "lint": 13, "drop": 13, "black": 13, "isort": 13, "flake8": 13, "properli": 13, "push": 13, "pr": 13, "featureless": 13, "pytest": 13, "emoji": 13, "messag": 13, "pull": 13, "branch": 13, "person": 13, "fork": 13, "compli": [13, 33, 56, 57], "condit": 13, "nor": 13, "signatur": 13, "type": [13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 33, 37, 44, 50, 51, 52, 53, 54, 55, 61, 62, 63, 65, 66, 67, 70, 73, 74, 75, 77, 81, 85, 86, 90, 91, 101, 103, 105, 107, 109, 114, 115, 116, 118], "clear": 13, "docstr": 13, "come": 13, "rememb": 13, "paperswithcod": 13, "solv": 13, "rais": [13, 14, 15, 16, 44, 77, 79, 82, 83, 86, 88, 92, 100, 107, 110, 121], "explain": 13, "maintain": 13, "intend": 13, "popular": 13, "scikit": [13, 119], "api": [13, 38, 39, 46, 102, 118, 121], "except": [13, 103], "arrai": [13, 49], "obstacl": 13, "reconsid": 13, "remain": 13, "apach": 13, "imagenet": [14, 15, 16, 23, 41], "normalization_lay": 14, "mixup_param": [14, 15, 16, 114], "last_layer_dropout": [14, 15, 16], "width_multipli": 14, "rho": [14, 16], "batch_repeat": [14, 16], "ood_criterion": [14, 15, 16, 114, 121], "msp": [14, 15, 16, 114, 121], "save_in_csv": [14, 15, 16, 114, 121], "eval_shift": [14, 15, 16, 21, 22, 23, 24, 25, 114, 115, 116, 117], "num_calibration_bin": [14, 19, 114, 117], "variou": [14, 15, 16, 18, 20, 121], "configure_optim": [14, 15, 16, 114, 116, 117], "batchensembl": [14, 16, 52, 53], "mask": [14, 15, 16, 27, 28, 29, 54, 55, 69, 92], "masksembl": [14, 16, 54, 55, 121], "mimo": [14, 16, 121], "mixup": [14, 15, 16, 114], "mixtyp": [14, 15, 16], "mixmod": [14, 15, 16], "dist_sim": [14, 15, 16], "kernel_tau_max": [14, 15, 16], "kernel_tau_std": [14, 15, 16], "mixup_alpha": [14, 15, 16], "cutmix_alpha": [14, 15, 16], "expans": [14, 15, 16], "factor": [14, 15, 16, 62, 63, 94, 97], "affect": [14, 15, 16], "width": [14, 15, 16, 27, 28, 29, 57], "bool": [14, 15, 16, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 37, 38, 39, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 61, 62, 63, 73, 74, 75, 77, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121], "share": [14, 16, 21, 22, 23, 24, 26, 27, 28, 29, 52, 53], "mi": [14, 15, 16, 114, 121], "mutual": [14, 15, 16, 88, 114], "vr": [14, 15, 16, 114, 121], "csv": [14, 15, 16, 114], "callabl": [14, 15, 16, 33, 34, 37, 38, 39, 44, 45, 46, 48, 49, 50], "valueerror": [14, 15, 16, 77, 79, 82, 83, 86, 88, 92, 107], "readi": [14, 15, 16, 121], "wide": 16, "resnet28x10": 16, "depth": [17, 33, 34, 95, 96, 98, 99], "max_depth": [17, 32, 33, 34], "pretrained_backbon": [17, 19], "output_strid": 19, "metric_subsampling_r": [19, 117], "b0": 20, "b1": 20, "b2": 20, "b3": 20, "b4": 20, "b5": 20, "shift_sever": [21, 22, 23, 25, 35, 37, 48], "val_split": [21, 22, 23, 24, 25, 26, 27, 28, 29], "basic_aug": [21, 22, 23, 24, 25, 27, 28], "cutout": [21, 22, 24], "randaug": [21, 22, 23], "auto_aug": [21, 22], "num_dataload": [21, 22], "pin_memori": [21, 22, 23, 24, 25, 26, 27, 28, 29], "persistent_work": [21, 22, 23, 24, 25, 26, 27, 28, 29], "auto": [21, 22], "pin": [21, 22, 23, 24, 26, 27, 28, 29], "persist": [21, 22, 23, 24, 26, 27, 28, 29], "test_alt": [22, 23], "ood_d": [23, 24, 25], "openimag": [23, 46], "o": [23, 46, 121], "procedur": 23, "train_siz": 23, "interpol": [23, 25], "bilinear": [23, 25], "rand_augment_opt": [23, 25], "id": [23, 85], "textur": 23, "stand": 24, "notmnist": 24, "svhn": 25, "tinyimagenet": [25, 48], "dataset_nam": [26, 49], "input_shap": 26, "split_se": 26, "string": [26, 38, 39], "One": [26, 49], "boston": [26, 49], "hous": [26, 49, 118], "concret": [26, 49], "energi": [26, 49, 114, 121], "kin8nm": [26, 49], "naval": [26, 49], "propuls": [26, 49], "plant": [26, 49], "power": [26, 49, 100], "protein": [26, 49], "wine": [26, 49], "red": [26, 49], "yacht": [26, 49], "subprocess": 26, "tupl": [26, 33, 37, 44, 52, 54, 56, 62, 73, 74, 75], "shape": [26, 52, 53, 57, 73, 74, 75, 77, 81, 86, 88, 90, 99, 103], "seed": [26, 49, 105], "crop_siz": [27, 28, 29], "eval_s": [27, 28, 29], "group_class": [27, 50], "camvid": 27, "sequenc": [27, 28, 29], "desir": [27, 28, 29, 54, 55, 121], "length": [27, 28, 29, 105, 107], "edg": [27, 28, 29], "height": [27, 28, 29], "rescal": [27, 28, 29, 105], "superclass": [27, 50], "inject": [27, 28, 29], "v2": [27, 28, 29], "todtyp": [27, 28, 29], "dtype": [27, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "tv_tensor": [27, 28, 29], "float32": [27, 28, 29], "int64": [27, 28, 29], "behavior": [27, 28, 29], "2048": [28, 29], "toimag": [28, 29], "randomrescal": [28, 29], "min_scal": [28, 29], "max_scal": [28, 29], "pad_if_need": [28, 29], "colorjitt": [28, 29], "randomhorizontalflip": [28, 29], "target_transform": [30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51], "pixmix": 30, "licens": [30, 33, 44, 45, 49, 118], "suitabl": [30, 45], "commerci": [30, 33, 45], "min_depth": [32, 33, 34], "remove_unus": 32, "target_typ": [33, 51], "semant": 33, "leftimg8bit": 33, "leftlabel": 33, "leftdepth": 33, "locat": 33, "internet": [33, 37, 38, 39, 44, 45, 46, 48, 49, 50], "io": 33, "cannot": 33, "carefulli": 33, "encode_target": [33, 50, 51], "encod": [33, 50, 51, 62, 63, 118, 122], "liter": [34, 107, 109, 110, 111, 112, 113, 121], "minimum": [34, 105], "file_arg": [36, 39], "fine_label": 36, "cifarc_subset": [37, 48], "make_dataset": [37, 44], "accord": [37, 44], "chosen": [37, 44, 91], "gather": [37, 44, 70, 72], "ndarrai": [37, 44], "10h": [38, 39], "npy": [38, 39], "exist": [38, 39, 50], "aggre_label": 39, "10n": 39, "mnistc_subset": 44, "mu": [44, 122], "norman": [44, 122], "justin": [44, 122], "gilmer": [44, 122], "icmlw": [44, 122], "creativ": 44, "attribut": [44, 61, 114], "someon": 44, "investig": 44, "v4": [46, 122], "unifi": [46, 122], "visual": [46, 122], "relationship": [46, 122], "kuznetsova": [46, 122], "et": [46, 61, 66, 74, 76, 78, 105, 109, 121, 122], "al": [46, 61, 66, 74, 76, 78, 105, 109, 121, 122], "journal": [46, 118], "curat": [46, 122], "vim": [46, 122], "Of": 46, "virtual": [46, 122], "wang": [46, 122], "cvpr": [46, 122], "2022": [46, 64, 118, 122], "gist": 47, "z": 47, "b862013c0dc2b540cf96a123a6766e54": 47, "ethic": 49, "becaus": 49, "concern": 49, "entri": 50, "properti": [50, 51, 56], "color_palett": [50, 51], "color": [50, 51], "palett": [50, 51], "decode_target": [50, 51], "decod": [50, 51], "doesn": 50, "fine": 51, "classmethod": 51, "plot_sampl": 51, "out_channel": [52, 54, 56, 58, 59, 60, 62], "kernel_s": [52, 54, 56, 58, 59, 60, 62], "stride": [52, 54, 56, 58, 59, 60, 62], "dilat": [52, 54, 56, 58, 59, 60], "bia": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 111, 113], "2d": [52, 62], "signal": 52, "incom": [52, 53], "simplest": 52, "c_": 52, "h_": [52, 53], "w_": 52, "describ": [52, 71, 121], "n_i": 52, "_j": 52, "widehat": [52, 53], "s_": [52, 53], "n_": 52, "sum_": [52, 77, 93, 99], "star": 52, "r_": [52, 53], "altern": [52, 53, 122], "lifelong": [52, 53, 122], "produc": [52, 54, 55, 56, 57], "convolv": [52, 54, 56, 62], "kernel": [52, 54, 56, 62, 114, 122], "ad": [52, 54, 56, 62, 121], "four": [52, 54, 56], "side": [52, 54, 56, 62], "space": [52, 54, 56], "connect": [52, 55, 57, 62], "learnabl": [52, 53, 54, 55, 56, 57, 62, 63], "variabl": [52, 53, 61], "frac": [52, 53, 56, 57, 77, 93, 94, 95, 96, 97, 98, 99], "mathcal": [52, 53], "prod_": 52, "r_group": [52, 53], "matric": [52, 53], "row": [52, 53], "vector": [52, 53, 113, 120], "th": [52, 53], "s_group": [52, 53], "lfloor": 52, "rfloor": 52, "divid": [52, 53], "equal": [52, 64, 120], "conv2db": 52, "randn": [52, 53], "out_featur": [53, 55, 57, 61, 63], "circ": 53, "linearb": 53, "connexion": [54, 56], "Be": [54, 55], "nikita": [54, 55, 122], "durasov": [54, 55, 122], "timur": [54, 55, 122], "bagautdinov": [54, 55, 122], "pierr": [54, 55, 122], "baqu": [54, 55, 122], "pascal": [54, 55, 122], "fua": [54, 55, 122], "fulli": [55, 57], "oper": [55, 57], "minimum_channels_per_group": 56, "padding_mod": [56, 58, 59, 60, 62], "smallest": 56, "reflect": [56, 62], "circular": [56, 62], "explan": [56, 57, 121], "capac": [56, 57], "divis": [56, 57], "legaci": 57, "compat": 57, "n_estim": 57, "prior_sigma_1": [58, 59, 60, 61], "prior_sigma_2": [58, 59, 60, 61], "002": [58, 59, 60], "prior_pi": [58, 59, 60, 61], "mu_init": [58, 59, 60, 61], "sigma_init": [58, 59, 60, 61], "frozen": [58, 59, 60, 61], "conv1d": 58, "mixtur": [58, 59, 60, 61], "conv3d": 60, "deviat": [61, 62, 63], "freez": 61, "charl": [61, 107, 122], "unfreez": 61, "hidden_s": [62, 63], "std_factor": [62, 63], "lpbnn": [62, 63], "latent": [62, 63, 118, 122], "nois": [62, 63], "beta": 64, "reduct": [64, 65, 66, 67, 68, 69, 71, 77, 79, 82, 83, 86, 88, 91, 92], "tparamet": 64, "rel": [64, 95, 96, 98], "seitzer": [64, 122], "tavakoli": [64, 122], "antic": [64, 122], "martiu": [64, 122], "pitfal": [64, 122], "heteroscedast": [64, 122], "arxiv": [64, 65, 67, 68, 74, 101, 122], "ab": [64, 67, 68], "2203": [64, 122], "09168": 64, "ep": 65, "penalti": 65, "numer": [65, 88], "instabl": [65, 88], "gabriel": 65, "pereyra": 65, "penal": 65, "pdf": [65, 122], "06548": 65, "conflictu": 66, "moham": [66, 122], "fellaji": [66, 122], "principl": [66, 122], "paradox": [66, 122], "annealing_step": 67, "loss_typ": 67, "digamma": 67, "01768": 67, "combin": 68, "1910": 68, "02600": 68, "padding_mask": [69, 92], "bound": 70, "seek": 70, "fill": 70, "aggreg": 70, "focal": 71, "lin": [71, 122], "goyal": [71, 122], "girshick": [71, 122], "he": [71, 122], "doll\u00e1r": [71, 122], "dens": [71, 122], "tpami": [71, 118, 122], "adeelh": 71, "sparsif": 73, "much": [73, 74], "coincid": 73, "keyword": [73, 74, 75, 77, 79, 82, 83, 86, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100], "advanc": [73, 77, 79, 82, 83, 86, 88, 92, 93, 95, 96, 98, 99, 100], "hypothes": 73, "optic": 73, "flow": 73, "eccv": 73, "plot_oracl": 73, "plot_valu": [73, 74, 75], "oracl": [73, 75], "assess": [74, 75], "too": 74, "accept": [74, 75, 94, 95, 96, 97, 98], "pred": [74, 75, 93, 94, 95, 96, 97, 98, 99, 100], "scalar": [74, 75], "traub": [74, 122], "overcom": [74, 122], "flaw": [74, 122], "abil": [74, 75, 121], "discrimin": [74, 75], "rank": [74, 75], "geifman": [74, 75, 122], "el": [74, 75, 122], "yaniv": [74, 75, 122], "partial_comput": 75, "rc": 75, "num_bin": [76, 78], "l1": [76, 78], "ignore_index": [76, 78, 87], "validate_arg": [76, 78, 87], "nixon": [76, 122], "cvprw": [76, 122], "top_class": 77, "across": [77, 79, 82, 83, 88, 92], "3d": 77, "ie": 77, "previous": [79, 83, 88, 92], "nan": [80, 81], "risk_threshold": 81, "monoton": 81, "shannon": [83, 88], "pos_label": [84, 85], "posit": [84, 85], "recal": [84, 85, 120], "recall_level": 85, "fpr": 85, "anomali": 85, "seg": 85, "translat": 85, "conf": 85, "perez": [86, 122], "lebel": [86, 122], "alexandr": [86, 122], "le": [86, 122], "morvan": [86, 122], "marin": [86, 122], "varoquaux": [86, 122], "ga\u00ebl": [86, 122], "beyond": [86, 122], "accumul": [86, 110], "num_featur": 86, "top_k": 87, "multidim_averag": 87, "global": 87, "meanintersect": 87, "union": 87, "iou": 87, "intersect": 87, "miou": 87, "jensen": 88, "gjsd": 88, "clamp": 88, "appear": 88, "due": 88, "cov_threshold": 90, "log_": 93, "y_i": [93, 94, 95, 96, 97, 98, 99], "hat": [93, 94, 95, 96, 97, 98, 99], "unit": [94, 97], "km": [94, 97], "absolut": [94, 95, 98], "ima": 94, "sum_i": [94, 95, 96, 97, 98], "unit_factor": [94, 97], "mean_absolute_inverse_error": 94, "must": [94, 97, 114, 116, 117], "mm": [94, 97], "defaut": [94, 97], "maerel": 95, "arerel": 95, "rel_mean_absolute_error": 95, "big": [95, 96, 98, 99], "local": [95, 96, 98, 99], "planar": [95, 96, 98, 99], "guidanc": [95, 96, 98, 99], "monocular": [95, 96, 98, 99], "mserel": 96, "sre": 96, "rel_mean_squared_error": 96, "rmserel": 96, "multioutput": [96, 97], "ims": 97, "mean_squared_error": 97, "mselog": 98, "mse_log": 98, "emselog": 98, "lmbda": [99, 100], "invari": 99, "logarithm": 99, "david": [99, 118, 122], "eigen": 99, "christian": 99, "puhrsch": 99, "rob": 99, "fergu": 99, "jin": 99, "han": 99, "lee": [99, 101, 122], "myung": 99, "kyu": 99, "dong": [99, 122], "wook": 99, "ko": 99, "il": 99, "hong": 99, "suh": 99, "d1": 100, "d2": 100, "d3": 100, "save_schedul": 101, "use_final_checkpoint": 101, "trajectori": 101, "hugh": [101, 122], "chen": [101, 122], "scott": [101, 122], "lundberg": [101, 122], "su": [101, 122], "eval_forward": [101, 105], "update_wrapp": [101, 102, 105], "exponenti": [102, 120], "move": 102, "on_batch": [103, 108], "constrain": 103, "declar": 103, "constructor": 103, "disabl": 103, "lastli": 103, "submodul": 103, "itself": 103, "cycle_start": [104, 105], "cycle_length": [104, 105], "izmailov": [104, 122], "podoprikhin": [104, 122], "garipov": [104, 122], "vetrov": [104, 122], "wilson": [104, 122], "wider": [104, 122], "optima": [104, 122], "uai": [104, 122], "diag_covari": 105, "max_num_model": 105, "var_clamp": 105, "minu": 105, "bn_updat": 105, "beginin": 105, "cycl": 105, "occur": 105, "attr": [105, 107], "diagon": 105, "covari": 105, "maddox": [105, 122], "wjmaddox": 105, "swa_gaussian": 105, "loader": 105, "bachnorm": 105, "initialize_stat": 105, "dictionari": 105, "coeffici": 105, "destin": 105, "keep_var": 105, "greater": 105, "pixel_regress": 107, "_deepensembl": 107, "singleton": 107, "less": 107, "while": [107, 120, 121], "balaji": [107, 122], "lakshminarayanan": [107, 122], "pritzel": [107, 122], "scalabl": [107, 122], "weight_subset": 109, "hessian_struct": 109, "kron": 109, "pred_typ": 109, "glm": 109, "link_approx": 109, "probit": 109, "optimize_prior_precis": 109, "laplac": 109, "structur": [109, 121], "hessian": 109, "matrix": [109, 111], "bridg": 109, "bridge_norm": 109, "daxberg": [109, 122], "redux": [109, 122], "effortless": [109, 122], "2021": [109, 122], "cuda": [110, 111, 112, 113], "tey": [110, 122], "azizpour": [110, 122], "smith": [110, 122], "popul": 110, "raise_count": 110, "counter": 110, "replace_lay": 110, "mcbatchnorm2d": 110, "reset_count": 110, "set_accumul": 110, "init_w": [111, 113], "init_b": [111, 113], "max_it": [111, 112, 113], "save_logit": [111, 112, 113], "progress": [111, 112, 113, 120], "bar": [111, 112, 113], "set_temperatur": [111, 112, 113], "val_w": [111, 113], "val_b": [111, 113], "init_v": 112, "ident": 114, "distanc": 114, "tau": 114, "cutmix": 114, "logsumexp": 114, "postprocess": 114, "cli": [114, 116, 117, 118], "anyth": [114, 116, 117], "save_feat": 114, "num_image_plot": 115, "dimension": [115, 116], "num_samples_to_plot": 117, "subsampl": 117, "consum": 117, "log_segmentation_plot": 117, "contribut": [118, 119], "mind": 118, "major": 118, "symmetri": 118, "emanuel": [118, 122], "aldea": [118, 122], "2024": [118, 122], "andrei": [118, 122], "bursuc": [118, 122], "severin": [118, 122], "dubuisson": [118, 122], "isabel": [118, 122], "bloch": [118, 122], "adrien": [118, 122], "lafag": [118, 121, 122], "enzo": [118, 122], "tartaglion": [118, 122], "geoffrei": [118, 122], "daniel": [118, 122], "jean": [118, 122], "marc": [118, 122], "martinez": [118, 122], "autonom": [118, 122], "drive": [118, 122], "xuanlong": [118, 122], "yu": [118, 122], "angel": 118, "tena": 118, "r\u00e9mi": 118, "kazmierczak": 118, "s\u00e9verin": 118, "filliat": 118, "bmvc": [118, 122], "pypi": 118, "quickstart": 118, "guid": [118, 121], "experi": [118, 119, 121], "scope": 118, "guidelin": 118, "search": 118, "latter": 119, "access": [119, 121], "git": 119, "cd": 119, "conda": 119, "activ": [119, 120], "latest": 119, "opencv": 119, "tabular": 119, "panda": 119, "aforement": 119, "mandatori": 119, "IN": 120, "wait": 120, "pointwis": 120, "multinoulli": 120, "belong": 120, "conceptu": 120, "known": 120, "trust": 120, "why": 120, "monitor": 121, "leverag": 121, "benefit": 121, "ligthn": 121, "custom": 121, "along": 121, "mymodel": 121, "tuttrain": 121, "uncalibr": 121, "begin": 121, "ts_": 121, "insur": 121, "cover": 121, "particular": 121, "prefer": 121, "pipelin": 121, "packed_resnet": 121, "might": 121, "actual": 121, "exhaust": 122, "cite": 122, "maximilian": 122, "arash": 122, "dimitrij": 122, "georg": 122, "julien": 122, "korai": 122, "daan": 122, "yarin": 122, "gal": 122, "zoubin": 122, "ghahramani": 122, "pavel": 122, "dmitrii": 122, "dmitri": 122, "andrew": 122, "gordon": 122, "weslei": 122, "snapshot": 122, "gao": 122, "huang": 122, "yixuan": 122, "geoff": 122, "zhuang": 122, "liu": 122, "john": 122, "hopcroft": 122, "kilian": 122, "yeme": 122, "wen": 122, "dustin": 122, "tran": 122, "jimmi": 122, "subnetwork": 122, "marton": 122, "havasi": 122, "rodolph": 122, "jenatton": 122, "stanislav": 122, "fort": 122, "jeremiah": 122, "zhe": 122, "jasper": 122, "snoek": 122, "dai": 122, "empir": 122, "hongyi": 122, "zhang": 122, "moustapha": 122, "ciss": 122, "dauphin": 122, "lopez": 122, "paz": 122, "surprisingli": 122, "francesco": 122, "pinto": 122, "harri": 122, "yang": 122, "ser": 122, "nam": 122, "lim": 122, "philip": 122, "torr": 122, "puneet": 122, "dokania": 122, "deng": 122, "bao": 122, "lanq": 122, "peilin": 122, "zhao": 122, "pheng": 122, "ann": 122, "heng": 122, "min": 122, "ling": 122, "openaccess": 122, "thecvf": 122, "cvpr2023": 122, "wang_on_the_pitfall_of_mixup_for_uncertainty_calibration_cvpr_2023_pap": 122, "__": 122, "tailor": 122, "quentin": 122, "bouniot": 122, "pavlo": 122, "mozharovskyi": 122, "florenc": 122, "alch\u00e9": 122, "buc": 122, "chuan": 122, "mathia": 122, "hossein": 122, "kevin": 122, "erik": 122, "agustinu": 122, "kristiadi": 122, "immer": 122, "runa": 122, "eschenhagen": 122, "matthia": 122, "bauer": 122, "philipp": 122, "hennig": 122, "tsung": 122, "yi": 122, "priya": 122, "ross": 122, "kaim": 122, "piotr": 122, "fr\u00e9d\u00e9ric": 122, "pennerath": 122, "brieuc": 122, "conan": 122, "guez": 122, "miguel": 122, "couceiro": 122, "mahdi": 122, "pakdaman": 122, "gregori": 122, "milo": 122, "jeremi": 122, "mike": 122, "dusenberri": 122, "ghassen": 122, "jerfel": 122, "timothi": 122, "nguyen": 122, "linchuan": 122, "yonatan": 122, "ran": 122, "jeremia": 122, "till": 122, "bungert": 122, "carsten": 122, "l\u00fcth": 122, "michael": 122, "baumgartn": 122, "klau": 122, "maier": 122, "hein": 122, "lena": 122, "paul": 122, "jaeger": 122, "leon": 122, "yoshua": 122, "patrick": 122, "yaroslav": 122, "bulatov": 122, "alex": 122, "krizhevski": 122, "mit": 122, "tech": 122, "report": 122, "human": 122, "joshua": 122, "peterson": 122, "ruairidh": 122, "battledai": 122, "griffith": 122, "olga": 122, "russakovski": 122, "iccv": 122, "revisit": 122, "studi": 122, "annot": 122, "jiaheng": 122, "wei": 122, "zhaowei": 122, "zhu": 122, "hao": 122, "cheng": 122, "tongliang": 122, "gang": 122, "niu": 122, "natur": 122, "unsupervis": 122, "yuval": 122, "netzer": 122, "tao": 122, "coat": 122, "alessandro": 122, "bissacco": 122, "bo": 122, "wu": 122, "ng": 122, "workshop": 122, "2011": 122, "hierarch": 122, "databas": 122, "jia": 122, "richard": 122, "socher": 122, "kai": 122, "fei": 122, "2009": 122, "adversari": 122, "steven": 122, "basart": 122, "jacob": 122, "steinhardt": 122, "dawn": 122, "song": 122, "critic": 122, "analysi": 122, "saurav": 122, "kadavath": 122, "frank": 122, "evan": 122, "dorundo": 122, "rahul": 122, "desai": 122, "tyler": 122, "samyak": 122, "parajuli": 122, "haoqi": 122, "zhizhong": 122, "litong": 122, "feng": 122, "wayn": 122, "alina": 122, "hassan": 122, "rom": 122, "neil": 122, "alldrin": 122, "uijl": 122, "ivan": 122, "krasin": 122, "jordi": 122, "pont": 122, "tuset": 122, "shahab": 122, "kamali": 122, "ijcv": 122, "01437": 122, "residu": 122, "xiangyu": 122, "shaoq": 122, "ren": 122, "jian": 122, "sergei": 122, "zagoruyko": 122, "niko": 122, "komodaki": 122, "karen": 122, "simonyan": 122, "zisserman": 122, "filter": 122, "respons": 122, "elimin": 122, "saurabh": 122, "singh": 122, "shankar": 122, "krishnan": 122}, "objects": {"torch_uncertainty.baselines.classification": [[14, 0, 1, "", "ResNetBaseline"], [15, 0, 1, "", "VGGBaseline"], [16, 0, 1, "", "WideResNetBaseline"]], "torch_uncertainty.baselines.depth": [[17, 0, 1, "", "BTSBaseline"]], "torch_uncertainty.baselines.regression": [[18, 0, 1, "", "MLPBaseline"]], "torch_uncertainty.baselines.segmentation": [[19, 0, 1, "", "DeepLabBaseline"], [20, 0, 1, "", "SegFormerBaseline"]], "torch_uncertainty.datamodules": [[21, 0, 1, "", "CIFAR100DataModule"], [22, 0, 1, "", "CIFAR10DataModule"], [23, 0, 1, "", "ImageNetDataModule"], [24, 0, 1, "", "MNISTDataModule"], [25, 0, 1, "", "TinyImageNetDataModule"], [26, 0, 1, "", "UCIDataModule"]], "torch_uncertainty.datamodules.CIFAR100DataModule": [[21, 1, 1, "", "test_dataloader"], [21, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.CIFAR10DataModule": [[22, 1, 1, "", "test_dataloader"], [22, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.ImageNetDataModule": [[23, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.MNISTDataModule": [[24, 1, 1, "", "prepare_data"], [24, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.TinyImageNetDataModule": [[25, 1, 1, "", "test_dataloader"], [25, 1, 1, "", "train_dataloader"], [25, 1, 1, "", "val_dataloader"]], "torch_uncertainty.datamodules.UCIDataModule": [[26, 1, 1, "", "prepare_data"], [26, 1, 1, "", "setup"]], "torch_uncertainty.datamodules.segmentation": [[27, 0, 1, "", "CamVidDataModule"], [28, 0, 1, "", "CityscapesDataModule"], [29, 0, 1, "", "MUADDataModule"]], "torch_uncertainty.datasets": [[30, 0, 1, "", "Fractals"], [31, 0, 1, "", "FrostImages"], [32, 0, 1, "", "KITTIDepth"], [33, 0, 1, "", "MUAD"], [34, 0, 1, "", "NYUv2"]], "torch_uncertainty.datasets.MUAD": [[33, 1, 1, "", "encode_target"]], "torch_uncertainty.datasets.classification": [[35, 0, 1, "", "CIFAR100C"], [36, 0, 1, "", "CIFAR100N"], [37, 0, 1, "", "CIFAR10C"], [38, 0, 1, "", "CIFAR10H"], [39, 0, 1, "", "CIFAR10N"], [40, 0, 1, "", "ImageNetA"], [41, 0, 1, "", "ImageNetC"], [42, 0, 1, "", "ImageNetO"], [43, 0, 1, "", "ImageNetR"], [44, 0, 1, "", "MNISTC"], [45, 0, 1, "", "NotMNIST"], [46, 0, 1, "", "OpenImageO"], [47, 0, 1, "", "TinyImageNet"], [48, 0, 1, "", "TinyImageNetC"]], "torch_uncertainty.datasets.classification.CIFAR10C": [[37, 1, 1, "", "download"], [37, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.MNISTC": [[44, 1, 1, "", "download"], [44, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.TinyImageNetC": [[48, 1, 1, "", "download"]], "torch_uncertainty.datasets.regression": [[49, 0, 1, "", "UCIRegression"]], "torch_uncertainty.datasets.regression.UCIRegression": [[49, 1, 1, "", "download"]], "torch_uncertainty.datasets.segmentation": [[50, 0, 1, "", "CamVid"], [51, 0, 1, "", "Cityscapes"]], "torch_uncertainty.datasets.segmentation.CamVid": [[50, 2, 1, "", "color_palette"], [50, 1, 1, "", "decode_target"], [50, 1, 1, "", "download"], [50, 1, 1, "", "encode_target"]], "torch_uncertainty.datasets.segmentation.Cityscapes": [[51, 2, 1, "", "color_palette"], [51, 1, 1, "", "decode_target"], [51, 1, 1, "", "encode_target"], [51, 1, 1, "", "plot_sample"]], "torch_uncertainty.layers": [[52, 0, 1, "", "BatchConv2d"], [53, 0, 1, "", "BatchLinear"], [54, 0, 1, "", "MaskedConv2d"], [55, 0, 1, "", "MaskedLinear"], [56, 0, 1, "", "PackedConv2d"], [57, 0, 1, "", "PackedLinear"]], "torch_uncertainty.layers.PackedConv2d": [[56, 2, 1, "", "bias"], [56, 2, 1, "", "weight"]], "torch_uncertainty.layers.bayesian": [[58, 0, 1, "", "BayesConv1d"], [59, 0, 1, "", "BayesConv2d"], [60, 0, 1, "", "BayesConv3d"], [61, 0, 1, "", "BayesLinear"], [62, 0, 1, "", "LPBNNConv2d"], [63, 0, 1, "", "LPBNNLinear"]], "torch_uncertainty.layers.bayesian.BayesLinear": [[61, 1, 1, "", "freeze"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "unfreeze"]], "torch_uncertainty.losses": [[64, 0, 1, "", "BetaNLL"], [65, 0, 1, "", "ConfidencePenaltyLoss"], [66, 0, 1, "", "ConflictualLoss"], [67, 0, 1, "", "DECLoss"], [68, 0, 1, "", "DERLoss"], [69, 0, 1, "", "DistributionNLLLoss"], [70, 0, 1, "", "ELBOLoss"], [71, 0, 1, "", "FocalLoss"], [72, 0, 1, "", "KLDiv"]], "torch_uncertainty.losses.ConfidencePenaltyLoss": [[65, 1, 1, "", "forward"]], "torch_uncertainty.losses.ConflictualLoss": [[66, 1, 1, "", "forward"]], "torch_uncertainty.losses.DistributionNLLLoss": [[69, 1, 1, "", "forward"]], "torch_uncertainty.losses.ELBOLoss": [[70, 1, 1, "", "forward"]], "torch_uncertainty.metrics": [[73, 0, 1, "", "AUSE"]], "torch_uncertainty.metrics.AUSE": [[73, 1, 1, "", "compute"], [73, 1, 1, "", "plot"], [73, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification": [[74, 0, 1, "", "AUGRC"], [75, 0, 1, "", "AURC"], [76, 0, 1, "", "AdaptiveCalibrationError"], [77, 0, 1, "", "BrierScore"], [78, 0, 1, "", "CalibrationError"], [79, 0, 1, "", "CategoricalNLL"], [80, 0, 1, "", "CovAt5Risk"], [81, 0, 1, "", "CovAtxRisk"], [82, 0, 1, "", "Disagreement"], [83, 0, 1, "", "Entropy"], [84, 0, 1, "", "FPR95"], [85, 0, 1, "", "FPRx"], [86, 0, 1, "", "GroupingLoss"], [87, 0, 1, "", "MeanIntersectionOverUnion"], [88, 0, 1, "", "MutualInformation"], [89, 0, 1, "", "RiskAt80Cov"], [90, 0, 1, "", "RiskAtxCov"], [91, 0, 1, "", "VariationRatio"]], "torch_uncertainty.metrics.classification.AUGRC": [[74, 1, 1, "", "compute"], [74, 1, 1, "", "plot"]], "torch_uncertainty.metrics.classification.AURC": [[75, 1, 1, "", "compute"], [75, 1, 1, "", "partial_compute"], [75, 1, 1, "", "plot"], [75, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.BrierScore": [[77, 1, 1, "", "compute"], [77, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CategoricalNLL": [[79, 1, 1, "", "compute"], [79, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CovAtxRisk": [[81, 1, 1, "", "compute"], [81, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Disagreement": [[82, 1, 1, "", "compute"], [82, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Entropy": [[83, 1, 1, "", "compute"], [83, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.FPRx": [[85, 1, 1, "", "compute"], [85, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.GroupingLoss": [[86, 1, 1, "", "compute"], [86, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion": [[87, 1, 1, "", "compute"]], "torch_uncertainty.metrics.classification.MutualInformation": [[88, 1, 1, "", "compute"], [88, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.RiskAtxCov": [[90, 1, 1, "", "compute"], [90, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.VariationRatio": [[91, 1, 1, "", "compute"]], "torch_uncertainty.metrics.regression": [[92, 0, 1, "", "DistributionNLL"], [93, 0, 1, "", "Log10"], [94, 0, 1, "", "MeanAbsoluteErrorInverse"], [95, 0, 1, "", "MeanGTRelativeAbsoluteError"], [96, 0, 1, "", "MeanGTRelativeSquaredError"], [97, 0, 1, "", "MeanSquaredErrorInverse"], [98, 0, 1, "", "MeanSquaredLogError"], [99, 0, 1, "", "SILog"], [100, 0, 1, "", "ThresholdAccuracy"]], "torch_uncertainty.metrics.regression.DistributionNLL": [[92, 1, 1, "", "compute"], [92, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.Log10": [[93, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse": [[94, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError": [[95, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError": [[96, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse": [[97, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredLogError": [[98, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.SILog": [[99, 1, 1, "", "compute"], [99, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.ThresholdAccuracy": [[100, 1, 1, "", "compute"], [100, 1, 1, "", "update"]], "torch_uncertainty.models": [[101, 0, 1, "", "CheckpointEnsemble"], [102, 0, 1, "", "EMA"], [103, 0, 1, "", "MCDropout"], [104, 0, 1, "", "SWA"], [105, 0, 1, "", "SWAG"], [106, 0, 1, "", "StochasticModel"], [107, 3, 1, "", "deep_ensembles"], [108, 3, 1, "", "mc_dropout"]], "torch_uncertainty.models.CheckpointEnsemble": [[101, 1, 1, "", "eval_forward"], [101, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.EMA": [[102, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.MCDropout": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "train"]], "torch_uncertainty.models.SWAG": [[105, 1, 1, "", "bn_update"], [105, 1, 1, "", "eval_forward"], [105, 1, 1, "", "initialize_stats"], [105, 1, 1, "", "sample"], [105, 1, 1, "", "state_dict"], [105, 1, 1, "", "update_wrapper"]], "torch_uncertainty.post_processing": [[109, 0, 1, "", "LaplaceApprox"], [110, 0, 1, "", "MCBatchNorm"], [111, 0, 1, "", "MatrixScaler"], [112, 0, 1, "", "TemperatureScaler"], [113, 0, 1, "", "VectorScaler"]], "torch_uncertainty.post_processing.MCBatchNorm": [[110, 1, 1, "", "fit"], [110, 1, 1, "", "raise_counters"], [110, 1, 1, "", "replace_layers"], [110, 1, 1, "", "reset_counters"], [110, 1, 1, "", "set_accumulate"]], "torch_uncertainty.post_processing.MatrixScaler": [[111, 1, 1, "", "fit"], [111, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.TemperatureScaler": [[112, 1, 1, "", "fit"], [112, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.VectorScaler": [[113, 1, 1, "", "fit"], [113, 1, 1, "", "set_temperature"]], "torch_uncertainty.routines": [[114, 0, 1, "", "ClassificationRoutine"], [115, 0, 1, "", "PixelRegressionRoutine"], [116, 0, 1, "", "RegressionRoutine"], [117, 0, 1, "", "SegmentationRoutine"]], "torch_uncertainty.routines.ClassificationRoutine": [[114, 1, 1, "", "forward"]], "torch_uncertainty.routines.PixelRegressionRoutine": [[115, 1, 1, "", "forward"]], "torch_uncertainty.routines.RegressionRoutine": [[116, 1, 1, "", "forward"]], "torch_uncertainty.routines.SegmentationRoutine": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "log_segmentation_plots"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": [0, 3, 4, 5, 6, 11, 120, 122], "routin": [0, 3, 5, 6, 8, 9, 121], "classif": [0, 6, 7, 120, 122], "segment": 0, "regress": [0, 5, 122], "pixelwis": 0, "baselin": 0, "monocular": 0, "depth": 0, "estim": 0, "layer": [0, 121, 122], "ensembl": [0, 7, 10, 122], "bayesian": [0, 3, 122], "model": [0, 3, 5, 6, 7, 8, 9, 11, 107, 108, 121, 122], "wrapper": [0, 6], "function": [0, 10], "class": 0, "metric": [0, 121, 122], "proper": 0, "score": 0, "out": 0, "distribut": 0, "detect": 0, "select": [0, 7], "calibr": [0, 11, 122], "divers": 0, "other": [0, 121], "loss": [0, 3, 5, 6, 7, 8, 9, 10, 122], "post": [0, 13, 122], "process": [0, 13, 122], "method": [0, 13, 122], "scale": [0, 11, 122], "datamodul": [0, 11, 13], "dataset": [0, 7, 10, 13, 122], "cross": 0, "categori": 0, "tutori": 1, "comput": [2, 11, 123], "time": [2, 123], "train": [3, 5, 6, 7, 8, 9, 10, 121], "neural": [3, 120, 122], "network": [3, 120, 122], "three": 3, "minut": 3, "foreword": 3, "lenet": [3, 6, 8, 9], "us": [3, 5, 6, 8, 9, 121], "torchuncertainti": [3, 4, 5, 6, 7, 8, 9, 11, 13, 121], "lightn": [3, 5, 8, 9, 12, 121], "1": [3, 4, 5, 6, 7, 8, 9, 10, 11], "load": [3, 5, 6, 8, 9, 10, 11], "util": [3, 5, 6, 8, 9, 11], "2": [3, 4, 5, 6, 7, 8, 9, 10, 11], "The": [3, 5, 6, 8, 9, 13, 120], "optim": [3, 5, 6, 10], "recip": [3, 5], "3": [3, 4, 5, 6, 7, 8, 9, 10, 11], "creat": [3, 5, 6, 7, 8], "necessari": [3, 5, 6, 8], "variabl": [3, 5, 6, 8], "4": [3, 5, 6, 7, 8, 9, 10, 11], "5": [3, 4, 5, 6, 8, 9, 10, 11], "gather": [3, 5, 6, 8, 9], "everyth": [3, 5, 6, 8, 9], "6": [3, 5, 6, 8, 11], "test": [3, 5, 6, 8, 9, 10], "corrupt": 4, "imag": [4, 10], "benchmark": 4, "robust": 4, "nois": 4, "blur": 4, "weather": 4, "unus": 4, "deep": [5, 6, 7, 122], "evidenti": [5, 6, 122], "toi": [5, 6], "exampl": [5, 6, 121], "mlp": 5, "der": 5, "pytorch": [5, 8, 9, 121], "dec": 6, "improv": [7, 11], "paramet": 7, "effici": 7, "pack": [7, 10, 122], "download": 7, "instanti": 7, "visual": 7, "an": [7, 10], "from": [7, 10, 11, 119], "To": 7, "go": 7, "further": 7, "more": [7, 121], "concept": 7, "uncertainti": [7, 118, 120, 121, 122], "ml": 7, "group": [7, 122], "mont": [8, 9, 122], "carlo": [8, 9, 122], "batch": [8, 122], "normal": [8, 10, 122], "mcbn": 8, "wrap": 8, "mcbatchnorm": [8, 110], "dropout": [9, 122], "mc": 9, "defin": [9, 10], "trainer": 9, "standard": 10, "classifi": 10, "cifar10": 10, "data": [10, 122], "top": 11, "label": 11, "temperatur": [11, 122], "": [11, 121], "hf": 11, "set": 11, "up": 11, "dataload": 11, "iter": 11, "ec": 11, "fit": 11, "scaler": 11, "again": 11, "note": 11, "cli": [12, 121], "guid": 12, "introduct": [12, 120], "configur": 12, "file": 12, "experi": 12, "folder": 12, "usag": [12, 121], "contribut": 13, "scope": 13, "common": 13, "guidelin": 13, "clean": 13, "develop": 13, "instal": [13, 118, 119], "build": [13, 121], "document": 13, "local": 13, "licens": 13, "resnetbaselin": 14, "vggbaselin": 15, "wideresnetbaselin": 16, "btsbaselin": 17, "mlpbaselin": 18, "deeplabbaselin": 19, "segformerbaselin": 20, "cifar100datamodul": 21, "cifar10datamodul": 22, "imagenetdatamodul": 23, "mnistdatamodul": 24, "tinyimagenetdatamodul": 25, "ucidatamodul": 26, "camviddatamodul": 27, "cityscapesdatamodul": 28, "muaddatamodul": 29, "fractal": 30, "frostimag": 31, "kittidepth": 32, "muad": [33, 122], "nyuv2": 34, "cifar100c": 35, "cifar100n": 36, "cifar10c": 37, "cifar10h": 38, "cifar10n": 39, "imageneta": 40, "imagenetc": 41, "imageneto": 42, "imagenetr": 43, "mnistc": 44, "notmnist": 45, "openimageo": 46, "tinyimagenet": 47, "tinyimagenetc": 48, "uciregress": 49, "camvid": 50, "cityscap": 51, "batchconv2d": 52, "batchlinear": 53, "maskedconv2d": 54, "maskedlinear": 55, "packedconv2d": 56, "packedlinear": 57, "bayesconv1d": 58, "bayesconv2d": 59, "bayesconv3d": 60, "bayeslinear": 61, "lpbnnconv2d": 62, "lpbnnlinear": 63, "betanl": 64, "confidencepenaltyloss": 65, "conflictualloss": 66, "decloss": 67, "derloss": 68, "distributionnllloss": 69, "elboloss": 70, "focalloss": 71, "kldiv": 72, "aus": 73, "augrc": 74, "aurc": 75, "adaptivecalibrationerror": 76, "brierscor": 77, "calibrationerror": 78, "categoricalnl": 79, "covat5risk": 80, "covatxrisk": 81, "disagr": 82, "entropi": 83, "fpr95": 84, "fprx": 85, "groupingloss": 86, "meanintersectionoverunion": 87, "mutualinform": 88, "riskat80cov": 89, "riskatxcov": 90, "variationratio": 91, "distributionnl": 92, "log10": 93, "meanabsoluteerrorinvers": 94, "meangtrelativeabsoluteerror": 95, "meangtrelativesquarederror": 96, "meansquarederrorinvers": 97, "meansquaredlogerror": 98, "silog": 99, "thresholdaccuraci": 100, "checkpointensembl": [101, 122], "ema": 102, "mcdropout": 103, "swa": 104, "swag": 105, "stochasticmodel": 106, "torch_uncertainti": [107, 108], "deep_ensembl": 107, "mc_dropout": 108, "laplaceapprox": 109, "matrixscal": 111, "temperaturescal": 112, "vectorscal": 113, "classificationroutin": 114, "pixelregressionroutin": 115, "regressionroutin": 116, "segmentationroutin": 117, "welcom": 118, "torch": 118, "offici": 118, "implement": 118, "content": 118, "indic": 118, "tabl": 118, "pypi": 119, "sourc": 119, "option": 119, "short": 120, "background": 120, "overconfid": 120, "quickstart": 121, "awar": 121, "your": 121, "first": 121, "tool": 121, "procedur": 121, "base": 121, "beta": 122, "nll": 122, "variat": 122, "infer": 122, "stochast": 122, "weight": 122, "averag": 122, "gaussian": 122, "snapshotensembl": 122, "batchensembl": 122, "masksembl": 122, "mimo": 122, "lpbnn": 122, "augment": 122, "mixup": 122, "regmixup": 122, "mixupio": 122, "warp": 122, "vector": 122, "matrix": 122, "laplac": 122, "approxim": 122, "focal": 122, "conflictu": 122, "expect": 122, "error": 122, "adapt": 122, "area": 122, "under": 122, "risk": 122, "coverag": 122, "curv": 122, "gener": 122, "mnist": 122, "c": 122, "Not": 122, "cifar": 122, "10": 122, "100": 122, "tini": 122, "imagenet": 122, "h": 122, "n": 122, "svhn": 122, "A": 122, "0": 122, "r": 122, "textur": 122, "openimag": 122, "o": 122, "architectur": 122, "resnet": 122, "wide": 122, "vgg": 122}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_codeautolink": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Routines": [[0, "routines"]], "Classification": [[0, "classification"], [0, "id1"], [0, "id4"], [0, "id8"], [0, "id11"]], "Segmentation": [[0, "segmentation"], [0, "id3"], [0, "id6"], [0, "id10"], [0, "id13"]], "Regression": [[0, "regression"], [0, "id2"], [0, "id5"], [0, "id9"], [0, "id12"]], "Pixelwise Regression": [[0, "pixelwise-regression"]], "Baselines": [[0, "baselines"]], "Monocular Depth Estimation": [[0, "monocular-depth-estimation"]], "Layers": [[0, "layers"], [122, "layers"]], "Ensemble layers": [[0, "ensemble-layers"]], "Bayesian layers": [[0, "bayesian-layers"]], "Models": [[0, "models"]], "Wrappers": [[0, "wrappers"]], "Functions": [[0, "functions"]], "Classes": [[0, "classes"]], "Metrics": [[0, "metrics"], [122, "metrics"]], "Proper Scores": [[0, "proper-scores"]], "Out-of-Distribution Detection": [[0, "out-of-distribution-detection"]], "Selective Classification": [[0, "selective-classification"], [7, "selective-classification"]], "Calibration": [[0, "calibration"]], "Diversity": [[0, "diversity"]], "Others": [[0, "others"], [0, "id7"]], "Losses": [[0, "losses"], [122, "losses"]], "Post-Processing Methods": [[0, "post-processing-methods"], [122, "post-processing-methods"]], "Scaling Methods": [[0, "scaling-methods"]], "Datamodules": [[0, "datamodules"]], "Datasets": [[0, "datasets"], [122, "datasets"]], "Others & Cross-Categories": [[0, "others-cross-categories"]], "Tutorials": [[1, "tutorials"]], "Computation times": [[2, "computation-times"], [123, "computation-times"]], "Train a Bayesian Neural Network in Three Minutes": [[3, "train-a-bayesian-neural-network-in-three-minutes"]], "Foreword on Bayesian Neural Networks": [[3, "foreword-on-bayesian-neural-networks"]], "Training a Bayesian LeNet using TorchUncertainty models and Lightning": [[3, "training-a-bayesian-lenet-using-torchuncertainty-models-and-lightning"]], "1. Loading the utilities": [[3, "loading-the-utilities"], [5, "loading-the-utilities"], [6, "loading-the-utilities"], [8, "loading-the-utilities"], [9, "loading-the-utilities"]], "2. The Optimization Recipe": [[3, "the-optimization-recipe"], [5, "the-optimization-recipe"]], "3. Creating the necessary variables": [[3, "creating-the-necessary-variables"], [5, "creating-the-necessary-variables"], [6, "creating-the-necessary-variables"]], "4. The Loss and the Training Routine": [[3, "the-loss-and-the-training-routine"], [5, "the-loss-and-the-training-routine"], [6, "the-loss-and-the-training-routine"]], "5. Gathering Everything and Training the Model": [[3, "gathering-everything-and-training-the-model"], [5, "gathering-everything-and-training-the-model"], [6, "gathering-everything-and-training-the-model"]], "6. Testing the Model": [[3, "testing-the-model"], [5, "testing-the-model"], [6, "testing-the-model"], [8, "testing-the-model"]], "References": [[3, "references"], [6, "references"], [11, "references"], [120, "references"], [122, "references"]], "Corrupting Images with TorchUncertainty to Benchmark Robustness": [[4, "corrupting-images-with-torchuncertainty-to-benchmark-robustness"]], "1. Noise Corruptions": [[4, "noise-corruptions"]], "2. Blur Corruptions": [[4, "blur-corruptions"]], "3. Weather Corruptions": [[4, "weather-corruptions"]], "5. Unused Corruptions": [[4, "unused-corruptions"]], "Reference": [[4, "reference"], [5, "reference"]], "Deep Evidential Regression on a Toy Example": [[5, "deep-evidential-regression-on-a-toy-example"]], "Training a MLP with DER using TorchUncertainty models and PyTorch Lightning": [[5, "training-a-mlp-with-der-using-torchuncertainty-models-and-pytorch-lightning"]], "Deep Evidential Classification on a Toy Example": [[6, "deep-evidential-classification-on-a-toy-example"]], "Training a LeNet with DEC using TorchUncertainty models": [[6, "training-a-lenet-with-dec-using-torchuncertainty-models"]], "2. Creating the Optimizer Wrapper": [[6, "creating-the-optimizer-wrapper"]], "Improved Ensemble parameter-efficiency with Packed-Ensembles": [[7, "improved-ensemble-parameter-efficiency-with-packed-ensembles"]], "1. Download, instantiate and visualize the datasets": [[7, "download-instantiate-and-visualize-the-datasets"]], "2. Create & train the model": [[7, "create-train-the-model"]], "3. Training an ensemble of models with TorchUncertainty": [[7, "training-an-ensemble-of-models-with-torchuncertainty"]], "4. From Deep Ensembles to Packed-Ensembles": [[7, "from-deep-ensembles-to-packed-ensembles"]], "To Go Further & More Concepts of Uncertainty in ML": [[7, "to-go-further-more-concepts-of-uncertainty-in-ml"]], "Grouping Loss": [[7, "grouping-loss"], [122, "grouping-loss"]], "Training a LeNet with Monte Carlo Batch Normalization": [[8, "training-a-lenet-with-monte-carlo-batch-normalization"]], "Training a LeNet with MCBN using TorchUncertainty models and PyTorch Lightning": [[8, "training-a-lenet-with-mcbn-using-torchuncertainty-models-and-pytorch-lightning"]], "2. Creating the necessary variables": [[8, "creating-the-necessary-variables"]], "3. The Loss and the Training Routine": [[8, "the-loss-and-the-training-routine"], [9, "the-loss-and-the-training-routine"]], "4. Gathering Everything and Training the Model": [[8, "gathering-everything-and-training-the-model"], [9, "gathering-everything-and-training-the-model"]], "5. Wrapping the Model in a MCBatchNorm": [[8, "wrapping-the-model-in-a-mcbatchnorm"]], "Training a LeNet with Monte-Carlo Dropout": [[9, "training-a-lenet-with-monte-carlo-dropout"]], "Training a LeNet with MC Dropout using TorchUncertainty models and PyTorch Lightning": [[9, "training-a-lenet-with-mc-dropout-using-torchuncertainty-models-and-pytorch-lightning"]], "2. Defining the Model and the Trainer": [[9, "defining-the-model-and-the-trainer"]], "5. Testing the Model": [[9, "testing-the-model"]], "From a Standard Classifier to a Packed-Ensemble": [[10, "from-a-standard-classifier-to-a-packed-ensemble"]], "Dataset": [[10, "dataset"]], "Training an image Packed-Ensemble classifier": [[10, "training-an-image-packed-ensemble-classifier"]], "1. Load and normalize CIFAR10": [[10, "load-and-normalize-cifar10"]], "2. Define a Packed-Ensemble from a standard classifier": [[10, "define-a-packed-ensemble-from-a-standard-classifier"]], "3. Define a Loss function and optimizer": [[10, "define-a-loss-function-and-optimizer"]], "4. Train the Packed-Ensemble on the training data": [[10, "train-the-packed-ensemble-on-the-training-data"]], "5. Test the Packed-Ensemble on the test data": [[10, "test-the-packed-ensemble-on-the-test-data"]], "Improve Top-label Calibration with Temperature Scaling": [[11, "improve-top-label-calibration-with-temperature-scaling"]], "1. Loading the Utilities": [[11, "loading-the-utilities"]], "2. Loading a model from TorchUncertainty\u2019s HF": [[11, "loading-a-model-from-torchuncertainty-s-hf"]], "3. Setting up the Datamodule and Dataloaders": [[11, "setting-up-the-datamodule-and-dataloaders"]], "4. Iterating on the Dataloader and Computing the ECE": [[11, "iterating-on-the-dataloader-and-computing-the-ece"]], "5. Fitting the Scaler to Improve the Calibration": [[11, "fitting-the-scaler-to-improve-the-calibration"]], "6. Iterating Again to Compute the Improved ECE": [[11, "iterating-again-to-compute-the-improved-ece"]], "Notes": [[11, "notes"]], "CLI Guide": [[12, "cli-guide"]], "Introduction to the Lightning CLI": [[12, "introduction-to-the-lightning-cli"]], "Configuration files": [[12, "configuration-files"]], "Experiment folder usage": [[12, "experiment-folder-usage"]], "Contributing": [[13, "contributing"]], "The scope of TorchUncertainty": [[13, "the-scope-of-torchuncertainty"]], "Common guidelines": [[13, "common-guidelines"]], "Clean development install of TorchUncertainty": [[13, "clean-development-install-of-torchuncertainty"]], "Build the documentation locally": [[13, "build-the-documentation-locally"]], "Guidelines": [[13, "guidelines"]], "Datasets & Datamodules": [[13, "datasets-datamodules"]], "Post-processing methods": [[13, "post-processing-methods"]], "License": [[13, "license"]], "ResNetBaseline": [[14, "resnetbaseline"]], "VGGBaseline": [[15, "vggbaseline"]], "WideResNetBaseline": [[16, "wideresnetbaseline"]], "BTSBaseline": [[17, "btsbaseline"]], "MLPBaseline": [[18, "mlpbaseline"]], "DeepLabBaseline": [[19, "deeplabbaseline"]], "SegFormerBaseline": [[20, "segformerbaseline"]], "CIFAR100DataModule": [[21, "cifar100datamodule"]], "CIFAR10DataModule": [[22, "cifar10datamodule"]], "ImageNetDataModule": [[23, "imagenetdatamodule"]], "MNISTDataModule": [[24, "mnistdatamodule"]], "TinyImageNetDataModule": [[25, "tinyimagenetdatamodule"]], "UCIDataModule": [[26, "ucidatamodule"]], "CamVidDataModule": [[27, "camviddatamodule"]], "CityscapesDataModule": [[28, "cityscapesdatamodule"]], "MUADDataModule": [[29, "muaddatamodule"]], "Fractals": [[30, "fractals"]], "FrostImages": [[31, "frostimages"]], "KITTIDepth": [[32, "kittidepth"]], "MUAD": [[33, "muad"], [122, "muad"]], "NYUv2": [[34, "nyuv2"]], "CIFAR100C": [[35, "cifar100c"]], "CIFAR100N": [[36, "cifar100n"]], "CIFAR10C": [[37, "cifar10c"]], "CIFAR10H": [[38, "cifar10h"]], "CIFAR10N": [[39, "cifar10n"]], "ImageNetA": [[40, "imageneta"]], "ImageNetC": [[41, "imagenetc"]], "ImageNetO": [[42, "imageneto"]], "ImageNetR": [[43, "imagenetr"]], "MNISTC": [[44, "mnistc"]], "NotMNIST": [[45, "notmnist"]], "OpenImageO": [[46, "openimageo"]], "TinyImageNet": [[47, "tinyimagenet"]], "TinyImageNetC": [[48, "tinyimagenetc"]], "UCIRegression": [[49, "uciregression"]], "CamVid": [[50, "camvid"]], "Cityscapes": [[51, "cityscapes"]], "BatchConv2d": [[52, "batchconv2d"]], "BatchLinear": [[53, "batchlinear"]], "MaskedConv2d": [[54, "maskedconv2d"]], "MaskedLinear": [[55, "maskedlinear"]], "PackedConv2d": [[56, "packedconv2d"]], "PackedLinear": [[57, "packedlinear"]], "BayesConv1d": [[58, "bayesconv1d"]], "BayesConv2d": [[59, "bayesconv2d"]], "BayesConv3d": [[60, "bayesconv3d"]], "BayesLinear": [[61, "bayeslinear"]], "LPBNNConv2d": [[62, "lpbnnconv2d"]], "LPBNNLinear": [[63, "lpbnnlinear"]], "BetaNLL": [[64, "betanll"]], "ConfidencePenaltyLoss": [[65, "confidencepenaltyloss"]], "ConflictualLoss": [[66, "conflictualloss"]], "DECLoss": [[67, "decloss"]], "DERLoss": [[68, "derloss"]], "DistributionNLLLoss": [[69, "distributionnllloss"]], "ELBOLoss": [[70, "elboloss"]], "FocalLoss": [[71, "focalloss"]], "KLDiv": [[72, "kldiv"]], "AUSE": [[73, "ause"]], "AUGRC": [[74, "augrc"]], "AURC": [[75, "aurc"]], "AdaptiveCalibrationError": [[76, "adaptivecalibrationerror"]], "BrierScore": [[77, "brierscore"]], "CalibrationError": [[78, "calibrationerror"]], "CategoricalNLL": [[79, "categoricalnll"]], "CovAt5Risk": [[80, "covat5risk"]], "CovAtxRisk": [[81, "covatxrisk"]], "Disagreement": [[82, "disagreement"]], "Entropy": [[83, "entropy"]], "FPR95": [[84, "fpr95"]], "FPRx": [[85, "fprx"]], "GroupingLoss": [[86, "groupingloss"]], "MeanIntersectionOverUnion": [[87, "meanintersectionoverunion"]], "MutualInformation": [[88, "mutualinformation"]], "RiskAt80Cov": [[89, "riskat80cov"]], "RiskAtxCov": [[90, "riskatxcov"]], "VariationRatio": [[91, "variationratio"]], "DistributionNLL": [[92, "distributionnll"]], "Log10": [[93, "log10"]], "MeanAbsoluteErrorInverse": [[94, "meanabsoluteerrorinverse"]], "MeanGTRelativeAbsoluteError": [[95, "meangtrelativeabsoluteerror"]], "MeanGTRelativeSquaredError": [[96, "meangtrelativesquarederror"]], "MeanSquaredErrorInverse": [[97, "meansquarederrorinverse"]], "MeanSquaredLogError": [[98, "meansquaredlogerror"]], "SILog": [[99, "silog"]], "ThresholdAccuracy": [[100, "thresholdaccuracy"]], "CheckpointEnsemble": [[101, "checkpointensemble"], [122, "checkpointensemble"]], "EMA": [[102, "ema"]], "MCDropout": [[103, "mcdropout"]], "SWA": [[104, "swa"]], "SWAG": [[105, "swag"]], "StochasticModel": [[106, "stochasticmodel"]], "torch_uncertainty.models.deep_ensembles": [[107, "torch-uncertainty-models-deep-ensembles"]], "torch_uncertainty.models.mc_dropout": [[108, "torch-uncertainty-models-mc-dropout"]], "LaplaceApprox": [[109, "laplaceapprox"]], "MCBatchNorm": [[110, "mcbatchnorm"]], "MatrixScaler": [[111, "matrixscaler"]], "TemperatureScaler": [[112, "temperaturescaler"]], "VectorScaler": [[113, "vectorscaler"]], "ClassificationRoutine": [[114, "classificationroutine"]], "PixelRegressionRoutine": [[115, "pixelregressionroutine"]], "RegressionRoutine": [[116, "regressionroutine"]], "SegmentationRoutine": [[117, "segmentationroutine"]], "Welcome to Torch Uncertainty": [[118, "welcome-to-torch-uncertainty"]], "Installation": [[118, "installation"], [119, "installation"]], "Official Implementations": [[118, "official-implementations"]], "Contents:": [[118, null]], "Indices and tables": [[118, "indices-and-tables"]], "From PyPI": [[119, "from-pypi"]], "From source": [[119, "from-source"]], "Options": [[119, "options"]], "Introduction to Classification Uncertainty": [[120, "introduction-to-classification-uncertainty"]], "Short Background": [[120, "short-background"]], "The Overconfidence of Neural Networks": [[120, "the-overconfidence-of-neural-networks"]], "Quickstart": [[121, "quickstart"]], "Training with TorchUncertainty\u2019s Uncertainty-aware Routines": [[121, "training-with-torchuncertainty-s-uncertainty-aware-routines"]], "Building your First Routine": [[121, "building-your-first-routine"]], "Training with the Routine": [[121, "training-with-the-routine"]], "More metrics": [[121, "more-metrics"]], "Using the Lightning CLI tool": [[121, "using-the-lightning-cli-tool"]], "Procedure": [[121, "procedure"], [121, "id1"], [121, "id3"]], "Example": [[121, "example"], [121, "id2"], [121, "id4"]], "Using the PyTorch-based models": [[121, "using-the-pytorch-based-models"]], "Using the PyTorch-based layers": [[121, "using-the-pytorch-based-layers"]], "Other usage": [[121, "other-usage"]], "Uncertainty Models": [[122, "uncertainty-models"]], "Deep Evidential Classification": [[122, "deep-evidential-classification"]], "Beta NLL in Deep Regression": [[122, "beta-nll-in-deep-regression"]], "Deep Evidential Regression": [[122, "deep-evidential-regression"]], "Variational Inference Bayesian Neural Networks": [[122, "variational-inference-bayesian-neural-networks"]], "Deep Ensembles": [[122, "deep-ensembles"]], "Monte-Carlo Dropout": [[122, "monte-carlo-dropout"]], "Stochastic Weight Averaging": [[122, "stochastic-weight-averaging"]], "Stochastic Weight Averaging Gaussian": [[122, "stochastic-weight-averaging-gaussian"]], "SnapshotEnsemble": [[122, "snapshotensemble"]], "BatchEnsemble": [[122, "batchensemble"]], "Masksembles": [[122, "masksembles"]], "MIMO": [[122, "mimo"]], "Packed-Ensembles": [[122, "packed-ensembles"]], "LPBNN": [[122, "lpbnn"]], "Data Augmentation Methods": [[122, "data-augmentation-methods"]], "Mixup": [[122, "mixup"]], "RegMixup": [[122, "regmixup"]], "MixupIO": [[122, "mixupio"]], "Warping Mixup": [[122, "warping-mixup"]], "Temperature, Vector, & Matrix scaling": [[122, "temperature-vector-matrix-scaling"]], "Monte-Carlo Batch Normalization": [[122, "monte-carlo-batch-normalization"]], "Laplace Approximation": [[122, "laplace-approximation"]], "Focal Loss": [[122, "focal-loss"]], "Conflictual Loss": [[122, "conflictual-loss"]], "Expected Calibration Error": [[122, "expected-calibration-error"]], "Adaptive Calibration Error": [[122, "adaptive-calibration-error"]], "Area Under the Risk-Coverage curve": [[122, "area-under-the-risk-coverage-curve"]], "Area Under the Generalized Risk-Coverage curve": [[122, "area-under-the-generalized-risk-coverage-curve"]], "MNIST": [[122, "mnist"]], "MNIST-C": [[122, "mnist-c"]], "Not-MNIST": [[122, "not-mnist"]], "CIFAR-10 & CIFAR-100": [[122, "cifar-10-cifar-100"]], "CIFAR-C, Tiny-ImageNet-C, ImageNet-C": [[122, "cifar-c-tiny-imagenet-c-imagenet-c"]], "CIFAR-10 H": [[122, "cifar-10-h"]], "CIFAR-10 N / CIFAR-100 N": [[122, "cifar-10-n-cifar-100-n"]], "SVHN": [[122, "svhn"]], "ImageNet": [[122, "imagenet"]], "ImageNet-A & ImageNet-0": [[122, "imagenet-a-imagenet-0"]], "ImageNet-R": [[122, "imagenet-r"]], "Textures": [[122, "textures"]], "OpenImage-O": [[122, "openimage-o"]], "Architectures": [[122, "architectures"]], "ResNet": [[122, "resnet"]], "Wide-ResNet": [[122, "wide-resnet"]], "VGG": [[122, "vgg"]]}, "indexentries": {"resnetbaseline (class in torch_uncertainty.baselines.classification)": [[14, "torch_uncertainty.baselines.classification.ResNetBaseline"]], "vggbaseline (class in torch_uncertainty.baselines.classification)": [[15, "torch_uncertainty.baselines.classification.VGGBaseline"]], "wideresnetbaseline (class in torch_uncertainty.baselines.classification)": [[16, "torch_uncertainty.baselines.classification.WideResNetBaseline"]], "btsbaseline (class in torch_uncertainty.baselines.depth)": [[17, "torch_uncertainty.baselines.depth.BTSBaseline"]], "mlpbaseline (class in torch_uncertainty.baselines.regression)": [[18, "torch_uncertainty.baselines.regression.MLPBaseline"]], "deeplabbaseline (class in torch_uncertainty.baselines.segmentation)": [[19, "torch_uncertainty.baselines.segmentation.DeepLabBaseline"]], "segformerbaseline (class in torch_uncertainty.baselines.segmentation)": [[20, "torch_uncertainty.baselines.segmentation.SegFormerBaseline"]], "cifar100datamodule (class in torch_uncertainty.datamodules)": [[21, "torch_uncertainty.datamodules.CIFAR100DataModule"]], "test_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[21, "torch_uncertainty.datamodules.CIFAR100DataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[21, "torch_uncertainty.datamodules.CIFAR100DataModule.train_dataloader"]], "cifar10datamodule (class in torch_uncertainty.datamodules)": [[22, "torch_uncertainty.datamodules.CIFAR10DataModule"]], "test_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[22, "torch_uncertainty.datamodules.CIFAR10DataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[22, "torch_uncertainty.datamodules.CIFAR10DataModule.train_dataloader"]], "imagenetdatamodule (class in torch_uncertainty.datamodules)": [[23, "torch_uncertainty.datamodules.ImageNetDataModule"]], "test_dataloader() (torch_uncertainty.datamodules.imagenetdatamodule method)": [[23, "torch_uncertainty.datamodules.ImageNetDataModule.test_dataloader"]], "mnistdatamodule (class in torch_uncertainty.datamodules)": [[24, "torch_uncertainty.datamodules.MNISTDataModule"]], "prepare_data() (torch_uncertainty.datamodules.mnistdatamodule method)": [[24, "torch_uncertainty.datamodules.MNISTDataModule.prepare_data"]], "test_dataloader() (torch_uncertainty.datamodules.mnistdatamodule method)": [[24, "torch_uncertainty.datamodules.MNISTDataModule.test_dataloader"]], "tinyimagenetdatamodule (class in torch_uncertainty.datamodules)": [[25, "torch_uncertainty.datamodules.TinyImageNetDataModule"]], "test_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[25, "torch_uncertainty.datamodules.TinyImageNetDataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[25, "torch_uncertainty.datamodules.TinyImageNetDataModule.train_dataloader"]], "val_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[25, "torch_uncertainty.datamodules.TinyImageNetDataModule.val_dataloader"]], "ucidatamodule (class in torch_uncertainty.datamodules)": [[26, "torch_uncertainty.datamodules.UCIDataModule"]], "prepare_data() (torch_uncertainty.datamodules.ucidatamodule method)": [[26, "torch_uncertainty.datamodules.UCIDataModule.prepare_data"]], "setup() (torch_uncertainty.datamodules.ucidatamodule method)": [[26, "torch_uncertainty.datamodules.UCIDataModule.setup"]], "camviddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[27, "torch_uncertainty.datamodules.segmentation.CamVidDataModule"]], "cityscapesdatamodule (class in torch_uncertainty.datamodules.segmentation)": [[28, "torch_uncertainty.datamodules.segmentation.CityscapesDataModule"]], "muaddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[29, "torch_uncertainty.datamodules.segmentation.MUADDataModule"]], "fractals (class in torch_uncertainty.datasets)": [[30, "torch_uncertainty.datasets.Fractals"]], "frostimages (class in torch_uncertainty.datasets)": [[31, "torch_uncertainty.datasets.FrostImages"]], "kittidepth (class in torch_uncertainty.datasets)": [[32, "torch_uncertainty.datasets.KITTIDepth"]], "muad (class in torch_uncertainty.datasets)": [[33, "torch_uncertainty.datasets.MUAD"]], "encode_target() (torch_uncertainty.datasets.muad method)": [[33, "torch_uncertainty.datasets.MUAD.encode_target"]], "nyuv2 (class in torch_uncertainty.datasets)": [[34, "torch_uncertainty.datasets.NYUv2"]], "cifar100c (class in torch_uncertainty.datasets.classification)": [[35, "torch_uncertainty.datasets.classification.CIFAR100C"]], "cifar100n (class in torch_uncertainty.datasets.classification)": [[36, "torch_uncertainty.datasets.classification.CIFAR100N"]], "cifar10c (class in torch_uncertainty.datasets.classification)": [[37, "torch_uncertainty.datasets.classification.CIFAR10C"]], "download() (torch_uncertainty.datasets.classification.cifar10c method)": [[37, "torch_uncertainty.datasets.classification.CIFAR10C.download"]], "make_dataset() (torch_uncertainty.datasets.classification.cifar10c method)": [[37, "torch_uncertainty.datasets.classification.CIFAR10C.make_dataset"]], "cifar10h (class in torch_uncertainty.datasets.classification)": [[38, "torch_uncertainty.datasets.classification.CIFAR10H"]], "cifar10n (class in torch_uncertainty.datasets.classification)": [[39, "torch_uncertainty.datasets.classification.CIFAR10N"]], "imageneta (class in torch_uncertainty.datasets.classification)": [[40, "torch_uncertainty.datasets.classification.ImageNetA"]], "imagenetc (class in torch_uncertainty.datasets.classification)": [[41, "torch_uncertainty.datasets.classification.ImageNetC"]], "imageneto (class in torch_uncertainty.datasets.classification)": [[42, "torch_uncertainty.datasets.classification.ImageNetO"]], "imagenetr (class in torch_uncertainty.datasets.classification)": [[43, "torch_uncertainty.datasets.classification.ImageNetR"]], "mnistc (class in torch_uncertainty.datasets.classification)": [[44, "torch_uncertainty.datasets.classification.MNISTC"]], "download() (torch_uncertainty.datasets.classification.mnistc method)": [[44, "torch_uncertainty.datasets.classification.MNISTC.download"]], "make_dataset() (torch_uncertainty.datasets.classification.mnistc method)": [[44, "torch_uncertainty.datasets.classification.MNISTC.make_dataset"]], "notmnist (class in torch_uncertainty.datasets.classification)": [[45, "torch_uncertainty.datasets.classification.NotMNIST"]], "openimageo (class in torch_uncertainty.datasets.classification)": [[46, "torch_uncertainty.datasets.classification.OpenImageO"]], "tinyimagenet (class in torch_uncertainty.datasets.classification)": [[47, "torch_uncertainty.datasets.classification.TinyImageNet"]], "tinyimagenetc (class in torch_uncertainty.datasets.classification)": [[48, "torch_uncertainty.datasets.classification.TinyImageNetC"]], "download() (torch_uncertainty.datasets.classification.tinyimagenetc method)": [[48, "torch_uncertainty.datasets.classification.TinyImageNetC.download"]], "uciregression (class in torch_uncertainty.datasets.regression)": [[49, "torch_uncertainty.datasets.regression.UCIRegression"]], "download() (torch_uncertainty.datasets.regression.uciregression method)": [[49, "torch_uncertainty.datasets.regression.UCIRegression.download"]], "camvid (class in torch_uncertainty.datasets.segmentation)": [[50, "torch_uncertainty.datasets.segmentation.CamVid"]], "color_palette (torch_uncertainty.datasets.segmentation.camvid property)": [[50, "torch_uncertainty.datasets.segmentation.CamVid.color_palette"]], "decode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[50, "torch_uncertainty.datasets.segmentation.CamVid.decode_target"]], "download() (torch_uncertainty.datasets.segmentation.camvid method)": [[50, "torch_uncertainty.datasets.segmentation.CamVid.download"]], "encode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[50, "torch_uncertainty.datasets.segmentation.CamVid.encode_target"]], "cityscapes (class in torch_uncertainty.datasets.segmentation)": [[51, "torch_uncertainty.datasets.segmentation.Cityscapes"]], "color_palette (torch_uncertainty.datasets.segmentation.cityscapes property)": [[51, "torch_uncertainty.datasets.segmentation.Cityscapes.color_palette"]], "decode_target() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[51, "torch_uncertainty.datasets.segmentation.Cityscapes.decode_target"]], "encode_target() (torch_uncertainty.datasets.segmentation.cityscapes class method)": [[51, "torch_uncertainty.datasets.segmentation.Cityscapes.encode_target"]], "plot_sample() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[51, "torch_uncertainty.datasets.segmentation.Cityscapes.plot_sample"]], "batchconv2d (class in torch_uncertainty.layers)": [[52, "torch_uncertainty.layers.BatchConv2d"]], "batchlinear (class in torch_uncertainty.layers)": [[53, "torch_uncertainty.layers.BatchLinear"]], "maskedconv2d (class in torch_uncertainty.layers)": [[54, "torch_uncertainty.layers.MaskedConv2d"]], "maskedlinear (class in torch_uncertainty.layers)": [[55, "torch_uncertainty.layers.MaskedLinear"]], "packedconv2d (class in torch_uncertainty.layers)": [[56, "torch_uncertainty.layers.PackedConv2d"]], "bias (torch_uncertainty.layers.packedconv2d property)": [[56, "torch_uncertainty.layers.PackedConv2d.bias"]], "weight (torch_uncertainty.layers.packedconv2d property)": [[56, "torch_uncertainty.layers.PackedConv2d.weight"]], "packedlinear (class in torch_uncertainty.layers)": [[57, "torch_uncertainty.layers.PackedLinear"]], "bayesconv1d (class in torch_uncertainty.layers.bayesian)": [[58, "torch_uncertainty.layers.bayesian.BayesConv1d"]], "bayesconv2d (class in torch_uncertainty.layers.bayesian)": [[59, "torch_uncertainty.layers.bayesian.BayesConv2d"]], "bayesconv3d (class in torch_uncertainty.layers.bayesian)": [[60, "torch_uncertainty.layers.bayesian.BayesConv3d"]], "bayeslinear (class in torch_uncertainty.layers.bayesian)": [[61, "torch_uncertainty.layers.bayesian.BayesLinear"]], "freeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[61, "torch_uncertainty.layers.bayesian.BayesLinear.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[61, "torch_uncertainty.layers.bayesian.BayesLinear.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[61, "torch_uncertainty.layers.bayesian.BayesLinear.unfreeze"]], "lpbnnconv2d (class in torch_uncertainty.layers.bayesian)": [[62, "torch_uncertainty.layers.bayesian.LPBNNConv2d"]], "lpbnnlinear (class in torch_uncertainty.layers.bayesian)": [[63, "torch_uncertainty.layers.bayesian.LPBNNLinear"]], "betanll (class in torch_uncertainty.losses)": [[64, "torch_uncertainty.losses.BetaNLL"]], "confidencepenaltyloss (class in torch_uncertainty.losses)": [[65, "torch_uncertainty.losses.ConfidencePenaltyLoss"]], "forward() (torch_uncertainty.losses.confidencepenaltyloss method)": [[65, "torch_uncertainty.losses.ConfidencePenaltyLoss.forward"]], "conflictualloss (class in torch_uncertainty.losses)": [[66, "torch_uncertainty.losses.ConflictualLoss"]], "forward() (torch_uncertainty.losses.conflictualloss method)": [[66, "torch_uncertainty.losses.ConflictualLoss.forward"]], "decloss (class in torch_uncertainty.losses)": [[67, "torch_uncertainty.losses.DECLoss"]], "derloss (class in torch_uncertainty.losses)": [[68, "torch_uncertainty.losses.DERLoss"]], "distributionnllloss (class in torch_uncertainty.losses)": [[69, "torch_uncertainty.losses.DistributionNLLLoss"]], "forward() (torch_uncertainty.losses.distributionnllloss method)": [[69, "torch_uncertainty.losses.DistributionNLLLoss.forward"]], "elboloss (class in torch_uncertainty.losses)": [[70, "torch_uncertainty.losses.ELBOLoss"]], "forward() (torch_uncertainty.losses.elboloss method)": [[70, "torch_uncertainty.losses.ELBOLoss.forward"]], "focalloss (class in torch_uncertainty.losses)": [[71, "torch_uncertainty.losses.FocalLoss"]], "kldiv (class in torch_uncertainty.losses)": [[72, "torch_uncertainty.losses.KLDiv"]], "ause (class in torch_uncertainty.metrics)": [[73, "torch_uncertainty.metrics.AUSE"]], "compute() (torch_uncertainty.metrics.ause method)": [[73, "torch_uncertainty.metrics.AUSE.compute"]], "plot() (torch_uncertainty.metrics.ause method)": [[73, "torch_uncertainty.metrics.AUSE.plot"]], "update() (torch_uncertainty.metrics.ause method)": [[73, "torch_uncertainty.metrics.AUSE.update"]], "augrc (class in torch_uncertainty.metrics.classification)": [[74, "torch_uncertainty.metrics.classification.AUGRC"]], "compute() (torch_uncertainty.metrics.classification.augrc method)": [[74, "torch_uncertainty.metrics.classification.AUGRC.compute"]], "plot() (torch_uncertainty.metrics.classification.augrc method)": [[74, "torch_uncertainty.metrics.classification.AUGRC.plot"]], "aurc (class in torch_uncertainty.metrics.classification)": [[75, "torch_uncertainty.metrics.classification.AURC"]], "compute() (torch_uncertainty.metrics.classification.aurc method)": [[75, "torch_uncertainty.metrics.classification.AURC.compute"]], "partial_compute() (torch_uncertainty.metrics.classification.aurc method)": [[75, "torch_uncertainty.metrics.classification.AURC.partial_compute"]], "plot() (torch_uncertainty.metrics.classification.aurc method)": [[75, "torch_uncertainty.metrics.classification.AURC.plot"]], "update() (torch_uncertainty.metrics.classification.aurc method)": [[75, "torch_uncertainty.metrics.classification.AURC.update"]], "adaptivecalibrationerror (class in torch_uncertainty.metrics.classification)": [[76, "torch_uncertainty.metrics.classification.AdaptiveCalibrationError"]], "brierscore (class in torch_uncertainty.metrics.classification)": [[77, "torch_uncertainty.metrics.classification.BrierScore"]], "compute() (torch_uncertainty.metrics.classification.brierscore method)": [[77, "torch_uncertainty.metrics.classification.BrierScore.compute"]], "update() (torch_uncertainty.metrics.classification.brierscore method)": [[77, "torch_uncertainty.metrics.classification.BrierScore.update"]], "calibrationerror (class in torch_uncertainty.metrics.classification)": [[78, "torch_uncertainty.metrics.classification.CalibrationError"]], "categoricalnll (class in torch_uncertainty.metrics.classification)": [[79, "torch_uncertainty.metrics.classification.CategoricalNLL"]], "compute() (torch_uncertainty.metrics.classification.categoricalnll method)": [[79, "torch_uncertainty.metrics.classification.CategoricalNLL.compute"]], "update() (torch_uncertainty.metrics.classification.categoricalnll method)": [[79, "torch_uncertainty.metrics.classification.CategoricalNLL.update"]], "covat5risk (class in torch_uncertainty.metrics.classification)": [[80, "torch_uncertainty.metrics.classification.CovAt5Risk"]], "covatxrisk (class in torch_uncertainty.metrics.classification)": [[81, "torch_uncertainty.metrics.classification.CovAtxRisk"]], "compute() (torch_uncertainty.metrics.classification.covatxrisk method)": [[81, "torch_uncertainty.metrics.classification.CovAtxRisk.compute"]], "update() (torch_uncertainty.metrics.classification.covatxrisk method)": [[81, "torch_uncertainty.metrics.classification.CovAtxRisk.update"]], "disagreement (class in torch_uncertainty.metrics.classification)": [[82, "torch_uncertainty.metrics.classification.Disagreement"]], "compute() (torch_uncertainty.metrics.classification.disagreement method)": [[82, "torch_uncertainty.metrics.classification.Disagreement.compute"]], "update() (torch_uncertainty.metrics.classification.disagreement method)": [[82, "torch_uncertainty.metrics.classification.Disagreement.update"]], "entropy (class in torch_uncertainty.metrics.classification)": [[83, "torch_uncertainty.metrics.classification.Entropy"]], "compute() (torch_uncertainty.metrics.classification.entropy method)": [[83, "torch_uncertainty.metrics.classification.Entropy.compute"]], "update() (torch_uncertainty.metrics.classification.entropy method)": [[83, "torch_uncertainty.metrics.classification.Entropy.update"]], "fpr95 (class in torch_uncertainty.metrics.classification)": [[84, "torch_uncertainty.metrics.classification.FPR95"]], "fprx (class in torch_uncertainty.metrics.classification)": [[85, "torch_uncertainty.metrics.classification.FPRx"]], "compute() (torch_uncertainty.metrics.classification.fprx method)": [[85, "torch_uncertainty.metrics.classification.FPRx.compute"]], "update() (torch_uncertainty.metrics.classification.fprx method)": [[85, "torch_uncertainty.metrics.classification.FPRx.update"]], "groupingloss (class in torch_uncertainty.metrics.classification)": [[86, "torch_uncertainty.metrics.classification.GroupingLoss"]], "compute() (torch_uncertainty.metrics.classification.groupingloss method)": [[86, "torch_uncertainty.metrics.classification.GroupingLoss.compute"]], "update() (torch_uncertainty.metrics.classification.groupingloss method)": [[86, "torch_uncertainty.metrics.classification.GroupingLoss.update"]], "meanintersectionoverunion (class in torch_uncertainty.metrics.classification)": [[87, "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion"]], "compute() (torch_uncertainty.metrics.classification.meanintersectionoverunion method)": [[87, "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion.compute"]], "mutualinformation (class in torch_uncertainty.metrics.classification)": [[88, "torch_uncertainty.metrics.classification.MutualInformation"]], "compute() (torch_uncertainty.metrics.classification.mutualinformation method)": [[88, "torch_uncertainty.metrics.classification.MutualInformation.compute"]], "update() (torch_uncertainty.metrics.classification.mutualinformation method)": [[88, "torch_uncertainty.metrics.classification.MutualInformation.update"]], "riskat80cov (class in torch_uncertainty.metrics.classification)": [[89, "torch_uncertainty.metrics.classification.RiskAt80Cov"]], "riskatxcov (class in torch_uncertainty.metrics.classification)": [[90, "torch_uncertainty.metrics.classification.RiskAtxCov"]], "compute() (torch_uncertainty.metrics.classification.riskatxcov method)": [[90, "torch_uncertainty.metrics.classification.RiskAtxCov.compute"]], "update() (torch_uncertainty.metrics.classification.riskatxcov method)": [[90, "torch_uncertainty.metrics.classification.RiskAtxCov.update"]], "variationratio (class in torch_uncertainty.metrics.classification)": [[91, "torch_uncertainty.metrics.classification.VariationRatio"]], "compute() (torch_uncertainty.metrics.classification.variationratio method)": [[91, "torch_uncertainty.metrics.classification.VariationRatio.compute"]], "distributionnll (class in torch_uncertainty.metrics.regression)": [[92, "torch_uncertainty.metrics.regression.DistributionNLL"]], "compute() (torch_uncertainty.metrics.regression.distributionnll method)": [[92, "torch_uncertainty.metrics.regression.DistributionNLL.compute"]], "update() (torch_uncertainty.metrics.regression.distributionnll method)": [[92, "torch_uncertainty.metrics.regression.DistributionNLL.update"]], "log10 (class in torch_uncertainty.metrics.regression)": [[93, "torch_uncertainty.metrics.regression.Log10"]], "update() (torch_uncertainty.metrics.regression.log10 method)": [[93, "torch_uncertainty.metrics.regression.Log10.update"]], "meanabsoluteerrorinverse (class in torch_uncertainty.metrics.regression)": [[94, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse"]], "update() (torch_uncertainty.metrics.regression.meanabsoluteerrorinverse method)": [[94, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.update"]], "meangtrelativeabsoluteerror (class in torch_uncertainty.metrics.regression)": [[95, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError"]], "update() (torch_uncertainty.metrics.regression.meangtrelativeabsoluteerror method)": [[95, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.update"]], "meangtrelativesquarederror (class in torch_uncertainty.metrics.regression)": [[96, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError"]], "update() (torch_uncertainty.metrics.regression.meangtrelativesquarederror method)": [[96, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.update"]], "meansquarederrorinverse (class in torch_uncertainty.metrics.regression)": [[97, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse"]], "update() (torch_uncertainty.metrics.regression.meansquarederrorinverse method)": [[97, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.update"]], "meansquaredlogerror (class in torch_uncertainty.metrics.regression)": [[98, "torch_uncertainty.metrics.regression.MeanSquaredLogError"]], "update() (torch_uncertainty.metrics.regression.meansquaredlogerror method)": [[98, "torch_uncertainty.metrics.regression.MeanSquaredLogError.update"]], "silog (class in torch_uncertainty.metrics.regression)": [[99, "torch_uncertainty.metrics.regression.SILog"]], "compute() (torch_uncertainty.metrics.regression.silog method)": [[99, "torch_uncertainty.metrics.regression.SILog.compute"]], "update() (torch_uncertainty.metrics.regression.silog method)": [[99, "torch_uncertainty.metrics.regression.SILog.update"]], "thresholdaccuracy (class in torch_uncertainty.metrics.regression)": [[100, "torch_uncertainty.metrics.regression.ThresholdAccuracy"]], "compute() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[100, "torch_uncertainty.metrics.regression.ThresholdAccuracy.compute"]], "update() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[100, "torch_uncertainty.metrics.regression.ThresholdAccuracy.update"]], "checkpointensemble (class in torch_uncertainty.models)": [[101, "torch_uncertainty.models.CheckpointEnsemble"]], "eval_forward() (torch_uncertainty.models.checkpointensemble method)": [[101, "torch_uncertainty.models.CheckpointEnsemble.eval_forward"]], "update_wrapper() (torch_uncertainty.models.checkpointensemble method)": [[101, "torch_uncertainty.models.CheckpointEnsemble.update_wrapper"]], "ema (class in torch_uncertainty.models)": [[102, "torch_uncertainty.models.EMA"]], "update_wrapper() (torch_uncertainty.models.ema method)": [[102, "torch_uncertainty.models.EMA.update_wrapper"]], "mcdropout (class in torch_uncertainty.models)": [[103, "torch_uncertainty.models.MCDropout"]], "forward() (torch_uncertainty.models.mcdropout method)": [[103, "torch_uncertainty.models.MCDropout.forward"]], "train() (torch_uncertainty.models.mcdropout method)": [[103, "torch_uncertainty.models.MCDropout.train"]], "swa (class in torch_uncertainty.models)": [[104, "torch_uncertainty.models.SWA"]], "swag (class in torch_uncertainty.models)": [[105, "torch_uncertainty.models.SWAG"]], "bn_update() (torch_uncertainty.models.swag method)": [[105, "torch_uncertainty.models.SWAG.bn_update"]], "eval_forward() (torch_uncertainty.models.swag method)": [[105, "torch_uncertainty.models.SWAG.eval_forward"]], "initialize_stats() (torch_uncertainty.models.swag method)": [[105, "torch_uncertainty.models.SWAG.initialize_stats"]], "sample() (torch_uncertainty.models.swag method)": [[105, "torch_uncertainty.models.SWAG.sample"]], "state_dict() (torch_uncertainty.models.swag method)": [[105, "torch_uncertainty.models.SWAG.state_dict"]], "update_wrapper() (torch_uncertainty.models.swag method)": [[105, "torch_uncertainty.models.SWAG.update_wrapper"]], "stochasticmodel (class in torch_uncertainty.models)": [[106, "torch_uncertainty.models.StochasticModel"]], "deep_ensembles() (in module torch_uncertainty.models)": [[107, "torch_uncertainty.models.deep_ensembles"]], "mc_dropout() (in module torch_uncertainty.models)": [[108, "torch_uncertainty.models.mc_dropout"]], "laplaceapprox (class in torch_uncertainty.post_processing)": [[109, "torch_uncertainty.post_processing.LaplaceApprox"]], "mcbatchnorm (class in torch_uncertainty.post_processing)": [[110, "torch_uncertainty.post_processing.MCBatchNorm"]], "fit() (torch_uncertainty.post_processing.mcbatchnorm method)": [[110, "torch_uncertainty.post_processing.MCBatchNorm.fit"]], "raise_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[110, "torch_uncertainty.post_processing.MCBatchNorm.raise_counters"]], "replace_layers() (torch_uncertainty.post_processing.mcbatchnorm method)": [[110, "torch_uncertainty.post_processing.MCBatchNorm.replace_layers"]], "reset_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[110, "torch_uncertainty.post_processing.MCBatchNorm.reset_counters"]], "set_accumulate() (torch_uncertainty.post_processing.mcbatchnorm method)": [[110, "torch_uncertainty.post_processing.MCBatchNorm.set_accumulate"]], "matrixscaler (class in torch_uncertainty.post_processing)": [[111, "torch_uncertainty.post_processing.MatrixScaler"]], "fit() (torch_uncertainty.post_processing.matrixscaler method)": [[111, "torch_uncertainty.post_processing.MatrixScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.matrixscaler method)": [[111, "torch_uncertainty.post_processing.MatrixScaler.set_temperature"]], "temperaturescaler (class in torch_uncertainty.post_processing)": [[112, "torch_uncertainty.post_processing.TemperatureScaler"]], "fit() (torch_uncertainty.post_processing.temperaturescaler method)": [[112, "torch_uncertainty.post_processing.TemperatureScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.temperaturescaler method)": [[112, "torch_uncertainty.post_processing.TemperatureScaler.set_temperature"]], "vectorscaler (class in torch_uncertainty.post_processing)": [[113, "torch_uncertainty.post_processing.VectorScaler"]], "fit() (torch_uncertainty.post_processing.vectorscaler method)": [[113, "torch_uncertainty.post_processing.VectorScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.vectorscaler method)": [[113, "torch_uncertainty.post_processing.VectorScaler.set_temperature"]], "classificationroutine (class in torch_uncertainty.routines)": [[114, "torch_uncertainty.routines.ClassificationRoutine"]], "forward() (torch_uncertainty.routines.classificationroutine method)": [[114, "torch_uncertainty.routines.ClassificationRoutine.forward"]], "pixelregressionroutine (class in torch_uncertainty.routines)": [[115, "torch_uncertainty.routines.PixelRegressionRoutine"]], "forward() (torch_uncertainty.routines.pixelregressionroutine method)": [[115, "torch_uncertainty.routines.PixelRegressionRoutine.forward"]], "regressionroutine (class in torch_uncertainty.routines)": [[116, "torch_uncertainty.routines.RegressionRoutine"]], "forward() (torch_uncertainty.routines.regressionroutine method)": [[116, "torch_uncertainty.routines.RegressionRoutine.forward"]], "segmentationroutine (class in torch_uncertainty.routines)": [[117, "torch_uncertainty.routines.SegmentationRoutine"]], "forward() (torch_uncertainty.routines.segmentationroutine method)": [[117, "torch_uncertainty.routines.SegmentationRoutine.forward"]], "log_segmentation_plots() (torch_uncertainty.routines.segmentationroutine method)": [[117, "torch_uncertainty.routines.SegmentationRoutine.log_segmentation_plots"]]}})