Search.setIndex({"alltitles": {"1. Download, instantiate and visualize the datasets": [[19, "download-instantiate-and-visualize-the-datasets"]], "1. Load and normalize CIFAR10": [[13, "load-and-normalize-cifar10"]], "1. Load pretrained model from Hugging Face repository": [[22, "load-pretrained-model-from-hugging-face-repository"]], "1. Loading the Utilities": [[23, "loading-the-utilities"], [27, "loading-the-utilities"]], "1. Loading the utilities": [[3, "loading-the-utilities"], [4, "loading-the-utilities"], [5, "loading-the-utilities"], [6, "loading-the-utilities"], [9, "loading-the-utilities"], [11, "loading-the-utilities"], [26, "loading-the-utilities"], [28, "loading-the-utilities"], [31, "loading-the-utilities"], [32, "loading-the-utilities"], [33, "loading-the-utilities"]], "1. Noise Corruptions": [[16, "noise-corruptions"]], "10. Apply the MC Dropout wrapper": [[6, "apply-the-mc-dropout-wrapper"]], "11. Testing the MC Dropout model": [[6, "testing-the-mc-dropout-model"]], "2. Blur Corruptions": [[16, "blur-corruptions"]], "2. Building the NormalMLP Model": [[27, "building-the-normalmlp-model"]], "2. Create & train the model": [[19, "create-train-the-model"]], "2. Creating the Trainer and the DataModule": [[9, "creating-the-trainer-and-the-datamodule"]], "2. Creating the necessary variables": [[3, "creating-the-necessary-variables"], [4, "creating-the-necessary-variables"], [11, "creating-the-necessary-variables"]], "2. Define a Packed-Ensemble from a standard classifier": [[13, "define-a-packed-ensemble-from-a-standard-classifier"]], "2. Defining the Model and the Trainer": [[5, "defining-the-model-and-the-trainer"]], "2. Defining the Trainer and the DataModule": [[28, "defining-the-trainer-and-the-datamodule"]], "2. Initializing the DataModule": [[6, "initializing-the-datamodule"], [31, "initializing-the-datamodule"], [32, "initializing-the-datamodule"], [33, "initializing-the-datamodule"]], "2. Load CIFAR-10 Dataset & Define Dataloaders": [[22, "load-cifar-10-dataset-define-dataloaders"]], "2. Loading a model from TorchUncertainty\u2019s HF": [[23, "loading-a-model-from-torchuncertainty-s-hf"]], "2. The Optimization Recipe": [[26, "the-optimization-recipe"]], "3. Creating the necessary variables": [[26, "creating-the-necessary-variables"]], "3. Define a Loss function and optimizer": [[13, "define-a-loss-function-and-optimizer"]], "3. Define the Lightning Trainer": [[22, "define-the-lightning-trainer"]], "3. Instantiating the Model": [[6, "instantiating-the-model"], [9, "instantiating-the-model"], [31, "instantiating-the-model"], [32, "instantiating-the-model"], [33, "instantiating-the-model"]], "3. Instantiating the Pointwise Model": [[28, "instantiating-the-pointwise-model"]], "3. Setting up the Data": [[27, "setting-up-the-data"]], "3. Setting up the Datamodule and Dataloaders": [[23, "setting-up-the-datamodule-and-dataloaders"]], "3. The Loss and the Training Routine": [[3, "the-loss-and-the-training-routine"], [4, "the-loss-and-the-training-routine"], [5, "the-loss-and-the-training-routine"], [11, "the-loss-and-the-training-routine"]], "3. Training an ensemble of models with TorchUncertainty": [[19, "training-an-ensemble-of-models-with-torchuncertainty"]], "3. Weather Corruptions": [[16, "weather-corruptions"]], "4. Compute class weights to mitigate class inbalance": [[6, "compute-class-weights-to-mitigate-class-inbalance"], [31, "compute-class-weights-to-mitigate-class-inbalance"], [32, "compute-class-weights-to-mitigate-class-inbalance"], [33, "compute-class-weights-to-mitigate-class-inbalance"]], "4. From Deep Ensembles to Packed-Ensembles": [[19, "from-deep-ensembles-to-packed-ensembles"]], "4. Function to Visualize the Prediction Sets": [[22, "function-to-visualize-the-prediction-sets"]], "4. Gathering Everything and Training the Model": [[3, "gathering-everything-and-training-the-model"], [4, "gathering-everything-and-training-the-model"], [5, "gathering-everything-and-training-the-model"], [11, "gathering-everything-and-training-the-model"]], "4. Iterating on the Dataloader and Computing the ECE": [[23, "iterating-on-the-dataloader-and-computing-the-ece"]], "4. Other Corruptions": [[16, "other-corruptions"]], "4. Setting up the Model and Trainer": [[27, "setting-up-the-model-and-trainer"]], "4. The Loss and the Routine": [[9, "the-loss-and-the-routine"]], "4. The Loss and the Training Routine": [[26, "the-loss-and-the-training-routine"], [28, "the-loss-and-the-training-routine"]], "4. Train the Packed-Ensemble on the training data": [[13, "train-the-packed-ensemble-on-the-training-data"]], "5. Estimate Prediction Sets with ConformalClsTHR": [[22, "estimate-prediction-sets-with-conformalclsthr"]], "5. Fitting the Scaler to Improve the Calibration": [[23, "fitting-the-scaler-to-improve-the-calibration"]], "5. Gathering Everything and Training the Model": [[9, "gathering-everything-and-training-the-model"], [26, "gathering-everything-and-training-the-model"], [28, "gathering-everything-and-training-the-model"]], "5. Test the Packed-Ensemble on the test data": [[13, "test-the-packed-ensemble-on-the-test-data"]], "5. Testing the Model": [[3, "testing-the-model"], [5, "testing-the-model"], [11, "testing-the-model"]], "5. The Loss, the Optimizer and the Training Routine": [[27, "the-loss-the-optimizer-and-the-training-routine"]], "5. The Loss, the Routine, and the Trainer": [[6, "the-loss-the-routine-and-the-trainer"], [31, "the-loss-the-routine-and-the-trainer"], [32, "the-loss-the-routine-and-the-trainer"], [33, "the-loss-the-routine-and-the-trainer"]], "5. Unused Corruptions": [[16, "unused-corruptions"]], "5. Wrapping the Model in a MCBatchNorm": [[4, "wrapping-the-model-in-a-mcbatchnorm"]], "6. Evaluating the Model": [[9, "evaluating-the-model"]], "6. Instantiating the Uncertain Model & its Routine": [[28, "instantiating-the-uncertain-model-its-routine"]], "6. Iterating Again to Compute the Improved ECE": [[23, "iterating-again-to-compute-the-improved-ece"]], "6. Testing the Model": [[4, "testing-the-model"], [26, "testing-the-model"]], "6. Training and Testing the Model": [[27, "training-and-testing-the-model"]], "6. Training the model": [[6, "training-the-model"], [31, "training-the-model"], [32, "training-the-model"], [33, "training-the-model"]], "6. Visualization of ConformalClsTHR prediction sets": [[22, "visualization-of-conformalclsthr-prediction-sets"]], "7. Benchmarking Different Distributions": [[27, "benchmarking-different-distributions"]], "7. Estimate Prediction Sets with ConformalClsAPS": [[22, "estimate-prediction-sets-with-conformalclsaps"]], "7. Testing the model": [[6, "testing-the-model"], [31, "testing-the-model"], [32, "testing-the-model"], [33, "testing-the-model"]], "7. Training & Testing the Probabilistic Model": [[28, "training-testing-the-probabilistic-model"]], "8. Estimate Prediction Sets with ConformalClsRAPS": [[22, "estimate-prediction-sets-with-conformalclsraps"]], "8. Loading a pre-trained model": [[6, "loading-a-pre-trained-model"], [33, "loading-a-pre-trained-model"]], "8. Uncertainty evaluations with MCP": [[31, "uncertainty-evaluations-with-mcp"], [32, "uncertainty-evaluations-with-mcp"]], "9. Uncertainty evaluations with MCP": [[6, "uncertainty-evaluations-with-mcp"], [6, "id1"], [33, "uncertainty-evaluations-with-mcp"]], "API Reference": [[0, null]], "AUGRC": [[123, null]], "AURC": [[124, null]], "AUSE": [[122, null]], "Adaptive Calibration Error": [[186, "adaptive-calibration-error"]], "AdaptiveCalibrationError": [[125, null]], "Architectures": [[186, "architectures"]], "Area Under the Generalized Risk-Coverage curve": [[186, "area-under-the-generalized-risk-coverage-curve"]], "Area Under the Risk-Coverage curve": [[186, "area-under-the-risk-coverage-curve"]], "BCEWithLogitsLSLoss": [[112, null]], "BTSBaseline": [[41, null]], "BankMarketing": [[78, null]], "BankMarketingDataModule": [[45, null]], "Baselines": [[0, "baselines"]], "BatchConv2d": [[86, null]], "BatchEnsemble": [[155, null], [186, "batchensemble"]], "BatchLinear": [[87, null]], "BayesConv1d": [[96, null]], "BayesConv2d": [[97, null]], "BayesConv3d": [[98, null]], "BayesLinear": [[99, null]], "Bayesian Methods": [[1, null], [34, "bayesian-methods"]], "Bayesian layers": [[0, "bayesian-layers"]], "Beta NLL in Deep Regression": [[186, "beta-nll-in-deep-regression"]], "BetaNLL": [[113, null]], "Binary Cross-Entropy with Logits Loss with Label Smoothing": [[186, "binary-cross-entropy-with-logits-loss-with-label-smoothing"]], "BrierScore": [[126, null]], "Build the documentation locally": [[37, "build-the-documentation-locally"]], "Building a MLP for Probabilistic Regression using TorchUncertainty Distribution Layers": [[27, "building-a-mlp-for-probabilistic-regression-using-torchuncertainty-distribution-layers"]], "Building your First Routine": [[185, "building-your-first-routine"]], "CIFAR-10 & CIFAR-100": [[186, "cifar-10-cifar-100"]], "CIFAR-10 H": [[186, "cifar-10-h"]], "CIFAR-10 N / CIFAR-100 N": [[186, "cifar-10-n-cifar-100-n"]], "CIFAR-10C": [[10, "cifar-10c"]], "CIFAR-C, Tiny-ImageNet-C, ImageNet-C": [[186, "cifar-c-tiny-imagenet-c-imagenet-c"]], "CIFAR100C": [[64, null]], "CIFAR100DataModule": [[46, null]], "CIFAR100N": [[65, null]], "CIFAR10C": [[66, null]], "CIFAR10DataModule": [[47, null]], "CIFAR10H": [[67, null]], "CIFAR10N": [[68, null]], "CLI Guide": [[36, null]], "Calibration": [[0, "calibration"]], "CalibrationError": [[127, null]], "CamVid": [[84, null]], "CamVidDataModule": [[56, null]], "CategoricalNLL": [[128, null]], "CauchyConvNd": [[102, null]], "CauchyLinear": [[103, null]], "Changing the OOD Criterion": [[12, "changing-the-ood-criterion"]], "CheckpointCollector": [[156, null], [186, "checkpointcollector"]], "Cityscapes": [[85, null]], "CityscapesDataModule": [[57, null]], "Classes": [[0, "classes"]], "Classification": [[0, "classification"], [0, "id1"], [0, "id4"], [0, "id8"], [0, "id11"], [7, null], [34, "classification"]], "ClassificationRoutine": [[178, null]], "Clean development install of TorchUncertainty": [[37, "clean-development-install-of-torchuncertainty"]], "Common guidelines": [[37, "common-guidelines"]], "Computation times": [[2, null], [8, null], [15, null], [18, null], [21, null], [25, null], [30, null], [35, null], [187, null]], "ConfidencePenaltyLoss": [[114, null]], "Configuration files": [[36, "configuration-files"]], "Conflictual Loss": [[186, "conflictual-loss"]], "ConflictualLoss": [[115, null]], "Conformal Prediction on CIFAR-10 with TorchUncertainty": [[22, null]], "Conformal Predictions": [[0, "conformal-predictions"]], "Contents:": [[182, null]], "Contributing": [[37, null]], "Convolution Layers": [[0, "convolution-layers"]], "Corrupting Images with TorchUncertainty to Benchmark Robustness": [[16, null]], "CovAt5Risk": [[129, null]], "CovAtxRisk": [[130, null]], "CoverageRate": [[131, null]], "DECLoss": [[116, null]], "DERLoss": [[117, null]], "DOTA2Games": [[79, null]], "DOTA2GamesDataModule": [[48, null]], "Data Augmentation": [[14, null], [34, "data-augmentation"]], "Data Augmentation Methods": [[186, "data-augmentation-methods"]], "DataModule Setup": [[10, "datamodule-setup"], [12, "datamodule-setup"]], "Datamodules": [[0, "datamodules"]], "Dataset": [[13, "dataset"]], "Datasets": [[0, "datasets"], [186, "datasets"]], "Datasets & Datamodules": [[37, "datasets-datamodules"]], "Deep Ensembles": [[186, "deep-ensembles"]], "Deep Evidential Classification": [[186, "deep-evidential-classification"]], "Deep Evidential Classification on a Toy Example": [[11, null]], "Deep Evidential Regression": [[186, "deep-evidential-regression"]], "Deep Evidential Regression on a Toy Example": [[26, null]], "Deep Probabilistic Regression": [[27, null]], "Deep ensembles Segmentation Tutorial using Muad Dataset": [[31, null]], "DeepLabBaseline": [[43, null]], "Define the Classification Routine": [[10, "define-the-classification-routine"], [12, "define-the-classification-routine"]], "Density layers": [[0, "density-layers"]], "Disagreement": [[132, null]], "Distribution-shift metrics": [[10, "distribution-shift-metrics"]], "DistributionNLL": [[142, null]], "DistributionNLLLoss": [[118, null]], "Diversity": [[0, "diversity"]], "ELBOLoss": [[119, null]], "EMA": [[157, null]], "EnergyCriterion": [[165, null]], "Ensemble Methods": [[17, null], [34, "ensemble-methods"]], "Ensemble layers": [[0, "ensemble-layers"]], "Entropy": [[133, null]], "EntropyCriterion": [[166, null]], "Evaluating Model Performance Under Distribution Shift with TorchUncertainty": [[10, null]], "Evaluating on In-Distribution and Distribution-shifted Data": [[10, "evaluating-on-in-distribution-and-distribution-shifted-data"]], "Evaluating on In-Distribution and Out-of-distribution Data": [[12, "evaluating-on-in-distribution-and-out-of-distribution-data"]], "Example": [[185, "example"], [185, "id2"], [185, "id4"]], "Expected Calibration Error": [[186, "expected-calibration-error"]], "Experiment folder usage": [[36, "experiment-folder-usage"]], "FPR95": [[134, null]], "FPRx": [[135, null]], "Focal Loss": [[186, "focal-loss"]], "FocalLoss": [[120, null]], "Foreword on Bayesian Neural Networks": [[3, "foreword-on-bayesian-neural-networks"]], "Fractals": [[59, null]], "From PyPI": [[183, "from-pypi"]], "From a Standard Classifier to a Packed-Ensemble": [[13, null]], "From source": [[183, "from-source"]], "FrostImages": [[60, null]], "Functions": [[0, "functions"]], "Grouping Loss": [[19, "grouping-loss"], [186, "grouping-loss"]], "GroupingLoss": [[136, null]], "Guidelines": [[37, "guidelines"]], "HTRU2": [[80, null]], "HTRU2DataModule": [[49, null]], "ImageNet": [[186, "imagenet"]], "ImageNet-A & ImageNet-0": [[186, "imagenet-a-imagenet-0"]], "ImageNet-R": [[186, "imagenet-r"]], "ImageNetA": [[69, null]], "ImageNetC": [[70, null]], "ImageNetDataModule": [[50, null]], "ImageNetO": [[71, null]], "ImageNetR": [[72, null]], "Imports and Setup": [[10, "imports-and-setup"], [12, "imports-and-setup"]], "Improve Top-label Calibration with Temperature Scaling": [[23, null]], "Improved Ensemble parameter-efficiency with Packed-Ensembles": [[19, null]], "Indices and tables": [[182, "indices-and-tables"]], "Installation": [[182, "installation"], [183, null]], "Introduction to Classification Uncertainty": [[184, null]], "Introduction to the Lightning CLI": [[36, "introduction-to-the-lightning-cli"]], "KITTIDepth": [[61, null]], "KLDiv": [[121, null]], "LPBNN": [[186, "lpbnn"]], "LPBNNConv2d": [[100, null]], "LPBNNLinear": [[101, null]], "Laplace Approximation": [[186, "laplace-approximation"]], "LaplaceApprox": [[173, null]], "LaplaceConvNd": [[104, null]], "LaplaceLinear": [[105, null]], "Layers": [[0, "layers"], [186, "layers"]], "License": [[37, "license"]], "Linear Layers": [[0, "linear-layers"]], "Load the model from HuggingFace": [[12, "load-the-model-from-huggingface"]], "Log10": [[143, null]], "Losses": [[0, "losses"], [186, "losses"]], "MCBatchNorm": [[174, null]], "MCDropout": [[158, null]], "MIMO": [[186, "mimo"]], "MLPBaseline": [[42, null]], "MNIST": [[186, "mnist"]], "MNIST-C": [[186, "mnist-c"]], "MNISTC": [[73, null]], "MNISTDataModule": [[51, null]], "MUAD": [[62, null], [186, "muad"]], "MUADDataModule": [[58, null]], "MaskedConv2d": [[88, null]], "MaskedLinear": [[89, null]], "Masksembles": [[186, "masksembles"]], "MatrixScaler": [[175, null]], "MaxLogitCriterion": [[167, null]], "MaxSoftmaxCriterion": [[168, null]], "MaxSup: Fixing Label Smoothing for Improved Feature Representation": [[186, "maxsup-fixing-label-smoothing-for-improved-feature-representation"]], "MeanAbsoluteErrorInverse": [[144, null]], "MeanGTRelativeAbsoluteError": [[145, null]], "MeanGTRelativeSquaredError": [[146, null]], "MeanIntersectionOverUnion": [[151, null]], "MeanSquaredErrorInverse": [[147, null]], "MeanSquaredLogError": [[148, null]], "Metrics": [[0, "metrics"], [186, "metrics"]], "Mixup": [[186, "mixup"]], "MixupIO": [[186, "mixupio"]], "Model Initialization": [[10, "model-initialization"], [12, "model-initialization"]], "Models": [[0, "models"]], "Monocular Depth Estimation": [[0, "monocular-depth-estimation"]], "Monte Carlo Dropout for Semantic Segmentation on MUAD": [[6, null]], "Monte-Carlo Batch Normalization": [[186, "monte-carlo-batch-normalization"]], "Monte-Carlo Dropout": [[186, "monte-carlo-dropout"]], "More metrics": [[185, "more-metrics"]], "MutualInformation": [[137, null]], "MutualInformationCriterion": [[169, null]], "NYUv2": [[63, null]], "NormalConvNd": [[106, null]], "NormalInverseGammaConvNd": [[107, null]], "NormalInverseGammaLinear": [[108, null]], "NormalLinear": [[109, null]], "Not-MNIST": [[186, "not-mnist"]], "NotMNIST": [[74, null]], "Notes": [[23, "notes"]], "OOD Scores": [[0, "ood-scores"]], "Official Implementations": [[182, "official-implementations"]], "OnlineShoppers": [[81, null]], "OnlineShoppersDataModule": [[52, null]], "OpenImage-O": [[186, "openimage-o"]], "OpenImageO": [[75, null]], "Options": [[183, "options"]], "Other usage": [[185, "other-usage"]], "Others": [[0, "others"], [0, "id7"]], "Others & Cross-Categories": [[0, "others-cross-categories"]], "Out-of-Distribution Detection": [[0, "out-of-distribution-detection"]], "Out-of-distribution detection with TorchUncertainty": [[12, null]], "Packed ensembles Segmentation Tutorial using Muad Dataset": [[32, null]], "Packed-Ensembles": [[186, "packed-ensembles"]], "PackedConv2d": [[90, null]], "PackedLayerNorm": [[91, null]], "PackedLinear": [[92, null]], "PackedMultiheadAttention": [[93, null]], "PackedTransformerDecoderLayer": [[94, null]], "PackedTransformerEncoderLayer": [[95, null]], "PixelRegressionRoutine": [[179, null]], "Pixelwise Regression": [[0, "pixelwise-regression"]], "Post-Processing Methods": [[0, "post-processing-methods"], [186, "post-processing-methods"]], "Post-hoc Methods": [[20, null], [34, "post-hoc-methods"]], "Post-processing methods": [[37, "post-processing-methods"]], "PostProcessingCriterion": [[170, null]], "Procedure": [[185, "procedure"], [185, "id1"], [185, "id3"]], "Proper Scores": [[0, "proper-scores"]], "Quickstart": [[185, null]], "Reference": [[16, "reference"], [26, "reference"]], "References": [[3, "references"], [11, "references"], [12, "references"], [23, "references"], [184, "references"], [186, null]], "RegMixup": [[186, "regmixup"]], "Regression": [[0, "regression"], [0, "id2"], [0, "id5"], [0, "id9"], [0, "id13"]], "Regression with Uncertainty": [[24, null], [34, "regression-with-uncertainty"]], "RegressionRoutine": [[180, null]], "ResNet": [[186, "resnet"]], "ResNetBaseline": [[38, null]], "RiskAt80Cov": [[138, null]], "RiskAtxCov": [[139, null]], "Routines": [[0, "routines"]], "SILog": [[149, null]], "SVHN": [[186, "svhn"]], "SWA": [[159, null]], "SWAG": [[160, null]], "Scaling Methods": [[0, "scaling-methods"]], "SegFormerBaseline": [[44, null]], "Segmentation": [[0, "segmentation"], [0, "id3"], [0, "id6"], [0, "id10"], [0, "id14"], [29, null], [34, "segmentation"]], "Segmentation Tutorial using Muad Dataset": [[33, null]], "SegmentationBinaryAUROC": [[152, null]], "SegmentationBinaryAveragePrecision": [[153, null]], "SegmentationFPR95": [[154, null]], "SegmentationRoutine": [[181, null]], "Selective Classification": [[0, "selective-classification"], [19, "selective-classification"]], "SetSize": [[140, null]], "Short Background": [[184, "short-background"]], "SnapshotEnsemble": [[186, "snapshotensemble"]], "SpamBase": [[82, null]], "SpamBaseDataModule": [[53, null]], "Stochastic Gradient Hamiltonian Monte Carlo": [[186, "stochastic-gradient-hamiltonian-monte-carlo"]], "Stochastic Gradient Langevin Dynamics": [[186, "stochastic-gradient-langevin-dynamics"]], "Stochastic Weight Averaging": [[186, "stochastic-weight-averaging"]], "Stochastic Weight Averaging Gaussian": [[186, "stochastic-weight-averaging-gaussian"]], "StochasticModel": [[161, null]], "StudentTConvNd": [[110, null]], "StudentTLinear": [[111, null]], "Summary": [[22, "summary"]], "TUOODCriterion": [[171, null]], "Temperature, Vector, & Matrix scaling": [[186, "temperature-vector-matrix-scaling"]], "TemperatureScaler": [[176, null]], "Test the Training of the Model": [[12, "test-the-training-of-the-model"]], "Test-Time-Adaptation with ZERO": [[186, "test-time-adaptation-with-zero"]], "Textures": [[186, "textures"]], "The Overconfidence of Neural Networks": [[184, "the-overconfidence-of-neural-networks"]], "The scope of TorchUncertainty": [[37, "the-scope-of-torchuncertainty"]], "ThresholdAccuracy": [[150, null]], "TinyImageNet": [[76, null]], "TinyImageNetC": [[77, null]], "TinyImageNetDataModule": [[54, null]], "To Go Further & More Concepts of Uncertainty in ML": [[19, "to-go-further-more-concepts-of-uncertainty-in-ml"]], "Training a Bayesian LeNet using TorchUncertainty models and Lightning": [[3, "training-a-bayesian-lenet-using-torchuncertainty-models-and-lightning"]], "Training a Bayesian Neural Network in 20 seconds": [[3, null]], "Training a LeNet for Image Classification with TorchUncertainty": [[9, null]], "Training a LeNet with DEC using TorchUncertainty models": [[11, "training-a-lenet-with-dec-using-torchuncertainty-models"]], "Training a LeNet with MC Dropout using TorchUncertainty models and PyTorch Lightning": [[5, "training-a-lenet-with-mc-dropout-using-torchuncertainty-models-and-pytorch-lightning"]], "Training a LeNet with MCBN using TorchUncertainty models and PyTorch Lightning": [[4, "training-a-lenet-with-mcbn-using-torchuncertainty-models-and-pytorch-lightning"]], "Training a LeNet with Monte Carlo Batch Normalization": [[4, null]], "Training a LeNet with Monte-Carlo Dropout": [[5, null]], "Training a MLP with DER using TorchUncertainty models and PyTorch Lightning": [[26, "training-a-mlp-with-der-using-torchuncertainty-models-and-pytorch-lightning"]], "Training an MLP for Tabular Regression with TorchUncertainty": [[28, null]], "Training an image Packed-Ensemble classifier": [[13, "training-an-image-packed-ensemble-classifier"]], "Training the Model": [[10, "training-the-model"]], "Training with TorchUncertainty\u2019s Uncertainty-aware Routines": [[185, "training-with-torchuncertainty-s-uncertainty-aware-routines"]], "Training with the Routine": [[185, "training-with-the-routine"]], "Tutorials": [[34, null]], "UCI Tabular Classification": [[0, "uci-tabular-classification"], [0, "id12"]], "UCIRegression": [[83, null]], "UCIRegressionDataModule": [[55, null]], "Uncertainty Models": [[186, "uncertainty-models"]], "Using the Lightning CLI tool": [[185, "using-the-lightning-cli-tool"]], "Using the PyTorch-based layers": [[185, "using-the-pytorch-based-layers"]], "Using the PyTorch-based models": [[185, "using-the-pytorch-based-models"]], "VGG": [[186, "vgg"]], "VGGBaseline": [[39, null]], "VariationRatio": [[141, null]], "VariationRatioCriterion": [[172, null]], "Variational Inference Bayesian Neural Networks": [[186, "variational-inference-bayesian-neural-networks"]], "VectorScaler": [[177, null]], "Warping Mixup": [[186, "warping-mixup"]], "Welcome to Torch Uncertainty": [[182, null]], "Wide-ResNet": [[186, "wide-resnet"]], "WideResNetBaseline": [[40, null]], "Wrappers": [[0, "wrappers"]], "batch_ensemble": [[162, null]], "deep_ensembles": [[163, null]], "mc_dropout": [[164, null]]}, "docnames": ["api", "auto_tutorials/Bayesian_Methods/index", "auto_tutorials/Bayesian_Methods/sg_execution_times", "auto_tutorials/Bayesian_Methods/tutorial_bayesian", "auto_tutorials/Bayesian_Methods/tutorial_mc_batch_norm", "auto_tutorials/Bayesian_Methods/tutorial_mc_dropout", "auto_tutorials/Bayesian_Methods/tutorial_muad_mc_drop", "auto_tutorials/Classification/index", "auto_tutorials/Classification/sg_execution_times", "auto_tutorials/Classification/tutorial_classification", "auto_tutorials/Classification/tutorial_distribution_shift", "auto_tutorials/Classification/tutorial_evidential_classification", "auto_tutorials/Classification/tutorial_ood_detection", "auto_tutorials/Classification/tutorial_pe_cifar10", "auto_tutorials/Data_Augmentation/index", "auto_tutorials/Data_Augmentation/sg_execution_times", "auto_tutorials/Data_Augmentation/tutorial_corruption", "auto_tutorials/Ensemble_Methods/index", "auto_tutorials/Ensemble_Methods/sg_execution_times", "auto_tutorials/Ensemble_Methods/tutorial_from_de_to_pe", "auto_tutorials/Post_Hoc_Methods/index", "auto_tutorials/Post_Hoc_Methods/sg_execution_times", "auto_tutorials/Post_Hoc_Methods/tutorial_conformal", "auto_tutorials/Post_Hoc_Methods/tutorial_scaler", "auto_tutorials/Regression/index", "auto_tutorials/Regression/sg_execution_times", "auto_tutorials/Regression/tutorial_der_cubic", "auto_tutorials/Regression/tutorial_probabilistic_regression", "auto_tutorials/Regression/tutorial_regression", "auto_tutorials/Segmentation/index", "auto_tutorials/Segmentation/sg_execution_times", "auto_tutorials/Segmentation/tutorial_muad_deep_en", "auto_tutorials/Segmentation/tutorial_muad_packed", "auto_tutorials/Segmentation/tutorial_muad_seg", "auto_tutorials/index", "auto_tutorials/sg_execution_times", "cli_guide", "contributing", "generated/torch_uncertainty.baselines.classification.ResNetBaseline", "generated/torch_uncertainty.baselines.classification.VGGBaseline", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline", "generated/torch_uncertainty.baselines.depth.BTSBaseline", "generated/torch_uncertainty.baselines.regression.MLPBaseline", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline", "generated/torch_uncertainty.datamodules.BankMarketingDataModule", "generated/torch_uncertainty.datamodules.CIFAR100DataModule", "generated/torch_uncertainty.datamodules.CIFAR10DataModule", "generated/torch_uncertainty.datamodules.DOTA2GamesDataModule", "generated/torch_uncertainty.datamodules.HTRU2DataModule", "generated/torch_uncertainty.datamodules.ImageNetDataModule", "generated/torch_uncertainty.datamodules.MNISTDataModule", "generated/torch_uncertainty.datamodules.OnlineShoppersDataModule", "generated/torch_uncertainty.datamodules.SpamBaseDataModule", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule", "generated/torch_uncertainty.datamodules.UCIRegressionDataModule", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule", "generated/torch_uncertainty.datasets.Fractals", "generated/torch_uncertainty.datasets.FrostImages", "generated/torch_uncertainty.datasets.KITTIDepth", "generated/torch_uncertainty.datasets.MUAD", "generated/torch_uncertainty.datasets.NYUv2", "generated/torch_uncertainty.datasets.classification.CIFAR100C", "generated/torch_uncertainty.datasets.classification.CIFAR100N", "generated/torch_uncertainty.datasets.classification.CIFAR10C", "generated/torch_uncertainty.datasets.classification.CIFAR10H", "generated/torch_uncertainty.datasets.classification.CIFAR10N", "generated/torch_uncertainty.datasets.classification.ImageNetA", "generated/torch_uncertainty.datasets.classification.ImageNetC", "generated/torch_uncertainty.datasets.classification.ImageNetO", "generated/torch_uncertainty.datasets.classification.ImageNetR", "generated/torch_uncertainty.datasets.classification.MNISTC", "generated/torch_uncertainty.datasets.classification.NotMNIST", "generated/torch_uncertainty.datasets.classification.OpenImageO", "generated/torch_uncertainty.datasets.classification.TinyImageNet", "generated/torch_uncertainty.datasets.classification.TinyImageNetC", "generated/torch_uncertainty.datasets.classification.uci.BankMarketing", "generated/torch_uncertainty.datasets.classification.uci.DOTA2Games", "generated/torch_uncertainty.datasets.classification.uci.HTRU2", "generated/torch_uncertainty.datasets.classification.uci.OnlineShoppers", "generated/torch_uncertainty.datasets.classification.uci.SpamBase", "generated/torch_uncertainty.datasets.regression.UCIRegression", "generated/torch_uncertainty.datasets.segmentation.CamVid", "generated/torch_uncertainty.datasets.segmentation.Cityscapes", "generated/torch_uncertainty.layers.BatchConv2d", "generated/torch_uncertainty.layers.BatchLinear", "generated/torch_uncertainty.layers.MaskedConv2d", "generated/torch_uncertainty.layers.MaskedLinear", "generated/torch_uncertainty.layers.PackedConv2d", "generated/torch_uncertainty.layers.PackedLayerNorm", "generated/torch_uncertainty.layers.PackedLinear", "generated/torch_uncertainty.layers.PackedMultiheadAttention", "generated/torch_uncertainty.layers.PackedTransformerDecoderLayer", "generated/torch_uncertainty.layers.PackedTransformerEncoderLayer", "generated/torch_uncertainty.layers.bayesian.BayesConv1d", "generated/torch_uncertainty.layers.bayesian.BayesConv2d", "generated/torch_uncertainty.layers.bayesian.BayesConv3d", "generated/torch_uncertainty.layers.bayesian.BayesLinear", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear", "generated/torch_uncertainty.layers.distributions.CauchyConvNd", "generated/torch_uncertainty.layers.distributions.CauchyLinear", "generated/torch_uncertainty.layers.distributions.LaplaceConvNd", "generated/torch_uncertainty.layers.distributions.LaplaceLinear", "generated/torch_uncertainty.layers.distributions.NormalConvNd", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaConvNd", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaLinear", "generated/torch_uncertainty.layers.distributions.NormalLinear", "generated/torch_uncertainty.layers.distributions.StudentTConvNd", "generated/torch_uncertainty.layers.distributions.StudentTLinear", "generated/torch_uncertainty.losses.BCEWithLogitsLSLoss", "generated/torch_uncertainty.losses.BetaNLL", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss", "generated/torch_uncertainty.losses.ConflictualLoss", "generated/torch_uncertainty.losses.DECLoss", "generated/torch_uncertainty.losses.DERLoss", "generated/torch_uncertainty.losses.DistributionNLLLoss", "generated/torch_uncertainty.losses.ELBOLoss", "generated/torch_uncertainty.losses.FocalLoss", "generated/torch_uncertainty.losses.KLDiv", "generated/torch_uncertainty.metrics.AUSE", "generated/torch_uncertainty.metrics.classification.AUGRC", "generated/torch_uncertainty.metrics.classification.AURC", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError", "generated/torch_uncertainty.metrics.classification.BrierScore", "generated/torch_uncertainty.metrics.classification.CalibrationError", "generated/torch_uncertainty.metrics.classification.CategoricalNLL", "generated/torch_uncertainty.metrics.classification.CovAt5Risk", "generated/torch_uncertainty.metrics.classification.CovAtxRisk", "generated/torch_uncertainty.metrics.classification.CoverageRate", "generated/torch_uncertainty.metrics.classification.Disagreement", "generated/torch_uncertainty.metrics.classification.Entropy", "generated/torch_uncertainty.metrics.classification.FPR95", "generated/torch_uncertainty.metrics.classification.FPRx", "generated/torch_uncertainty.metrics.classification.GroupingLoss", "generated/torch_uncertainty.metrics.classification.MutualInformation", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov", "generated/torch_uncertainty.metrics.classification.RiskAtxCov", "generated/torch_uncertainty.metrics.classification.SetSize", "generated/torch_uncertainty.metrics.classification.VariationRatio", "generated/torch_uncertainty.metrics.regression.DistributionNLL", "generated/torch_uncertainty.metrics.regression.Log10", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError", "generated/torch_uncertainty.metrics.regression.SILog", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy", "generated/torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion", "generated/torch_uncertainty.metrics.segmentation.SegmentationBinaryAUROC", "generated/torch_uncertainty.metrics.segmentation.SegmentationBinaryAveragePrecision", "generated/torch_uncertainty.metrics.segmentation.SegmentationFPR95", "generated/torch_uncertainty.models.BatchEnsemble", "generated/torch_uncertainty.models.CheckpointCollector", "generated/torch_uncertainty.models.EMA", "generated/torch_uncertainty.models.MCDropout", "generated/torch_uncertainty.models.SWA", "generated/torch_uncertainty.models.SWAG", "generated/torch_uncertainty.models.StochasticModel", "generated/torch_uncertainty.models.batch_ensemble", "generated/torch_uncertainty.models.deep_ensembles", "generated/torch_uncertainty.models.mc_dropout", "generated/torch_uncertainty.ood_criteria.EnergyCriterion", "generated/torch_uncertainty.ood_criteria.EntropyCriterion", "generated/torch_uncertainty.ood_criteria.MaxLogitCriterion", "generated/torch_uncertainty.ood_criteria.MaxSoftmaxCriterion", "generated/torch_uncertainty.ood_criteria.MutualInformationCriterion", "generated/torch_uncertainty.ood_criteria.PostProcessingCriterion", "generated/torch_uncertainty.ood_criteria.TUOODCriterion", "generated/torch_uncertainty.ood_criteria.VariationRatioCriterion", "generated/torch_uncertainty.post_processing.LaplaceApprox", "generated/torch_uncertainty.post_processing.MCBatchNorm", "generated/torch_uncertainty.post_processing.MatrixScaler", "generated/torch_uncertainty.post_processing.TemperatureScaler", "generated/torch_uncertainty.post_processing.VectorScaler", "generated/torch_uncertainty.routines.ClassificationRoutine", "generated/torch_uncertainty.routines.PixelRegressionRoutine", "generated/torch_uncertainty.routines.RegressionRoutine", "generated/torch_uncertainty.routines.SegmentationRoutine", "index", "installation", "introduction_uncertainty", "quickstart", "references", "sg_execution_times"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_codeautolink": 1}, "filenames": ["api.rst", "auto_tutorials/Bayesian_Methods/index.rst", "auto_tutorials/Bayesian_Methods/sg_execution_times.rst", "auto_tutorials/Bayesian_Methods/tutorial_bayesian.rst", "auto_tutorials/Bayesian_Methods/tutorial_mc_batch_norm.rst", "auto_tutorials/Bayesian_Methods/tutorial_mc_dropout.rst", "auto_tutorials/Bayesian_Methods/tutorial_muad_mc_drop.rst", "auto_tutorials/Classification/index.rst", "auto_tutorials/Classification/sg_execution_times.rst", "auto_tutorials/Classification/tutorial_classification.rst", "auto_tutorials/Classification/tutorial_distribution_shift.rst", "auto_tutorials/Classification/tutorial_evidential_classification.rst", "auto_tutorials/Classification/tutorial_ood_detection.rst", "auto_tutorials/Classification/tutorial_pe_cifar10.rst", "auto_tutorials/Data_Augmentation/index.rst", "auto_tutorials/Data_Augmentation/sg_execution_times.rst", "auto_tutorials/Data_Augmentation/tutorial_corruption.rst", "auto_tutorials/Ensemble_Methods/index.rst", "auto_tutorials/Ensemble_Methods/sg_execution_times.rst", "auto_tutorials/Ensemble_Methods/tutorial_from_de_to_pe.rst", "auto_tutorials/Post_Hoc_Methods/index.rst", "auto_tutorials/Post_Hoc_Methods/sg_execution_times.rst", "auto_tutorials/Post_Hoc_Methods/tutorial_conformal.rst", "auto_tutorials/Post_Hoc_Methods/tutorial_scaler.rst", "auto_tutorials/Regression/index.rst", "auto_tutorials/Regression/sg_execution_times.rst", "auto_tutorials/Regression/tutorial_der_cubic.rst", "auto_tutorials/Regression/tutorial_probabilistic_regression.rst", "auto_tutorials/Regression/tutorial_regression.rst", "auto_tutorials/Segmentation/index.rst", "auto_tutorials/Segmentation/sg_execution_times.rst", "auto_tutorials/Segmentation/tutorial_muad_deep_en.rst", "auto_tutorials/Segmentation/tutorial_muad_packed.rst", "auto_tutorials/Segmentation/tutorial_muad_seg.rst", "auto_tutorials/index.rst", "auto_tutorials/sg_execution_times.rst", "cli_guide.rst", "contributing.rst", "generated/torch_uncertainty.baselines.classification.ResNetBaseline.rst", "generated/torch_uncertainty.baselines.classification.VGGBaseline.rst", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline.rst", "generated/torch_uncertainty.baselines.depth.BTSBaseline.rst", "generated/torch_uncertainty.baselines.regression.MLPBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline.rst", "generated/torch_uncertainty.datamodules.BankMarketingDataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR100DataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR10DataModule.rst", "generated/torch_uncertainty.datamodules.DOTA2GamesDataModule.rst", "generated/torch_uncertainty.datamodules.HTRU2DataModule.rst", "generated/torch_uncertainty.datamodules.ImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.MNISTDataModule.rst", "generated/torch_uncertainty.datamodules.OnlineShoppersDataModule.rst", "generated/torch_uncertainty.datamodules.SpamBaseDataModule.rst", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.UCIRegressionDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule.rst", "generated/torch_uncertainty.datasets.Fractals.rst", "generated/torch_uncertainty.datasets.FrostImages.rst", "generated/torch_uncertainty.datasets.KITTIDepth.rst", "generated/torch_uncertainty.datasets.MUAD.rst", "generated/torch_uncertainty.datasets.NYUv2.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100N.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10H.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10N.rst", "generated/torch_uncertainty.datasets.classification.ImageNetA.rst", "generated/torch_uncertainty.datasets.classification.ImageNetC.rst", "generated/torch_uncertainty.datasets.classification.ImageNetO.rst", "generated/torch_uncertainty.datasets.classification.ImageNetR.rst", "generated/torch_uncertainty.datasets.classification.MNISTC.rst", "generated/torch_uncertainty.datasets.classification.NotMNIST.rst", "generated/torch_uncertainty.datasets.classification.OpenImageO.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNet.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNetC.rst", "generated/torch_uncertainty.datasets.classification.uci.BankMarketing.rst", "generated/torch_uncertainty.datasets.classification.uci.DOTA2Games.rst", "generated/torch_uncertainty.datasets.classification.uci.HTRU2.rst", "generated/torch_uncertainty.datasets.classification.uci.OnlineShoppers.rst", "generated/torch_uncertainty.datasets.classification.uci.SpamBase.rst", "generated/torch_uncertainty.datasets.regression.UCIRegression.rst", "generated/torch_uncertainty.datasets.segmentation.CamVid.rst", "generated/torch_uncertainty.datasets.segmentation.Cityscapes.rst", "generated/torch_uncertainty.layers.BatchConv2d.rst", "generated/torch_uncertainty.layers.BatchLinear.rst", "generated/torch_uncertainty.layers.MaskedConv2d.rst", "generated/torch_uncertainty.layers.MaskedLinear.rst", "generated/torch_uncertainty.layers.PackedConv2d.rst", "generated/torch_uncertainty.layers.PackedLayerNorm.rst", "generated/torch_uncertainty.layers.PackedLinear.rst", "generated/torch_uncertainty.layers.PackedMultiheadAttention.rst", "generated/torch_uncertainty.layers.PackedTransformerDecoderLayer.rst", "generated/torch_uncertainty.layers.PackedTransformerEncoderLayer.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv1d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv2d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv3d.rst", "generated/torch_uncertainty.layers.bayesian.BayesLinear.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear.rst", "generated/torch_uncertainty.layers.distributions.CauchyConvNd.rst", "generated/torch_uncertainty.layers.distributions.CauchyLinear.rst", "generated/torch_uncertainty.layers.distributions.LaplaceConvNd.rst", "generated/torch_uncertainty.layers.distributions.LaplaceLinear.rst", "generated/torch_uncertainty.layers.distributions.NormalConvNd.rst", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaConvNd.rst", "generated/torch_uncertainty.layers.distributions.NormalInverseGammaLinear.rst", "generated/torch_uncertainty.layers.distributions.NormalLinear.rst", "generated/torch_uncertainty.layers.distributions.StudentTConvNd.rst", "generated/torch_uncertainty.layers.distributions.StudentTLinear.rst", "generated/torch_uncertainty.losses.BCEWithLogitsLSLoss.rst", "generated/torch_uncertainty.losses.BetaNLL.rst", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss.rst", "generated/torch_uncertainty.losses.ConflictualLoss.rst", "generated/torch_uncertainty.losses.DECLoss.rst", "generated/torch_uncertainty.losses.DERLoss.rst", "generated/torch_uncertainty.losses.DistributionNLLLoss.rst", "generated/torch_uncertainty.losses.ELBOLoss.rst", "generated/torch_uncertainty.losses.FocalLoss.rst", "generated/torch_uncertainty.losses.KLDiv.rst", "generated/torch_uncertainty.metrics.AUSE.rst", "generated/torch_uncertainty.metrics.classification.AUGRC.rst", "generated/torch_uncertainty.metrics.classification.AURC.rst", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError.rst", "generated/torch_uncertainty.metrics.classification.BrierScore.rst", "generated/torch_uncertainty.metrics.classification.CalibrationError.rst", "generated/torch_uncertainty.metrics.classification.CategoricalNLL.rst", "generated/torch_uncertainty.metrics.classification.CovAt5Risk.rst", "generated/torch_uncertainty.metrics.classification.CovAtxRisk.rst", "generated/torch_uncertainty.metrics.classification.CoverageRate.rst", "generated/torch_uncertainty.metrics.classification.Disagreement.rst", "generated/torch_uncertainty.metrics.classification.Entropy.rst", "generated/torch_uncertainty.metrics.classification.FPR95.rst", "generated/torch_uncertainty.metrics.classification.FPRx.rst", "generated/torch_uncertainty.metrics.classification.GroupingLoss.rst", "generated/torch_uncertainty.metrics.classification.MutualInformation.rst", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov.rst", "generated/torch_uncertainty.metrics.classification.RiskAtxCov.rst", "generated/torch_uncertainty.metrics.classification.SetSize.rst", "generated/torch_uncertainty.metrics.classification.VariationRatio.rst", "generated/torch_uncertainty.metrics.regression.DistributionNLL.rst", "generated/torch_uncertainty.metrics.regression.Log10.rst", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError.rst", "generated/torch_uncertainty.metrics.regression.SILog.rst", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy.rst", "generated/torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion.rst", "generated/torch_uncertainty.metrics.segmentation.SegmentationBinaryAUROC.rst", "generated/torch_uncertainty.metrics.segmentation.SegmentationBinaryAveragePrecision.rst", "generated/torch_uncertainty.metrics.segmentation.SegmentationFPR95.rst", "generated/torch_uncertainty.models.BatchEnsemble.rst", "generated/torch_uncertainty.models.CheckpointCollector.rst", "generated/torch_uncertainty.models.EMA.rst", "generated/torch_uncertainty.models.MCDropout.rst", "generated/torch_uncertainty.models.SWA.rst", "generated/torch_uncertainty.models.SWAG.rst", "generated/torch_uncertainty.models.StochasticModel.rst", "generated/torch_uncertainty.models.batch_ensemble.rst", "generated/torch_uncertainty.models.deep_ensembles.rst", "generated/torch_uncertainty.models.mc_dropout.rst", "generated/torch_uncertainty.ood_criteria.EnergyCriterion.rst", "generated/torch_uncertainty.ood_criteria.EntropyCriterion.rst", "generated/torch_uncertainty.ood_criteria.MaxLogitCriterion.rst", "generated/torch_uncertainty.ood_criteria.MaxSoftmaxCriterion.rst", "generated/torch_uncertainty.ood_criteria.MutualInformationCriterion.rst", "generated/torch_uncertainty.ood_criteria.PostProcessingCriterion.rst", "generated/torch_uncertainty.ood_criteria.TUOODCriterion.rst", "generated/torch_uncertainty.ood_criteria.VariationRatioCriterion.rst", "generated/torch_uncertainty.post_processing.LaplaceApprox.rst", "generated/torch_uncertainty.post_processing.MCBatchNorm.rst", "generated/torch_uncertainty.post_processing.MatrixScaler.rst", "generated/torch_uncertainty.post_processing.TemperatureScaler.rst", "generated/torch_uncertainty.post_processing.VectorScaler.rst", "generated/torch_uncertainty.routines.ClassificationRoutine.rst", "generated/torch_uncertainty.routines.PixelRegressionRoutine.rst", "generated/torch_uncertainty.routines.RegressionRoutine.rst", "generated/torch_uncertainty.routines.SegmentationRoutine.rst", "index.rst", "installation.rst", "introduction_uncertainty.rst", "quickstart.rst", "references.rst", "sg_execution_times.rst"], "indexentries": {"adaptivecalibrationerror (class in torch_uncertainty.metrics.classification)": [[125, "torch_uncertainty.metrics.classification.AdaptiveCalibrationError", false]], "augrc (class in torch_uncertainty.metrics.classification)": [[123, "torch_uncertainty.metrics.classification.AUGRC", false]], "aurc (class in torch_uncertainty.metrics.classification)": [[124, "torch_uncertainty.metrics.classification.AURC", false]], "ause (class in torch_uncertainty.metrics)": [[122, "torch_uncertainty.metrics.AUSE", false]], "bankmarketing (class in torch_uncertainty.datasets.classification.uci)": [[78, "torch_uncertainty.datasets.classification.uci.BankMarketing", false]], "bankmarketingdatamodule (class in torch_uncertainty.datamodules)": [[45, "torch_uncertainty.datamodules.BankMarketingDataModule", false]], "batch_ensemble() (in module torch_uncertainty.models)": [[162, "torch_uncertainty.models.batch_ensemble", false]], "batchconv2d (class in torch_uncertainty.layers)": [[86, "torch_uncertainty.layers.BatchConv2d", false]], "batchensemble (class in torch_uncertainty.models)": [[155, "torch_uncertainty.models.BatchEnsemble", false]], "batchlinear (class in torch_uncertainty.layers)": [[87, "torch_uncertainty.layers.BatchLinear", false]], "bayesconv1d (class in torch_uncertainty.layers.bayesian)": [[96, "torch_uncertainty.layers.bayesian.BayesConv1d", false]], "bayesconv2d (class in torch_uncertainty.layers.bayesian)": [[97, "torch_uncertainty.layers.bayesian.BayesConv2d", false]], "bayesconv3d (class in torch_uncertainty.layers.bayesian)": [[98, "torch_uncertainty.layers.bayesian.BayesConv3d", false]], "bayeslinear (class in torch_uncertainty.layers.bayesian)": [[99, "torch_uncertainty.layers.bayesian.BayesLinear", false]], "bcewithlogitslsloss (class in torch_uncertainty.losses)": [[112, "torch_uncertainty.losses.BCEWithLogitsLSLoss", false]], "betanll (class in torch_uncertainty.losses)": [[113, "torch_uncertainty.losses.BetaNLL", false]], "bias (torch_uncertainty.layers.packedconv2d property)": [[90, "torch_uncertainty.layers.PackedConv2d.bias", false]], "bn_update() (torch_uncertainty.models.swag method)": [[160, "torch_uncertainty.models.SWAG.bn_update", false]], "brierscore (class in torch_uncertainty.metrics.classification)": [[126, "torch_uncertainty.metrics.classification.BrierScore", false]], "btsbaseline (class in torch_uncertainty.baselines.depth)": [[41, "torch_uncertainty.baselines.depth.BTSBaseline", false]], "calibrationerror (class in torch_uncertainty.metrics.classification)": [[127, "torch_uncertainty.metrics.classification.CalibrationError", false]], "camvid (class in torch_uncertainty.datasets.segmentation)": [[84, "torch_uncertainty.datasets.segmentation.CamVid", false]], "camviddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[56, "torch_uncertainty.datamodules.segmentation.CamVidDataModule", false]], "categoricalnll (class in torch_uncertainty.metrics.classification)": [[128, "torch_uncertainty.metrics.classification.CategoricalNLL", false]], "cauchyconvnd (class in torch_uncertainty.layers.distributions)": [[102, "torch_uncertainty.layers.distributions.CauchyConvNd", false]], "cauchylinear (class in torch_uncertainty.layers.distributions)": [[103, "torch_uncertainty.layers.distributions.CauchyLinear", false]], "checkpointcollector (class in torch_uncertainty.models)": [[156, "torch_uncertainty.models.CheckpointCollector", false]], "cifar100c (class in torch_uncertainty.datasets.classification)": [[64, "torch_uncertainty.datasets.classification.CIFAR100C", false]], "cifar100datamodule (class in torch_uncertainty.datamodules)": [[46, "torch_uncertainty.datamodules.CIFAR100DataModule", false]], "cifar100n (class in torch_uncertainty.datasets.classification)": [[65, "torch_uncertainty.datasets.classification.CIFAR100N", false]], "cifar10c (class in torch_uncertainty.datasets.classification)": [[66, "torch_uncertainty.datasets.classification.CIFAR10C", false]], "cifar10datamodule (class in torch_uncertainty.datamodules)": [[47, "torch_uncertainty.datamodules.CIFAR10DataModule", false]], "cifar10h (class in torch_uncertainty.datasets.classification)": [[67, "torch_uncertainty.datasets.classification.CIFAR10H", false]], "cifar10n (class in torch_uncertainty.datasets.classification)": [[68, "torch_uncertainty.datasets.classification.CIFAR10N", false]], "cityscapes (class in torch_uncertainty.datasets.segmentation)": [[85, "torch_uncertainty.datasets.segmentation.Cityscapes", false]], "cityscapesdatamodule (class in torch_uncertainty.datamodules.segmentation)": [[57, "torch_uncertainty.datamodules.segmentation.CityscapesDataModule", false]], "classificationroutine (class in torch_uncertainty.routines)": [[178, "torch_uncertainty.routines.ClassificationRoutine", false]], "color_palette (torch_uncertainty.datasets.segmentation.camvid property)": [[84, "torch_uncertainty.datasets.segmentation.CamVid.color_palette", false]], "compute() (torch_uncertainty.metrics.ause method)": [[122, "torch_uncertainty.metrics.AUSE.compute", false]], "compute() (torch_uncertainty.metrics.classification.augrc method)": [[123, "torch_uncertainty.metrics.classification.AUGRC.compute", false]], "compute() (torch_uncertainty.metrics.classification.aurc method)": [[124, "torch_uncertainty.metrics.classification.AURC.compute", false]], "compute() (torch_uncertainty.metrics.classification.brierscore method)": [[126, "torch_uncertainty.metrics.classification.BrierScore.compute", false]], "compute() (torch_uncertainty.metrics.classification.categoricalnll method)": [[128, "torch_uncertainty.metrics.classification.CategoricalNLL.compute", false]], "compute() (torch_uncertainty.metrics.classification.covatxrisk method)": [[130, "torch_uncertainty.metrics.classification.CovAtxRisk.compute", false]], "compute() (torch_uncertainty.metrics.classification.coveragerate method)": [[131, "torch_uncertainty.metrics.classification.CoverageRate.compute", false]], "compute() (torch_uncertainty.metrics.classification.disagreement method)": [[132, "torch_uncertainty.metrics.classification.Disagreement.compute", false]], "compute() (torch_uncertainty.metrics.classification.entropy method)": [[133, "torch_uncertainty.metrics.classification.Entropy.compute", false]], "compute() (torch_uncertainty.metrics.classification.fprx method)": [[135, "torch_uncertainty.metrics.classification.FPRx.compute", false]], "compute() (torch_uncertainty.metrics.classification.groupingloss method)": [[136, "torch_uncertainty.metrics.classification.GroupingLoss.compute", false]], "compute() (torch_uncertainty.metrics.classification.mutualinformation method)": [[137, "torch_uncertainty.metrics.classification.MutualInformation.compute", false]], "compute() (torch_uncertainty.metrics.classification.riskatxcov method)": [[139, "torch_uncertainty.metrics.classification.RiskAtxCov.compute", false]], "compute() (torch_uncertainty.metrics.classification.setsize method)": [[140, "torch_uncertainty.metrics.classification.SetSize.compute", false]], "compute() (torch_uncertainty.metrics.classification.variationratio method)": [[141, "torch_uncertainty.metrics.classification.VariationRatio.compute", false]], "compute() (torch_uncertainty.metrics.regression.distributionnll method)": [[142, "torch_uncertainty.metrics.regression.DistributionNLL.compute", false]], "compute() (torch_uncertainty.metrics.regression.silog method)": [[149, "torch_uncertainty.metrics.regression.SILog.compute", false]], "compute() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[150, "torch_uncertainty.metrics.regression.ThresholdAccuracy.compute", false]], "compute() (torch_uncertainty.metrics.segmentation.meanintersectionoverunion method)": [[151, "torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion.compute", false]], "confidencepenaltyloss (class in torch_uncertainty.losses)": [[114, "torch_uncertainty.losses.ConfidencePenaltyLoss", false]], "conflictualloss (class in torch_uncertainty.losses)": [[115, "torch_uncertainty.losses.ConflictualLoss", false]], "covat5risk (class in torch_uncertainty.metrics.classification)": [[129, "torch_uncertainty.metrics.classification.CovAt5Risk", false]], "covatxrisk (class in torch_uncertainty.metrics.classification)": [[130, "torch_uncertainty.metrics.classification.CovAtxRisk", false]], "coveragerate (class in torch_uncertainty.metrics.classification)": [[131, "torch_uncertainty.metrics.classification.CoverageRate", false]], "decloss (class in torch_uncertainty.losses)": [[116, "torch_uncertainty.losses.DECLoss", false]], "decode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[84, "torch_uncertainty.datasets.segmentation.CamVid.decode_target", false]], "decode_target() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[85, "torch_uncertainty.datasets.segmentation.Cityscapes.decode_target", false]], "deep_ensembles() (in module torch_uncertainty.models)": [[163, "torch_uncertainty.models.deep_ensembles", false]], "deeplabbaseline (class in torch_uncertainty.baselines.segmentation)": [[43, "torch_uncertainty.baselines.segmentation.DeepLabBaseline", false]], "derloss (class in torch_uncertainty.losses)": [[117, "torch_uncertainty.losses.DERLoss", false]], "disagreement (class in torch_uncertainty.metrics.classification)": [[132, "torch_uncertainty.metrics.classification.Disagreement", false]], "distributionnll (class in torch_uncertainty.metrics.regression)": [[142, "torch_uncertainty.metrics.regression.DistributionNLL", false]], "distributionnllloss (class in torch_uncertainty.losses)": [[118, "torch_uncertainty.losses.DistributionNLLLoss", false]], "dota2games (class in torch_uncertainty.datasets.classification.uci)": [[79, "torch_uncertainty.datasets.classification.uci.DOTA2Games", false]], "dota2gamesdatamodule (class in torch_uncertainty.datamodules)": [[48, "torch_uncertainty.datamodules.DOTA2GamesDataModule", false]], "download() (torch_uncertainty.datasets.classification.cifar10c method)": [[66, "torch_uncertainty.datasets.classification.CIFAR10C.download", false]], "download() (torch_uncertainty.datasets.classification.mnistc method)": [[73, "torch_uncertainty.datasets.classification.MNISTC.download", false]], "download() (torch_uncertainty.datasets.classification.tinyimagenetc method)": [[77, "torch_uncertainty.datasets.classification.TinyImageNetC.download", false]], "download() (torch_uncertainty.datasets.classification.uci.bankmarketing method)": [[78, "torch_uncertainty.datasets.classification.uci.BankMarketing.download", false]], "download() (torch_uncertainty.datasets.classification.uci.dota2games method)": [[79, "torch_uncertainty.datasets.classification.uci.DOTA2Games.download", false]], "download() (torch_uncertainty.datasets.regression.uciregression method)": [[83, "torch_uncertainty.datasets.regression.UCIRegression.download", false]], "download() (torch_uncertainty.datasets.segmentation.camvid method)": [[84, "torch_uncertainty.datasets.segmentation.CamVid.download", false]], "download_h() (torch_uncertainty.datasets.classification.cifar10h method)": [[67, "torch_uncertainty.datasets.classification.CIFAR10H.download_h", false]], "elboloss (class in torch_uncertainty.losses)": [[119, "torch_uncertainty.losses.ELBOLoss", false]], "ema (class in torch_uncertainty.models)": [[157, "torch_uncertainty.models.EMA", false]], "encode_target() (torch_uncertainty.datasets.muad method)": [[62, "torch_uncertainty.datasets.MUAD.encode_target", false]], "encode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[84, "torch_uncertainty.datasets.segmentation.CamVid.encode_target", false]], "encode_target() (torch_uncertainty.datasets.segmentation.cityscapes class method)": [[85, "torch_uncertainty.datasets.segmentation.Cityscapes.encode_target", false]], "energycriterion (class in torch_uncertainty.ood_criteria)": [[165, "torch_uncertainty.ood_criteria.EnergyCriterion", false]], "entropy (class in torch_uncertainty.metrics.classification)": [[133, "torch_uncertainty.metrics.classification.Entropy", false]], "entropycriterion (class in torch_uncertainty.ood_criteria)": [[166, "torch_uncertainty.ood_criteria.EntropyCriterion", false]], "eval_forward() (torch_uncertainty.models.checkpointcollector method)": [[156, "torch_uncertainty.models.CheckpointCollector.eval_forward", false]], "eval_forward() (torch_uncertainty.models.swag method)": [[160, "torch_uncertainty.models.SWAG.eval_forward", false]], "evaluation_forward() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.evaluation_forward", false]], "evaluation_forward() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.evaluation_forward", false]], "fit() (torch_uncertainty.post_processing.matrixscaler method)": [[175, "torch_uncertainty.post_processing.MatrixScaler.fit", false]], "fit() (torch_uncertainty.post_processing.mcbatchnorm method)": [[174, "torch_uncertainty.post_processing.MCBatchNorm.fit", false]], "fit() (torch_uncertainty.post_processing.temperaturescaler method)": [[176, "torch_uncertainty.post_processing.TemperatureScaler.fit", false]], "fit() (torch_uncertainty.post_processing.vectorscaler method)": [[177, "torch_uncertainty.post_processing.VectorScaler.fit", false]], "focalloss (class in torch_uncertainty.losses)": [[120, "torch_uncertainty.losses.FocalLoss", false]], "forward() (torch_uncertainty.layers.packedmultiheadattention method)": [[93, "torch_uncertainty.layers.PackedMultiheadAttention.forward", false]], "forward() (torch_uncertainty.layers.packedtransformerdecoderlayer method)": [[94, "torch_uncertainty.layers.PackedTransformerDecoderLayer.forward", false]], "forward() (torch_uncertainty.layers.packedtransformerencoderlayer method)": [[95, "torch_uncertainty.layers.PackedTransformerEncoderLayer.forward", false]], "forward() (torch_uncertainty.losses.confidencepenaltyloss method)": [[114, "torch_uncertainty.losses.ConfidencePenaltyLoss.forward", false]], "forward() (torch_uncertainty.losses.conflictualloss method)": [[115, "torch_uncertainty.losses.ConflictualLoss.forward", false]], "forward() (torch_uncertainty.losses.distributionnllloss method)": [[118, "torch_uncertainty.losses.DistributionNLLLoss.forward", false]], "forward() (torch_uncertainty.losses.elboloss method)": [[119, "torch_uncertainty.losses.ELBOLoss.forward", false]], "forward() (torch_uncertainty.models.batchensemble method)": [[155, "torch_uncertainty.models.BatchEnsemble.forward", false]], "forward() (torch_uncertainty.models.checkpointcollector method)": [[156, "torch_uncertainty.models.CheckpointCollector.forward", false]], "forward() (torch_uncertainty.models.mcdropout method)": [[158, "torch_uncertainty.models.MCDropout.forward", false]], "forward() (torch_uncertainty.ood_criteria.energycriterion method)": [[165, "torch_uncertainty.ood_criteria.EnergyCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.entropycriterion method)": [[166, "torch_uncertainty.ood_criteria.EntropyCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.maxlogitcriterion method)": [[167, "torch_uncertainty.ood_criteria.MaxLogitCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.maxsoftmaxcriterion method)": [[168, "torch_uncertainty.ood_criteria.MaxSoftmaxCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.mutualinformationcriterion method)": [[169, "torch_uncertainty.ood_criteria.MutualInformationCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.postprocessingcriterion method)": [[170, "torch_uncertainty.ood_criteria.PostProcessingCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.tuoodcriterion method)": [[171, "torch_uncertainty.ood_criteria.TUOODCriterion.forward", false]], "forward() (torch_uncertainty.ood_criteria.variationratiocriterion method)": [[172, "torch_uncertainty.ood_criteria.VariationRatioCriterion.forward", false]], "forward() (torch_uncertainty.routines.classificationroutine method)": [[178, "torch_uncertainty.routines.ClassificationRoutine.forward", false]], "forward() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.forward", false]], "forward() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.forward", false]], "forward() (torch_uncertainty.routines.segmentationroutine method)": [[181, "torch_uncertainty.routines.SegmentationRoutine.forward", false]], "fpr95 (class in torch_uncertainty.metrics.classification)": [[134, "torch_uncertainty.metrics.classification.FPR95", false]], "fprx (class in torch_uncertainty.metrics.classification)": [[135, "torch_uncertainty.metrics.classification.FPRx", false]], "fractals (class in torch_uncertainty.datasets)": [[59, "torch_uncertainty.datasets.Fractals", false]], "freeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[99, "torch_uncertainty.layers.bayesian.BayesLinear.freeze", false]], "from_conv2d() (torch_uncertainty.layers.batchconv2d class method)": [[86, "torch_uncertainty.layers.BatchConv2d.from_conv2d", false]], "from_linear() (torch_uncertainty.layers.batchlinear class method)": [[87, "torch_uncertainty.layers.BatchLinear.from_linear", false]], "frostimages (class in torch_uncertainty.datasets)": [[60, "torch_uncertainty.datasets.FrostImages", false]], "groupingloss (class in torch_uncertainty.metrics.classification)": [[136, "torch_uncertainty.metrics.classification.GroupingLoss", false]], "htru2 (class in torch_uncertainty.datasets.classification.uci)": [[80, "torch_uncertainty.datasets.classification.uci.HTRU2", false]], "htru2datamodule (class in torch_uncertainty.datamodules)": [[49, "torch_uncertainty.datamodules.HTRU2DataModule", false]], "imageneta (class in torch_uncertainty.datasets.classification)": [[69, "torch_uncertainty.datasets.classification.ImageNetA", false]], "imagenetc (class in torch_uncertainty.datasets.classification)": [[70, "torch_uncertainty.datasets.classification.ImageNetC", false]], "imagenetdatamodule (class in torch_uncertainty.datamodules)": [[50, "torch_uncertainty.datamodules.ImageNetDataModule", false]], "imageneto (class in torch_uncertainty.datasets.classification)": [[71, "torch_uncertainty.datasets.classification.ImageNetO", false]], "imagenetr (class in torch_uncertainty.datasets.classification)": [[72, "torch_uncertainty.datasets.classification.ImageNetR", false]], "initialize_stats() (torch_uncertainty.models.swag method)": [[160, "torch_uncertainty.models.SWAG.initialize_stats", false]], "kittidepth (class in torch_uncertainty.datasets)": [[61, "torch_uncertainty.datasets.KITTIDepth", false]], "kldiv (class in torch_uncertainty.losses)": [[121, "torch_uncertainty.losses.KLDiv", false]], "laplaceapprox (class in torch_uncertainty.post_processing)": [[173, "torch_uncertainty.post_processing.LaplaceApprox", false]], "laplaceconvnd (class in torch_uncertainty.layers.distributions)": [[104, "torch_uncertainty.layers.distributions.LaplaceConvNd", false]], "laplacelinear (class in torch_uncertainty.layers.distributions)": [[105, "torch_uncertainty.layers.distributions.LaplaceLinear", false]], "log10 (class in torch_uncertainty.metrics.regression)": [[143, "torch_uncertainty.metrics.regression.Log10", false]], "log_segmentation_plots() (torch_uncertainty.routines.segmentationroutine method)": [[181, "torch_uncertainty.routines.SegmentationRoutine.log_segmentation_plots", false]], "lpbnnconv2d (class in torch_uncertainty.layers.bayesian)": [[100, "torch_uncertainty.layers.bayesian.LPBNNConv2d", false]], "lpbnnlinear (class in torch_uncertainty.layers.bayesian)": [[101, "torch_uncertainty.layers.bayesian.LPBNNLinear", false]], "make_dataset() (torch_uncertainty.datasets.classification.cifar10c method)": [[66, "torch_uncertainty.datasets.classification.CIFAR10C.make_dataset", false]], "make_dataset() (torch_uncertainty.datasets.classification.mnistc method)": [[73, "torch_uncertainty.datasets.classification.MNISTC.make_dataset", false]], "maskedconv2d (class in torch_uncertainty.layers)": [[88, "torch_uncertainty.layers.MaskedConv2d", false]], "maskedlinear (class in torch_uncertainty.layers)": [[89, "torch_uncertainty.layers.MaskedLinear", false]], "matrixscaler (class in torch_uncertainty.post_processing)": [[175, "torch_uncertainty.post_processing.MatrixScaler", false]], "maxlogitcriterion (class in torch_uncertainty.ood_criteria)": [[167, "torch_uncertainty.ood_criteria.MaxLogitCriterion", false]], "maxsoftmaxcriterion (class in torch_uncertainty.ood_criteria)": [[168, "torch_uncertainty.ood_criteria.MaxSoftmaxCriterion", false]], "mc_dropout() (in module torch_uncertainty.models)": [[164, "torch_uncertainty.models.mc_dropout", false]], "mcbatchnorm (class in torch_uncertainty.post_processing)": [[174, "torch_uncertainty.post_processing.MCBatchNorm", false]], "mcdropout (class in torch_uncertainty.models)": [[158, "torch_uncertainty.models.MCDropout", false]], "meanabsoluteerrorinverse (class in torch_uncertainty.metrics.regression)": [[144, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse", false]], "meangtrelativeabsoluteerror (class in torch_uncertainty.metrics.regression)": [[145, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError", false]], "meangtrelativesquarederror (class in torch_uncertainty.metrics.regression)": [[146, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError", false]], "meanintersectionoverunion (class in torch_uncertainty.metrics.segmentation)": [[151, "torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion", false]], "meansquarederrorinverse (class in torch_uncertainty.metrics.regression)": [[147, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse", false]], "meansquaredlogerror (class in torch_uncertainty.metrics.regression)": [[148, "torch_uncertainty.metrics.regression.MeanSquaredLogError", false]], "mlpbaseline (class in torch_uncertainty.baselines.regression)": [[42, "torch_uncertainty.baselines.regression.MLPBaseline", false]], "mnistc (class in torch_uncertainty.datasets.classification)": [[73, "torch_uncertainty.datasets.classification.MNISTC", false]], "mnistdatamodule (class in torch_uncertainty.datamodules)": [[51, "torch_uncertainty.datamodules.MNISTDataModule", false]], "muad (class in torch_uncertainty.datasets)": [[62, "torch_uncertainty.datasets.MUAD", false]], "muaddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[58, "torch_uncertainty.datamodules.segmentation.MUADDataModule", false]], "mutualinformation (class in torch_uncertainty.metrics.classification)": [[137, "torch_uncertainty.metrics.classification.MutualInformation", false]], "mutualinformationcriterion (class in torch_uncertainty.ood_criteria)": [[169, "torch_uncertainty.ood_criteria.MutualInformationCriterion", false]], "normalconvnd (class in torch_uncertainty.layers.distributions)": [[106, "torch_uncertainty.layers.distributions.NormalConvNd", false]], "normalinversegammaconvnd (class in torch_uncertainty.layers.distributions)": [[107, "torch_uncertainty.layers.distributions.NormalInverseGammaConvNd", false]], "normalinversegammalinear (class in torch_uncertainty.layers.distributions)": [[108, "torch_uncertainty.layers.distributions.NormalInverseGammaLinear", false]], "normallinear (class in torch_uncertainty.layers.distributions)": [[109, "torch_uncertainty.layers.distributions.NormalLinear", false]], "notmnist (class in torch_uncertainty.datasets.classification)": [[74, "torch_uncertainty.datasets.classification.NotMNIST", false]], "nyuv2 (class in torch_uncertainty.datasets)": [[63, "torch_uncertainty.datasets.NYUv2", false]], "on_test_epoch_end() (torch_uncertainty.routines.classificationroutine method)": [[178, "torch_uncertainty.routines.ClassificationRoutine.on_test_epoch_end", false]], "on_test_epoch_end() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.on_test_epoch_end", false]], "on_test_epoch_end() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.on_test_epoch_end", false]], "on_test_epoch_end() (torch_uncertainty.routines.segmentationroutine method)": [[181, "torch_uncertainty.routines.SegmentationRoutine.on_test_epoch_end", false]], "on_test_start() (torch_uncertainty.routines.classificationroutine method)": [[178, "torch_uncertainty.routines.ClassificationRoutine.on_test_start", false]], "on_test_start() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.on_test_start", false]], "on_test_start() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.on_test_start", false]], "on_train_start() (torch_uncertainty.routines.classificationroutine method)": [[178, "torch_uncertainty.routines.ClassificationRoutine.on_train_start", false]], "on_train_start() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.on_train_start", false]], "on_train_start() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.on_train_start", false]], "on_validation_epoch_end() (torch_uncertainty.routines.classificationroutine method)": [[178, "torch_uncertainty.routines.ClassificationRoutine.on_validation_epoch_end", false]], "on_validation_epoch_end() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.on_validation_epoch_end", false]], "on_validation_epoch_end() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.on_validation_epoch_end", false]], "on_validation_epoch_end() (torch_uncertainty.routines.segmentationroutine method)": [[181, "torch_uncertainty.routines.SegmentationRoutine.on_validation_epoch_end", false]], "on_validation_start() (torch_uncertainty.routines.classificationroutine method)": [[178, "torch_uncertainty.routines.ClassificationRoutine.on_validation_start", false]], "on_validation_start() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.on_validation_start", false]], "on_validation_start() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.on_validation_start", false]], "onlineshoppers (class in torch_uncertainty.datasets.classification.uci)": [[81, "torch_uncertainty.datasets.classification.uci.OnlineShoppers", false]], "onlineshoppersdatamodule (class in torch_uncertainty.datamodules)": [[52, "torch_uncertainty.datamodules.OnlineShoppersDataModule", false]], "openimageo (class in torch_uncertainty.datasets.classification)": [[75, "torch_uncertainty.datasets.classification.OpenImageO", false]], "packedconv2d (class in torch_uncertainty.layers)": [[90, "torch_uncertainty.layers.PackedConv2d", false]], "packedlayernorm (class in torch_uncertainty.layers)": [[91, "torch_uncertainty.layers.PackedLayerNorm", false]], "packedlinear (class in torch_uncertainty.layers)": [[92, "torch_uncertainty.layers.PackedLinear", false]], "packedmultiheadattention (class in torch_uncertainty.layers)": [[93, "torch_uncertainty.layers.PackedMultiheadAttention", false]], "packedtransformerdecoderlayer (class in torch_uncertainty.layers)": [[94, "torch_uncertainty.layers.PackedTransformerDecoderLayer", false]], "packedtransformerencoderlayer (class in torch_uncertainty.layers)": [[95, "torch_uncertainty.layers.PackedTransformerEncoderLayer", false]], "partial_compute() (torch_uncertainty.metrics.classification.aurc method)": [[124, "torch_uncertainty.metrics.classification.AURC.partial_compute", false]], "pixelregressionroutine (class in torch_uncertainty.routines)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine", false]], "plot() (torch_uncertainty.metrics.ause method)": [[122, "torch_uncertainty.metrics.AUSE.plot", false]], "plot() (torch_uncertainty.metrics.classification.augrc method)": [[123, "torch_uncertainty.metrics.classification.AUGRC.plot", false]], "plot() (torch_uncertainty.metrics.classification.aurc method)": [[124, "torch_uncertainty.metrics.classification.AURC.plot", false]], "plot_sample() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[85, "torch_uncertainty.datasets.segmentation.Cityscapes.plot_sample", false]], "postprocessingcriterion (class in torch_uncertainty.ood_criteria)": [[170, "torch_uncertainty.ood_criteria.PostProcessingCriterion", false]], "prepare_data() (torch_uncertainty.datamodules.mnistdatamodule method)": [[51, "torch_uncertainty.datamodules.MNISTDataModule.prepare_data", false]], "prepare_data() (torch_uncertainty.datamodules.uciregressiondatamodule method)": [[55, "torch_uncertainty.datamodules.UCIRegressionDataModule.prepare_data", false]], "raise_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[174, "torch_uncertainty.post_processing.MCBatchNorm.raise_counters", false]], "regressionroutine (class in torch_uncertainty.routines)": [[180, "torch_uncertainty.routines.RegressionRoutine", false]], "replace_layers() (torch_uncertainty.post_processing.mcbatchnorm method)": [[174, "torch_uncertainty.post_processing.MCBatchNorm.replace_layers", false]], "reset_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[174, "torch_uncertainty.post_processing.MCBatchNorm.reset_counters", false]], "resnetbaseline (class in torch_uncertainty.baselines.classification)": [[38, "torch_uncertainty.baselines.classification.ResNetBaseline", false]], "riskat80cov (class in torch_uncertainty.metrics.classification)": [[138, "torch_uncertainty.metrics.classification.RiskAt80Cov", false]], "riskatxcov (class in torch_uncertainty.metrics.classification)": [[139, "torch_uncertainty.metrics.classification.RiskAtxCov", false]], "sample() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[99, "torch_uncertainty.layers.bayesian.BayesLinear.sample", false]], "sample() (torch_uncertainty.models.swag method)": [[160, "torch_uncertainty.models.SWAG.sample", false]], "segformerbaseline (class in torch_uncertainty.baselines.segmentation)": [[44, "torch_uncertainty.baselines.segmentation.SegFormerBaseline", false]], "segmentationbinaryauroc (class in torch_uncertainty.metrics.segmentation)": [[152, "torch_uncertainty.metrics.segmentation.SegmentationBinaryAUROC", false]], "segmentationbinaryaverageprecision (class in torch_uncertainty.metrics.segmentation)": [[153, "torch_uncertainty.metrics.segmentation.SegmentationBinaryAveragePrecision", false]], "segmentationfpr95 (class in torch_uncertainty.metrics.segmentation)": [[154, "torch_uncertainty.metrics.segmentation.SegmentationFPR95", false]], "segmentationroutine (class in torch_uncertainty.routines)": [[181, "torch_uncertainty.routines.SegmentationRoutine", false]], "set_accumulate() (torch_uncertainty.post_processing.mcbatchnorm method)": [[174, "torch_uncertainty.post_processing.MCBatchNorm.set_accumulate", false]], "set_temperature() (torch_uncertainty.post_processing.matrixscaler method)": [[175, "torch_uncertainty.post_processing.MatrixScaler.set_temperature", false]], "set_temperature() (torch_uncertainty.post_processing.temperaturescaler method)": [[176, "torch_uncertainty.post_processing.TemperatureScaler.set_temperature", false]], "set_temperature() (torch_uncertainty.post_processing.vectorscaler method)": [[177, "torch_uncertainty.post_processing.VectorScaler.set_temperature", false]], "setsize (class in torch_uncertainty.metrics.classification)": [[140, "torch_uncertainty.metrics.classification.SetSize", false]], "setup() (torch_uncertainty.datamodules.mnistdatamodule method)": [[51, "torch_uncertainty.datamodules.MNISTDataModule.setup", false]], "setup() (torch_uncertainty.datamodules.uciregressiondatamodule method)": [[55, "torch_uncertainty.datamodules.UCIRegressionDataModule.setup", false]], "silog (class in torch_uncertainty.metrics.regression)": [[149, "torch_uncertainty.metrics.regression.SILog", false]], "spambase (class in torch_uncertainty.datasets.classification.uci)": [[82, "torch_uncertainty.datasets.classification.uci.SpamBase", false]], "spambasedatamodule (class in torch_uncertainty.datamodules)": [[53, "torch_uncertainty.datamodules.SpamBaseDataModule", false]], "state_dict() (torch_uncertainty.models.swag method)": [[160, "torch_uncertainty.models.SWAG.state_dict", false]], "stochasticmodel (class in torch_uncertainty.models)": [[161, "torch_uncertainty.models.StochasticModel", false]], "studenttconvnd (class in torch_uncertainty.layers.distributions)": [[110, "torch_uncertainty.layers.distributions.StudentTConvNd", false]], "studenttlinear (class in torch_uncertainty.layers.distributions)": [[111, "torch_uncertainty.layers.distributions.StudentTLinear", false]], "subsample() (torch_uncertainty.routines.segmentationroutine method)": [[181, "torch_uncertainty.routines.SegmentationRoutine.subsample", false]], "swa (class in torch_uncertainty.models)": [[159, "torch_uncertainty.models.SWA", false]], "swag (class in torch_uncertainty.models)": [[160, "torch_uncertainty.models.SWAG", false]], "temperaturescaler (class in torch_uncertainty.post_processing)": [[176, "torch_uncertainty.post_processing.TemperatureScaler", false]], "test_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[46, "torch_uncertainty.datamodules.CIFAR100DataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[47, "torch_uncertainty.datamodules.CIFAR10DataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.imagenetdatamodule method)": [[50, "torch_uncertainty.datamodules.ImageNetDataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.mnistdatamodule method)": [[51, "torch_uncertainty.datamodules.MNISTDataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.segmentation.muaddatamodule method)": [[58, "torch_uncertainty.datamodules.segmentation.MUADDataModule.test_dataloader", false]], "test_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[54, "torch_uncertainty.datamodules.TinyImageNetDataModule.test_dataloader", false]], "test_step() (torch_uncertainty.routines.classificationroutine method)": [[178, "torch_uncertainty.routines.ClassificationRoutine.test_step", false]], "test_step() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.test_step", false]], "test_step() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.test_step", false]], "test_step() (torch_uncertainty.routines.segmentationroutine method)": [[181, "torch_uncertainty.routines.SegmentationRoutine.test_step", false]], "thresholdaccuracy (class in torch_uncertainty.metrics.regression)": [[150, "torch_uncertainty.metrics.regression.ThresholdAccuracy", false]], "tinyimagenet (class in torch_uncertainty.datasets.classification)": [[76, "torch_uncertainty.datasets.classification.TinyImageNet", false]], "tinyimagenetc (class in torch_uncertainty.datasets.classification)": [[77, "torch_uncertainty.datasets.classification.TinyImageNetC", false]], "tinyimagenetdatamodule (class in torch_uncertainty.datamodules)": [[54, "torch_uncertainty.datamodules.TinyImageNetDataModule", false]], "to() (torch_uncertainty.models.checkpointcollector method)": [[156, "torch_uncertainty.models.CheckpointCollector.to", false]], "train() (torch_uncertainty.models.mcdropout method)": [[158, "torch_uncertainty.models.MCDropout.train", false]], "train_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[46, "torch_uncertainty.datamodules.CIFAR100DataModule.train_dataloader", false]], "train_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[47, "torch_uncertainty.datamodules.CIFAR10DataModule.train_dataloader", false]], "training_step() (torch_uncertainty.routines.classificationroutine method)": [[178, "torch_uncertainty.routines.ClassificationRoutine.training_step", false]], "training_step() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.training_step", false]], "training_step() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.training_step", false]], "training_step() (torch_uncertainty.routines.segmentationroutine method)": [[181, "torch_uncertainty.routines.SegmentationRoutine.training_step", false]], "tuoodcriterion (class in torch_uncertainty.ood_criteria)": [[171, "torch_uncertainty.ood_criteria.TUOODCriterion", false]], "uciregression (class in torch_uncertainty.datasets.regression)": [[83, "torch_uncertainty.datasets.regression.UCIRegression", false]], "uciregressiondatamodule (class in torch_uncertainty.datamodules)": [[55, "torch_uncertainty.datamodules.UCIRegressionDataModule", false]], "unfreeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[99, "torch_uncertainty.layers.bayesian.BayesLinear.unfreeze", false]], "update() (torch_uncertainty.metrics.ause method)": [[122, "torch_uncertainty.metrics.AUSE.update", false]], "update() (torch_uncertainty.metrics.classification.aurc method)": [[124, "torch_uncertainty.metrics.classification.AURC.update", false]], "update() (torch_uncertainty.metrics.classification.brierscore method)": [[126, "torch_uncertainty.metrics.classification.BrierScore.update", false]], "update() (torch_uncertainty.metrics.classification.categoricalnll method)": [[128, "torch_uncertainty.metrics.classification.CategoricalNLL.update", false]], "update() (torch_uncertainty.metrics.classification.covatxrisk method)": [[130, "torch_uncertainty.metrics.classification.CovAtxRisk.update", false]], "update() (torch_uncertainty.metrics.classification.coveragerate method)": [[131, "torch_uncertainty.metrics.classification.CoverageRate.update", false]], "update() (torch_uncertainty.metrics.classification.disagreement method)": [[132, "torch_uncertainty.metrics.classification.Disagreement.update", false]], "update() (torch_uncertainty.metrics.classification.entropy method)": [[133, "torch_uncertainty.metrics.classification.Entropy.update", false]], "update() (torch_uncertainty.metrics.classification.fprx method)": [[135, "torch_uncertainty.metrics.classification.FPRx.update", false]], "update() (torch_uncertainty.metrics.classification.groupingloss method)": [[136, "torch_uncertainty.metrics.classification.GroupingLoss.update", false]], "update() (torch_uncertainty.metrics.classification.mutualinformation method)": [[137, "torch_uncertainty.metrics.classification.MutualInformation.update", false]], "update() (torch_uncertainty.metrics.classification.riskatxcov method)": [[139, "torch_uncertainty.metrics.classification.RiskAtxCov.update", false]], "update() (torch_uncertainty.metrics.classification.setsize method)": [[140, "torch_uncertainty.metrics.classification.SetSize.update", false]], "update() (torch_uncertainty.metrics.regression.distributionnll method)": [[142, "torch_uncertainty.metrics.regression.DistributionNLL.update", false]], "update() (torch_uncertainty.metrics.regression.log10 method)": [[143, "torch_uncertainty.metrics.regression.Log10.update", false]], "update() (torch_uncertainty.metrics.regression.meanabsoluteerrorinverse method)": [[144, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.update", false]], "update() (torch_uncertainty.metrics.regression.meangtrelativeabsoluteerror method)": [[145, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.update", false]], "update() (torch_uncertainty.metrics.regression.meangtrelativesquarederror method)": [[146, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.update", false]], "update() (torch_uncertainty.metrics.regression.meansquarederrorinverse method)": [[147, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.update", false]], "update() (torch_uncertainty.metrics.regression.meansquaredlogerror method)": [[148, "torch_uncertainty.metrics.regression.MeanSquaredLogError.update", false]], "update() (torch_uncertainty.metrics.regression.silog method)": [[149, "torch_uncertainty.metrics.regression.SILog.update", false]], "update() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[150, "torch_uncertainty.metrics.regression.ThresholdAccuracy.update", false]], "update_wrapper() (torch_uncertainty.models.checkpointcollector method)": [[156, "torch_uncertainty.models.CheckpointCollector.update_wrapper", false]], "update_wrapper() (torch_uncertainty.models.ema method)": [[157, "torch_uncertainty.models.EMA.update_wrapper", false]], "update_wrapper() (torch_uncertainty.models.swag method)": [[160, "torch_uncertainty.models.SWAG.update_wrapper", false]], "validation_step() (torch_uncertainty.routines.classificationroutine method)": [[178, "torch_uncertainty.routines.ClassificationRoutine.validation_step", false]], "validation_step() (torch_uncertainty.routines.pixelregressionroutine method)": [[179, "torch_uncertainty.routines.PixelRegressionRoutine.validation_step", false]], "validation_step() (torch_uncertainty.routines.regressionroutine method)": [[180, "torch_uncertainty.routines.RegressionRoutine.validation_step", false]], "validation_step() (torch_uncertainty.routines.segmentationroutine method)": [[181, "torch_uncertainty.routines.SegmentationRoutine.validation_step", false]], "variationratio (class in torch_uncertainty.metrics.classification)": [[141, "torch_uncertainty.metrics.classification.VariationRatio", false]], "variationratiocriterion (class in torch_uncertainty.ood_criteria)": [[172, "torch_uncertainty.ood_criteria.VariationRatioCriterion", false]], "vectorscaler (class in torch_uncertainty.post_processing)": [[177, "torch_uncertainty.post_processing.VectorScaler", false]], "vggbaseline (class in torch_uncertainty.baselines.classification)": [[39, "torch_uncertainty.baselines.classification.VGGBaseline", false]], "weight (torch_uncertainty.layers.packedconv2d property)": [[90, "torch_uncertainty.layers.PackedConv2d.weight", false]], "wideresnetbaseline (class in torch_uncertainty.baselines.classification)": [[40, "torch_uncertainty.baselines.classification.WideResNetBaseline", false]]}, "objects": {"torch_uncertainty.baselines.classification": [[38, 0, 1, "", "ResNetBaseline"], [39, 0, 1, "", "VGGBaseline"], [40, 0, 1, "", "WideResNetBaseline"]], "torch_uncertainty.baselines.depth": [[41, 0, 1, "", "BTSBaseline"]], "torch_uncertainty.baselines.regression": [[42, 0, 1, "", "MLPBaseline"]], "torch_uncertainty.baselines.segmentation": [[43, 0, 1, "", "DeepLabBaseline"], [44, 0, 1, "", "SegFormerBaseline"]], "torch_uncertainty.datamodules": [[45, 0, 1, "", "BankMarketingDataModule"], [46, 0, 1, "", "CIFAR100DataModule"], [47, 0, 1, "", "CIFAR10DataModule"], [48, 0, 1, "", "DOTA2GamesDataModule"], [49, 0, 1, "", "HTRU2DataModule"], [50, 0, 1, "", "ImageNetDataModule"], [51, 0, 1, "", "MNISTDataModule"], [52, 0, 1, "", "OnlineShoppersDataModule"], [53, 0, 1, "", "SpamBaseDataModule"], [54, 0, 1, "", "TinyImageNetDataModule"], [55, 0, 1, "", "UCIRegressionDataModule"]], "torch_uncertainty.datamodules.CIFAR100DataModule": [[46, 1, 1, "", "test_dataloader"], [46, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.CIFAR10DataModule": [[47, 1, 1, "", "test_dataloader"], [47, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.ImageNetDataModule": [[50, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.MNISTDataModule": [[51, 1, 1, "", "prepare_data"], [51, 1, 1, "", "setup"], [51, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.TinyImageNetDataModule": [[54, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.UCIRegressionDataModule": [[55, 1, 1, "", "prepare_data"], [55, 1, 1, "", "setup"]], "torch_uncertainty.datamodules.segmentation": [[56, 0, 1, "", "CamVidDataModule"], [57, 0, 1, "", "CityscapesDataModule"], [58, 0, 1, "", "MUADDataModule"]], "torch_uncertainty.datamodules.segmentation.MUADDataModule": [[58, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datasets": [[59, 0, 1, "", "Fractals"], [60, 0, 1, "", "FrostImages"], [61, 0, 1, "", "KITTIDepth"], [62, 0, 1, "", "MUAD"], [63, 0, 1, "", "NYUv2"]], "torch_uncertainty.datasets.MUAD": [[62, 1, 1, "", "encode_target"]], "torch_uncertainty.datasets.classification": [[64, 0, 1, "", "CIFAR100C"], [65, 0, 1, "", "CIFAR100N"], [66, 0, 1, "", "CIFAR10C"], [67, 0, 1, "", "CIFAR10H"], [68, 0, 1, "", "CIFAR10N"], [69, 0, 1, "", "ImageNetA"], [70, 0, 1, "", "ImageNetC"], [71, 0, 1, "", "ImageNetO"], [72, 0, 1, "", "ImageNetR"], [73, 0, 1, "", "MNISTC"], [74, 0, 1, "", "NotMNIST"], [75, 0, 1, "", "OpenImageO"], [76, 0, 1, "", "TinyImageNet"], [77, 0, 1, "", "TinyImageNetC"]], "torch_uncertainty.datasets.classification.CIFAR10C": [[66, 1, 1, "", "download"], [66, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.CIFAR10H": [[67, 1, 1, "", "download_h"]], "torch_uncertainty.datasets.classification.MNISTC": [[73, 1, 1, "", "download"], [73, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.TinyImageNetC": [[77, 1, 1, "", "download"]], "torch_uncertainty.datasets.classification.uci": [[78, 0, 1, "", "BankMarketing"], [79, 0, 1, "", "DOTA2Games"], [80, 0, 1, "", "HTRU2"], [81, 0, 1, "", "OnlineShoppers"], [82, 0, 1, "", "SpamBase"]], "torch_uncertainty.datasets.classification.uci.BankMarketing": [[78, 1, 1, "", "download"]], "torch_uncertainty.datasets.classification.uci.DOTA2Games": [[79, 1, 1, "", "download"]], "torch_uncertainty.datasets.regression": [[83, 0, 1, "", "UCIRegression"]], "torch_uncertainty.datasets.regression.UCIRegression": [[83, 1, 1, "", "download"]], "torch_uncertainty.datasets.segmentation": [[84, 0, 1, "", "CamVid"], [85, 0, 1, "", "Cityscapes"]], "torch_uncertainty.datasets.segmentation.CamVid": [[84, 2, 1, "", "color_palette"], [84, 1, 1, "", "decode_target"], [84, 1, 1, "", "download"], [84, 1, 1, "", "encode_target"]], "torch_uncertainty.datasets.segmentation.Cityscapes": [[85, 1, 1, "", "decode_target"], [85, 1, 1, "", "encode_target"], [85, 1, 1, "", "plot_sample"]], "torch_uncertainty.layers": [[86, 0, 1, "", "BatchConv2d"], [87, 0, 1, "", "BatchLinear"], [88, 0, 1, "", "MaskedConv2d"], [89, 0, 1, "", "MaskedLinear"], [90, 0, 1, "", "PackedConv2d"], [91, 0, 1, "", "PackedLayerNorm"], [92, 0, 1, "", "PackedLinear"], [93, 0, 1, "", "PackedMultiheadAttention"], [94, 0, 1, "", "PackedTransformerDecoderLayer"], [95, 0, 1, "", "PackedTransformerEncoderLayer"]], "torch_uncertainty.layers.BatchConv2d": [[86, 1, 1, "", "from_conv2d"]], "torch_uncertainty.layers.BatchLinear": [[87, 1, 1, "", "from_linear"]], "torch_uncertainty.layers.PackedConv2d": [[90, 2, 1, "", "bias"], [90, 2, 1, "", "weight"]], "torch_uncertainty.layers.PackedMultiheadAttention": [[93, 1, 1, "", "forward"]], "torch_uncertainty.layers.PackedTransformerDecoderLayer": [[94, 1, 1, "", "forward"]], "torch_uncertainty.layers.PackedTransformerEncoderLayer": [[95, 1, 1, "", "forward"]], "torch_uncertainty.layers.bayesian": [[96, 0, 1, "", "BayesConv1d"], [97, 0, 1, "", "BayesConv2d"], [98, 0, 1, "", "BayesConv3d"], [99, 0, 1, "", "BayesLinear"], [100, 0, 1, "", "LPBNNConv2d"], [101, 0, 1, "", "LPBNNLinear"]], "torch_uncertainty.layers.bayesian.BayesLinear": [[99, 1, 1, "", "freeze"], [99, 1, 1, "", "sample"], [99, 1, 1, "", "unfreeze"]], "torch_uncertainty.layers.distributions": [[102, 0, 1, "", "CauchyConvNd"], [103, 0, 1, "", "CauchyLinear"], [104, 0, 1, "", "LaplaceConvNd"], [105, 0, 1, "", "LaplaceLinear"], [106, 0, 1, "", "NormalConvNd"], [107, 0, 1, "", "NormalInverseGammaConvNd"], [108, 0, 1, "", "NormalInverseGammaLinear"], [109, 0, 1, "", "NormalLinear"], [110, 0, 1, "", "StudentTConvNd"], [111, 0, 1, "", "StudentTLinear"]], "torch_uncertainty.losses": [[112, 0, 1, "", "BCEWithLogitsLSLoss"], [113, 0, 1, "", "BetaNLL"], [114, 0, 1, "", "ConfidencePenaltyLoss"], [115, 0, 1, "", "ConflictualLoss"], [116, 0, 1, "", "DECLoss"], [117, 0, 1, "", "DERLoss"], [118, 0, 1, "", "DistributionNLLLoss"], [119, 0, 1, "", "ELBOLoss"], [120, 0, 1, "", "FocalLoss"], [121, 0, 1, "", "KLDiv"]], "torch_uncertainty.losses.ConfidencePenaltyLoss": [[114, 1, 1, "", "forward"]], "torch_uncertainty.losses.ConflictualLoss": [[115, 1, 1, "", "forward"]], "torch_uncertainty.losses.DistributionNLLLoss": [[118, 1, 1, "", "forward"]], "torch_uncertainty.losses.ELBOLoss": [[119, 1, 1, "", "forward"]], "torch_uncertainty.metrics": [[122, 0, 1, "", "AUSE"]], "torch_uncertainty.metrics.AUSE": [[122, 1, 1, "", "compute"], [122, 1, 1, "", "plot"], [122, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification": [[123, 0, 1, "", "AUGRC"], [124, 0, 1, "", "AURC"], [125, 0, 1, "", "AdaptiveCalibrationError"], [126, 0, 1, "", "BrierScore"], [127, 0, 1, "", "CalibrationError"], [128, 0, 1, "", "CategoricalNLL"], [129, 0, 1, "", "CovAt5Risk"], [130, 0, 1, "", "CovAtxRisk"], [131, 0, 1, "", "CoverageRate"], [132, 0, 1, "", "Disagreement"], [133, 0, 1, "", "Entropy"], [134, 0, 1, "", "FPR95"], [135, 0, 1, "", "FPRx"], [136, 0, 1, "", "GroupingLoss"], [137, 0, 1, "", "MutualInformation"], [138, 0, 1, "", "RiskAt80Cov"], [139, 0, 1, "", "RiskAtxCov"], [140, 0, 1, "", "SetSize"], [141, 0, 1, "", "VariationRatio"]], "torch_uncertainty.metrics.classification.AUGRC": [[123, 1, 1, "", "compute"], [123, 1, 1, "", "plot"]], "torch_uncertainty.metrics.classification.AURC": [[124, 1, 1, "", "compute"], [124, 1, 1, "", "partial_compute"], [124, 1, 1, "", "plot"], [124, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.BrierScore": [[126, 1, 1, "", "compute"], [126, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CategoricalNLL": [[128, 1, 1, "", "compute"], [128, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CovAtxRisk": [[130, 1, 1, "", "compute"], [130, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CoverageRate": [[131, 1, 1, "", "compute"], [131, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Disagreement": [[132, 1, 1, "", "compute"], [132, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Entropy": [[133, 1, 1, "", "compute"], [133, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.FPRx": [[135, 1, 1, "", "compute"], [135, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.GroupingLoss": [[136, 1, 1, "", "compute"], [136, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.MutualInformation": [[137, 1, 1, "", "compute"], [137, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.RiskAtxCov": [[139, 1, 1, "", "compute"], [139, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.SetSize": [[140, 1, 1, "", "compute"], [140, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.VariationRatio": [[141, 1, 1, "", "compute"]], "torch_uncertainty.metrics.regression": [[142, 0, 1, "", "DistributionNLL"], [143, 0, 1, "", "Log10"], [144, 0, 1, "", "MeanAbsoluteErrorInverse"], [145, 0, 1, "", "MeanGTRelativeAbsoluteError"], [146, 0, 1, "", "MeanGTRelativeSquaredError"], [147, 0, 1, "", "MeanSquaredErrorInverse"], [148, 0, 1, "", "MeanSquaredLogError"], [149, 0, 1, "", "SILog"], [150, 0, 1, "", "ThresholdAccuracy"]], "torch_uncertainty.metrics.regression.DistributionNLL": [[142, 1, 1, "", "compute"], [142, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.Log10": [[143, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse": [[144, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError": [[145, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError": [[146, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse": [[147, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredLogError": [[148, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.SILog": [[149, 1, 1, "", "compute"], [149, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.ThresholdAccuracy": [[150, 1, 1, "", "compute"], [150, 1, 1, "", "update"]], "torch_uncertainty.metrics.segmentation": [[151, 0, 1, "", "MeanIntersectionOverUnion"], [152, 0, 1, "", "SegmentationBinaryAUROC"], [153, 0, 1, "", "SegmentationBinaryAveragePrecision"], [154, 0, 1, "", "SegmentationFPR95"]], "torch_uncertainty.metrics.segmentation.MeanIntersectionOverUnion": [[151, 1, 1, "", "compute"]], "torch_uncertainty.models": [[155, 0, 1, "", "BatchEnsemble"], [156, 0, 1, "", "CheckpointCollector"], [157, 0, 1, "", "EMA"], [158, 0, 1, "", "MCDropout"], [159, 0, 1, "", "SWA"], [160, 0, 1, "", "SWAG"], [161, 0, 1, "", "StochasticModel"], [162, 3, 1, "", "batch_ensemble"], [163, 3, 1, "", "deep_ensembles"], [164, 3, 1, "", "mc_dropout"]], "torch_uncertainty.models.BatchEnsemble": [[155, 1, 1, "", "forward"]], "torch_uncertainty.models.CheckpointCollector": [[156, 1, 1, "", "eval_forward"], [156, 1, 1, "", "forward"], [156, 1, 1, "", "to"], [156, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.EMA": [[157, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.MCDropout": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "train"]], "torch_uncertainty.models.SWAG": [[160, 1, 1, "", "bn_update"], [160, 1, 1, "", "eval_forward"], [160, 1, 1, "", "initialize_stats"], [160, 1, 1, "", "sample"], [160, 1, 1, "", "state_dict"], [160, 1, 1, "", "update_wrapper"]], "torch_uncertainty.ood_criteria": [[165, 0, 1, "", "EnergyCriterion"], [166, 0, 1, "", "EntropyCriterion"], [167, 0, 1, "", "MaxLogitCriterion"], [168, 0, 1, "", "MaxSoftmaxCriterion"], [169, 0, 1, "", "MutualInformationCriterion"], [170, 0, 1, "", "PostProcessingCriterion"], [171, 0, 1, "", "TUOODCriterion"], [172, 0, 1, "", "VariationRatioCriterion"]], "torch_uncertainty.ood_criteria.EnergyCriterion": [[165, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.EntropyCriterion": [[166, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.MaxLogitCriterion": [[167, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.MaxSoftmaxCriterion": [[168, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.MutualInformationCriterion": [[169, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.PostProcessingCriterion": [[170, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.TUOODCriterion": [[171, 1, 1, "", "forward"]], "torch_uncertainty.ood_criteria.VariationRatioCriterion": [[172, 1, 1, "", "forward"]], "torch_uncertainty.post_processing": [[173, 0, 1, "", "LaplaceApprox"], [174, 0, 1, "", "MCBatchNorm"], [175, 0, 1, "", "MatrixScaler"], [176, 0, 1, "", "TemperatureScaler"], [177, 0, 1, "", "VectorScaler"]], "torch_uncertainty.post_processing.MCBatchNorm": [[174, 1, 1, "", "fit"], [174, 1, 1, "", "raise_counters"], [174, 1, 1, "", "replace_layers"], [174, 1, 1, "", "reset_counters"], [174, 1, 1, "", "set_accumulate"]], "torch_uncertainty.post_processing.MatrixScaler": [[175, 1, 1, "", "fit"], [175, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.TemperatureScaler": [[176, 1, 1, "", "fit"], [176, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.VectorScaler": [[177, 1, 1, "", "fit"], [177, 1, 1, "", "set_temperature"]], "torch_uncertainty.routines": [[178, 0, 1, "", "ClassificationRoutine"], [179, 0, 1, "", "PixelRegressionRoutine"], [180, 0, 1, "", "RegressionRoutine"], [181, 0, 1, "", "SegmentationRoutine"]], "torch_uncertainty.routines.ClassificationRoutine": [[178, 1, 1, "", "forward"], [178, 1, 1, "", "on_test_epoch_end"], [178, 1, 1, "", "on_test_start"], [178, 1, 1, "", "on_train_start"], [178, 1, 1, "", "on_validation_epoch_end"], [178, 1, 1, "", "on_validation_start"], [178, 1, 1, "", "test_step"], [178, 1, 1, "", "training_step"], [178, 1, 1, "", "validation_step"]], "torch_uncertainty.routines.PixelRegressionRoutine": [[179, 1, 1, "", "evaluation_forward"], [179, 1, 1, "", "forward"], [179, 1, 1, "", "on_test_epoch_end"], [179, 1, 1, "", "on_test_start"], [179, 1, 1, "", "on_train_start"], [179, 1, 1, "", "on_validation_epoch_end"], [179, 1, 1, "", "on_validation_start"], [179, 1, 1, "", "test_step"], [179, 1, 1, "", "training_step"], [179, 1, 1, "", "validation_step"]], "torch_uncertainty.routines.RegressionRoutine": [[180, 1, 1, "", "evaluation_forward"], [180, 1, 1, "", "forward"], [180, 1, 1, "", "on_test_epoch_end"], [180, 1, 1, "", "on_test_start"], [180, 1, 1, "", "on_train_start"], [180, 1, 1, "", "on_validation_epoch_end"], [180, 1, 1, "", "on_validation_start"], [180, 1, 1, "", "test_step"], [180, 1, 1, "", "training_step"], [180, 1, 1, "", "validation_step"]], "torch_uncertainty.routines.SegmentationRoutine": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "log_segmentation_plots"], [181, 1, 1, "", "on_test_epoch_end"], [181, 1, 1, "", "on_validation_epoch_end"], [181, 1, 1, "", "subsample"], [181, 1, 1, "", "test_step"], [181, 1, 1, "", "training_step"], [181, 1, 1, "", "validation_step"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "terms": {"": [3, 4, 5, 6, 9, 10, 11, 12, 13, 19, 22, 27, 28, 31, 32, 33, 36, 62, 73, 78, 79, 80, 81, 82, 83, 90, 91, 92, 93, 94, 95, 99, 110, 111, 126, 127, 136, 155, 162, 178, 179, 180, 182, 184, 186], "0": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 73, 78, 79, 80, 81, 82, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 110, 111, 112, 113, 118, 123, 124, 125, 126, 127, 128, 130, 132, 133, 135, 139, 141, 142, 143, 145, 146, 148, 149, 150, 155, 160, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187], "00": [2, 3, 8, 9, 10, 12, 15, 18, 19, 21, 22, 23, 25, 27, 28, 30, 35, 187], "000": [3, 4, 13, 19, 22, 35], "001": [10, 12], "002": [3, 11, 22, 96, 97, 98], "004": 19, "0049": [6, 31, 32, 33], "005": [5, 11], "005462327506393194": 3, "006": 11, "00677": 19, "007127830293029547": 3, "00872": 28, "009875000454485416": 3, "00b": 28, "00g": 10, "00it": 19, "00mb": 22, "01": [2, 3, 6, 9, 10, 12, 19, 21, 22, 23, 28, 31, 32, 33, 43, 100, 101, 181, 187], "010": 19, "011950597167015076": 3, "012982366606593132": 3, "01437": 186, "01454": 19, "016": [25, 28, 187], "01637651026248932": 3, "01787": 19, "018": 31, "01g": 10, "01it": 19, "01m": 22, "01mb": 22, "02": [3, 6, 8, 9, 10, 12, 19, 22, 23, 30, 31, 32, 33, 187], "020": 19, "02147": [6, 31, 32, 33], "02207": 26, "022071361541748": 26, "022689994424581528": 11, "02269": 11, "023": 19, "026": 3, "026920348405838013": 11, "028": 3, "02816": 19, "029158327728509903": 3, "02g": 10, "02it": 19, "02mb": 23, "03": [2, 8, 10, 12, 19, 22, 23, 25, 187], "030": [19, 22, 30, 31, 187], "03303": 28, "03668594": 143, "03712499886751175": 11, "038": 4, "03824": 4, "03g": 10, "03it": 19, "04": [3, 10, 12, 15, 19, 22, 23, 187], "040": [10, 19], "04g": 10, "04it": 19, "05": [6, 8, 9, 10, 12, 19, 22, 23, 25, 31, 32, 33, 36, 91, 94, 95, 125, 139, 187], "050": [11, 19], "05142790824174881": 11, "05386843904852867": 148, "05g": 10, "05it": 19, "05m": 12, "05mb": [10, 22], "06": [3, 9, 10, 12, 19, 22, 25, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 160, 187], "060": [12, 19], "0600": [6, 31, 32, 33], "064": 10, "066": 10, "06672": 28, "06823": 3, "0686": 149, "06g": 10, "06it": [19, 23], "06mb": [10, 22], "07": [10, 12, 19, 22, 23], "070": 19, "07720": 28, "07773794233798981": 3, "07774": 3, "07g": 10, "07it": [19, 23], "08": [10, 19, 22, 175, 176, 177], "080": 19, "081": 5, "08137": 4, "0833": 124, "084": 10, "08849": [12, 22], "08g": 10, "08it": 19, "09": [10, 19], "090": 19, "09336": 28, "09821434319019318": 146, "09883": 4, "0994182825088501": 11, "09973254799842834": 11, "09g": 10, "09it": 19, "0m": [12, 22, 23], "0mb": [10, 12, 22, 23], "0x77af223c7290": 19, "0x77af223c7b90": 19, "1": [10, 12, 15, 18, 36, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 66, 73, 75, 77, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 113, 114, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 159, 160, 163, 165, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186], "10": [3, 4, 10, 12, 13, 16, 19, 20, 21, 23, 27, 28, 31, 32, 33, 34, 36, 63, 64, 66, 98, 125, 127, 143, 150, 155, 182, 183, 185, 187], "100": [3, 4, 9, 10, 12, 13, 19, 22, 23, 27, 64, 143, 175, 176, 177, 185], "1000": [23, 26, 143], "10000": [3, 10, 13, 19], "100c": 46, "100h": 65, "100m": 22, "100n": 65, "101": [10, 19, 38], "101m": 10, "102": 19, "1020": 143, "1024": [6, 31, 32, 33, 57, 58], "102m": 23, "103": [4, 6, 19], "104": 19, "104m": [10, 22], "105": 19, "106": 19, "106m": 10, "107": [11, 19, 33], "107m": 23, "108": [13, 19], "10812": [12, 22], "108m": [10, 22], "109": [4, 19], "10c": 47, "10g": 10, "10h": [67, 68], "10it": [19, 22], "10k": 19, "10mb": 10, "10n": 68, "11": [3, 8, 9, 10, 12, 13, 19, 22, 23, 26, 28, 31, 39, 56, 84, 187], "110": 19, "110m": [10, 23], "111": 19, "112": 19, "112m": [10, 22], "113": 19, "113m": 10, "114": 19, "114m": 10, "115": [4, 19], "115m": 23, "116": 19, "116m": [10, 22], "117": 19, "118": 19, "118m": 10, "119": 19, "119m": 23, "11g": 10, "11it": 19, "11m": [10, 22], "11mb": 9, "12": [3, 6, 9, 10, 12, 16, 19, 22, 23, 26, 31, 32, 33, 143], "120": [13, 19, 185], "120m": 22, "121": 19, "121m": 10, "122": 19, "122m": 23, "123": [11, 19], "123m": 10, "124": 19, "124m": [10, 22], "125": 19, "126": 19, "126m": [10, 23], "127": 19, "127m": 22, "128": [4, 9, 19, 22, 23, 27, 36], "128m": 10, "129": 19, "1299": 126, "12g": 10, "12it": 19, "12mb": 19, "13": [5, 6, 9, 10, 12, 19, 22, 23, 30, 31, 33, 39], "130": [11, 19], "1307": [9, 19], "130m": [10, 23], "131k": [12, 22], "132915496826172": 26, "13292": 26, "132m": [10, 22], "133": 6, "13468": 27, "134m": [10, 23], "135": 19, "135m": 10, "136m": 22, "137m": 10, "138m": 23, "139": 19, "139m": 10, "13g": 10, "13it": [19, 22], "13m": [10, 22, 27], "13mb": 10, "14": [6, 9, 10, 11, 12, 19, 22, 23, 31, 32, 33, 86], "140": [13, 19], "140m": 22, "141m": 10, "143": [11, 12, 19], "14371": 27, "143m": [22, 23], "144m": 10, "145m": 10, "146": 11, "146m": [10, 23], "147m": 22, "148m": 10, "149": 19, "14g": 10, "14it": [19, 23], "15": [2, 3, 9, 10, 19, 22, 23, 25, 38, 43, 125, 139, 178, 181, 187], "150": [19, 26], "151": 19, "151m": [10, 23], "152": 38, "152m": 22, "153": 19, "154m": [10, 23], "155m": 10, "156m": [10, 22], "157": 19, "158m": 23, "159m": [10, 22], "15g": 10, "15it": 19, "15k": 19, "16": [2, 4, 5, 10, 12, 13, 19, 22, 23, 26, 31, 32, 33, 39, 86, 160, 174, 185, 187], "160": [13, 19], "1606": [6, 31, 32, 33], "1607142984867096": 145, "161": 19, "161m": 10, "162m": 23, "16351": 5, "163m": [10, 22], "165": 19, "165m": 10, "166m": [10, 22], "1673997938632965": 3, "16740": 3, "167m": 23, "168": 19, "168m": 10, "169m": 23, "16g": 10, "16it": 19, "16m": 22, "16mb": [9, 10], "17": [3, 10, 12, 19], "170": 19, "170m": [10, 22], "17243": 27, "172m": 10, "174": 6, "178": 10, "17854": 19, "179m": 10, "17g": 10, "17it": 19, "17mb": [10, 19], "18": [4, 10, 12, 19, 22, 23, 28, 32, 33, 36, 38, 185], "180": [13, 19], "18031199276447296": 3, "18174": 28, "182": 19, "183": 19, "184m": 10, "188m": 10, "18g": 10, "18it": 19, "18m": 3, "18mb": 19, "19": [3, 6, 9, 10, 12, 13, 19, 22, 23, 31, 32, 33, 39, 187], "190": 19, "190000": 10, "191": 19, "192": 19, "192m": 10, "193": 11, "19499": 9, "195": 3, "19668851792812347": 3, "19669": 3, "196m": 10, "197": 30, "197k": [12, 22], "198kb": 22, "199": 127, "1994": 10, "1998": [3, 186], "19g": 10, "19it": 19, "19mb": [10, 12], "1e": [6, 11, 26, 31, 32, 33, 63, 91, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 160, 175, 176, 177, 181, 185], "1m": [10, 12, 22, 23], "1mb": [10, 12, 19, 22, 23], "2": [10, 12, 21, 36, 37, 44, 45, 48, 49, 52, 53, 57, 58, 75, 78, 79, 80, 81, 82, 86, 100, 101, 110, 111, 120, 124, 126, 127, 130, 132, 133, 135, 139, 141, 145, 146, 147, 148, 149, 150, 155, 163, 178, 181, 185], "20": [1, 2, 6, 10, 12, 13, 19, 22, 23, 28, 31, 32, 33, 34, 87, 150, 160, 187], "200": [8, 12, 13, 19, 22, 175, 177, 187], "2000": 23, "2007": 3, "2009": 186, "201": [10, 30, 33, 187], "2011": 186, "2014": [3, 149, 186], "2015": [3, 23, 99, 127, 186], "2016": [5, 12, 186], "2017": [5, 12, 23, 120, 124, 163, 175, 176, 177, 184, 186], "2018": [11, 116, 122, 156, 159, 174, 186], "2019": [12, 16, 64, 66, 73, 77, 117, 125, 160, 186], "201m": 10, "202": 11, "2020": [26, 186], "2021": [173, 186], "2022": [12, 75, 113, 182, 186], "2023": [10, 19, 136, 182, 185, 186], "2024": [182, 186], "20266": 27, "203": [11, 33], "2048": [19, 57, 58, 94, 95], "20499": 33, "205": 19, "20520": 6, "20532": 11, "20532234013080597": 11, "205m": 10, "20635": 6, "208": 13, "209m": 10, "20g": 10, "20it": [19, 22], "21": [6, 10, 12, 19, 22, 23, 31, 32, 33], "210": 19, "213m": 10, "2141": [6, 31, 32, 33], "217m": 10, "21893027": [78, 79, 80, 81, 82], "21g": 10, "21it": 19, "21mb": 3, "22": [6, 8, 9, 10, 12, 19, 22, 23, 31, 32, 33, 187], "220": 19, "22017": 19, "2203": 186, "221m": 10, "224": [16, 31, 32, 33, 50, 54, 57, 58], "225": [6, 31, 32, 33, 57, 58], "225m": 10, "227": [2, 3, 187], "228m": 10, "229": [31, 32, 33, 57, 58], "229k": [22, 23], "22g": 10, "22it": 19, "22mb": [9, 19, 27], "23": [10, 11, 19, 22, 23, 32], "230": 19, "231m": 10, "233": 31, "23446": 19, "235": 19, "235m": 10, "238": 10, "238m": 10, "239": 19, "239kb": 12, "23g": 10, "23it": 19, "23mb": [10, 19], "24": [10, 12, 19, 22], "240": 19, "240kb": [12, 22], "241": 25, "241kb": 12, "241m": 10, "244": 12, "244m": 10, "247kb": 22, "247m": 10, "24g": 10, "24it": 19, "24m": 3, "25": [6, 9, 10, 19, 22, 23, 26, 31, 32, 33, 36, 139, 150], "250": 19, "250m": 10, "251": [19, 33], "25226": 19, "255": [6, 31, 32, 33], "256": [6, 13, 16, 19, 31, 32, 33, 36], "256m": 10, "258": [5, 19], "25g": 10, "25it": 19, "25mb": 10, "26": [6, 10, 12, 18, 19, 22, 23, 33, 187], "260": [10, 19, 22], "26405": 22, "26408": 12, "268m": 10, "269": 19, "26949": 19, "26g": 10, "26it": 19, "26m": 23, "26mb": 10, "27": [3, 10, 12, 19, 22, 23], "270": 19, "272kb": 10, "274": 19, "275": 11, "27546": 27, "277": 19, "27g": 10, "27it": 19, "27mb": 10, "28": [3, 9, 10, 12, 19, 22], "280": 19, "280m": 10, "282": 19, "286": 19, "288": 6, "289": 6, "28belen": 16, "28g": 10, "28it": 19, "28mb": 22, "28x28": 19, "29": [2, 4, 10, 16, 19, 22, 23], "290": [6, 19], "29080": 19, "291m": 10, "29228": 27, "295": 19, "295k": [12, 22], "298": 3, "29g": 10, "29it": 19, "29mb": 12, "2c_border_collie_los_bagan": 16, "2c_usa_": 16, "2d": [86, 93, 100], "2e": [3, 6, 11, 31, 32, 33], "2f": [139, 150], "2m": [10, 12, 22, 23], "2mb": [10, 12, 19, 22, 23], "3": [10, 12, 25, 30, 36, 44, 63, 86, 87, 124, 126, 127, 128, 130, 132, 133, 139, 141, 142, 145, 146, 148, 149, 150, 178, 181, 182, 183, 185], "30": [6, 10, 11, 12, 19, 22, 23, 31, 32, 33, 87, 160], "300": [9, 19, 26], "3011": [6, 31, 32, 33], "302m": 10, "30627": 27, "3081": [9, 19], "309": 31, "30g": 10, "30it": 19, "31": [10, 12, 19, 22, 23], "310": [19, 26], "312m": 10, "317": 11, "319": 31, "31g": 10, "31it": 19, "31m": 19, "32": [4, 6, 10, 12, 19, 22, 23, 28, 38, 56, 84, 86, 100, 101, 174, 185], "320": 19, "321kb": 22, "321m": 10, "324": [2, 5, 19, 187], "32669": 27, "326kb": 12, "327": 33, "328k": 3, "32g": 10, "32it": 19, "32m": 12, "32mb": [3, 10, 12], "32x32": 13, "33": [6, 10, 19, 22, 23, 31, 32, 33], "330": 19, "330m": 10, "33169": 10, "333": [2, 4, 21, 187], "3333": 132, "339m": 10, "33g": 10, "33it": 19, "33m": 9, "34": [8, 10, 12, 19, 22, 23, 36, 187], "340": 19, "341": 4, "342": 33, "344": 19, "348m": 10, "34g": 10, "34it": 19, "34m": 19, "35": [10, 19, 22, 23], "350": [5, 9], "351": [11, 13], "356m": 10, "359": 9, "35g": 10, "35it": 19, "35mb": 19, "36": [3, 6, 10, 12, 19, 22, 23, 30, 31, 32, 33, 187], "360": 5, "360k": [3, 9, 19], "360kb": 3, "362m": 10, "363": 23, "365kb": 9, "36699": 27, "367": 6, "367kb": 19, "368m": 10, "36g": 10, "36it": 19, "37": [10, 19, 22, 23], "370": 19, "37237": 10, "372m": 10, "373": [8, 12, 19, 187], "373kb": 23, "376m": 10, "37909": 27, "37g": 10, "37it": 19, "37mb": 3, "38": [10, 12, 19, 22, 23, 27, 30, 32, 187], "380": [12, 19, 22], "3817": [6, 31, 32, 33], "381m": 10, "38291": 19, "387": 19, "38779": 19, "388kb": 22, "389m": 10, "38g": 10, "38it": 19, "38m": [9, 22, 23], "38mb": 22, "39": [10, 19, 23], "390": 19, "3913": [6, 31, 32, 33], "393k": 10, "39822": 33, "399m": 10, "39g": 10, "39it": 19, "39m": [10, 12, 22], "39mb": [9, 10], "3d": [93, 126], "3f": [3, 11, 13], "3k": [3, 9, 10, 12, 19], "3m": [10, 12, 22, 23], "3mb": [3, 10, 12, 22, 23], "4": [2, 10, 12, 36, 44, 73, 86, 99, 124, 128, 130, 132, 133, 135, 139, 141, 142, 149, 150, 155, 179, 185], "40": [10, 11, 13, 19, 22, 31], "400": [6, 19], "40168": 6, "40327": 6, "404": 19, "40441": 27, "406": [31, 32, 33, 57, 58], "406m": 10, "40g": 10, "40it": 19, "40mb": 10, "41": [10, 11, 12, 19, 22, 23], "410": [4, 19, 31], "41088": 27, "413": [6, 31, 32, 33], "413m": 10, "415": [21, 23, 187], "41525": 27, "417kb": 10, "41921": 26, "4192123413085938": 26, "419m": 10, "41g": 10, "41it": 19, "41m": 12, "41mb": [9, 22], "42": [5, 10, 12, 19, 22, 23, 55, 83], "420": 19, "422": 10, "425": 9, "426k": [12, 22], "426m": 10, "42g": 10, "42it": 19, "42m": 19, "42mb": [10, 19], "43": [5, 10, 11, 12, 19, 22, 32], "430": 19, "432": 13, "4338": [128, 142], "433m": 10, "434": [25, 27, 187], "436": 31, "43g": 10, "43it": 19, "43mb": [10, 27], "44": [9, 10, 19, 22, 23], "440": 19, "4401": [6, 31, 32, 33], "440m": 10, "444kb": 22, "4465": 10, "447m": 10, "44g": 10, "44it": 19, "44m": 9, "44mb": 10, "45": [10, 11, 12, 19, 22, 23], "450": 19, "4500": 141, "45018": 27, "451": 19, "453": 19, "45315": 9, "453m": 10, "456": [31, 32, 33, 57, 58], "457": 19, "459": 19, "459k": 10, "459kb": 12, "459m": 10, "45g": 10, "45it": 19, "46": [10, 19, 22, 23, 27, 31], "460": 19, "463m": 10, "467m": 10, "46g": 10, "46it": 19, "46mb": [10, 12, 19], "47": [6, 10, 12, 19, 22, 23, 31, 32, 33], "470": 19, "471m": 10, "473": 11, "47487": 27, "475": 19, "475m": 10, "476": 13, "477": 13, "478m": 10, "479": [11, 13], "47970": 19, "47g": 10, "47it": 19, "47m": [10, 19], "48": [6, 8, 10, 12, 19, 22, 31, 32, 33], "480": 19, "4807": [6, 31, 32, 33], "4822": 10, "485": [31, 32, 33, 57, 58], "485m": 10, "48g": 10, "48it": 19, "48mb": [3, 10, 22, 23], "49": [10, 11, 19, 22, 23], "490": 19, "491": 32, "4914": 10, "493m": 10, "495": 19, "4984": [6, 31, 32, 33], "499": [12, 22], "49g": 10, "49it": [19, 23], "49m": [10, 19], "49mb": 12, "4e": 26, "4f": 149, "4m": [10, 12, 19, 22, 23], "4mb": [3, 10, 12, 22, 23, 28], "5": [8, 10, 12, 19, 36, 44, 57, 58, 64, 66, 77, 86, 87, 91, 94, 95, 113, 125, 126, 127, 129, 130, 132, 133, 139, 141, 145, 146, 148, 149, 150, 155, 185], "50": [6, 10, 12, 19, 22, 23, 26, 27, 31, 32, 33, 36, 38, 139], "500": [19, 31], "50000": 13, "500m": 10, "507": 13, "508m": 10, "50g": 10, "50it": [19, 22], "51": [10, 19, 22, 23], "510": [19, 22], "51063": 33, "512": [3, 5, 6, 9, 10, 11, 12, 13, 19, 31, 32, 33], "513": 31, "5130": [6, 31, 32, 33], "516m": 10, "517": 32, "5199": 126, "51g": 10, "51it": 19, "51mb": 10, "52": [10, 19, 22, 32], "520": [12, 19], "52340": 22, "524": 13, "524k": 27, "524m": 10, "525": 10, "52871": 5, "52g": 10, "52it": 19, "52m": [9, 10], "52mb": 10, "53": [10, 12, 19, 22, 23], "530": 19, "532m": 10, "533": 4, "535": 13, "537": 22, "539": [8, 9, 187], "539m": 10, "53g": 10, "53it": 19, "53mb": 10, "54": [2, 6, 9, 10, 19, 22, 23, 187], "540": 19, "542": 13, "546": [3, 12], "546m": 10, "549": 11, "54g": 10, "54it": 19, "54k": [3, 9, 19], "54m": [3, 10], "54mb": 10, "55": [10, 12, 19, 22], "550": [13, 19], "551m": 10, "552": 10, "556": 9, "556m": 10, "557k": 12, "559": 13, "55g": 10, "55it": 19, "55m": 10, "56": [3, 10, 12, 19, 21, 22, 23, 187], "560": 19, "560m": 10, "563m": 10, "56686": 10, "566m": 10, "56g": 10, "56it": [19, 22], "57": [10, 19, 21, 22], "570": 19, "570m": 10, "57190": 6, "57200": 19, "573m": 10, "576": 13, "576m": 10, "578": 6, "57907": 19, "57g": 10, "57it": 19, "57m": [10, 12, 19, 22], "57mb": [9, 10], "58": [10, 12, 19, 23, 30, 31, 37, 187], "580": 19, "580m": 10, "581": 13, "583": 6, "583m": 10, "586m": 10, "587": [18, 19, 22, 187], "588": 13, "58g": 10, "58it": 19, "58mb": 10, "59": [10, 19, 22], "590": 19, "590k": [3, 22], "590m": 10, "593m": 10, "594": 11, "596m": 10, "59818": 28, "599": 19, "59g": 10, "59it": 19, "59m": 10, "59mb": 10, "5d": [13, 16], "5e": 27, "5k": [12, 19, 22, 23], "5m": [10, 12, 22, 23], "5mb": [10, 12, 22, 23], "5risk": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 31, 32, 33], "6": [3, 5, 10, 12, 13, 16, 19, 36, 96, 97, 114, 124, 126, 128, 130, 132, 133, 135, 139, 141, 142, 185], "60": [10, 12, 13, 19, 22], "600": 19, "6000": 13, "600m": 10, "602kb": 22, "60414": 33, "604m": 10, "60532808303833": 26, "60533": 26, "606": 13, "607m": 10, "609": 19, "60g": 10, "60it": 19, "60m": 10, "61": [10, 19, 22, 23], "610": 19, "6109": 133, "610m": 10, "61145": 32, "614m": 10, "616": 32, "617": 13, "617kb": 9, "617m": 10, "61g": 10, "61it": 19, "61mb": 22, "62": [10, 19, 22, 23, 33], "620": [12, 19], "620kb": 3, "620m": 10, "621kb": 12, "622kb": 19, "623k": [22, 23], "624kb": 19, "624m": 10, "6269": 133, "626kb": 9, "62836": 31, "628m": 10, "62g": 10, "62it": 19, "62m": 12, "62mb": 10, "63": [6, 10, 12, 19, 22, 23], "630": 19, "632m": 10, "63690": 27, "636m": 10, "639": 13, "63934": 6, "63g": 10, "63it": [19, 22], "63m": 10, "63mb": [10, 19], "64": [3, 10, 12, 19, 22, 26, 90], "640": [19, 56], "641m": 10, "642": 33, "644": 19, "645m": 10, "649": 19, "649m": 10, "64g": 10, "64it": 19, "64mb": 10, "65": [10, 12, 19, 22, 23], "650": 19, "653": [22, 23], "653m": 10, "654": 33, "655k": 9, "657m": 10, "658": 32, "65978": 19, "65990": 22, "65g": 10, "65it": 19, "65m": [3, 9, 19], "66": [10, 19, 22, 23], "660": 19, "661m": 10, "664m": 10, "666": 19, "66604": 19, "667": 13, "667m": 10, "66g": 10, "66it": 19, "66mb": 10, "67": [10, 12, 19], "670": 19, "670m": 10, "6730": 133, "67491": 32, "674m": 10, "677": 19, "677m": 10, "679": 19, "67g": 10, "67it": 19, "67m": [3, 10], "67mb": 10, "68": [6, 10, 19, 22, 23, 33], "680": [6, 11, 19], "680m": 10, "682": [19, 33], "68303": 10, "68304": 19, "684": 13, "685m": 10, "689": 19, "68g": 10, "68it": 19, "68mb": [3, 10, 23], "69": [10, 19, 22, 23], "690": [19, 33], "690m": 10, "691": 19, "692": 11, "694": 22, "694m": 10, "698": 19, "69800": 19, "698m": 10, "69g": 10, "69it": 19, "69m": 3, "69mb": [10, 23], "6kb": 28, "6m": [10, 12, 22, 23], "6mb": [10, 12, 22, 23], "7": [3, 4, 5, 9, 10, 11, 12, 19, 23, 26, 36, 99, 124, 126, 128, 130, 132, 133, 135, 139, 141, 142, 145, 146, 148], "70": [10, 19, 22, 23], "700": 19, "701": 6, "702": 19, "702m": 10, "704": 33, "705": 19, "707m": 10, "708": 33, "709": 19, "70993": 31, "70g": 10, "70it": 19, "70m": 22, "70mb": 10, "71": [10, 12, 19, 22], "710": 19, "711": 19, "711m": 10, "712": 11, "713": 3, "714": [19, 33], "716m": 10, "71g": 10, "71it": 19, "71mb": 3, "72": [3, 6, 10, 19, 22, 23, 33], "720": [19, 56], "721k": 19, "721m": 10, "724m": 10, "726": 6, "72700": 19, "728kb": 12, "728m": 10, "72g": 10, "72it": 19, "72mb": [10, 12, 19], "73": [4, 10, 12, 19], "730": 19, "731": 6, "731m": 10, "733": 6, "734m": 10, "735": [8, 11, 187], "737m": 10, "739": [6, 33], "73g": 10, "73it": 19, "73mb": 10, "74": [10, 19, 22, 23], "740": 19, "740m": 10, "74181": 9, "742kb": 22, "743": 19, "744": 13, "744m": 10, "745kb": 23, "7467": [6, 31, 32, 33], "748": 19, "749m": 10, "74g": 10, "74it": 19, "74m": 19, "74mb": [9, 12], "75": [9, 10, 12, 19, 22, 23, 36, 135], "750": 19, "751": 33, "754k": [3, 12], "754m": 10, "758": 8, "759m": 10, "75g": 10, "75it": 19, "76": [10, 19, 22], "760": 19, "761": 11, "764": 19, "764m": 10, "768": [11, 33], "769m": 10, "76g": 10, "76it": 19, "76mb": 22, "77": [10, 19, 22, 23], "770": [11, 19], "771": 19, "773": 6, "774": 33, "774m": 10, "776": 19, "777": 187, "77899": 10, "779": [12, 19, 22], "779m": 10, "77g": 10, "77it": [19, 22], "78": [10, 11, 19, 22, 23], "780": 19, "781": 10, "783kb": 22, "784m": 10, "786k": 19, "789m": 10, "78g": 10, "78it": 19, "78m": 23, "79": [5, 10, 12, 19, 22, 23], "790": 19, "791": [19, 25, 26, 187], "792": [6, 13], "7927": [6, 31, 32, 33], "793": 22, "79430": 22, "795m": 10, "799": 19, "799m": 10, "79g": 10, "79it": [19, 22], "7m": [10, 12, 22, 23], "7mb": [3, 10, 12, 22, 23], "8": [3, 4, 5, 9, 10, 11, 12, 13, 16, 19, 23, 27, 36, 86, 87, 124, 126, 127, 130, 132, 133, 135, 139, 141, 145, 146, 148, 150, 175, 176, 177], "80": [10, 11, 13, 19, 22, 61, 138, 150], "800": 19, "800000011920929": 130, "802m": 10, "8031": [6, 31, 32, 33], "804": 11, "806m": 10, "808": 19, "809m": 10, "80cov": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 31, 32, 33], "80g": 10, "80it": 19, "80mb": 10, "81": [10, 19, 22, 23], "810": 19, "812": 11, "812m": 10, "815": [15, 16, 187], "815m": 10, "818": 33, "819": 19, "8192": 27, "819k": 22, "819m": 10, "81g": 10, "81it": 19, "82": [10, 12, 19, 22, 23], "820": 19, "823m": 10, "824": 19, "829m": 10, "82g": 10, "82it": 19, "82m": 12, "83": [10, 12, 19], "835m": 10, "838": 19, "83g": 10, "83it": 19, "83m": 19, "84": [10, 13, 19, 22, 23, 185], "840": 19, "841m": 10, "846": 2, "847m": 10, "84g": 10, "84it": 19, "84mb": 9, "85": [6, 10, 12, 19, 22, 33, 125, 139], "850": 19, "85231": 5, "853": 19, "853m": 10, "8560": [6, 31, 32, 33], "858m": 10, "859": 11, "85g": 10, "85it": 19, "85m": 23, "86": [9, 10, 19, 22, 23], "860": 19, "862": 19, "864m": 10, "865": 19, "869m": 10, "86g": 10, "86it": 19, "86mb": 9, "87": [10, 12, 19, 22, 23], "870": 19, "87024": 19, "871": 6, "872": [13, 19], "874": 6, "875m": 10, "8762": [6, 31, 32, 33], "878": 19, "879m": 10, "87g": 10, "87it": 19, "87mb": 10, "88": [10, 19, 23], "880": 19, "881": 19, "883m": 10, "884": 19, "885k": 9, "886m": 10, "88g": 10, "88it": [19, 22], "88mb": [10, 19], "89": [9, 10, 11, 19, 22, 23], "890": 19, "890m": 10, "891": 9, "8913000226020813": 11, "893": 11, "893m": 10, "895": [12, 19], "897": 19, "898m": 10, "89g": 10, "89it": 19, "89mb": 10, "8b": 16, "8k": [10, 12, 22], "8m": [10, 12, 22, 23], "8mb": [9, 10, 12, 19, 22, 23], "9": [3, 4, 5, 9, 10, 11, 12, 13, 19, 22, 23, 26, 36, 127, 130, 135, 139], "90": [10, 11, 12, 19, 22, 23], "900": 19, "903m": 10, "904": 19, "907m": 10, "908": 19, "90g": 10, "90it": 19, "90m": 12, "90mb": 10, "91": [10, 12, 19, 22, 23], "910": 19, "911": [8, 10, 187], "912m": 10, "914": 19, "917": [13, 19], "917m": 10, "918": [21, 22, 187], "91g": 10, "91it": [19, 22], "91m": [3, 9, 19], "92": [10, 19, 22], "920": [9, 19], "921": 19, "922m": 10, "927m": 10, "92g": 10, "92it": 19, "93": [3, 10, 12, 19, 22], "930": 19, "933m": 10, "938": 32, "938m": 10, "939": 19, "93g": 10, "93it": 19, "93mb": 10, "94": [10, 19, 22, 23], "940": 19, "942": 11, "943m": 10, "944": 32, "947m": 10, "948": 6, "949": 19, "949999988079071": 3, "949kb": 12, "94g": 10, "94it": 19, "94mb": 9, "95": [3, 10, 12, 19, 22, 125, 134, 135, 139, 143], "950": 19, "951m": 10, "954m": 10, "956": 19, "958": 6, "958m": 10, "959": 22, "95g": 10, "95it": 19, "95mb": 3, "96": [10, 12, 19, 22, 23], "960": [12, 19, 32, 56], "962": [2, 6, 11, 19, 187], "962m": 10, "966": [30, 32, 187], "967": 32, "967m": 10, "968": [12, 19], "96g": 10, "96it": 19, "96mb": [10, 19], "97": [4, 10, 19, 22], "970": 19, "973": 11, "973m": 10, "976": 11, "979m": 10, "97g": 10, "97it": [19, 22], "97mb": 19, "98": [3, 9, 10, 12, 19, 22, 23], "980": 19, "981": 13, "983k": 10, "985m": 10, "986": 19, "988": 3, "98g": 10, "98it": [19, 22], "98mb": 22, "99": [6, 10, 19, 23, 31, 32, 33], "990": 19, "99000": 22, "99050": 22, "990m": 10, "991": 19, "99120": 22, "994": 19, "995m": 10, "997": 5, "99g": 10, "99it": 19, "9k": [3, 9, 19], "9m": [10, 22, 23], "9mb": [10, 12, 19, 22, 23], "A": [3, 6, 12, 31, 32, 33, 35, 37, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 120, 122, 123, 124, 126, 128, 132, 133, 136, 137, 141, 142, 144, 145, 146, 147, 148, 149, 151, 160, 182, 185], "And": 186, "As": [3, 4, 19, 27, 28, 123, 124, 144, 145, 146, 147, 148, 151, 185], "Be": [88, 89], "But": 36, "By": [10, 19, 36, 56, 57, 58, 149], "For": [3, 5, 6, 10, 12, 16, 19, 22, 27, 31, 32, 33, 36, 37, 65, 67, 68, 69, 70, 71, 72, 93, 128, 140, 141, 142, 157, 160, 178, 183, 185, 186], "IN": 184, "If": [13, 19, 23, 36, 37, 38, 39, 40, 46, 47, 50, 51, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 100, 101, 110, 111, 112, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 141, 142, 146, 147, 148, 149, 151, 155, 156, 162, 163, 174, 175, 176, 177, 178, 179, 180, 183, 185], "In": [3, 4, 5, 9, 11, 13, 19, 22, 23, 26, 27, 28, 36, 50, 54, 64, 66, 73, 75, 77, 86, 87, 122, 124, 127, 135, 136, 155, 156, 159, 160, 163, 173, 174, 175, 176, 177, 184, 185, 186], "It": [5, 6, 9, 10, 12, 28, 31, 32, 33, 36, 59, 74, 87, 89, 92, 119, 123, 124, 126, 135, 141, 148, 149, 152, 153, 160, 163, 183, 184, 185], "No": [6, 19, 22, 178], "Of": 75, "On": [23, 34, 113, 115, 175, 176, 177, 184, 186], "One": [55, 65, 68, 83], "The": [0, 10, 12, 13, 16, 19, 23, 36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 64, 65, 66, 68, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 149, 150, 151, 154, 155, 156, 157, 158, 160, 163, 171, 174, 178, 179, 180, 181, 182, 185, 186], "Then": [3, 11, 26, 36, 37, 183], "There": [10, 13, 23, 59, 74, 181], "These": [0, 10, 16, 19, 27, 185], "To": [3, 4, 5, 6, 10, 11, 12, 23, 26, 27, 28, 36, 37, 86, 87, 182, 183, 184, 185], "With": [10, 12, 19, 86, 87, 185], "_": [3, 6, 13, 16, 19, 22, 31, 32, 33, 169], "__": 186, "__init__": [5, 13, 19, 27, 36, 158, 185], "__main__": 36, "__name__": [16, 36], "_channel": 90, "_deepensembl": 163, "_description_": 93, "_estim": [90, 92], "_featur": 92, "_get": 36, "_j": 86, "_regdeepensembl": 163, "_tool": [9, 12, 26], "_work": [9, 12, 26], "a9": 16, "aaai": [23, 127, 186], "aaron": 186, "ab": [6, 31, 32, 33], "abil": [124, 185], "abl": 19, "about": [19, 36], "abov": [6, 13, 19, 31, 32, 33, 36], "absolut": [27, 143, 144, 145, 148], "abstract": [10, 12, 19, 171], "ac": 125, "acc": [3, 4, 5, 9, 10, 11, 12, 19, 22], "acceler": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 26, 27, 28, 31, 32, 33, 36], "accept": [123, 124, 144, 145, 146, 147, 148, 151], "access": [6, 10, 31, 32, 33, 183, 185], "accord": [66, 73, 171], "account": [19, 131, 149, 185], "accumul": [128, 136, 174], "accuraci": [19, 126, 127, 146, 150, 186], "achiev": [3, 19, 93, 135], "across": [6, 31, 32, 33, 93, 125, 126, 128, 131, 132, 133, 137, 140, 141, 142, 152, 153, 154, 167], "action": [9, 12, 26], "activ": [10, 12, 94, 95, 183, 184], "actual": [125, 126, 127, 185], "ad": [86, 88, 90, 91, 93, 100, 185], "adam": [3, 6, 10, 11, 12, 26, 27, 28, 31, 32, 33, 185, 186], "adapt": [19, 22, 125, 127], "adaptive_calibration_error": 125, "adaptiveavgpool2d": 19, "add": [4, 19, 36, 37, 86, 87, 88, 89, 90, 92, 93, 100, 101, 112, 122, 123, 124, 160], "add_arguments_to_pars": 36, "add_bias_kv": 93, "add_lr_scheduler_arg": 36, "add_optimizer_arg": 36, "add_zero_attn": 93, "addit": [6, 31, 32, 33, 36, 58, 64, 69, 70, 71, 72, 91, 92, 93, 94, 95, 103, 105, 107, 108, 109, 110, 111, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154], "adeelh": 120, "adjust": [22, 125], "adopt": [10, 12], "adrien": [182, 186], "advanc": [122, 126, 128, 131, 132, 133, 136, 137, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151], "advers": [6, 10, 31, 32, 33], "adversari": 186, "advis": [36, 37, 87, 185], "aec": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 31, 32, 33], "affect": [38, 39, 40], "affin": 91, "aforement": 183, "after": [11, 22, 23, 26, 36, 94, 95, 160], "again": [19, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 183], "aggre_label": 68, "aggreg": [119, 152, 153], "agustinu": 186, "ai": [19, 183], "aim": [11, 22, 27], "al": [75, 99, 115, 123, 125, 127, 173, 185, 186], "alch\u00e9": 186, "aldea": [182, 186], "aleator": 26, "alessandro": 186, "alex": 186, "alexand": [26, 186], "alexandr": 186, "align": 127, "alina": 186, "all": [3, 11, 12, 13, 16, 19, 23, 27, 34, 36, 38, 40, 64, 66, 73, 77, 86, 88, 90, 93, 94, 95, 103, 105, 108, 109, 111, 131, 141, 152, 153, 154, 155, 162, 174, 183, 185, 187], "all_model": 19, "alldrin": 186, "allow": [0, 6, 19, 93, 134], "along": [86, 87, 151, 155, 185], "alpha": [6, 11, 13, 19, 22, 26, 31, 32, 33, 36, 38, 39, 40, 42, 90, 91, 92, 93, 94, 95, 107, 108, 120, 178, 185], "alreadi": [3, 4, 5, 11, 19, 26, 37, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 156, 183], "also": [3, 4, 5, 10, 11, 12, 16, 19, 23, 26, 37, 137, 150, 168, 170, 178, 179, 180, 182, 184, 185], "altern": [86, 87, 186], "although": 27, "alwai": 93, "amini": [26, 117, 186], "among": [45, 48, 49, 52, 53, 141, 172], "amount": [4, 19, 38, 39, 40, 141, 181], "an": [3, 4, 5, 6, 9, 11, 16, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 56, 57, 58, 73, 86, 87, 93, 94, 95, 113, 122, 123, 124, 127, 131, 132, 137, 151, 155, 174, 178, 179, 180, 185, 186, 187], "analysi": 186, "analyz": [10, 12], "andrei": [182, 186], "andrew": 186, "angel": 182, "angl": 11, "ani": [23, 27, 34, 37, 38, 39, 40, 59, 86, 87, 88, 89, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 125, 155, 185], "ann": 186, "anneal": [19, 116], "annealing_step": 116, "annot": 186, "anomali": 135, "anoth": 28, "antialia": [6, 16, 31, 32, 33, 57, 58], "antic": [113, 186], "anyth": [178, 180, 181], "ap": [22, 153], "apach": 37, "api": [37, 65, 67, 68, 69, 70, 71, 72, 75, 140, 157, 182, 185], "appear": 137, "append": [16, 19], "appli": [3, 4, 10, 19, 22, 38, 39, 40, 46, 47, 50, 51, 54, 56, 57, 59, 63, 66, 86, 87, 88, 89, 94, 95, 112, 113, 114, 115, 116, 117, 118, 131, 151, 158, 164, 186], "applic": [11, 19, 26, 37, 185], "approach": [1, 11, 26, 34, 86, 87, 186], "approxim": [4, 5, 19, 26, 173], "ar": [0, 3, 4, 10, 12, 13, 16, 19, 23, 27, 36, 37, 44, 62, 86, 87, 90, 92, 93, 94, 95, 103, 105, 108, 109, 111, 125, 126, 127, 128, 129, 130, 132, 136, 137, 141, 142, 144, 147, 155, 156, 168, 170, 174, 178, 184, 185, 186], "arang": [6, 31, 32, 33], "arash": 186, "arch": [10, 12, 22, 23, 36, 38, 39, 41, 43, 44, 185], "architectur": [0, 10, 12, 36, 38, 39, 44, 86, 87, 155, 182, 185], "area": [19, 122, 123, 124, 152], "arerel": 145, "arg": [6, 11, 12, 31, 32, 33, 156, 160], "argmax": [3, 11, 151], "argument": [4, 9, 10, 11, 36, 64, 69, 70, 71, 72, 103, 105, 107, 108, 109, 110, 111, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 157, 185], "around": [27, 36, 127, 185], "arrai": [37, 78, 79, 80, 81, 82, 83], "arxiv": [3, 6, 31, 32, 33, 156, 186], "assess": [10, 123, 124, 127], "associ": [23, 122, 124, 130, 139], "assum": [27, 28], "ast": [92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "attempt": 155, "attend": 93, "attent": [19, 93, 94, 95], "attn_mask": 93, "attn_output": 93, "attn_output_weight": 93, "attn_weight": 93, "attr": 163, "attribut": [73, 99, 178], "augment": [19, 38, 39, 40, 46, 47, 50, 51, 54, 56, 57, 59, 178, 182], "augrc": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 31, 32, 33], "aupr": [12, 19, 22], "aurc": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 31, 32, 33, 123], "auroc": [12, 19, 22, 152], "author": [4, 73, 182, 186], "auto": [46, 47], "auto_aug": [46, 47], "auto_tutori": [2, 8, 15, 18, 21, 25, 30, 35], "auto_tutorial_sourc": 187, "auto_tutorials_jupyt": 34, "auto_tutorials_python": 34, "autom": 178, "automat": [3, 5, 9, 10, 12, 19, 23, 28, 36, 86, 87, 119, 151, 155, 179, 180, 183, 185], "autonom": [6, 31, 32, 33, 182, 186], "ava": [26, 186], "avail": [13, 16, 23, 36, 92, 127, 164, 178], "averag": [3, 6, 19, 31, 32, 93, 126, 128, 131, 132, 133, 137, 140, 141, 142, 152, 153, 157, 159, 160], "average_attn_weight": 93, "avg_prob": 3, "avoid": [0, 4, 19, 23, 37, 83, 114, 123, 137, 156], "awar": [19, 182], "ax": [6, 16, 22, 23, 26, 31, 32, 33, 85, 122, 123, 124], "axi": [3, 4, 5, 6, 9, 11, 13, 16, 22, 31, 32, 33, 85, 86, 122, 123, 124, 155], "azizpour": [174, 186], "b": [3, 5, 9, 10, 12, 13, 19, 22, 23, 27, 28, 86, 87, 90, 92, 93, 94, 95, 122, 126, 128, 131, 132, 133, 136, 137, 140, 141, 142, 151, 158, 178, 186], "b0": 44, "b1": 44, "b2": 44, "b3": 44, "b4": 44, "b5": 44, "b862013c0dc2b540cf96a123a6766e54": 76, "b_i": 127, "ba": [3, 186], "bachnorm": 160, "back": [10, 12, 13], "backbon": [36, 38, 39, 40, 44, 185], "backward": [13, 94, 95], "bagautdinov": [88, 89, 186], "balaji": 186, "balanc": 125, "bank": [45, 53, 78], "bao": 186, "baqu": [88, 89, 186], "bar": [175, 176, 177], "barh": 22, "basart": [12, 186], "base": [0, 3, 4, 5, 11, 17, 19, 26, 34, 36, 46, 47, 50, 51, 54, 56, 57, 103, 105, 107, 108, 109, 110, 111, 122, 124, 126, 128, 132, 133, 134, 136, 137, 142, 143, 150, 151, 159, 160, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 186], "base_lay": [27, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "baselin": [12, 36, 38, 39, 40, 41, 42, 43, 44, 160, 182, 186], "basic_aug": [46, 47, 50, 51, 54, 56, 57], "batch": [1, 2, 3, 6, 10, 12, 13, 26, 31, 32, 33, 34, 36, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 86, 87, 88, 89, 90, 92, 93, 94, 95, 102, 104, 106, 107, 110, 112, 122, 126, 128, 131, 132, 133, 136, 137, 140, 141, 142, 143, 149, 152, 153, 154, 155, 158, 162, 174, 178, 179, 180, 181, 187], "batch_first": [93, 94, 95], "batch_idx": [178, 179, 180, 181], "batch_img": [6, 31, 32, 33], "batch_repeat": [38, 40], "batch_siz": [3, 4, 5, 6, 9, 10, 11, 12, 13, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 86, 87, 164, 165, 166, 167, 168, 169, 170, 172, 174, 185], "batch_target": [6, 31, 32, 33], "batchconv2d": 155, "batchensembl": [38, 40, 86, 87, 162], "batchensemblewrapp": 86, "batchlinear": 155, "batchnorm": [4, 38, 160, 174, 178, 179, 180], "batchnorm2d": [4, 38, 174], "battledai": 186, "bauer": 186, "baumgartn": 186, "bayesian": [2, 4, 5, 11, 23, 37, 96, 97, 98, 99, 100, 101, 114, 119, 121, 127, 160, 173, 174, 182, 187], "bayesian_lenet": 3, "bayesian_method": [2, 187], "bcewithlogitsloss": 112, "be_conv2d": 86, "be_linear": 87, "becaus": 83, "been": [12, 156], "befor": [10, 19, 22, 23, 28, 37, 62, 78, 79, 80, 81, 82, 83, 86, 87, 126, 155], "begin": [10, 185], "beginin": 160, "behavior": [10, 56, 57, 58], "being": 155, "belong": 184, "below": [5, 9, 10, 12, 19, 28, 186], "benchmark": [0, 14, 15, 34, 64, 66, 73, 77, 182, 185, 186, 187], "benefit": 185, "bengio": [3, 19, 186], "best": [6, 19, 27, 31, 32, 33, 36, 37, 93], "beta": [107, 108, 113], "better": [6, 19, 23, 27, 28, 36, 126, 159, 185, 186], "between": [5, 19, 64, 66, 77, 86, 87, 88, 90, 113, 123, 124, 126, 139, 141, 146, 148, 149, 150, 156, 159, 160, 169], "bewar": 164, "beyond": [136, 186], "bia": [38, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 175, 177], "bias": 91, "big": [145, 146, 148, 149, 169], "bilinear": [6, 31, 32, 33, 50, 54], "bin": [23, 38, 125, 127, 178, 181, 186], "binari": [19, 38, 39, 40, 45, 48, 49, 52, 53, 78, 79, 80, 81, 82, 93, 112, 125, 126, 127, 135, 136, 152, 153, 178, 181], "bincount": [6, 31, 32, 33], "bird": 13, "birmakatze_s": 16, "bissacco": 186, "bit": [3, 19], "black": 37, "blitz": 3, "bloch": [182, 186], "block": [0, 10, 12, 86, 88, 89, 90, 100, 160], "blue": [22, 26], "blueprint": [3, 5, 6, 9, 27, 28, 31, 32, 33], "blundel": [3, 99, 186], "blur": 10, "bmvc": [182, 186], "bn_updat": 160, "bnn": 3, "bo": 186, "bool": [38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 122, 123, 124, 125, 126, 127, 131, 141, 151, 155, 156, 158, 160, 162, 163, 164, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185], "boolean": 91, "border_collie_blanca_y_negra_hembra_": 16, "boston": [55, 83], "both": [10, 12, 22, 27, 36, 90, 92, 93, 100, 144, 147, 149, 155, 162], "bottleneck": 9, "bottom": [6, 31, 32, 33], "bottou": [3, 19, 186], "bound": [3, 119], "bouniot": 186, "branch": 37, "break": 37, "bridg": 173, "bridge_norm": 173, "brier": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 31, 32, 33, 126, 136], "brier_scor": 126, "brieuc": 186, "bright": [16, 57, 58], "broadcast": 93, "brokenpipeerror": 13, "buc": 186, "buffer": [12, 86, 87, 141], "build": [0, 6, 10, 12, 23, 31, 32, 33, 66, 73, 163, 181], "built": [10, 12, 19, 23, 184], "bulatov": 186, "bungert": 186, "burden": 36, "burg": 19, "bursuc": [182, 186], "c": [3, 5, 6, 10, 13, 19, 23, 31, 32, 33, 46, 47, 50, 54, 64, 66, 73, 77, 124, 126, 128, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 151, 165, 166, 178, 184, 185], "c_": [86, 90, 102, 104, 106, 107, 110], "c_i": 127, "cal": [3, 11], "cal_dataset": 23, "calcul": [123, 124, 125, 127, 128, 132, 139, 142, 151], "calibr": [3, 4, 5, 6, 9, 10, 11, 12, 19, 20, 21, 22, 31, 32, 33, 34, 38, 46, 47, 50, 51, 54, 115, 124, 125, 126, 127, 136, 175, 176, 177, 178, 181, 184, 185, 187], "calibration_dataload": 23, "calibration_error": [125, 127], "calibration_set": 185, "calibrationerror": [23, 125], "call": [3, 4, 5, 10, 19, 23, 36, 86, 87, 160, 168, 170, 184], "callabl": [59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 94, 95], "camvid": 56, "can": [0, 3, 4, 5, 9, 10, 12, 19, 22, 23, 26, 27, 28, 36, 37, 38, 39, 40, 56, 57, 58, 62, 86, 94, 95, 137, 156, 164, 178, 180, 181, 183, 185, 186], "cannot": 62, "capabl": [10, 12], "capac": [90, 92], "capit": 27, "car": 13, "carduelis_tristis_": 16, "carefulli": [62, 174], "carlo": [1, 2, 34, 37, 38, 39, 40, 174, 187], "carsten": 186, "case": [10, 19, 22, 23, 26, 27, 28, 36, 86, 129, 134, 138, 184, 185], "cat": 13, "categor": [11, 184], "categori": [10, 12], "categorical_nl": [128, 142], "categoricalnl": 142, "cauchi": [27, 102, 103], "causal": [94, 95], "cd": 183, "cell": 19, "center": [16, 185], "centercrop": [16, 19], "certain": [19, 93, 125], "chang": [19, 22, 37, 90, 92, 156], "channel": [19, 38, 39, 40, 86, 88, 89, 90, 92, 100, 102, 104, 106], "characterist": 152, "charl": [99, 186], "check": [10, 19, 27, 36, 37, 78, 79, 80, 81, 82, 83, 182, 183, 185], "checkpoint": [10, 12, 36, 156, 163, 186], "chen": [156, 186], "cheng": 186, "chocolatin": [9, 12, 26], "choic": [19, 185], "choos": [36, 66, 73, 183, 185], "chosen": [66, 73, 141, 174], "christian": 186, "christoph": 19, "chuan": 186, "cifar": [12, 13, 20, 21, 23, 34, 36, 46, 47, 64, 65, 66, 67, 68, 187], "cifar10": [36, 47, 185], "cifar100": [36, 46], "cifar100datamodul": 23, "cifar10c": [10, 64], "cifar10datamodul": [10, 12, 22, 36, 185], "cifar_packed_net": 13, "cifarc_subset": [64, 66, 77], "circ": 87, "circular": [90, 100], "ciss": 186, "cite": 186, "cityscap": [36, 57], "ckpt": [12, 19, 22, 36], "ckpt_path": [6, 22, 31, 32, 33, 36, 163], "cl": [3, 11, 19], "clamp": 137, "class": [3, 4, 5, 9, 10, 12, 13, 19, 22, 23, 27, 28, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185], "class_count": [6, 31, 32, 33], "class_weight": [6, 31, 32, 33], "classic": [26, 36, 156, 185], "classif": [3, 4, 5, 6, 8, 13, 22, 23, 28, 31, 32, 33, 36, 38, 39, 40, 45, 48, 49, 52, 53, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 116, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 163, 173, 178, 182, 185, 187], "classifi": [3, 4, 5, 7, 8, 9, 19, 34, 187], "classificationroutin": [3, 4, 5, 9, 10, 11, 12, 19, 22, 36, 119, 185], "classmethod": [85, 86, 87], "clean": 27, "clear": 37, "cli": [178, 180, 181, 182], "cli_main": 36, "clip": 22, "clone": [37, 183], "close": 19, "cnn": 19, "coarse_label": 65, "coat": 186, "code": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34, 37, 185], "coeffici": 160, "cohes": [10, 12], "coincid": 122, "collect": [156, 178, 179, 180, 181], "color": [6, 22, 31, 32, 33, 84], "color_palett": [6, 31, 32, 33, 84], "colorjitt": [57, 58], "colour": 13, "com": [76, 186], "combin": 117, "come": [10, 12, 37], "command": [36, 183, 185], "commenc": [10, 12], "comment": 37, "commerci": [59, 62, 74], "commit": [37, 183], "common": [16, 64, 66, 73, 77, 123, 171, 182, 186], "commonli": [145, 148], "commun": [10, 12], "compar": [12, 19, 26, 27, 150], "comparison": 143, "compat": [10, 12, 94, 95], "complet": [19, 28], "compli": [37, 62, 90, 92], "compon": [10, 12, 94, 95], "compos": [6, 10, 11, 13, 16, 19, 31, 32, 33, 56, 57, 58, 86], "comprehens": [37, 182], "comput": [0, 3, 5, 10, 12, 19, 27, 73, 75, 89, 92, 93, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 185, 186], "computation": [5, 19, 137], "conan": 186, "concentr": 125, "conceptu": 184, "concern": 83, "concret": [55, 83], "conda": 183, "condit": [6, 10, 31, 32, 33, 37], "conf": 135, "confer": [19, 182], "confid": [6, 11, 19, 22, 23, 31, 32, 33, 114, 123, 127, 130, 132, 133, 135, 139, 175, 176, 177], "confidence_img": [6, 31, 32, 33], "confidence_scor": 22, "config": [23, 36, 185], "configur": [182, 185], "configure_optim": [38, 39, 40, 178, 180, 181], "conflictu": 115, "conform": [20, 21, 34, 140, 187], "conformal_model": 22, "confus": 0, "connect": [86, 89, 92, 100], "connector": 9, "connexion": [88, 90], "consid": [3, 9, 139, 151, 173, 178, 186], "consist": [13, 19, 27, 65, 67, 68, 69, 70, 71, 72, 75, 86, 87, 140, 157], "constant": [0, 120], "constrain": 158, "constraint": [19, 90, 92], "constrast": 19, "construct": 127, "constructor": 158, "consum": 181, "contain": [10, 19, 23, 26, 36, 37, 50, 54, 66, 73, 123, 124, 128, 142, 151, 155, 158, 179, 180, 182, 185], "content": [36, 186], "context": [0, 27, 168, 170], "continu": [6, 33, 37], "contrari": 27, "contrast": [3, 16, 57, 58, 124], "contribut": [28, 151, 182, 183], "contributor": 37, "control": [4, 99, 113], "conv1": [13, 19, 185], "conv1d": [92, 96], "conv2": [13, 19, 185], "conv2d": [13, 19, 86, 88, 90, 97, 155, 162], "conv3d": 98, "conv_bia": [12, 22, 23, 38], "conveni": [10, 12, 36], "convers": 155, "convert": [4, 6, 16, 31, 32, 33, 86, 87, 151, 155, 162, 173, 174], "convert_lay": [155, 162], "convolut": [10, 12, 13, 19, 38, 39, 40, 86, 88, 90, 100, 102, 104, 106, 107, 110, 186], "convolv": [86, 88, 90, 100], "cooper": [23, 186], "core": [9, 28, 158], "corinna": 19, "cornebis": [3, 186], "correct": [19, 27, 124, 127, 130, 139, 151, 155], "correctli": 19, "correspond": [3, 4, 10, 12, 19, 28, 37, 38, 39, 40, 86, 87, 93, 113, 122, 123, 124, 128, 129, 130, 142, 150, 178, 179, 180, 181, 184, 185], "corrupt": [10, 14, 15, 34, 46, 47, 64, 66, 73, 77, 186, 187], "cort": 19, "cosin": 19, "cosineannealinglr": 19, "cost": 19, "cottontail_rabbit": 16, "couceiro": 186, "could": [12, 19, 23, 27, 28, 137], "count": [6, 31, 32, 33, 172], "counter": 174, "counterpart": [155, 162], "cov": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 31, 32, 33, 123, 124], "cov_threshold": 139, "covari": 160, "covatxrisk": 129, "cover": [27, 185], "coverag": [19, 22, 37, 123, 124, 129, 130, 131, 138, 139, 140], "coverage_at_risk": 130, "coverager": 22, "cpu": [6, 12, 19, 22, 31, 32, 33, 156, 163, 174, 175, 176, 177, 182, 183], "creat": [5, 6, 12, 16, 27, 28, 31, 32, 33, 36, 37, 78, 79, 80, 81, 82, 86, 87, 160, 183, 185], "creativ": 73, "criteria": [12, 171], "criterion": [10, 13, 38, 39, 40, 165, 166, 167, 168, 169, 170, 171, 172, 178, 181], "critic": [146, 186], "crop": [19, 50, 54, 56, 57, 58], "crop_siz": [56, 57, 58], "cross": [10, 13, 19, 23, 112], "crossentropyloss": [3, 4, 5, 6, 9, 10, 12, 13, 19, 28, 31, 32, 33, 36, 185], "crucial": [0, 10, 12, 127], "csv": [38, 39, 40, 178, 179, 180, 181], "csv_filenam": [178, 179, 180, 181], "cubic": 26, "cuda": [10, 12, 22, 174, 175, 176, 177], "curat": [75, 186], "current": [23, 37, 126, 133, 137, 156, 157, 160, 178, 179, 180, 184], "curv": [19, 122, 123, 124, 152], "custom": [12, 46, 47, 50, 51, 54, 56, 57, 58, 134, 185], "cutmix": 178, "cutmix_alpha": [38, 39, 40], "cutout": [46, 47, 51], "cvpr": [75, 125, 186], "cvpr2023": 186, "cvprw": 186, "cycl": 160, "cycle_length": [156, 159, 160], "cycle_start": [156, 159, 160], "d": [3, 12, 16, 113, 117, 132, 186], "d1": 150, "d2": 150, "d3": 150, "d9": 16, "d_model": [94, 95], "daan": 186, "dai": 186, "dan": [10, 16, 64, 66, 77, 186], "daniel": [182, 186], "daniela": [26, 186], "data": [3, 4, 5, 6, 9, 11, 19, 22, 23, 28, 31, 32, 33, 36, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 84, 86, 87, 88, 89, 99, 100, 101, 113, 143, 155, 175, 176, 177, 178, 179, 180, 181, 182, 185], "data_augment": [15, 187], "data_connector": 9, "databas": 186, "datait": [4, 5, 11, 13], "dataload": [3, 4, 5, 6, 9, 11, 13, 19, 27, 28, 31, 32, 33, 46, 47, 50, 51, 54, 56, 57, 58, 160, 174, 175, 176, 177, 181, 185], "dataloader_idx": [178, 179, 180, 181], "datamodul": [3, 4, 5, 11, 19, 22, 26, 27, 36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 182, 185], "datapoint": 10, "dataset": [3, 4, 5, 6, 9, 10, 11, 12, 23, 26, 27, 28, 29, 30, 34, 36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 125, 130, 141, 148, 174, 178, 182, 185, 187], "dataset_nam": [27, 28, 55, 83], "datatyp": [102, 104, 106], "dauphin": 186, "david": [182, 186], "dawn": 186, "daxberg": [173, 186], "de": 19, "decai": [6, 11, 19, 31, 32, 33], "decid": 19, "decis": 127, "declar": 158, "decloss": 11, "decod": [84, 85, 94], "decode_target": [84, 85], "decreas": 26, "decrib": 6, "dedic": 28, "deep": [3, 5, 7, 8, 10, 12, 24, 25, 29, 30, 34, 37, 116, 117, 124, 125, 149, 160, 163, 173, 174, 185, 187], "deep_ensembl": [19, 31], "deer": 13, "def": [3, 4, 5, 6, 9, 11, 13, 16, 19, 22, 26, 27, 31, 32, 33, 36, 185], "default": [6, 11, 31, 32, 33, 36, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 112, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 137, 140, 141, 142, 149, 150, 151, 155, 156, 158, 160, 162, 163, 164, 173, 174, 175, 176, 177, 178, 179, 180, 181], "defaut": [144, 147], "defin": [0, 3, 4, 6, 9, 11, 19, 23, 26, 27, 31, 32, 33, 128, 130, 131, 141, 142, 163, 171, 178, 180, 181], "defocusblur": 16, "degrad": 10, "degre": [11, 110, 111], "demonstr": [6, 11, 12, 26, 31, 32, 33], "deng": 186, "denomin": 91, "dens": [120, 186], "densiti": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "depend": [4, 12, 27, 36, 144, 147, 158, 183, 184, 186], "depth": [6, 31, 32, 33, 41, 62, 63, 145, 146, 148, 149], "derloss": 26, "desai": 186, "descent": 19, "describ": [6, 31, 32, 33, 86, 120, 128, 142, 185], "design": [0, 6, 31, 32, 33, 125, 149], "desir": [10, 56, 57, 58, 88, 89, 185], "destin": 160, "detail": [6, 10, 23, 31, 32, 33, 36, 86, 127, 173, 178, 180, 181, 182, 184], "detect": [3, 6, 7, 8, 10, 13, 19, 22, 31, 32, 33, 34, 37, 38, 39, 40, 75, 120, 135, 154, 171, 178, 181, 185, 186, 187], "determin": [3, 4, 38, 39, 40, 44, 126, 128, 132, 133, 137, 139, 140, 141, 142, 150], "dev": [3, 37, 183], "develop": [19, 183], "deviat": [27, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 145], "devic": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 26, 27, 28, 31, 32, 33, 36, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 156, 160, 174, 175, 176, 177], "df": [110, 111], "diag_covari": 160, "diagon": [19, 160], "diagram": 23, "dict": [38, 39, 40, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 160, 178, 179, 180, 181, 185], "dict_kwarg": 36, "dictionari": 160, "dictionnari": [19, 27], "did": 13, "dietterich": [10, 16, 64, 66, 77, 186], "differ": [0, 4, 6, 10, 16, 19, 22, 36, 78, 79, 80, 81, 82, 83, 93, 126, 148, 149, 156, 160, 185], "digamma": 116, "digit": [3, 4, 11, 19, 186], "dilat": [86, 88, 90, 96, 97, 98, 102, 104, 106], "dim": [3, 4, 5, 6, 9, 11, 13, 31, 32, 33, 93], "dim_feedforward": [94, 95], "dimens": [3, 4, 6, 27, 31, 32, 33, 87, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 126, 128, 132, 133, 137, 140, 141, 142, 151, 167], "dimension": [179, 180], "dimitrij": 186, "dirac": 3, "directli": [19, 23, 36, 93, 175, 176, 177, 183, 185], "directori": [36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84], "dirichlet": [11, 116], "disabl": [27, 158], "disagr": [5, 141], "discard": 86, "discov": [9, 28], "discrimin": 124, "displai": [3, 13, 36], "dist": [26, 118, 142], "dist_arg": 42, "dist_estim": [27, 179, 180], "dist_famili": [26, 27, 28, 41, 42, 119, 179, 180], "dist_lay": 27, "dist_param": 26, "dist_sim": [38, 39, 40], "distanc": 178, "distmlp": 27, "distribut": [3, 5, 6, 7, 8, 11, 19, 22, 23, 26, 28, 31, 32, 33, 34, 37, 46, 47, 50, 51, 54, 75, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 117, 118, 119, 125, 127, 135, 142, 156, 166, 171, 178, 179, 180, 181, 184, 185, 186, 187], "distributionnllloss": [27, 28], "dive": 13, "diverg": [11, 119, 121, 137], "divers": [3, 6, 19, 31, 32, 33, 130], "divid": [112, 125, 127], "divis": [86, 87, 90, 92], "dm": [23, 185], "dmitri": 186, "dmitrii": 186, "do": [5, 6, 12, 13, 19, 23, 26, 27, 28, 36, 37, 93, 163, 178, 180, 181, 185], "doc": [36, 37, 183], "docstr": 37, "document": [3, 19, 182, 183, 186], "doe": [9, 37, 73, 112, 131, 151], "doesn": 84, "dog": 13, "dokania": 186, "doll\u00e1r": [120, 186], "don": [4, 5, 19, 34, 155], "done": [10, 12, 23, 94, 95], "dong": 186, "dorundo": 186, "dot": [165, 166, 168, 170], "dota": 79, "dota2": 48, "download": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 22, 23, 26, 27, 28, 31, 32, 33, 34, 51, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84], "download_h": 67, "download_img": 16, "downstream": 127, "draw_segmentation_mask": [6, 31, 32, 33], "drawn": 23, "drive": [6, 31, 32, 33, 182, 186], "drop": 37, "dropout": [1, 2, 34, 37, 38, 39, 40, 93, 94, 95, 158, 164, 187], "dropout_r": [5, 6, 9, 38, 39, 40, 42], "dtd": [50, 54], "dtype": [6, 31, 32, 33, 56, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106], "dubuisson": [182, 186], "due": 137, "duplic": 155, "durasov": [88, 89, 186], "durat": [19, 26], "dure": [3, 6, 11, 19, 26, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 119, 125, 127, 155, 157, 158, 162, 163, 178, 185], "dusenberri": 186, "dustin": 186, "e": [4, 36, 37, 56, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 93, 94, 95, 122, 130, 134, 135, 165, 183, 185, 186], "e_k": 93, "e_q": 93, "e_v": 93, "each": [6, 10, 12, 19, 22, 26, 31, 32, 33, 36, 37, 38, 39, 40, 86, 87, 88, 90, 92, 93, 112, 120, 123, 124, 126, 128, 131, 142, 155, 156, 158, 160, 165, 166, 167, 168, 169, 170, 172], "earli": 37, "eas": [19, 36], "easi": [0, 185, 186], "easili": [0, 6, 9, 23, 27, 28, 31, 32, 33, 185], "ec": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 31, 32, 33, 127], "eccv": 122, "edg": [56, 57, 58], "edgecolor": 26, "edit": [37, 183], "effect": [4, 10, 16, 56, 57, 58, 93, 148], "effici": [5, 17, 18, 23, 34, 86, 87, 140, 182, 185, 186, 187], "effortless": [173, 186], "egal": 19, "einop": [3, 5, 13, 185], "einsum": 92, "either": [19, 36, 38, 39, 40, 58, 73, 125, 127, 156, 158, 183, 185], "el": [124, 186], "elast": 16, "elbo": [3, 119], "elboloss": 3, "element": [23, 86, 88, 90, 93, 112, 143], "elif": 16, "elimin": 186, "elisa": 186, "ell": [128, 142], "ell_i": 128, "els": 26, "emanuel": [182, 186], "embed": 93, "embed_dim": [91, 93], "embeddingd": 93, "emili": 186, "emoji": 37, "empir": [131, 186], "emselog": 148, "enabl": [4, 5, 6, 10, 12, 36], "enable_model_summari": 27, "enable_progress_bar": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 26, 27, 28, 31, 32, 33], "enable_t": 22, "encod": [62, 84, 85, 94, 95, 100, 101, 126, 182, 186], "encode_target": [62, 84, 85], "encompass": 27, "end": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 155, 156, 160], "energi": [55, 83, 165], "enet": [6, 31, 32, 33], "enet_weigh": [6, 31, 32, 33], "enough": [19, 164], "ens_disagr": [3, 19], "ens_entropi": [3, 19], "ens_mi": [3, 19], "ens_perf": 19, "ens_routin": [19, 31], "ensembl": [3, 4, 5, 7, 8, 9, 18, 28, 29, 30, 37, 38, 39, 40, 44, 86, 87, 88, 90, 91, 92, 93, 94, 95, 132, 137, 155, 156, 157, 162, 163, 169, 171, 172, 178, 179, 180, 182, 185, 187], "ensemble_method": [18, 187], "ensemble_onli": [169, 171, 172], "ensemble_s": [169, 172], "ensta": [19, 183], "ensur": [19, 36, 37, 86, 87, 125, 126, 128, 142, 155, 178, 185], "entri": [84, 93, 126], "entropi": [3, 4, 5, 9, 10, 11, 12, 13, 19, 22, 23, 112, 166], "enumer": [13, 16], "environ": [10, 12, 37, 183], "enzo": [182, 186], "ep": [91, 94, 95, 114, 175, 176, 177], "epistem": [26, 115, 137, 186], "epoch": [3, 10, 11, 12, 13, 19, 26, 36, 156, 157, 159, 160], "equal": [86, 113, 155, 184], "equival": [19, 137], "erik": 186, "erron": 4, "error": [11, 19, 22, 23, 27, 37, 113, 122, 124, 125, 127, 130, 139, 143, 144, 145, 146, 147, 148, 149, 155, 164, 178, 181], "eschenhagen": 186, "especi": 127, "estim": [1, 3, 4, 5, 6, 11, 17, 19, 26, 27, 28, 31, 32, 33, 34, 36, 38, 39, 40, 44, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 113, 122, 124, 126, 132, 133, 136, 137, 141, 145, 146, 148, 149, 155, 158, 160, 163, 164, 166, 169, 172, 173, 174, 178, 179, 180, 182, 184, 185, 186], "et": [75, 99, 115, 123, 125, 127, 173, 185, 186], "etc": [6, 9, 10, 19, 28, 31, 32, 33, 37, 185], "ethic": 83, "eval": [3, 4, 5, 6, 9, 11, 22, 31, 32, 33, 160, 174], "eval_after_fit": 36, "eval_batch_s": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "eval_forward": [156, 160], "eval_grouping_loss": [19, 38, 39, 40, 178, 185], "eval_ood": [3, 10, 12, 19, 22, 23, 38, 39, 40, 46, 47, 50, 51, 54, 58, 178, 181, 185], "eval_s": [56, 57, 58], "eval_shift": [3, 10, 12, 19, 38, 39, 40, 46, 47, 50, 51, 54, 178, 179, 180, 181], "evalu": [0, 4, 5, 7, 8, 13, 19, 22, 23, 26, 27, 28, 34, 36, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 122, 123, 124, 126, 127, 128, 139, 142, 143, 146, 149, 150, 155, 156, 157, 158, 162, 178, 179, 180, 181, 185, 186, 187], "evaluation_forward": [179, 180], "evan": 186, "event": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "event_dim": [27, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "eventu": [36, 179, 180], "everi": [13, 159, 160], "evid": [3, 11, 119], "evidenti": [7, 8, 24, 25, 34, 116, 117, 187], "evolv": [19, 37], "exampl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 86, 87, 124, 125, 126, 127, 128, 130, 132, 133, 135, 139, 141, 142, 143, 145, 146, 148, 149, 150, 155, 181, 183, 186, 187], "except": [37, 158], "execut": [2, 6, 8, 15, 18, 21, 25, 30, 35, 36, 94, 95, 187], "exhaust": 186, "exist": [65, 67, 68, 84, 86, 87], "exp": 165, "expans": [38, 39, 40], "expect": [4, 19, 23, 38, 39, 40, 94, 95, 127, 165, 166, 167, 168, 169, 170, 171, 172], "experi": [26, 182, 183, 185], "explain": 37, "explan": [90, 92, 185], "explicitli": 37, "explor": [10, 22, 36, 182], "exponenti": [157, 184], "express": 19, "extens": 23, "extract": [23, 78, 79, 83], "f": [3, 4, 5, 6, 9, 11, 13, 16, 19, 22, 23, 27, 31, 32, 33, 76, 94, 95, 125, 127, 130, 135, 136, 139, 143, 145, 146, 148, 149, 150, 185, 186], "f8": 16, "face": [10, 19, 23, 37, 186], "facecolor": 26, "fact": 19, "factor": [38, 39, 40, 100, 101, 112, 144, 147], "falkner": 186, "fall": [127, 150], "fals": [3, 4, 5, 6, 9, 10, 11, 12, 13, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 38, 39, 40, 43, 46, 47, 50, 51, 54, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 90, 92, 93, 94, 95, 96, 97, 98, 99, 126, 127, 134, 135, 146, 147, 148, 149, 151, 155, 156, 160, 162, 163, 164, 175, 176, 177, 178, 179, 180, 181, 185], "famili": [27, 119, 179, 180], "familiar": 13, "farina": 186, "fashion": 51, "fashionmnist": [19, 51], "fast_dev_run": 36, "faster": 151, "fc1": [13, 19, 27, 185], "fc2": [13, 19, 27, 185], "fc3": [13, 19, 185], "featur": [6, 27, 28, 31, 32, 33, 87, 89, 91, 92, 93, 94, 95, 99, 101, 136, 178], "featureless": 37, "feedforward": [94, 95], "feel": [19, 37, 185], "fei": 186, "fellaji": [115, 186], "feng": 186, "few": 19, "field": 37, "fig": [6, 23, 26, 31, 32, 33], "figsiz": [6, 13, 16, 22, 31, 32, 33], "figur": [6, 13, 23, 26, 31, 32, 33, 122, 123, 124, 181], "file": [2, 3, 8, 15, 18, 21, 25, 30, 35, 38, 39, 40, 50, 54, 65, 67, 68, 178, 179, 180, 181, 182, 183, 185, 187], "file_arg": [65, 68], "filenam": [6, 12, 19, 22, 33, 36], "fill": [119, 156], "fill_between": 26, "filliat": 182, "filter": 186, "filterwarn": 27, "final": [3, 23, 26, 27, 126, 128, 136, 156, 184, 185], "find": [5, 9, 19, 28, 34, 131, 151, 178, 180, 181, 185, 186], "fine": 85, "fine_label": 65, "finish": [13, 26, 37], "first": [3, 4, 5, 6, 9, 10, 12, 13, 16, 19, 23, 27, 28, 31, 32, 33, 37, 86, 90, 92, 93, 94, 95, 99, 155, 160, 179], "fit": [3, 4, 5, 6, 9, 10, 11, 12, 19, 26, 27, 28, 31, 32, 33, 36, 51, 163, 174, 175, 176, 177, 178, 185], "fit_loop": 26, "fix": [19, 27, 110, 111, 116, 129, 134, 138, 175, 176, 177], "fixed_df": [110, 111], "flag": [9, 10, 12, 23, 28, 37, 93, 174], "flake8": 37, "flat_label": [6, 31, 32, 33], "flatten": [6, 13, 19, 31, 32, 33, 185], "flaw": [123, 186], "float": [19, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 78, 79, 80, 81, 82, 88, 89, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 124, 129, 130, 135, 139, 151, 157, 160, 175, 176, 177, 181], "float32": [6, 31, 32, 33, 56, 57, 58], "florenc": 186, "flow": 122, "focal": 120, "focus": [20, 34], "fog": 16, "folder": [3, 37, 182, 183, 185], "follow": [3, 4, 5, 6, 9, 11, 16, 19, 26, 27, 28, 31, 32, 33, 36, 37, 56, 57, 58, 65, 68, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 131, 144, 145, 146, 147, 148, 151, 183, 184, 185, 186], "fontsiz": 16, "footprint": [12, 141, 164], "foral": [128, 142], "forc": 156, "forecast": [93, 94, 95], "forget": [4, 5, 12], "fork": 37, "formal": [168, 170], "format": [36, 37, 155, 178, 179, 180, 181], "format_batch_fn": [19, 31, 32, 155, 178, 179, 180, 181, 185], "formul": [27, 93, 94, 95], "fort": 186, "forward": [5, 6, 13, 19, 27, 31, 32, 33, 86, 87, 93, 94, 95, 114, 115, 118, 119, 121, 123, 124, 144, 145, 146, 147, 148, 151, 155, 156, 158, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 185], "found": [63, 155], "foundat": 19, "four": [86, 88, 90], "fox": 186, "fpr": 135, "fpr95": [12, 19, 22, 154], "fprx": 134, "frac": [86, 87, 90, 92, 126, 128, 142, 143, 144, 145, 146, 147, 148, 149, 169, 172], "fraction": [78, 79, 80, 81, 82, 127, 139], "framework": [0, 4], "francesco": 186, "franchi": [19, 182, 186], "frank": 186, "free": [19, 185, 186], "freedom": [110, 111], "freez": 99, "freq_class": [6, 31, 32, 33], "frequent": [141, 172], "fritz": 186, "frog": 13, "from": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 18, 21, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 56, 57, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 100, 101, 113, 119, 121, 124, 125, 126, 127, 128, 130, 132, 133, 135, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 160, 163, 169, 172, 173, 178, 179, 181, 182, 185, 186, 187], "from_conv2d": 86, "from_dataset": 26, "from_linear": 87, "frost": 16, "frozen": [96, 97, 98, 99], "frustratingli": 186, "fr\u00e9d\u00e9ric": 186, "fua": [88, 89, 186], "full": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 58, 62, 92], "fulli": [6, 33, 89, 92], "function": [3, 4, 5, 6, 9, 10, 11, 12, 19, 23, 26, 27, 31, 32, 33, 36, 37, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 94, 95, 119, 127, 158, 163, 165, 173, 178, 179, 180, 181, 184, 185, 186], "functionn": [14, 34], "further": 22, "g": [23, 36, 37, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 113, 134, 135, 184], "gabriel": 114, "gal": 186, "galleri": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34, 187], "game": [48, 79], "gamma": [6, 13, 26, 32, 33, 38, 39, 40, 42, 90, 92, 93, 94, 95, 100, 107, 108, 117, 120, 185], "gang": 186, "gao": 186, "garipov": 186, "garranos_fight": 16, "gather": [66, 73, 119, 121], "gaussian": [19, 26, 97, 98, 160], "gaussianblur": 16, "gaussiannois": 16, "ga\u00ebl": 186, "gca": 26, "geifman": [124, 186], "gener": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34, 37, 123, 129, 134, 137, 138, 159], "geoff": 186, "geoffrei": [182, 186], "georg": 186, "get": [5, 10, 13, 23, 27, 28, 37, 46, 47, 50, 51, 54, 119, 179, 180, 185, 186], "get_dist_class": 26, "get_dist_linear_lay": 27, "get_imag": 16, "getlogg": 27, "ghahramani": 186, "ghassen": 186, "gianni": [19, 182, 186], "gilmer": [73, 186], "gimpel": 12, "giovanni": 186, "girshick": [120, 186], "gist": 76, "git": 183, "github": [62, 76, 185], "given": [16, 19, 27, 89, 92, 93, 112, 118, 119, 129, 130, 139, 144, 147, 157, 169, 172, 178, 184], "gjsd": 137, "glassblur": 16, "glest": 19, "glm": 173, "go": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 22, 23, 26, 27, 28, 31, 32, 33, 185], "good": [4, 13, 27, 184], "gordon": 186, "goyal": [120, 186], "gpu": [3, 4, 5, 6, 9, 11, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 45, 48, 49, 52, 53, 55, 163, 182, 183, 185], "gradient": [3, 13, 19, 156, 157], "grayscal": 19, "greater": [23, 148, 160, 165, 166, 167, 168, 170, 172], "gregori": 186, "grid": 26, "griffith": 186, "ground": [3, 4, 9, 11, 19, 26, 123, 124, 126, 127, 128, 130, 135, 136, 139, 142, 144, 145, 146, 147, 148, 149], "ground_truth": 139, "groundtruth": 13, "group": [37, 38, 39, 40, 56, 84, 86, 87, 88, 89, 90, 92, 96, 97, 98, 100, 102, 104, 106, 136, 178, 185], "group_class": [56, 84], "guestrin": 186, "guez": 186, "guid": [182, 185], "guidanc": [145, 146, 148, 149], "guidelin": 182, "guo": [23, 184, 186], "h": [56, 57, 58, 75, 166, 169, 174, 185], "h_": [86, 87, 90, 92, 103, 105, 108, 109, 111], "ha": [10, 23, 56, 57, 58, 91, 93, 112, 123, 124], "haffner": [3, 19, 186], "haicon24": 19, "hand": 3, "handl": [3, 4, 5, 6, 9, 10, 11, 12, 19, 23, 28, 31, 32, 33, 86, 87, 178, 179, 180, 185], "handwritten": 19, "hao": 186, "haoqi": 186, "happen": [23, 155], "hardwar": [6, 9, 28, 31, 32, 33], "harri": 186, "hassan": 186, "hat": [143, 144, 145, 146, 147, 148, 149], "hauskrecht": [23, 186], "havasi": 186, "have": [3, 4, 5, 6, 9, 11, 12, 19, 26, 28, 34, 36, 37, 93, 155, 156, 174, 182, 183, 184, 185], "he": [120, 186], "head": [93, 94, 95], "heavili": [13, 86, 87], "height": [56, 57, 58, 90], "hein": 186, "helmholtz": 19, "help": [19, 36, 37], "henc": [10, 19, 26], "hendryck": [10, 12, 16, 64, 66, 77, 135, 186], "heng": 186, "hennig": 186, "here": [0, 3, 4, 5, 6, 9, 12, 13, 19, 23, 27, 28, 31, 32, 33, 36, 86, 87, 127, 178, 180, 181, 185], "hesit": [34, 185], "hessian": 173, "hessian_struct": 173, "heteroscedast": [27, 113, 186], "hf_hub_download": [6, 12, 19, 22, 33], "hidden": [26, 100, 101], "hidden_dim": [26, 28, 42], "hidden_s": [100, 101], "hierarch": [93, 94, 95, 186], "high": [3, 19, 113], "higher": [19, 122, 132, 133, 137, 141, 165, 166, 169, 172], "highest": [4, 151, 167, 168, 170], "highlight": 4, "hint": [94, 95], "hoc": [4, 46, 47, 50, 51, 54, 182], "hold": 23, "home": [9, 12, 26], "hongyi": 186, "hook": [37, 183], "hopcroft": 186, "horizontalalign": 16, "hors": 13, "hossein": 186, "host": 37, "hot": 126, "hous": [55, 83, 182], "how": [6, 10, 12, 13, 19, 22, 23, 27, 28, 31, 32, 33, 36, 45, 48, 49, 52, 53, 55, 122, 126, 127, 128, 132, 133, 137, 140, 141, 142, 173, 185], "howev": [19, 23, 27, 28, 36, 37, 90, 92, 184], "html": 37, "htru2": 49, "http": [3, 6, 16, 19, 31, 32, 33, 62, 76, 186], "huang": 186, "hub": 19, "hug": [19, 23, 37], "huggingfac": 19, "huggingface_hub": [6, 12, 22, 33], "hugh": [156, 186], "human": 186, "hutter": 186, "hyper": [6, 31, 32, 33], "hyperparamet": [3, 11, 27, 36, 178, 179, 180], "hypothes": 122, "i": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 37, 38, 39, 40, 46, 47, 50, 51, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 92, 93, 94, 95, 100, 101, 102, 104, 106, 107, 110, 111, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185], "iacca": 186, "iccv": 186, "iclr": [3, 12, 16, 19, 64, 66, 77, 136, 182, 185, 186], "icml": [3, 5, 12, 23, 99, 174, 175, 176, 177, 184, 186], "icml2015": 3, "icmlw": [73, 186], "id": [50, 54, 62, 135, 178, 179], "idea": [19, 184, 185], "ideal": [3, 19], "identifi": 19, "ieee": [3, 19, 182, 186], "ignor": [6, 27, 31, 32, 33, 93, 125, 127, 151], "ignore_index": [6, 31, 32, 33, 125, 127, 151, 152, 153], "iid": 12, "ijcv": 186, "illustr": [13, 14, 34], "im": [6, 31, 32, 33], "ima": 144, "imag": [3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 19, 31, 32, 33, 34, 46, 47, 50, 51, 54, 56, 57, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 85, 86, 88, 90, 149, 178, 179, 180, 181, 183, 186, 187], "image_id": [4, 5, 9], "imagenet": [38, 39, 40, 50, 54], "imagenetc": 50, "imagenetvari": [69, 70, 71, 72], "images_d": 16, "imbal": 131, "img": [3, 4, 5, 6, 9, 11, 13, 22, 31, 32, 33], "img_pil": [6, 31, 32, 33], "img_seg": [6, 31, 32, 33], "immer": 186, "impact": [16, 123, 124, 174], "implement": [3, 4, 5, 10, 11, 12, 26, 28, 36, 37, 86, 87, 92, 112, 137, 156, 171, 181, 186], "import": [3, 4, 5, 6, 9, 11, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 37, 56, 57, 58, 124, 125, 126, 127, 128, 130, 132, 133, 135, 139, 141, 142, 143, 145, 146, 148, 149, 150, 185], "improv": [3, 9, 17, 18, 20, 21, 34, 135, 184, 187], "impulsenois": 16, "ims": 147, "imshow": [3, 4, 5, 6, 9, 11, 13, 16, 22, 31, 32, 33], "in_channel": [4, 5, 6, 9, 10, 11, 12, 19, 22, 23, 31, 32, 33, 36, 38, 39, 40, 86, 88, 90, 96, 97, 98, 100, 102, 104, 106, 107, 110, 185], "in_featur": [26, 27, 28, 42, 87, 89, 92, 99, 101, 103, 105, 108, 109, 111, 155], "inaturalist": 50, "incept": 186, "includ": [3, 6, 10, 12, 19, 31, 32, 33, 37, 38, 39, 40, 69, 70, 71, 72, 94, 95, 103, 105, 108, 109, 111, 156, 175, 176, 177, 178, 183, 184], "incom": [86, 87], "incorrect": [3, 19, 86, 87, 94, 95, 124, 130, 139], "increas": [9, 19, 26, 37, 90, 92, 164], "independ": [19, 186], "index": [6, 16, 31, 32, 33, 85, 125, 127, 181, 182, 184], "indic": [4, 19, 27, 38, 39, 40, 93, 126, 141, 151, 165, 166, 167, 168, 169, 170, 172, 178, 179, 180, 181], "inf": 11, "infer": [3, 4, 19, 58, 163], "info": 151, "inform": [3, 5, 12, 19, 28, 59, 74, 137, 169], "inherit": [0, 36], "init_b": [175, 177], "init_v": 176, "init_w": [175, 177], "initi": [19, 23, 56, 57, 58, 69, 70, 71, 72, 86, 87, 91, 99, 135, 139, 143, 145, 146, 148, 149, 150, 155, 158, 160, 175, 176, 177, 185], "initialize_stat": 160, "inject": [56, 57, 58], "inner": [157, 178], "inner_loss": [3, 119], "inplac": 10, "input": [6, 13, 19, 22, 23, 27, 28, 31, 32, 33, 38, 39, 40, 55, 56, 57, 58, 59, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 118, 119, 122, 123, 124, 125, 126, 127, 128, 132, 133, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 151, 155, 156, 158, 162, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 184], "input_shap": 55, "input_typ": [165, 166, 167, 168, 169, 170, 171, 172], "insight": 34, "inspir": [13, 37, 76, 86, 87, 120], "instabl": [114, 137], "instanc": [28, 36, 85], "instanci": 36, "instanti": [3, 5, 130], "instead": [28, 37, 56, 57, 58, 62], "insur": 185, "int": [6, 11, 16, 19, 27, 31, 32, 33, 36, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 66, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 123, 124, 125, 126, 127, 131, 134, 135, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 174, 175, 176, 177, 178, 179, 180, 181, 185], "int64": [6, 31, 32, 33, 56, 57, 58], "integ": [127, 128, 131, 142, 151], "integr": [10, 12, 37], "intellig": 3, "intend": 37, "intent": [52, 81], "interest": [19, 27, 36, 37, 185], "interfac": [19, 171], "intermedi": [94, 95], "intern": [19, 75], "internet": [62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84], "interpol": [50, 54], "interpret": [10, 26, 56, 57, 58, 137], "intersect": 151, "interv": [6, 26, 31, 32, 33], "introduc": [11, 19, 26, 86, 87], "introduct": [26, 182], "introductori": 11, "intuit": 3, "invari": 149, "invers": [26, 107, 108, 117, 144, 147, 150], "investig": 73, "involv": [11, 26], "io": 62, "ioff": 186, "iou": 151, "ipynb": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33], "is_caus": [93, 95], "is_ensembl": [3, 5, 9, 19, 28, 178, 179, 180], "isabel": [182, 186], "isort": 37, "issu": [34, 37, 73, 185], "item": [4, 5, 9, 13, 19, 23, 130, 135, 139, 143, 145, 146, 148, 149, 150], "iter": [3, 4, 5, 6, 9, 11, 13, 22, 31, 32, 33, 175, 176, 177], "its": [10, 12, 13, 22, 26, 27, 84, 86, 87, 90, 92, 123, 124, 150, 156, 158, 184, 185], "itself": 158, "ivan": 186, "izmailov": 186, "j": [3, 4, 5, 9, 11, 12, 13, 16, 19, 22, 186], "jacob": 186, "jaeger": 186, "jasper": 186, "jean": [182, 186], "jenatton": 186, "jensen": 137, "jeremi": 186, "jeremia": 186, "jeremiah": 186, "jerfel": 186, "jia": 186, "jiaheng": 186, "jian": 186, "jimmi": 186, "john": 186, "join": [3, 4, 5, 9, 11, 13], "jonathon": 186, "jordi": 186, "joshua": 186, "jost": 186, "journal": [75, 182], "jpegcompress": 16, "jpg": 16, "julien": 186, "jupyt": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34], "just": [3, 6, 12, 19, 23, 28, 31, 32, 33, 185], "justin": [73, 186], "k": [3, 12, 19, 23, 26, 86, 87, 120, 169, 172, 174, 184, 186], "kadavath": 186, "kai": 186, "kaim": 186, "kamali": 186, "kandemir": [11, 116, 186], "kaplan": [11, 116, 186], "karen": 186, "kavukcuoglu": [3, 186], "kazmierczak": 182, "kdim": 93, "keep": 27, "keep_var": 160, "keepdim": 11, "kei": [12, 13, 23, 64, 66, 73, 77, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "kera": 19, "kernel": [86, 88, 90, 100, 102, 104, 106, 178, 186], "kernel_s": [86, 88, 90, 96, 97, 98, 100, 102, 104, 106], "kernel_tau_max": [38, 39, 40], "kernel_tau_std": [38, 39, 40], "keuper": 186, "kevin": 186, "key_padding_mask": 93, "keyword": [64, 69, 70, 71, 72, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154], "kilian": 186, "kin8nm": [27, 55, 83], "kingma": 3, "kl": [11, 119, 121], "kl_weight": [3, 119], "klau": 186, "klein": 186, "km": [144, 147], "know": [36, 37], "known": [10, 12, 184], "komodaki": 186, "korai": 186, "krasin": 186, "krishnan": 186, "kristiadi": 186, "krizhevski": 186, "kron": 173, "kuznetsova": [75, 186], "kwarg": [12, 64, 69, 70, 71, 72, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156], "kwon": 12, "l": [3, 19, 93, 94, 95, 116, 186], "l1": [125, 127], "l2": [125, 127], "label": [3, 4, 5, 6, 9, 11, 13, 19, 20, 21, 22, 26, 31, 32, 33, 34, 59, 65, 66, 68, 73, 112, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 139, 141, 142, 149, 151, 154, 175, 176, 177, 178, 187], "label_smooth": 112, "lafag": [182, 185, 186], "lakshminarayanan": 186, "lambda": [107, 108, 150], "lanc": [11, 186], "languag": 186, "lanq": 186, "laplac": [27, 28, 104, 105, 173], "larg": [12, 19, 36, 74, 141, 163, 186], "larger": [4, 19, 131], "last": [6, 10, 13, 19, 36, 38, 39, 40, 90, 92, 93, 94, 95, 103, 105, 108, 109, 111, 158, 164, 184, 185], "last_lay": [5, 6, 158, 164, 173], "last_layer_dropout": [38, 39, 40], "lastli": 158, "latent": [100, 101, 182, 186], "later": [6, 19, 28, 122, 124, 130, 139, 182, 183], "latest": 183, "latter": 183, "laurent": [19, 182, 185, 186], "layer": [4, 5, 6, 11, 13, 19, 26, 28, 38, 39, 40, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 155, 158, 162, 164, 174, 182, 184], "layer_arg": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "layer_norm_ep": [94, 95], "layernorm": [91, 94, 95], "le": 186, "lead": [12, 86, 87, 141, 159, 186], "learn": [3, 5, 6, 10, 11, 12, 19, 26, 27, 31, 32, 33, 36, 37, 86, 87, 94, 95, 110, 111, 116, 125, 160, 173, 175, 176, 177, 186], "learnabl": [86, 87, 88, 89, 90, 91, 92, 100, 101], "learning_r": [6, 31, 32, 33], "learnt": 28, "lebel": 186, "lectur": 19, "lecun": [3, 19, 186], "lee": [156, 186], "left": [6, 26, 31, 32, 33, 86, 144, 149, 165], "leftdepth": 62, "leftimg8bit": 62, "leftlabel": 62, "legend": 26, "len": [16, 22, 23], "lena": 186, "lenet": [1, 2, 7, 8, 19, 34, 187], "length": [56, 57, 58, 93, 160, 163], "lengthi": 23, "leon": 186, "less": [4, 23, 155, 163, 174], "let": [3, 4, 5, 6, 9, 10, 11, 13, 19, 27, 31, 32, 33, 36, 37, 184, 185], "level": [10, 16, 19, 73, 129, 134, 135, 138, 139, 185], "leverag": 185, "lfloor": 86, "li": [3, 4, 11, 186], "lib": [9, 12, 26], "librari": [0, 3, 10, 12, 16, 19, 37, 173, 185, 186], "licens": [59, 62, 73, 74, 78, 79, 80, 81, 82, 83, 182], "lifelong": [86, 87, 186], "light": [6, 31, 32, 33, 93, 94, 95], "lightn": [0, 9, 10, 11, 12, 19, 23, 27, 178, 182], "lightning_log": [19, 36], "lightningargumentpars": 36, "lightningcli": 36, "lightningdatamodul": [26, 36], "lightningmodul": [36, 38, 39, 40, 178, 180, 181, 185], "ligthn": 185, "like": [6, 10, 12, 13, 19, 28, 31, 32, 33, 36, 37, 56, 57, 58, 135, 185], "likelihood": [3, 4, 5, 9, 11, 12, 19, 23, 26, 27, 28, 113, 117, 118, 128, 137, 142, 168, 170, 184], "lim": 186, "lin": [120, 186], "linchuan": 186, "line": [10, 12, 36], "linear": [13, 19, 27, 87, 89, 92, 94, 95, 99, 101, 103, 105, 108, 109, 111, 155, 162], "liner": 23, "linewidth": 26, "ling": 186, "link": [6, 9, 19, 28, 31, 32, 33, 37, 173], "link_approx": 173, "linspac": 26, "lint": 37, "list": [6, 13, 23, 31, 32, 33, 37, 46, 47, 50, 51, 54, 156, 163, 178, 182, 185, 186], "liter": [51, 63, 141, 163, 173, 174, 175, 176, 177], "litong": 186, "liu": 186, "lmbda": [107, 108, 149, 150], "ln": [6, 31, 32, 33], "load": [10, 16, 19, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 163], "load_from_checkpoint": 12, "load_hf": 23, "load_state_dict": [6, 12, 13, 19, 22, 23, 33], "loader": [6, 31, 32, 33, 160], "loc": [26, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "local": [145, 146, 148, 149], "local_dir": 19, "locat": [10, 27, 62], "log": [3, 4, 5, 6, 9, 10, 11, 12, 19, 23, 26, 27, 28, 31, 32, 33, 38, 39, 40, 113, 116, 117, 118, 128, 142, 143, 148, 149, 165, 166, 178, 179, 180, 181], "log10_metr": 143, "log_": 143, "log_every_n_step": 26, "log_plot": [23, 38, 39, 40, 43, 178, 179, 181, 185], "log_segmentation_plot": 181, "logarithm": [143, 148, 149], "logdir": 19, "logger": 181, "logic": [3, 9, 19, 28], "logit": [3, 4, 5, 9, 12, 13, 23, 75, 112, 114, 115, 151, 165, 167, 175, 176, 177, 178, 184], "longer": 19, "look": [13, 19, 23, 37, 185], "loop": [10, 12, 13, 26, 158, 164], "lopez": 186, "lose": 12, "loss": [10, 12, 22, 36, 38, 39, 40, 41, 42, 43, 44, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 128, 136, 142, 149, 178, 179, 180, 181, 182, 185], "loss_typ": 116, "lot": [19, 27], "low": [11, 19, 113], "lower": [3, 19, 26, 27, 28, 119, 122, 126, 132, 133, 167, 168, 169, 170], "lpbnn": [100, 101], "lr": [3, 6, 10, 11, 12, 13, 19, 26, 27, 28, 31, 32, 33, 36, 175, 176, 177, 185], "lr_decai": [6, 31, 32, 33], "lr_decay_epoch": [6, 31, 32, 33], "lr_mult": 19, "lr_schedul": [6, 19, 31, 32, 33, 36], "lr_updat": [6, 31, 32, 33], "lundberg": [156, 186], "lvert": 127, "lvl5": 10, "l\u00fcth": 186, "m": [3, 5, 12, 13, 23, 37, 86, 87, 90, 92, 113, 116, 144, 147, 174, 178, 185, 186], "macc": [6, 31, 32, 33], "machin": [19, 37], "macro": 131, "maddox": 186, "made": [19, 56, 57, 58, 94, 95], "mae": [26, 27, 28], "mae_rel_metr": 145, "maerel": 145, "magazin": 3, "magnitud": [143, 148], "mahdi": 186, "mai": [9, 12, 23, 37, 59, 74, 78, 79, 80, 81, 82, 83, 86, 87, 141, 184], "maier": 186, "main": [0, 3, 11, 27, 37, 124], "main_corrupt": 16, "mainli": 36, "maintain": 37, "major": 182, "make": [5, 19, 37, 66, 90, 92, 127, 132, 136, 137, 158, 182, 185, 186], "make_dataset": [66, 73], "make_grid": [3, 4, 5, 9, 11, 13], "male": 16, "manag": [10, 12], "mancini": 186, "mandatori": 183, "mani": [9, 45, 48, 49, 52, 53, 55, 185, 186], "manual": 112, "map": [19, 149], "map_loc": [12, 19], "marc": [182, 186], "margret": 186, "marin": 186, "mario": 186, "market": [45, 53, 78], "martinez": [182, 186], "martiu": [113, 186], "marton": 186, "mask": [6, 31, 32, 33, 38, 39, 40, 56, 57, 58, 88, 89, 93, 94, 95, 118, 142], "masked_fil": [6, 31, 32, 33], "masksembl": [38, 40, 88, 89, 185], "massimiliano": 186, "match": [12, 13, 23, 36, 56, 57, 58, 75, 93, 125, 186], "mathbf": [165, 166, 168, 169, 170], "mathcal": [86, 87], "mathia": 186, "matplotlib": [3, 4, 5, 6, 9, 11, 13, 16, 22, 26, 31, 32, 33, 85, 122, 123, 124], "matric": [86, 87], "matrix": [173, 175], "matteo": 186, "matter": [10, 12], "matthia": 186, "max": [4, 5, 6, 9, 10, 12, 13, 31, 32, 33, 125, 127, 150, 178, 186], "max_": [127, 168, 170], "max_depth": [41, 61, 62, 63], "max_epoch": [3, 4, 5, 6, 9, 10, 11, 12, 13, 19, 22, 26, 27, 28, 31, 32, 33, 36, 185], "max_fpr": 152, "max_it": [175, 176, 177], "max_num_model": 160, "max_pool2d": 19, "max_scal": [57, 58], "maximilian": 186, "maximum": [6, 10, 12, 19, 31, 32, 33, 38, 39, 40, 62, 63, 127, 129, 130, 150, 160, 167, 168, 170, 175, 176, 177, 178, 181, 186], "maxlogitcriterion": 12, "maxpool2d": [13, 185], "maxsoftmaxcriterion": 12, "mazeika": 12, "mb": [2, 8, 15, 18, 21, 25, 30, 35, 187], "mc": [4, 38, 39, 40, 158, 164, 173, 174], "mc_batch_norm": 4, "mc_batch_siz": [4, 174], "mc_dropout": [5, 6], "mc_model": [5, 6], "mcbatchnorm2d": 174, "mce": 127, "mean": [3, 5, 6, 10, 13, 19, 22, 26, 27, 28, 31, 32, 33, 57, 58, 91, 92, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 128, 131, 132, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 160, 166, 179, 180], "mean_absolute_inverse_error": 144, "mean_iou": 151, "mean_squared_error": 147, "meangtrelativeabsoluteerror": 146, "meangtrelativesquarederror": 145, "meaning": 143, "measur": [19, 124, 125, 126, 127, 135, 141, 185, 186], "medium": 19, "melih": [11, 186], "mem": [2, 8, 15, 18, 21, 25, 30, 35, 187], "member": [19, 86, 87, 90, 92, 155, 162], "memori": [6, 12, 19, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 94, 141, 158, 163, 164, 175, 176, 177, 181], "memory_is_caus": 94, "memory_key_padding_mask": 94, "memory_mask": 94, "merg": [3, 4], "messag": 37, "method": [3, 4, 5, 9, 11, 12, 22, 23, 26, 28, 36, 38, 39, 40, 46, 47, 50, 51, 54, 86, 87, 140, 156, 158, 171, 174, 178, 182, 185], "metric": [3, 4, 5, 6, 9, 11, 12, 19, 22, 23, 26, 27, 28, 31, 32, 33, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 178, 179, 180, 181, 182], "metric_subsampling_r": [43, 181], "mha": 93, "michael": 186, "michigan": 16, "micro": 131, "might": 185, "miguel": 186, "mike": 186, "mileston": 36, "milo": 186, "mimo": [38, 40, 185], "min": 186, "min_alpha": [107, 108], "min_beta": [107, 108], "min_depth": [61, 62, 63], "min_df": [110, 111], "min_lmbda": [107, 108], "min_scal": [57, 58, 102, 103, 104, 105, 106, 109, 110, 111], "mind": 182, "mini": 13, "minim": [11, 19, 23, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 186], "minimum": [63, 160], "minimum_channels_per_group": 90, "minlength": [6, 31, 32, 33], "minu": 160, "minut": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33], "miou": [6, 31, 32, 33, 151], "misclassifi": [12, 135], "miss": 36, "mit": 186, "mix": [10, 12, 23, 31, 32, 33], "mixmod": [38, 39, 40], "mixtur": [96, 97, 98, 99], "mixtyp": [38, 39, 40], "mixup": [38, 39, 40, 178], "mixup_alpha": [38, 39, 40], "mixup_param": [38, 39, 40, 178], "mlp": [11, 24, 25, 34, 36, 42, 187], "mm": [144, 147], "mnist": [3, 4, 5, 9, 11, 19, 51, 73], "mnist1d": 19, "mnistc": 51, "mnistc_subset": 73, "mnistdatamodul": [3, 4, 5, 9, 11], "mode": [3, 5, 19, 27, 37, 85, 156, 158, 160, 172, 174, 178, 183], "model": [7, 8, 13, 20, 24, 29, 34, 36, 37, 44, 86, 87, 94, 95, 100, 101, 115, 119, 121, 123, 124, 125, 127, 128, 132, 133, 135, 139, 142, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 187], "model_path": [6, 33], "modern": [23, 136, 175, 176, 177, 184, 186], "modif": 19, "modifi": [13, 19, 56, 57, 58, 160], "modul": [3, 4, 5, 9, 13, 19, 26, 27, 38, 39, 40, 44, 46, 47, 50, 51, 54, 56, 57, 58, 86, 87, 91, 103, 105, 107, 108, 109, 110, 111, 119, 121, 155, 156, 157, 158, 159, 160, 162, 163, 164, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185], "moham": [115, 186], "momentum": [13, 157], "monitor": 185, "monocular": [145, 146, 148, 149], "monoton": 130, "mont": [1, 2, 34, 37, 38, 39, 40, 174, 187], "more": [3, 5, 10, 12, 23, 26, 27, 28, 36, 125, 129, 130, 134, 138, 143, 148, 151, 168, 170, 173, 174, 178, 180, 181, 184, 186], "moreov": 5, "morvan": 186, "most": [4, 5, 10, 12, 19, 37, 123, 141, 172, 185], "most_uncertain": 4, "mostajabi": 12, "mostli": [4, 6, 9, 28, 31, 32, 33, 37], "motionblur": 16, "moustapha": 186, "move": [156, 157], "mozharovskyi": 186, "mse": [26, 27, 28, 116, 147], "mse_log": 148, "mse_rel_metr": 146, "mselog": 148, "mseloss": 28, "mserel": 146, "msle": 148, "msle_metr": 148, "msp": [12, 38, 39, 40, 178, 181, 185], "mu": [73, 186], "mu_init": [96, 97, 98, 99], "muad": [1, 2, 29, 30, 34, 36, 58, 182, 187], "muad_mean": [6, 31, 32, 33], "muad_std": [6, 31, 32, 33], "muad_tutori": [6, 33], "muaddatamodul": [6, 31, 32, 33], "much": [28, 122, 123], "multi": [10, 11, 26, 28, 94, 120, 122, 126, 145, 146, 148, 149], "multiclass": [23, 125, 127], "multihead": [93, 94, 95], "multiheadattent": [93, 94, 95], "multimod": [93, 94, 95], "multinoulli": 184, "multioutput": [146, 147], "multipl": [5, 13, 19, 129, 130, 141, 143, 160, 182, 186], "multipli": [19, 37, 90, 91, 92, 93, 94, 95, 100, 101], "multisteplr": 36, "murat": [11, 186], "must": [93, 125, 127, 144, 147, 148, 155, 163, 171, 178, 180, 181], "mutual": [137, 169], "mymodel": 185, "n": [35, 86, 87, 91, 102, 104, 106, 107, 110, 123, 124, 126, 127, 130, 132, 133, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 183], "n_": [86, 172], "n_estim": 92, "n_i": 86, "naeini": [23, 127, 186], "nam": 186, "name": [0, 9, 28, 36, 37, 55, 66, 73, 83, 123, 124, 178, 179, 180, 181], "nan": [5, 6, 10, 11, 19, 31, 32, 33, 129, 130], "natur": 186, "naval": [55, 83], "navig": 37, "nb_epoch": [6, 31, 32, 33], "nbatch": 112, "ndarrai": [66, 73], "ndim": [6, 31, 32, 33], "necessari": [10, 12, 13], "need": [3, 4, 5, 6, 10, 11, 12, 16, 19, 22, 23, 26, 36, 37, 93, 94, 95, 178, 179, 180, 185], "need_weight": 93, "neg": [3, 5, 9, 19, 26, 27, 28, 113, 117, 118, 128, 137, 142, 148, 165, 167, 168, 170], "neil": 186, "neither": 155, "net": 13, "network": [1, 2, 4, 5, 10, 11, 12, 13, 16, 19, 23, 26, 34, 64, 66, 77, 86, 87, 90, 92, 93, 94, 95, 99, 100, 101, 113, 114, 119, 121, 124, 136, 149, 174, 175, 176, 177, 182, 187], "netzer": 186, "neural": [1, 2, 4, 5, 10, 11, 12, 13, 16, 19, 23, 26, 34, 64, 66, 77, 99, 100, 101, 113, 114, 119, 121, 124, 136, 175, 176, 177, 182, 187], "neurip": [5, 11, 26, 116, 124, 149, 160, 163, 173, 186], "neuron": 26, "new": [28, 36, 93, 126, 133, 137, 183], "next": [3, 4, 5, 9, 10, 11, 12, 13, 22, 26], "ng": 186, "nguyen": 186, "nhead": [94, 95], "nig": 26, "nikita": [88, 89, 186], "niko": 186, "niu": 186, "nixon": [125, 186], "nll": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 26, 27, 28, 31, 32, 33, 118, 128, 142], "nn": [3, 4, 5, 6, 9, 10, 11, 12, 13, 19, 26, 27, 28, 31, 32, 33, 36, 38, 39, 40, 46, 47, 50, 51, 54, 56, 57, 58, 86, 87, 103, 105, 107, 108, 109, 110, 111, 119, 121, 155, 156, 157, 158, 159, 160, 162, 163, 164, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185], "no_grad": [6, 11, 26, 31, 32, 33], "nois": [10, 65, 68, 100, 101], "noisi": [26, 186], "non": [3, 45, 48, 49, 52, 53, 148, 163], "none": [3, 4, 5, 6, 9, 11, 13, 16, 19, 22, 26, 27, 31, 32, 33, 36, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 136, 137, 140, 141, 142, 151, 152, 153, 156, 157, 160, 163, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185], "noplot": 37, "noqa": 16, "nor": [37, 155], "norm": [4, 94, 95, 125, 127], "norm_first": [94, 95], "normal": [1, 2, 6, 10, 19, 26, 27, 31, 32, 33, 34, 38, 57, 58, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 117, 123, 124, 126, 128, 132, 135, 136, 137, 142, 174, 184, 187], "normalinversegamma": 26, "normalinversegammalinear": 26, "normalization_lay": 38, "normallinear": 27, "norman": [73, 186], "note": [3, 4, 10, 12, 13, 19, 26, 27, 36, 62, 79, 90, 92, 93, 163, 178, 179, 180, 181], "notebook": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34], "notmnist": 51, "now": [3, 4, 5, 6, 9, 10, 11, 12, 19, 23, 26, 27, 28, 33, 36, 37], "np": [3, 4, 5, 9, 11, 13, 22, 66, 73], "npimg": [3, 4, 5, 9, 11, 13], "npy": [65, 67, 68], "num": [3, 90, 92], "num_bin": [125, 127], "num_bins_cal_err": [38, 43, 178, 181], "num_channel": [3, 4, 5, 6, 9, 11, 31, 32, 33], "num_class": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 23, 31, 32, 33, 36, 38, 39, 40, 43, 44, 125, 126, 127, 131, 136, 151, 165, 166, 167, 168, 169, 170, 172, 175, 177, 178, 181, 185], "num_corrupt": 16, "num_dataload": [46, 47], "num_estim": [3, 4, 5, 6, 13, 19, 31, 32, 36, 38, 39, 40, 42, 44, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 126, 136, 155, 158, 160, 162, 163, 164, 174, 178, 185], "num_exampl": 22, "num_featur": 136, "num_head": 93, "num_image_plot": 179, "num_output": [26, 28, 146, 147], "num_output_channel": 19, "num_repeat": [155, 178], "num_sampl": [3, 26, 119, 161], "num_samples_to_plot": 181, "num_tta": [46, 47, 50, 51, 54, 178], "num_work": [3, 5, 6, 9, 10, 11, 12, 13, 19, 22, 26, 27, 28, 31, 32, 33, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "number": [4, 5, 6, 9, 10, 11, 12, 19, 26, 28, 31, 32, 33, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 123, 124, 125, 126, 127, 131, 132, 133, 136, 137, 140, 141, 143, 146, 147, 151, 155, 156, 158, 159, 160, 162, 163, 164, 174, 175, 176, 177, 178, 179, 180, 181, 185], "numer": [91, 114, 137], "numpi": [3, 4, 5, 9, 11, 13, 16, 22, 37, 78, 79, 80, 81, 82, 83], "o": [50, 54, 75, 185], "object": [3, 6, 11, 26, 31, 32, 33, 37, 75, 119, 120, 122, 123, 124, 186], "observ": [19, 123, 124], "obstacl": 37, "obtain": [23, 28, 127, 186], "occur": 160, "off": [3, 4, 5, 6, 9, 11, 13, 16, 22, 31, 32, 33, 139], "offici": [11, 86, 87], "often": [19, 27, 150], "olga": 186, "olivi": [19, 182, 186], "on_batch": [6, 158, 164], "on_test_epoch_end": [178, 179, 180, 181], "on_test_start": [178, 179, 180], "on_train_start": [178, 179, 180], "on_validation_epoch_end": [178, 179, 180, 181], "on_validation_start": [178, 179, 180], "onc": 178, "one": [3, 10, 12, 19, 23, 36, 38, 64, 66, 73, 74, 77, 126, 128, 131, 132, 133, 136, 137, 141, 142, 144, 147, 155, 163, 179, 180, 185], "ones": 91, "onli": [3, 10, 12, 13, 16, 19, 37, 38, 39, 40, 46, 47, 50, 56, 57, 62, 90, 92, 93, 126, 151, 155, 158, 159, 160, 162, 163, 164, 174, 178, 179, 180, 181, 185], "onlin": [52, 81], "onto": 181, "ood": [3, 6, 13, 19, 22, 31, 32, 33, 38, 39, 40, 50, 54, 58, 62, 134, 135, 154, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182], "ood_criteria": [12, 165, 166, 167, 168, 169, 170, 171, 172], "ood_criterion": [12, 22, 38, 39, 40, 178, 181, 185], "ood_d": [50, 51, 54], "ood_data": 19, "ood_dl": 19, "ood_transform": 51, "ood_viz_data": 19, "oodcriterioninputtyp": [165, 166, 167, 168, 169, 170, 171, 172], "open": [16, 34, 37, 75, 186], "openaccess": 186, "opencv": 183, "openimag": [50, 54, 75], "oper": [89, 92, 94, 95, 152, 155], "optic": 122, "optim": [3, 4, 5, 6, 9, 10, 11, 12, 19, 28, 31, 32, 33, 36, 38, 39, 40, 93, 124, 156, 173, 175, 176, 177, 178, 179, 180, 181, 185, 186], "optim_cifar10_resnet18": [4, 5, 9], "optim_recip": [3, 4, 5, 6, 9, 10, 11, 12, 19, 26, 27, 28, 31, 32, 33, 38, 39, 40, 178, 179, 180, 181, 185], "optim_regress": 26, "optima": [159, 186], "optimize_prior_precis": 173, "option": [6, 10, 19, 31, 32, 33, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 137, 140, 141, 142, 151, 155, 158, 160, 162, 163, 164, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "oracl": [122, 124], "order": [3, 4, 19, 143], "org": [3, 6, 16, 31, 32, 33, 186], "organ": 36, "origin": [10, 11, 12, 16, 23, 26, 37, 38, 39, 40, 44, 62, 75, 86, 93, 94, 95, 112, 127, 163, 186], "orthogon": 19, "other": [6, 12, 19, 22, 27, 31, 32, 33, 56, 57, 58, 155, 182], "otherwis": [12, 19, 23, 56, 57, 58, 78, 79, 80, 81, 82, 90, 92, 93, 94, 95, 110, 111, 125, 127, 128, 156, 158, 159, 160, 164], "our": [3, 4, 5, 9, 10, 11, 12, 13, 26, 27, 28, 36, 127, 185], "out": [6, 7, 8, 10, 19, 22, 23, 27, 28, 31, 32, 33, 34, 36, 37, 46, 47, 50, 51, 54, 75, 86, 87, 90, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 135, 163, 171, 178, 179, 180, 185, 186, 187], "out_channel": [86, 88, 90, 96, 97, 98, 100, 102, 104, 106, 107, 110], "out_featur": [27, 87, 89, 92, 99, 101, 103, 105, 108, 109, 111, 155], "outlin": 13, "output": [3, 4, 10, 11, 12, 13, 26, 27, 31, 32, 33, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 127, 128, 132, 135, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 167, 171, 178, 179, 180, 184], "output_dim": [26, 27, 28, 42, 179, 180], "output_prob": 6, "output_probs_per_est": 6, "output_strid": 43, "outputs_proba": [31, 32, 33], "outsid": 23, "over": [3, 6, 11, 13, 19, 26, 31, 32, 33, 36, 86, 126, 128, 131, 132, 133, 137, 140, 141, 142, 144, 145, 148, 151, 152, 153], "overcom": [123, 186], "overestim": 148, "overrid": [36, 158], "overview": [10, 11, 27], "own": [12, 19, 158], "p": [3, 19, 23, 120, 128, 142, 166, 168, 169, 170], "p_": [128, 142], "p_1": [166, 168, 170], "p_2": [166, 168, 170], "p_c": [166, 168, 170], "p_class": [6, 31, 32, 33], "p_i": [127, 166, 168, 170], "pack": [7, 8, 17, 18, 29, 30, 34, 36, 38, 39, 40, 90, 91, 92, 93, 94, 95, 182, 185, 187], "packag": [9, 12, 13, 26, 37, 183, 185], "packed_model": 19, "packed_net": [13, 185], "packed_perf": 19, "packed_resnet": 185, "packed_routin": [19, 32], "packed_small_unet": 32, "packedconv2d": [13, 19, 185], "packedlenet": 19, "packedlinear": [13, 19, 185], "packednet": [13, 185], "pad": [5, 9, 11, 19, 86, 88, 90, 93, 96, 97, 98, 100, 102, 104, 106, 118, 142], "pad_if_need": [57, 58], "pad_valu": 13, "padding_mask": [118, 142], "padding_mod": [90, 96, 97, 98, 100], "page": [34, 37, 182, 184, 185], "pai": 19, "pakdaman": 186, "palett": 84, "panda": 183, "paper": [6, 11, 16, 19, 26, 31, 32, 33, 37, 86, 87, 120, 182, 185, 186], "paperswithcod": 37, "paradigm": 19, "paradox": [115, 186], "parajuli": 186, "parallel": 93, "parametparent": [64, 123, 129, 138], "parser": 36, "part": [3, 4, 5, 11, 19, 26, 37], "partial_comput": 124, "particular": 185, "particularli": [19, 37, 125, 146, 148], "partli": 19, "pascal": [88, 89, 186], "pass": [5, 6, 9, 19, 28, 36, 37, 64, 69, 70, 71, 72, 86, 87, 94, 95, 121, 122, 123, 124, 125, 126, 130, 132, 133, 134, 135, 136, 137, 139, 142, 155, 156, 158, 160, 171, 178, 179, 180, 181, 185], "path": [3, 4, 5, 9, 11, 12, 13, 28, 45, 47, 48, 50, 52, 53, 54, 56, 57, 58, 59, 62, 63, 66, 73, 74, 77, 78, 79, 80, 81, 82, 84, 163], "pathlib": [3, 4, 5, 9, 11, 28], "patrick": 186, "pattern": 28, "paul": 186, "pavel": 186, "pavlo": 186, "paz": 186, "pdf": [3, 186], "peilin": 186, "penal": [114, 148], "penalti": [22, 114], "pennerath": 186, "per": [13, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 90, 93, 94, 95, 132, 133, 137, 140, 141, 154], "per_channel": 91, "percentag": 150, "perceptron": [11, 26, 28], "pereyra": 114, "perez": 186, "perf": [4, 19], "perf_ap": 22, "perf_rap": 22, "perf_thr": 22, "perfectli": 19, "perform": [5, 7, 8, 9, 12, 13, 19, 22, 27, 28, 34, 36, 46, 50, 54, 93, 123, 124, 128, 142, 158, 160, 164, 178, 179, 180, 181, 187], "permut": [16, 22], "persist": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "persistent_work": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "person": 37, "perturb": [16, 19, 64, 66, 77, 186], "peter": 19, "peterson": 186, "phase": [22, 36], "pheng": 186, "philip": 186, "philipp": 186, "pierr": [88, 89, 186], "pil": [16, 19, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 85], "pilimag": 13, "pin": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "pin_memori": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "pinto": 186, "piotr": 186, "pip": [37, 182, 183], "pipelin": [10, 12, 185], "pitfal": [113, 186], "pixacc": [6, 31, 32, 33], "pixel": [6, 16, 19, 31, 32, 33, 179], "pixel_regress": 163, "pixmix": 59, "planar": [145, 146, 148, 149], "plane": [13, 86], "plant": [55, 83], "pleas": [3, 4, 19, 26, 37, 184, 186], "pleiss": [23, 184, 186], "plot": [4, 23, 26, 38, 39, 40, 85, 122, 123, 124, 127, 178, 179, 181], "plot_oracl": 122, "plot_sampl": 85, "plot_valu": [122, 123, 124], "plt": [3, 4, 5, 6, 9, 11, 13, 16, 22, 26, 31, 32, 33], "png": 16, "podoprikhin": 186, "point": [16, 19, 27, 113, 119, 151, 156, 179, 180], "pointwis": [27, 184], "pont": 186, "pool": [13, 19, 185], "popul": 174, "popular": 37, "pos_label": [134, 135, 154], "posit": [93, 134, 135, 154], "possibl": [37, 90], "post": [4, 19, 22, 23, 46, 47, 50, 51, 54, 174, 175, 176, 177, 178, 181, 182, 185], "post_hoc_method": [21, 187], "post_process": [4, 22, 23, 173, 174, 175, 176, 177, 178, 181], "posterior": [3, 5, 96, 97, 98, 99, 100, 101, 156, 160, 173, 182, 186], "posteriori": 19, "postprocess": [178, 181], "postprocess_dataload": 23, "postprocess_set": [22, 23, 46, 47, 50, 51, 54], "power": [55, 83, 150], "pr": 37, "practic": [11, 19, 26, 36], "pre": [19, 23, 37, 183], "precis": [6, 9, 10, 12, 19, 28, 31, 32, 33, 86, 153, 173], "pred": [6, 31, 32, 33, 123, 124, 131, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 181], "pred_img": [6, 31, 32, 33], "pred_mask": [6, 31, 32, 33], "pred_typ": 173, "predefin": [27, 36], "predict": [3, 4, 5, 9, 11, 12, 13, 19, 20, 21, 23, 24, 26, 27, 28, 34, 36, 38, 39, 40, 44, 118, 119, 124, 125, 126, 127, 128, 130, 131, 132, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 163, 166, 169, 172, 173, 174, 178, 179, 180, 181, 184, 186, 187], "predicted_prob": [125, 127, 139], "predictor": 22, "prefer": 185, "prefix": [36, 160], "prepar": [3, 19, 178, 179, 180], "prepare_data": [6, 10, 22, 23, 31, 32, 33, 51, 55], "preprocess": [10, 12, 19], "present": [26, 59, 86, 87], "pretrain": [19, 38], "pretrained_backbon": [41, 43], "pretti": 13, "prevent": 93, "previou": [12, 23, 36], "previous": [133, 137, 142], "principl": [115, 186], "print": [3, 4, 5, 6, 9, 10, 11, 12, 13, 19, 22, 23, 27, 31, 32, 33, 86, 87, 123, 124, 125, 126, 127, 128, 130, 132, 133, 135, 139, 141, 142, 143, 145, 146, 148, 149, 150], "prior": [11, 19, 26, 94, 95, 96, 97, 98, 99, 173], "prior_pi": [96, 97, 98, 99], "prior_sigma_1": [96, 97, 98, 99], "prior_sigma_2": [96, 97, 98, 99], "pritzel": 186, "priya": 186, "prob": [3, 4, 5, 9, 11, 23, 65, 67, 68, 124, 126, 128, 130, 132, 133, 136, 137, 139, 141, 142], "prob_routin": 28, "probabilist": [24, 25, 26, 34, 113, 126, 127, 128, 141, 142, 163, 179, 180, 186, 187], "probabl": [6, 12, 19, 23, 31, 32, 33, 38, 39, 40, 93, 123, 124, 125, 126, 127, 128, 130, 132, 133, 136, 137, 139, 142, 151, 166, 168, 169, 170, 172, 175, 176, 177, 178, 181, 184, 186], "probit": 173, "problem": [4, 5, 9, 11, 26, 28, 37, 148], "probs_per_est": 13, "procedur": [50, 54], "proceed": [3, 19, 186], "process": [10, 12, 13, 19, 22, 23, 46, 47, 50, 51, 54, 152, 153, 155, 156, 174, 175, 176, 177, 178, 181, 182, 183, 185], "prod_": 86, "produc": [86, 88, 89, 90, 92], "progress": [175, 176, 177, 184], "project": [37, 93, 183], "propag": [6, 31, 32, 33], "propens": [6, 31, 32, 33], "propensity_scor": [6, 31, 32, 33], "proper": [22, 23, 185], "properli": 37, "properti": [84, 90], "proport": [19, 135, 141], "propos": [3, 16], "propuls": [55, 83], "protein": [55, 83], "protocol": [10, 12], "provid": [0, 3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 38, 39, 40, 42, 44, 46, 47, 50, 51, 54, 56, 57, 58, 93, 94, 95, 122, 123, 124, 125, 127, 129, 130, 143, 163, 185], "pth": [6, 13, 33], "publish": 19, "pull": 37, "puneet": 186, "purpos": [19, 36, 62, 93], "push": 37, "put": [3, 19, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 123, 156, 178, 179, 180], "py": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 36, 185, 187], "pypi": 182, "pyplot": [3, 4, 5, 6, 9, 11, 13, 16, 22, 26, 31, 32, 33], "pytest": 37, "python": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34, 36, 182, 183, 185], "python3": [9, 12, 26, 37], "pytorch": [3, 9, 10, 12, 13, 19, 23, 27, 36, 37, 86, 87, 112, 120, 159, 160, 163, 180, 182, 183], "q": [23, 184, 186], "qi": 186, "quad": [128, 142], "qualiti": [10, 19, 55, 83, 122, 124, 126], "quantif": [13, 19, 37, 100, 101, 182, 186], "quantifi": [11, 26, 116, 186], "quentin": 186, "queri": 93, "question": [19, 34], "quickstart": 182, "r": [13, 26, 120], "r_": [86, 87], "r_group": [86, 87], "rahul": 186, "rais": [37, 38, 39, 40, 73, 125, 126, 127, 128, 131, 132, 133, 136, 137, 141, 142, 150, 155, 163, 164, 174, 185], "raise_count": 174, "ran": 186, "rand_augment_opt": [50, 54], "randaug": [46, 47, 50, 54], "randn": [86, 87], "random": [3, 13, 19, 28, 78, 79, 80, 81, 82, 83, 160, 181], "random_label1": 68, "random_label2": 68, "random_label3": 68, "random_split": 23, "randomcrop": [19, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77], "randomhorizontalflip": [6, 31, 32, 33, 57, 58], "randomrescal": [57, 58], "rang": [3, 4, 5, 9, 10, 11, 13, 16, 19, 22, 113, 127, 128, 142, 148], "rank": 124, "rank_zero": 27, "rap": 22, "rate": [3, 6, 10, 11, 19, 22, 26, 27, 31, 32, 33, 36, 38, 39, 40, 124, 131, 134, 135, 139, 140, 175, 176, 177, 181], "ratio": [19, 141, 150, 172], "rc": 124, "re": 13, "reach": 28, "read": [19, 62, 186], "reader": 5, "readi": [38, 39, 40, 185], "real": [12, 19, 23, 186], "rearrang": [3, 5, 13, 185], "recal": [134, 135, 184], "recall_level": 135, "receiv": [87, 152, 155], "recip": [4, 5, 9, 19, 28, 38, 39, 40, 185], "recognit": [3, 19, 186], "reconsid": 37, "red": [55, 83], "reduc": [6, 12, 37, 90, 92, 126, 128, 132, 133, 137, 140, 141, 142, 164], "reduct": [112, 113, 114, 115, 116, 117, 118, 120, 126, 128, 131, 132, 133, 136, 137, 140, 141, 142], "redux": [173, 186], "refer": [5, 6, 10, 13, 31, 32, 33, 37, 62, 64, 66, 73, 75, 77, 86, 87, 88, 89, 93, 94, 95, 99, 100, 101, 113, 114, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 135, 136, 145, 146, 148, 149, 150, 156, 159, 160, 163, 173, 174, 175, 176, 177, 182, 185], "reflect": [90, 100], "reg": 26, "reg_weight": [11, 26, 114, 115, 116, 117], "region": 125, "regress": [25, 36, 42, 55, 83, 117, 142, 143, 144, 145, 146, 147, 148, 149, 150, 163, 173, 179, 180, 182, 185, 187], "regressionroutin": [26, 27, 28], "regroup": 12, "regular": [11, 22, 26, 114, 115, 116, 117, 149, 186], "regularization_rank": 22, "regularli": 157, "reinstal": 37, "reject": 19, "rel": [113, 145, 146, 148], "rel_mean_absolute_error": 145, "rel_mean_squared_error": 146, "relat": [19, 178], "relationship": [75, 186], "releas": 73, "reliabl": [19, 23, 127], "relu": [11, 13, 19, 27, 94, 95, 155, 185], "remain": [12, 37], "rememb": 37, "remov": [0, 6, 31, 32, 33], "remove_unus": 61, "ren": 186, "repeat": [13, 31, 32, 36, 38, 40, 86, 87, 88, 89, 155, 158, 162], "repeat_training_input": [155, 162], "repeattarget": [19, 31, 32, 155, 178], "replac": [6, 12, 19, 33, 37, 174], "replace_lay": 174, "replic": [19, 90, 100, 155], "repo_id": [6, 12, 19, 22, 33], "report": 186, "repositori": [37, 183, 185], "repres": [5, 11, 19, 23, 26, 27, 28, 143, 171, 184, 186], "represent": [19, 90, 92, 125], "reproduc": [26, 37, 185], "request": [16, 37], "requir": [19, 125, 127, 169, 171, 172, 185], "rescal": [56, 57, 58, 112, 160], "reset": [23, 163, 174], "reset_count": 174, "reset_model_paramet": [19, 31, 163], "reshap": [3, 4], "residu": [10, 12, 186], "resiz": [6, 16, 31, 32, 33, 50, 54, 56, 57, 58], "resnet": [10, 12, 22, 23, 36, 38, 40, 185], "resnet18": [10, 12, 22, 36, 185], "resnet18_c10": [12, 22], "resnet18_c100": 23, "resnet28x10": 40, "resnetbaselin": 36, "resnetcli": 36, "resourc": [3, 5], "respect": [19, 36, 94, 95, 145], "respons": 186, "rest": 163, "restrict": [6, 23, 31, 32, 33], "result": [4, 5, 6, 9, 10, 12, 13, 27, 28, 31, 32, 33, 36, 38, 39, 40, 86, 87, 94, 95, 124, 132, 133, 135, 137, 139, 141, 143, 145, 146, 148, 149, 150, 178, 179, 180, 181, 185], "rethink": 186, "return": [6, 13, 16, 19, 26, 27, 31, 32, 33, 36, 38, 39, 40, 46, 47, 50, 51, 54, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 114, 115, 119, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 156, 158, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 185], "revisit": 186, "rewrit": 27, "rfloor": 86, "rgb": [6, 16, 31, 32, 33, 85], "rho": [38, 40], "ricci": 186, "richard": 186, "right": [6, 16, 31, 32, 33, 86, 144, 149, 165], "risk": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 31, 32, 33, 123, 124, 129, 130, 138, 139], "risk_at_cov": 139, "risk_threshold": 130, "riskatxcov": 138, "rmsce": 127, "rmse": [26, 27, 28, 147], "rmserel": 146, "robust": [10, 14, 15, 34, 64, 66, 73, 77, 186, 187], "rodolph": 186, "rom": 186, "root": [3, 4, 5, 6, 9, 10, 11, 12, 13, 19, 22, 23, 27, 28, 31, 32, 33, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 127, 149, 160, 185], "ross": 186, "rotat": [11, 16], "rotated_imag": 11, "rotated_mnist": 11, "roughli": 37, "routin": [19, 22, 23, 36, 155, 178, 179, 180, 181, 182], "routine_ap": 22, "routine_rap": 22, "routine_thr": 22, "row": [86, 87, 128, 142], "ru": [26, 117, 186], "ruairidh": 186, "ruff": [37, 183], "run": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 37, 183, 185], "runa": 186, "runner": [9, 12, 26], "running_loss": 13, "russakovski": 186, "rvert": 127, "r\u00e9mi": 182, "s310": 16, "s_": [86, 87], "s_group": [86, 87], "sai": [23, 27], "sake": [3, 11, 19], "same": [4, 6, 10, 11, 12, 19, 23, 26, 27, 31, 32, 33, 36, 38, 40, 87, 91, 103, 105, 108, 109, 111, 158, 163], "sampl": [3, 5, 6, 13, 19, 22, 23, 26, 27, 28, 31, 32, 33, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 66, 73, 84, 85, 86, 99, 100, 101, 119, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 137, 139, 140, 141, 142, 156, 160, 165, 166, 167, 168, 169, 170, 172, 181], "sample_idx": 6, "samyak": 186, "saniti": 19, "satur": [16, 57, 58], "saurabh": 186, "saurav": 186, "save": [3, 4, 12, 13, 36, 38, 39, 40, 65, 67, 68, 84, 141, 151, 156, 175, 176, 177, 178, 179, 180, 181], "save_feat": 178, "save_in_csv": [38, 39, 40, 178, 179, 180, 181, 185], "save_logit": [175, 176, 177], "save_schedul": 156, "sc": [3, 11, 123, 124], "scalabl": [163, 186], "scalar": [123, 124, 128], "scale": [6, 10, 12, 20, 21, 27, 31, 32, 33, 34, 37, 38, 39, 40, 56, 57, 58, 75, 88, 89, 102, 103, 104, 105, 106, 109, 110, 111, 144, 145, 146, 147, 148, 149, 160, 175, 176, 177, 185, 187], "scale_dot_product_attent": 93, "scaled_model": 23, "scenario": 143, "schedul": [6, 19, 31, 32, 33, 36, 156, 178, 179, 180, 181], "scheme": 19, "schwart": [26, 117, 186], "scikit": [37, 183], "scope": 182, "score": [3, 6, 12, 19, 22, 23, 27, 31, 32, 33, 38, 39, 40, 122, 124, 126, 128, 130, 132, 133, 135, 136, 137, 139, 140, 141, 151, 165, 168, 170, 171, 175, 176, 177, 178, 181, 182, 185], "scott": [156, 186], "scratch": 23, "script": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 185], "search": 182, "sebastian": 19, "second": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34, 99, 187], "section": [19, 27, 185, 186], "see": [4, 5, 12, 13, 19, 23, 26, 27, 36, 37, 86, 90, 92, 122, 125, 126, 127, 131, 132, 133, 136, 137, 140, 141, 143, 145, 146, 148, 149, 150, 151, 173, 184], "seed": [55, 78, 79, 80, 81, 82, 83, 160], "seek": 119, "seem": [13, 27], "seemlessli": 36, "seen": [3, 19, 36], "seg": 135, "seg_routin": [6, 33], "segform": [36, 44], "segment": [1, 2, 30, 36, 37, 43, 44, 56, 57, 58, 84, 85, 151, 152, 153, 154, 163, 181, 182, 185, 187], "segmentationroutin": [6, 31, 32, 33], "seitzer": [113, 186], "select": [3, 4, 5, 6, 9, 10, 11, 12, 22, 31, 32, 33, 123, 124, 158, 181, 186], "self": [13, 19, 27, 36, 94, 95, 155, 178, 185], "semant": [1, 2, 31, 32, 33, 34, 62, 187], "sensoi": [11, 116, 186], "separ": [19, 43, 93, 131], "seq": [93, 94, 95], "sequenc": [56, 57, 58, 93, 94, 95], "sequenti": [6, 19, 155], "ser": 186, "sergei": 186, "set": [0, 3, 6, 10, 11, 12, 13, 19, 26, 28, 31, 32, 33, 36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 68, 78, 79, 80, 81, 82, 84, 91, 93, 99, 118, 119, 122, 126, 128, 131, 132, 133, 136, 137, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 174, 175, 176, 177, 178, 181, 184, 185], "set_accumul": 174, "set_temperatur": [175, 176, 177], "set_titl": [16, 22], "set_xlabel": 22, "set_xlim": [22, 26], "set_ylim": 26, "setlevel": 27, "setsiz": 22, "setup": [6, 22, 23, 31, 32, 33, 51, 55, 178], "sever": [3, 10, 16, 46, 47, 50, 54, 73, 86], "severin": [182, 186], "sgd": [13, 19, 36, 186], "sghmc": [156, 186], "sgld": [156, 186], "shahab": 186, "shankar": 186, "shannon": [133, 137], "shaoq": 186, "shape": [3, 55, 86, 87, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 122, 123, 124, 126, 128, 130, 131, 136, 137, 139, 140, 149, 151, 158, 165, 166, 167, 168, 169, 170, 172, 178], "share": [38, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 86, 87], "shift": [3, 7, 8, 12, 23, 34, 38, 39, 40, 46, 47, 50, 51, 54, 178, 179, 180, 181, 185, 187], "shift_sever": [10, 46, 47, 50, 54, 64, 66, 77], "ship": 13, "shlen": 186, "shopper": [52, 81], "shortli": [10, 12], "shotnois": 16, "should": [3, 10, 19, 23, 36, 90, 92, 93, 131, 151, 174, 175, 176, 177, 185], "show": [3, 4, 5, 6, 9, 11, 13, 16, 22, 23, 31, 32, 33, 175, 176, 177], "show_imag": 16, "shown": 10, "shuffl": [13, 19, 83], "side": [86, 88, 90, 100], "sigma_init": [96, 97, 98, 99], "signal": 86, "signatur": 37, "silog_metr": 149, "similar": [0, 19, 178], "similarli": 19, "simonyan": 186, "simpl": [19, 26, 27, 160, 163, 185, 186], "simplest": 86, "simpli": [12, 19], "simplifi": [10, 12, 19, 86, 87], "simul": [10, 135, 139], "sinc": [4, 22], "singh": 186, "singl": [3, 11, 12, 19, 44, 133, 149, 151, 156, 178, 179, 180, 181, 186], "singleton": 163, "site": [9, 12, 26], "size": [3, 6, 19, 31, 32, 33, 36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 86, 87, 88, 90, 92, 93, 100, 101, 102, 104, 106, 107, 110, 112, 122, 125, 126, 127, 128, 131, 132, 133, 136, 137, 140, 141, 142, 149, 158, 174, 178], "small": [6, 10, 19, 31, 32, 33, 58, 62, 74, 114, 123, 124, 145, 146, 148, 149, 175, 176, 177], "small_unet": [6, 31, 33], "smaller": [26, 56, 57, 58, 174], "smallest": 90, "smith": [174, 186], "smooth": 112, "snapshot": 186, "snoek": 186, "snow": 16, "so": [13, 19, 28, 36, 87, 90, 92], "socher": 186, "softmax": [3, 4, 5, 6, 9, 12, 13, 19, 23, 31, 32, 33, 38, 39, 40, 168, 170, 178, 181, 184], "soleimani": [26, 117, 186], "solv": 37, "some": [5, 11, 13, 19, 27, 28, 36], "someon": 73, "sometim": [4, 19], "song": [12, 186], "soon": 0, "sort": [4, 139], "sourc": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "space": [86, 88, 90, 125, 127, 143, 149], "span": 143, "spars": 92, "sparsif": 122, "special": 3, "specif": [0, 3, 10, 26, 28, 37, 129, 134, 138, 185], "specifi": [4, 10, 12, 37, 93, 94, 95, 112, 113, 114, 115, 116, 117, 118, 125, 127, 135, 139, 150, 151, 156, 163], "specklenois": 16, "sphinx": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34, 183], "split": [23, 50, 51, 55, 61, 62, 63, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 84, 85, 185], "split_se": [55, 78, 79, 80, 81, 82], "springenberg": 186, "sqrt": [26, 86, 87, 127, 149], "squar": [11, 19, 27, 56, 57, 58, 86, 126, 127, 146, 147, 148, 149, 160], "squeez": [6, 26, 31, 32, 33, 179, 180], "src": 95, "src_key_padding_mask": 95, "src_mask": 95, "sre": 146, "stabil": [91, 175, 176, 177], "stage": [37, 51, 55], "stand": 51, "standard": [3, 7, 8, 10, 12, 19, 27, 34, 36, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 185, 187], "standardtransform": 10, "stanislav": 186, "star": 86, "stark": 19, "start": [23, 37, 88, 89, 156, 159, 160], "state": [28, 36, 37, 128, 131, 132, 135, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 160], "state_dict": [12, 13, 19, 160], "statist": [13, 131, 160, 174], "std": [3, 6, 10, 22, 31, 32, 33, 36, 38, 39, 40, 44, 57, 58, 178], "std_factor": [100, 101], "stefan": 186, "steinbach": 19, "steinhardt": 186, "step": [13, 37, 116, 178, 179, 180, 181, 183], "step_siz": [6, 33], "steplr": [6, 31, 32, 33], "steven": 186, "stochast": [3, 4, 19, 156, 159, 160, 174], "storag": 178, "store": [36, 63, 100, 101, 102, 104, 106, 122, 124, 130, 139, 160, 163, 178], "store_on_cpu": [156, 163], "str": [4, 5, 9, 27, 38, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 92, 100, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 131, 132, 133, 137, 140, 142, 163, 173, 178, 179, 180, 181, 185], "streamlin": [10, 12], "strength": [10, 11], "strict": [6, 31, 32, 33], "stride": [86, 88, 90, 96, 97, 98, 100, 102, 104, 106], "string": [49, 55, 65], "strong": 10, "structur": [173, 185], "student": [27, 110, 111], "studi": 186, "style": [12, 22, 23, 36, 37, 38, 39, 40, 43, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101], "su": [156, 186], "sub": [19, 155], "subclass": [36, 69, 70, 71, 72, 171], "subcommand": 36, "submodul": 158, "subnetwork": 186, "subplot": [6, 16, 22, 26, 31, 32, 33], "subplots_adjust": [6, 31, 32, 33], "subprocess": [45, 48, 49, 52, 53, 55], "subsampl": 181, "subset": [19, 23, 64, 66, 73, 74, 77, 173], "successfulli": [12, 13, 23], "suggest": [4, 34, 37], "suitabl": [59, 74], "sum": [4, 6, 11, 31, 32, 33, 112, 113, 114, 115, 116, 117, 118, 120, 126, 128, 131, 132, 133, 136, 137, 140, 141, 142, 165, 184], "sum_": [86, 126, 127, 128, 142, 143, 149, 165, 166, 169], "sum_i": [144, 145, 146, 147, 148], "sun": [23, 184, 186], "super": [13, 19, 27, 185], "superclass": [56, 69, 70, 71, 72, 84], "supervis": 19, "support": [6, 31, 32, 33, 36, 38, 39, 40, 42, 44, 69, 70, 71, 72, 84, 93, 112, 123, 124, 163, 185], "suppress": 186, "sure": [5, 88, 89, 90, 92, 132, 136, 137, 155, 158, 182], "surprisingli": 186, "svhn": [12, 46, 47, 50, 54], "swa_gaussian": 160, "symmetri": 182, "synthet": [6, 26, 31, 32, 33], "system": [37, 123, 183, 186], "szegedi": 186, "s\u00e9verin": 182, "t": [4, 5, 13, 19, 27, 34, 84, 87, 110, 111, 120, 126, 155, 186], "t_max": 19, "t_muad_mean": [6, 31, 32, 33], "t_muad_std": [6, 31, 32, 33], "tabl": [5, 9, 19, 28], "tabular": [24, 25, 34, 183, 187], "tackl": [11, 26], "tailor": 186, "take": [19, 36, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 131, 184, 185], "talk": 19, "tao": 186, "target": [6, 12, 19, 23, 31, 32, 33, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 114, 115, 118, 119, 123, 124, 126, 128, 130, 131, 132, 135, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 178, 179, 180, 181], "target_mask": [6, 31, 32, 33], "target_transform": [59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85], "target_typ": [62, 85], "tartaglion": [182, 186], "task": [6, 7, 19, 23, 24, 29, 31, 32, 33, 34, 36, 38, 39, 40, 120, 125, 127, 128, 135, 142, 145, 146, 149, 152, 153, 154, 163, 173, 178, 179, 180, 181, 182, 185], "tau": 178, "tavakoli": [113, 186], "team": [22, 28], "tech": 186, "technic": 19, "techniqu": [6, 17, 20, 34, 181], "teh": 186, "tell": [5, 9, 28], "temper": 23, "temperatur": [20, 21, 34, 37, 175, 176, 177, 185, 187], "temperaturescal": 23, "tena": 182, "tensor": [6, 13, 19, 31, 32, 33, 36, 62, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 112, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181], "tensorboard": [19, 23, 178, 179, 180], "tensorflow": [19, 86, 87], "term": [11, 26, 99, 114, 115, 116, 117, 119], "test": [9, 10, 19, 22, 23, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 73, 78, 79, 80, 81, 82, 84, 159, 160, 178, 179, 180, 181, 185], "test_alt": [47, 50, 54], "test_data": 19, "test_dataload": [9, 22, 23, 46, 47, 50, 51, 54, 58], "test_dataset": [23, 26], "test_dl": 19, "test_split": [45, 48, 49, 52, 53, 78, 79, 80, 81, 82], "test_step": [178, 179, 180, 181], "test_transform": [6, 19, 31, 32, 33, 46, 47, 50, 51, 54, 56, 57, 58], "testload": 13, "testset": 13, "text": [13, 16, 56, 57, 58, 86, 87, 90, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 127, 143, 144, 145, 146, 147, 148, 149, 168, 170, 172], "tey": [174, 186], "tgt": [6, 31, 32, 33, 94], "tgt_is_caus": 94, "tgt_key_padding_mask": 94, "tgt_mask": [6, 31, 32, 33, 94], "th": [86, 87], "than": [23, 26, 28, 131, 148, 155, 160, 163, 174], "thank": 27, "thecvf": 186, "thei": [0, 5, 10, 19, 36, 122], "them": [13, 19, 36, 126, 185], "therefor": [19, 90, 92, 93, 184], "theta": 169, "thi": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34, 36, 37, 50, 54, 56, 57, 58, 62, 69, 70, 71, 72, 73, 86, 87, 89, 90, 91, 92, 93, 94, 95, 110, 111, 112, 117, 119, 122, 123, 124, 125, 127, 128, 129, 131, 134, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 155, 156, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 184, 185, 186], "think": [19, 185], "thoma": [10, 16, 64, 66, 77, 186], "those": 12, "thr": 22, "three": [22, 87, 127, 185], "threshold": [19, 22, 130, 139, 150, 152, 153], "threshold_accuraci": 150, "through": [5, 23, 26, 86, 87, 94, 95, 155, 158], "throughout": 19, "thu": 93, "tianqi": 186, "tight_layout": [3, 4, 5, 9, 22], "till": 186, "time": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 38, 40, 46, 47, 50, 51, 54, 56, 57, 58, 86, 87, 90, 92, 93, 155, 157, 158, 159, 160, 163, 178], "timothi": 186, "timur": [88, 89, 186], "tini": 54, "tinyimagenet": [54, 77], "tinyimagenetc": 54, "tmp_": 16, "tmp_target": [6, 31, 32, 33], "tmp_tgt": [6, 31, 32, 33], "to_dtyp": [6, 31, 32, 33], "to_pil_imag": [6, 31, 32, 33], "tobia": 186, "todtyp": [6, 10, 31, 32, 33, 56, 57, 58], "toi": [7, 8, 24, 25, 34, 187], "toimag": [10, 57], "tongliang": 186, "too": 123, "tool": [9, 19, 28, 36, 182], "top": [3, 6, 10, 12, 19, 20, 21, 31, 32, 33, 34, 125, 126, 136, 187], "top_class": 126, "top_k": 151, "topk": 4, "torch": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 56, 57, 58, 62, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 104, 106, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 160, 163, 173, 174, 178, 180, 181, 183, 185], "torch_uncertainti": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185], "torchmetr": 12, "torchuncertainti": [0, 6, 7, 8, 14, 15, 20, 21, 24, 25, 31, 32, 33, 34, 78, 79, 80, 81, 82, 83, 156, 182, 187], "torchvis": [3, 4, 5, 6, 9, 11, 13, 16, 19, 31, 32, 33, 56, 57, 58], "torr": 186, "total": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 93, 127, 187], "total_pixel": [6, 31, 32, 33], "totensor": [13, 16, 19], "tpami": [182, 186], "trade": 139, "train": [0, 1, 2, 7, 8, 22, 23, 24, 25, 34, 36, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 65, 67, 68, 73, 76, 78, 79, 80, 81, 82, 84, 85, 88, 89, 119, 155, 156, 157, 158, 159, 160, 162, 163, 178, 179, 180, 181, 182, 184, 186, 187], "train_d": 26, "train_data": 19, "train_dataload": [4, 9, 19, 46, 47], "train_dl": 19, "train_loss": 19, "train_siz": [50, 54], "train_transform": [6, 19, 31, 32, 33, 46, 47, 50, 51, 54, 56, 57, 58], "trainer": [3, 4, 10, 11, 12, 19, 23, 26, 36, 185], "training_step": [178, 179, 180, 181], "training_task": 26, "trainload": 13, "trainset": 13, "trajectori": [93, 94, 95, 156], "tran": 186, "tranform": [93, 94, 95], "transax": 16, "transform": [3, 4, 5, 6, 9, 10, 11, 13, 16, 19, 28, 31, 32, 33, 46, 47, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 178], "transformerdecoderlay": 94, "transformerencoderlay": 95, "translat": 135, "transpos": [3, 4, 5, 9, 11, 13], "traub": [123, 186], "treat": 93, "truck": 13, "true": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 28, 31, 32, 33, 36, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 122, 123, 124, 125, 126, 127, 128, 131, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 155, 156, 158, 162, 163, 164, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185], "true_label": [125, 127], "trust": 184, "truth": [3, 4, 9, 11, 19, 26, 123, 124, 126, 127, 128, 130, 135, 136, 139, 142, 144, 145, 146, 147, 148, 149], "try": [13, 19, 28, 37], "ts_": 185, "tsung": 186, "tta": [46, 47, 50, 51, 54, 178], "tu": [3, 4, 5, 11, 26, 27], "tulightningcli": 36, "tuoodcriterion": [38, 39, 40, 178, 181, 185], "tupl": [55, 62, 66, 73, 86, 88, 90, 93, 100, 102, 104, 106, 122, 123, 124, 178, 179, 180, 181], "tuset": 186, "tutori": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 37, 182, 184, 185, 187], "tutorial_bayesian": [2, 3, 187], "tutorial_classif": [8, 9, 187], "tutorial_conform": [21, 22, 187], "tutorial_corrupt": [15, 16, 187], "tutorial_der_cub": [25, 26, 187], "tutorial_distribution_shift": [8, 10, 187], "tutorial_evidential_classif": [8, 11, 187], "tutorial_from_de_to_p": [18, 19, 187], "tutorial_mc_batch_norm": [2, 4, 187], "tutorial_mc_dropout": [2, 5, 187], "tutorial_muad_deep_en": [30, 31, 187], "tutorial_muad_mc_drop": [2, 6, 187], "tutorial_muad_pack": [30, 32, 187], "tutorial_muad_seg": [30, 33, 187], "tutorial_ood_detect": [8, 12, 187], "tutorial_pe_cifar10": [8, 13, 187], "tutorial_probabilistic_regress": [25, 27, 187], "tutorial_regress": [25, 28, 187], "tutorial_scal": [21, 23, 187], "tutrain": [3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 26, 27, 28, 31, 32, 33, 185], "tv_tensor": [6, 31, 32, 33, 56, 57, 58], "twice": 178, "two": [9, 12, 19, 28], "tyler": 186, "type": [10, 12, 37, 38, 39, 40, 44, 46, 47, 50, 51, 54, 62, 65, 66, 68, 73, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 114, 115, 116, 119, 122, 123, 124, 125, 126, 127, 128, 130, 131, 135, 136, 139, 140, 141, 155, 156, 158, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182], "typeerror": [125, 127], "typic": [86, 87], "u": [6, 13, 19, 27, 37, 86, 87, 183, 185], "u2i": [19, 183], "uai": [159, 186], "uci": [27, 28, 36, 45, 48, 49, 52, 53, 55, 78, 79, 80, 81, 82, 83], "uci_dataset": 36, "uciregressiondatamodul": [27, 28], "uijl": 186, "uint8": [6, 31, 32, 33], "unari": [94, 95], "unbatch": 93, "uncalibr": 185, "uncertain": 4, "uncertainti": [0, 1, 3, 5, 7, 9, 11, 12, 13, 14, 17, 22, 26, 27, 28, 29, 37, 88, 89, 99, 100, 101, 113, 115, 116, 122, 124, 137, 141, 160, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 183], "unchang": 19, "under": [6, 7, 8, 19, 31, 32, 33, 34, 73, 122, 123, 124, 152, 185, 187], "underestim": 148, "underli": [23, 90], "understand": 10, "underus": 19, "undo": [6, 31, 32, 33], "unet": [6, 31, 32, 33], "unexpect": [86, 87], "unfreez": 99, "unifi": [75, 186], "uniform": 125, "uniformli": 127, "union": 151, "unit": [144, 147], "unit_factor": [144, 147], "unknown": 28, "unlik": 125, "unnorm": [9, 13], "unsqueez": [6, 26, 31, 32, 33], "unsupervis": 186, "unus": [23, 75, 156, 178, 179, 180], "unweight": 131, "up": [6, 10, 12, 31, 32, 33, 36, 51, 56, 57, 58, 94, 95], "updat": [19, 23, 122, 123, 124, 126, 128, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 159, 160, 178, 179, 180, 183], "update_wrapp": [156, 157, 160], "upload": 16, "upper": 26, "url": 16, "urllib": 16, "urlretriev": 16, "us": [6, 9, 10, 12, 13, 16, 19, 22, 23, 28, 29, 30, 34, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 118, 119, 125, 126, 127, 133, 135, 139, 141, 143, 145, 146, 148, 149, 155, 156, 157, 158, 159, 160, 163, 164, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187], "usag": [6, 182], "use_final_model": 156, "use_train_id": 62, "use_tu_ckpt_format": 163, "user": [3, 36, 185], "userwarn": 12, "usual": [6, 10, 31, 32, 33], "util": [12, 13, 16, 19], "v": 19, "v2": [6, 31, 32, 33, 56, 57, 58], "v4": [75, 186], "v_num": 19, "val": [23, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 84, 176, 185], "val_b": [175, 177], "val_d": 26, "val_dataload": [3, 4, 5, 6, 9, 11, 19, 31, 32, 33], "val_dataset": 26, "val_split": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "val_w": [175, 177], "valid": [6, 19, 22, 31, 32, 33, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 125, 127, 131, 151, 178, 179, 180, 181], "validate_arg": [125, 127, 131, 151, 152, 153], "validation_step": [178, 179, 180, 181], "valu": [4, 5, 6, 9, 10, 11, 12, 19, 26, 27, 31, 32, 33, 36, 62, 63, 86, 87, 91, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 118, 119, 122, 123, 124, 126, 129, 130, 133, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 165, 166, 167, 169, 172, 175, 176, 177, 178, 179, 180, 181, 184], "valueerror": [38, 39, 40, 126, 128, 131, 132, 133, 136, 137, 141, 142, 155, 163, 174], "vanhouck": 186, "var": 4, "var_clamp": 160, "var_prob": 3, "variabl": [27, 86, 87, 99, 165, 166, 167, 168, 169, 170, 171, 172, 174], "varianc": [3, 4, 5, 26, 27, 149, 160], "variance_loc": 26, "variat": [3, 141, 172], "variou": [38, 39, 40, 42, 44, 171, 185], "varoquaux": 186, "vdim": 93, "vector": [86, 87, 165, 166, 168, 170, 177, 184], "veri": [10, 11, 19, 23, 27, 185, 186], "verifi": 62, "version": [6, 10, 19, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 127, 183, 186], "version_": [19, 36], "vertic": 16, "verticalalign": 16, "vetrov": 186, "vgg": [36, 39], "via": [3, 183, 185, 186], "vibnn": 3, "vim": [75, 186], "vincent": 186, "virtual": [75, 186], "vision": [5, 10, 73, 75, 186], "visit": [6, 31, 32, 33], "visual": [6, 31, 32, 33, 75, 186], "visualize_prediction_set": 22, "viz_data": 19, "vr": [141, 172], "vram": 156, "w": [13, 56, 57, 58, 87, 117, 185], "w_": [86, 90], "w_class": [6, 31, 32, 33], "wa": [19, 85, 123, 124], "wai": [3, 22, 27, 185], "wait": 184, "wang": [75, 186], "wang_on_the_pitfall_of_mixup_for_uncertainty_calibration_cvpr_2023_pap": 186, "want": [4, 6, 10, 12, 19, 26, 28, 36, 73, 83, 155, 183], "warn": [12, 27, 94, 95, 181], "wasn": 13, "wayn": 186, "we": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 36, 37, 86, 87, 93, 151, 156, 160, 178, 184, 185], "weather": [6, 10, 31, 32, 33], "websit": [6, 31, 32, 33, 182], "wei": 186, "weight": [3, 11, 19, 23, 26, 36, 37, 38, 86, 87, 90, 91, 93, 99, 112, 113, 114, 115, 116, 117, 119, 120, 123, 159, 160, 173, 175, 177], "weight_decai": [6, 11, 26, 31, 32, 33], "weight_subset": 173, "weights_onli": [12, 13, 19, 22], "weinberg": [23, 184, 186], "weird": 164, "well": [3, 10, 12, 23, 127, 182, 185, 186], "wen": 186, "were": 16, "weslei": 186, "what": [5, 10, 12, 13, 19, 36, 38, 39, 40], "when": [3, 6, 10, 12, 19, 23, 31, 32, 33, 36, 37, 86, 87, 90, 91, 92, 93, 123, 124, 125, 127, 135, 151, 155, 156, 158, 160, 163, 178, 179, 180, 185], "where": [6, 19, 23, 31, 32, 33, 62, 63, 65, 67, 68, 84, 86, 87, 90, 91, 92, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 122, 125, 126, 128, 129, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 165, 166, 168, 170, 172, 178], "whether": [36, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 78, 79, 80, 81, 82, 84, 90, 92, 93, 94, 95, 99, 122, 123, 124, 125, 127, 131, 141, 155, 156, 158, 160, 162, 163, 164, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181], "which": [0, 3, 4, 6, 9, 10, 11, 12, 19, 26, 27, 28, 31, 32, 33, 38, 39, 40, 44, 46, 47, 50, 51, 54, 85, 86, 87, 93, 100, 101, 130, 135, 139, 141, 156, 181, 185], "whichev": 36, "while": [93, 163, 184, 185], "why": 184, "whye": 186, "wide": [10, 12, 40, 148], "widehat": [86, 87], "wider": [159, 186], "wideresnet": 36, "width": [38, 39, 40, 56, 57, 58, 90, 91, 92, 93, 94, 95], "width_multipli": 38, "wierstra": [3, 186], "wikimedia": 16, "wikipedia": [16, 126], "wilko": [26, 186], "wilson": 186, "window": 13, "wine": [55, 83], "wise": [27, 119, 179, 180], "within": [4, 5, 11, 26, 38, 39, 40, 93, 119, 150], "without": [19, 23, 128, 142], "wjmaddox": 160, "wojna": 186, "won": 155, "work": [19, 151, 158, 184], "worker": [9, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "workshop": [125, 186], "world": [12, 19, 23, 186], "wors": [10, 12], "worse_label": 68, "would": [19, 28, 36, 37, 185], "wrap": [5, 6, 86, 87, 155, 158, 162, 164, 185], "wrapper": [3, 4, 5, 9, 11, 19, 27, 28, 36, 87, 127, 155, 156, 158, 162, 164, 173, 174, 178, 179, 180, 185], "wrong": 19, "wspace": [6, 31, 32, 33], "wu": 186, "x": [3, 4, 13, 19, 26, 27, 87, 130, 135, 155, 156, 158, 160, 185], "x64": [9, 12, 26], "xiangyu": 186, "xuanlong": [182, 186], "xudong": 186, "y": [3, 19, 23, 26, 87, 120, 128, 142, 144, 145, 146, 147, 148, 169, 184, 186], "y_i": [128, 142, 143, 144, 145, 146, 147, 148, 149], "yacht": [28, 55, 83], "yaml": [36, 50, 54, 185], "yan": 186, "yang": 186, "yaniv": [124, 186], "yann": [19, 186], "yarin": 186, "yaroslav": 186, "yee": 186, "yeme": 186, "yet": [36, 93, 181, 185], "yi": 186, "yixuan": 186, "yonatan": 186, "yoshua": 186, "you": [4, 5, 9, 10, 12, 13, 19, 22, 23, 26, 27, 28, 34, 36, 37, 62, 73, 83, 88, 89, 90, 92, 93, 94, 95, 119, 155, 158, 178, 180, 181, 182, 183, 185], "your": [12, 19, 36, 37, 86, 87, 183], "yu": [182, 186], "yuval": 186, "yuxuan": 186, "z": [76, 165], "z_1": 165, "z_2": 165, "z_c": 165, "z_i": 165, "zagoruyko": 186, "zbigniew": 186, "zero": [13, 90, 91, 93, 96, 97, 98, 100, 137], "zero_grad": 13, "zhang": 186, "zhao": 186, "zhaowei": 186, "zhe": 186, "zhi": 186, "zhizhong": 186, "zhou": 186, "zhu": 186, "zhuang": 186, "zip": [3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33, 34], "zisserman": 186, "zoomblur": 16, "zorder": 26, "zou": 12, "zoubin": 186, "\u00ec": 93}, "titles": ["API Reference", "Bayesian Methods", "Computation times", "Training a Bayesian Neural Network in 20 seconds", "Training a LeNet with Monte Carlo Batch Normalization", "Training a LeNet with Monte-Carlo Dropout", "Monte Carlo Dropout for Semantic Segmentation on MUAD", "Classification", "Computation times", "Training a LeNet for Image Classification with TorchUncertainty", "Evaluating Model Performance Under Distribution Shift with TorchUncertainty", "Deep Evidential Classification on a Toy Example", "Out-of-distribution detection with TorchUncertainty", "From a Standard Classifier to a Packed-Ensemble", "Data Augmentation", "Computation times", "Corrupting Images with TorchUncertainty to Benchmark Robustness", "Ensemble Methods", "Computation times", "Improved Ensemble parameter-efficiency with Packed-Ensembles", "Post-hoc Methods", "Computation times", "Conformal Prediction on CIFAR-10 with TorchUncertainty", "Improve Top-label Calibration with Temperature Scaling", "Regression with Uncertainty", "Computation times", "Deep Evidential Regression on a Toy Example", "Deep Probabilistic Regression", "Training an MLP for Tabular Regression with TorchUncertainty", "Segmentation", "Computation times", "Deep ensembles Segmentation Tutorial using Muad Dataset", "Packed ensembles Segmentation Tutorial using Muad Dataset", "Segmentation Tutorial using Muad Dataset", "Tutorials", "Computation times", "CLI Guide", "Contributing", "ResNetBaseline", "VGGBaseline", "WideResNetBaseline", "BTSBaseline", "MLPBaseline", "DeepLabBaseline", "SegFormerBaseline", "BankMarketingDataModule", "CIFAR100DataModule", "CIFAR10DataModule", "DOTA2GamesDataModule", "HTRU2DataModule", "ImageNetDataModule", "MNISTDataModule", "OnlineShoppersDataModule", "SpamBaseDataModule", "TinyImageNetDataModule", "UCIRegressionDataModule", "CamVidDataModule", "CityscapesDataModule", "MUADDataModule", "Fractals", "FrostImages", "KITTIDepth", "MUAD", "NYUv2", "CIFAR100C", "CIFAR100N", "CIFAR10C", "CIFAR10H", "CIFAR10N", "ImageNetA", "ImageNetC", "ImageNetO", "ImageNetR", "MNISTC", "NotMNIST", "OpenImageO", "TinyImageNet", "TinyImageNetC", "BankMarketing", "DOTA2Games", "HTRU2", "OnlineShoppers", "SpamBase", "UCIRegression", "CamVid", "Cityscapes", "BatchConv2d", "BatchLinear", "MaskedConv2d", "MaskedLinear", "PackedConv2d", "PackedLayerNorm", "PackedLinear", "PackedMultiheadAttention", "PackedTransformerDecoderLayer", "PackedTransformerEncoderLayer", "BayesConv1d", "BayesConv2d", "BayesConv3d", "BayesLinear", "LPBNNConv2d", "LPBNNLinear", "CauchyConvNd", "CauchyLinear", "LaplaceConvNd", "LaplaceLinear", "NormalConvNd", "NormalInverseGammaConvNd", "NormalInverseGammaLinear", "NormalLinear", "StudentTConvNd", "StudentTLinear", "BCEWithLogitsLSLoss", "BetaNLL", "ConfidencePenaltyLoss", "ConflictualLoss", "DECLoss", "DERLoss", "DistributionNLLLoss", "ELBOLoss", "FocalLoss", "KLDiv", "AUSE", "AUGRC", "AURC", "AdaptiveCalibrationError", "BrierScore", "CalibrationError", "CategoricalNLL", "CovAt5Risk", "CovAtxRisk", "CoverageRate", "Disagreement", "Entropy", "FPR95", "FPRx", "GroupingLoss", "MutualInformation", "RiskAt80Cov", "RiskAtxCov", "SetSize", "VariationRatio", "DistributionNLL", "Log10", "MeanAbsoluteErrorInverse", "MeanGTRelativeAbsoluteError", "MeanGTRelativeSquaredError", "MeanSquaredErrorInverse", "MeanSquaredLogError", "SILog", "ThresholdAccuracy", "MeanIntersectionOverUnion", "SegmentationBinaryAUROC", "SegmentationBinaryAveragePrecision", "SegmentationFPR95", "BatchEnsemble", "CheckpointCollector", "EMA", "MCDropout", "SWA", "SWAG", "StochasticModel", "batch_ensemble", "deep_ensembles", "mc_dropout", "EnergyCriterion", "EntropyCriterion", "MaxLogitCriterion", "MaxSoftmaxCriterion", "MutualInformationCriterion", "PostProcessingCriterion", "TUOODCriterion", "VariationRatioCriterion", "LaplaceApprox", "MCBatchNorm", "MatrixScaler", "TemperatureScaler", "VectorScaler", "ClassificationRoutine", "PixelRegressionRoutine", "RegressionRoutine", "SegmentationRoutine", "Welcome to Torch Uncertainty", "Installation", "Introduction to Classification Uncertainty", "Quickstart", "References", "Computation times"], "titleterms": {"": [23, 185], "0": 186, "1": [3, 4, 5, 6, 9, 11, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33], "10": [6, 22, 186], "100": 186, "10c": 10, "11": 6, "2": [3, 4, 5, 6, 9, 11, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33], "20": 3, "3": [3, 4, 5, 6, 9, 11, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33], "4": [3, 4, 5, 6, 9, 11, 13, 16, 19, 22, 23, 26, 27, 28, 31, 32, 33], "5": [3, 4, 5, 6, 9, 11, 13, 16, 22, 23, 26, 27, 28, 31, 32, 33], "6": [4, 6, 9, 22, 23, 26, 27, 28, 31, 32, 33], "7": [6, 22, 27, 28, 31, 32, 33], "8": [6, 22, 31, 32, 33], "9": [6, 33], "A": 186, "In": [10, 12], "Not": 186, "The": [3, 4, 5, 6, 9, 11, 26, 27, 28, 31, 32, 33, 37, 184], "To": 19, "adapt": 186, "adaptivecalibrationerror": 125, "again": 23, "an": [13, 19, 28], "api": 0, "appli": 6, "approxim": 186, "architectur": 186, "area": 186, "augment": [14, 34, 186], "augrc": 123, "aurc": 124, "aus": 122, "averag": 186, "awar": 185, "background": 184, "bankmarket": 78, "bankmarketingdatamodul": 45, "base": 185, "baselin": 0, "batch": [4, 186], "batch_ensembl": 162, "batchconv2d": 86, "batchensembl": [155, 186], "batchlinear": 87, "bayesconv1d": 96, "bayesconv2d": 97, "bayesconv3d": 98, "bayesian": [0, 1, 3, 34, 186], "bayeslinear": 99, "bcewithlogitslsloss": 112, "benchmark": [16, 27], "beta": 186, "betanl": 113, "binari": 186, "blur": 16, "brierscor": 126, "btsbaselin": 41, "build": [27, 37, 185], "c": 186, "calibr": [0, 23, 186], "calibrationerror": 127, "camvid": 84, "camviddatamodul": 56, "carlo": [4, 5, 6, 186], "categori": 0, "categoricalnl": 128, "cauchyconvnd": 102, "cauchylinear": 103, "chang": 12, "checkpointcollector": [156, 186], "cifar": [10, 22, 186], "cifar10": 13, "cifar100c": 64, "cifar100datamodul": 46, "cifar100n": 65, "cifar10c": 66, "cifar10datamodul": 47, "cifar10h": 67, "cifar10n": 68, "cityscap": 85, "cityscapesdatamodul": 57, "class": [0, 6, 31, 32, 33], "classif": [0, 7, 9, 10, 11, 12, 19, 34, 184, 186], "classifi": 13, "classificationroutin": 178, "clean": 37, "cli": [36, 185], "common": 37, "comput": [2, 6, 8, 15, 18, 21, 23, 25, 30, 31, 32, 33, 35, 187], "concept": 19, "confidencepenaltyloss": 114, "configur": 36, "conflictu": 186, "conflictualloss": 115, "conform": [0, 22], "conformalclsap": 22, "conformalclsrap": 22, "conformalclsthr": 22, "content": 182, "contribut": 37, "convolut": 0, "corrupt": 16, "covat5risk": 129, "covatxrisk": 130, "coverag": 186, "coverager": 131, "creat": [3, 4, 9, 11, 19, 26], "criterion": 12, "cross": [0, 186], "curv": 186, "data": [10, 12, 13, 14, 27, 34, 186], "dataload": [22, 23], "datamodul": [0, 6, 9, 10, 12, 23, 28, 31, 32, 33, 37], "dataset": [0, 13, 19, 22, 31, 32, 33, 37, 186], "dec": 11, "decloss": 116, "deep": [11, 19, 26, 27, 31, 186], "deep_ensembl": 163, "deeplabbaselin": 43, "defin": [5, 10, 12, 13, 22, 28], "densiti": 0, "depth": 0, "der": 26, "derloss": 117, "detect": [0, 12], "develop": 37, "differ": 27, "disagr": 132, "distribut": [0, 10, 12, 27], "distributionnl": 142, "distributionnllloss": 118, "divers": 0, "document": 37, "dota2gam": 79, "dota2gamesdatamodul": 48, "download": 19, "dropout": [5, 6, 186], "dynam": 186, "ec": 23, "effici": 19, "elboloss": 119, "ema": 157, "energycriterion": 165, "ensembl": [0, 13, 17, 19, 31, 32, 34, 186], "entropi": [133, 186], "entropycriterion": 166, "error": 186, "estim": [0, 22], "evalu": [6, 9, 10, 12, 31, 32, 33], "everyth": [3, 4, 5, 9, 11, 26, 28], "evidenti": [11, 26, 186], "exampl": [11, 26, 185], "expect": 186, "experi": 36, "face": 22, "featur": 186, "file": 36, "first": 185, "fit": 23, "fix": 186, "focal": 186, "focalloss": 120, "folder": 36, "foreword": 3, "fpr95": 134, "fprx": 135, "fractal": 59, "from": [12, 13, 19, 22, 23, 183], "frostimag": 60, "function": [0, 13, 22], "further": 19, "gather": [3, 4, 5, 9, 11, 26, 28], "gaussian": 186, "gener": 186, "go": 19, "gradient": 186, "group": [19, 186], "groupingloss": 136, "guid": 36, "guidelin": 37, "h": 186, "hamiltonian": 186, "hf": 23, "hoc": [20, 34], "htru2": 80, "htru2datamodul": 49, "hug": 22, "huggingfac": 12, "imag": [9, 13, 16], "imagenet": 186, "imageneta": 69, "imagenetc": 70, "imagenetdatamodul": 50, "imageneto": 71, "imagenetr": 72, "implement": 182, "import": [10, 12], "improv": [19, 23, 186], "inbal": [6, 31, 32, 33], "indic": 182, "infer": 186, "initi": [6, 10, 12, 31, 32, 33], "instal": [37, 182, 183], "instanti": [6, 9, 19, 28, 31, 32, 33], "introduct": [36, 184], "iter": 23, "its": 28, "kittidepth": 61, "kldiv": 121, "label": [23, 186], "langevin": 186, "laplac": 186, "laplaceapprox": 173, "laplaceconvnd": 104, "laplacelinear": 105, "layer": [0, 27, 185, 186], "lenet": [3, 4, 5, 9, 11], "licens": 37, "lightn": [3, 4, 5, 22, 26, 36, 185], "linear": 0, "load": [3, 4, 5, 6, 9, 11, 12, 13, 22, 23, 26, 27, 28, 31, 32, 33], "local": 37, "log10": 143, "logit": 186, "loss": [0, 3, 4, 5, 6, 9, 11, 13, 19, 26, 27, 28, 31, 32, 33, 186], "lpbnn": 186, "lpbnnconv2d": 100, "lpbnnlinear": 101, "maskedconv2d": 88, "maskedlinear": 89, "masksembl": 186, "matrix": 186, "matrixscal": 175, "maxlogitcriterion": 167, "maxsoftmaxcriterion": 168, "maxsup": 186, "mc": [5, 6], "mc_dropout": 164, "mcbatchnorm": [4, 174], "mcbn": 4, "mcdropout": 158, "mcp": [6, 31, 32, 33], "meanabsoluteerrorinvers": 144, "meangtrelativeabsoluteerror": 145, "meangtrelativesquarederror": 146, "meanintersectionoverunion": 151, "meansquarederrorinvers": 147, "meansquaredlogerror": 148, "method": [0, 1, 17, 20, 34, 37, 186], "metric": [0, 10, 185, 186], "mimo": 186, "mitig": [6, 31, 32, 33], "mixup": 186, "mixupio": 186, "ml": 19, "mlp": [26, 27, 28], "mlpbaselin": 42, "mnist": 186, "mnistc": 73, "mnistdatamodul": 51, "model": [0, 3, 4, 5, 6, 9, 10, 11, 12, 19, 22, 23, 26, 27, 28, 31, 32, 33, 185, 186], "monocular": 0, "mont": [4, 5, 6, 186], "more": [19, 185], "muad": [6, 31, 32, 33, 62, 186], "muaddatamodul": 58, "mutualinform": 137, "mutualinformationcriterion": 169, "n": 186, "necessari": [3, 4, 11, 26], "network": [3, 184, 186], "neural": [3, 184, 186], "nll": 186, "nois": 16, "normal": [4, 13, 186], "normalconvnd": 106, "normalinversegammaconvnd": 107, "normalinversegammalinear": 108, "normallinear": 109, "normalmlp": 27, "note": 23, "notmnist": 74, "nyuv2": 63, "o": 186, "offici": 182, "onlineshopp": 81, "onlineshoppersdatamodul": 52, "ood": [0, 12], "openimag": 186, "openimageo": 75, "optim": [13, 26, 27], "option": 183, "other": [0, 16, 185], "out": [0, 12], "overconfid": 184, "pack": [13, 19, 32, 186], "packedconv2d": 90, "packedlayernorm": 91, "packedlinear": 92, "packedmultiheadattent": 93, "packedtransformerdecoderlay": 94, "packedtransformerencoderlay": 95, "paramet": 19, "perform": 10, "pixelregressionroutin": 179, "pixelwis": 0, "pointwis": 28, "post": [0, 20, 34, 37, 186], "postprocessingcriterion": 170, "pre": [6, 33], "predict": [0, 22], "pretrain": 22, "probabilist": [27, 28], "procedur": 185, "process": [0, 37, 186], "proper": 0, "pypi": 183, "pytorch": [4, 5, 26, 185], "quickstart": 185, "r": 186, "recip": 26, "refer": [0, 3, 11, 12, 16, 23, 26, 184, 186], "regmixup": 186, "regress": [0, 24, 26, 27, 28, 34, 186], "regressionroutin": 180, "repositori": 22, "represent": 186, "resnet": 186, "resnetbaselin": 38, "risk": 186, "riskat80cov": 138, "riskatxcov": 139, "robust": 16, "routin": [0, 3, 4, 5, 6, 9, 10, 11, 12, 26, 27, 28, 31, 32, 33, 185], "scale": [0, 23, 186], "scaler": 23, "scope": 37, "score": 0, "second": 3, "segformerbaselin": 44, "segment": [0, 6, 29, 31, 32, 33, 34], "segmentationbinaryauroc": 152, "segmentationbinaryaverageprecis": 153, "segmentationfpr95": 154, "segmentationroutin": 181, "select": [0, 19], "semant": 6, "set": [22, 23, 27], "setsiz": 140, "setup": [10, 12], "shift": 10, "short": 184, "silog": 149, "smooth": 186, "snapshotensembl": 186, "sourc": 183, "spambas": 82, "spambasedatamodul": 53, "standard": 13, "stochast": 186, "stochasticmodel": 161, "studenttconvnd": 110, "studenttlinear": 111, "summari": 22, "svhn": 186, "swa": 159, "swag": 160, "tabl": 182, "tabular": [0, 28], "temperatur": [23, 186], "temperaturescal": 176, "test": [3, 4, 5, 6, 11, 12, 13, 26, 27, 28, 31, 32, 33, 186], "textur": 186, "thresholdaccuraci": 150, "time": [2, 8, 15, 18, 21, 25, 30, 35, 186, 187], "tini": 186, "tinyimagenet": 76, "tinyimagenetc": 77, "tinyimagenetdatamodul": 54, "toi": [11, 26], "tool": 185, "top": 23, "torch": 182, "torchuncertainti": [3, 4, 5, 9, 10, 11, 12, 16, 19, 22, 23, 26, 27, 28, 37, 185], "train": [3, 4, 5, 6, 9, 10, 11, 12, 13, 19, 26, 27, 28, 31, 32, 33, 185], "trainer": [5, 6, 9, 22, 27, 28, 31, 32, 33], "tuoodcriterion": 171, "tutori": [31, 32, 33, 34], "uci": 0, "uciregress": 83, "uciregressiondatamodul": 55, "uncertain": 28, "uncertainti": [6, 19, 24, 31, 32, 33, 34, 182, 184, 185, 186], "under": [10, 186], "unus": 16, "up": [23, 27], "us": [3, 4, 5, 11, 26, 27, 31, 32, 33, 185], "usag": [36, 185], "util": [3, 4, 5, 6, 9, 11, 23, 26, 27, 28, 31, 32, 33], "variabl": [3, 4, 11, 26], "variat": 186, "variationratio": 141, "variationratiocriterion": 172, "vector": 186, "vectorscal": 177, "vgg": 186, "vggbaselin": 39, "visual": [19, 22], "warp": 186, "weather": 16, "weight": [6, 31, 32, 33, 186], "welcom": 182, "wide": 186, "wideresnetbaselin": 40, "wrap": 4, "wrapper": [0, 6], "your": 185, "zero": 186}})