Search.setIndex({"docnames": ["api", "auto_tutorials/index", "auto_tutorials/sg_execution_times", "auto_tutorials/tutorial_bayesian", "auto_tutorials/tutorial_corruption", "auto_tutorials/tutorial_der_cubic", "auto_tutorials/tutorial_evidential_classification", "auto_tutorials/tutorial_from_de_to_pe", "auto_tutorials/tutorial_mc_batch_norm", "auto_tutorials/tutorial_mc_dropout", "auto_tutorials/tutorial_pe_cifar10", "auto_tutorials/tutorial_scaler", "cli_guide", "contributing", "generated/torch_uncertainty.baselines.classification.ResNetBaseline", "generated/torch_uncertainty.baselines.classification.VGGBaseline", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline", "generated/torch_uncertainty.baselines.depth.BTSBaseline", "generated/torch_uncertainty.baselines.regression.MLPBaseline", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline", "generated/torch_uncertainty.datamodules.BankMarketingDataModule", "generated/torch_uncertainty.datamodules.CIFAR100DataModule", "generated/torch_uncertainty.datamodules.CIFAR10DataModule", "generated/torch_uncertainty.datamodules.DOTA2GamesDataModule", "generated/torch_uncertainty.datamodules.HTRU2DataModule", "generated/torch_uncertainty.datamodules.ImageNetDataModule", "generated/torch_uncertainty.datamodules.MNISTDataModule", "generated/torch_uncertainty.datamodules.OnlineShoppersDataModule", "generated/torch_uncertainty.datamodules.SpamBaseDataModule", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule", "generated/torch_uncertainty.datamodules.UCIRegressionDataModule", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule", "generated/torch_uncertainty.datasets.Fractals", "generated/torch_uncertainty.datasets.FrostImages", "generated/torch_uncertainty.datasets.KITTIDepth", "generated/torch_uncertainty.datasets.MUAD", "generated/torch_uncertainty.datasets.NYUv2", "generated/torch_uncertainty.datasets.classification.CIFAR100C", "generated/torch_uncertainty.datasets.classification.CIFAR100N", "generated/torch_uncertainty.datasets.classification.CIFAR10C", "generated/torch_uncertainty.datasets.classification.CIFAR10H", "generated/torch_uncertainty.datasets.classification.CIFAR10N", "generated/torch_uncertainty.datasets.classification.ImageNetA", "generated/torch_uncertainty.datasets.classification.ImageNetC", "generated/torch_uncertainty.datasets.classification.ImageNetO", "generated/torch_uncertainty.datasets.classification.ImageNetR", "generated/torch_uncertainty.datasets.classification.MNISTC", "generated/torch_uncertainty.datasets.classification.NotMNIST", "generated/torch_uncertainty.datasets.classification.OpenImageO", "generated/torch_uncertainty.datasets.classification.TinyImageNet", "generated/torch_uncertainty.datasets.classification.TinyImageNetC", "generated/torch_uncertainty.datasets.classification.uci.BankMarketing", "generated/torch_uncertainty.datasets.classification.uci.DOTA2Games", "generated/torch_uncertainty.datasets.classification.uci.HTRU2", "generated/torch_uncertainty.datasets.classification.uci.OnlineShoppers", "generated/torch_uncertainty.datasets.classification.uci.SpamBase", "generated/torch_uncertainty.datasets.regression.UCIRegression", "generated/torch_uncertainty.datasets.segmentation.CamVid", "generated/torch_uncertainty.datasets.segmentation.Cityscapes", "generated/torch_uncertainty.layers.BatchConv2d", "generated/torch_uncertainty.layers.BatchLinear", "generated/torch_uncertainty.layers.MaskedConv2d", "generated/torch_uncertainty.layers.MaskedLinear", "generated/torch_uncertainty.layers.PackedConv2d", "generated/torch_uncertainty.layers.PackedLinear", "generated/torch_uncertainty.layers.bayesian.BayesConv1d", "generated/torch_uncertainty.layers.bayesian.BayesConv2d", "generated/torch_uncertainty.layers.bayesian.BayesConv3d", "generated/torch_uncertainty.layers.bayesian.BayesLinear", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear", "generated/torch_uncertainty.losses.BCEWithLogitsLSLoss", "generated/torch_uncertainty.losses.BetaNLL", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss", "generated/torch_uncertainty.losses.ConflictualLoss", "generated/torch_uncertainty.losses.DECLoss", "generated/torch_uncertainty.losses.DERLoss", "generated/torch_uncertainty.losses.DistributionNLLLoss", "generated/torch_uncertainty.losses.ELBOLoss", "generated/torch_uncertainty.losses.FocalLoss", "generated/torch_uncertainty.losses.KLDiv", "generated/torch_uncertainty.metrics.AUSE", "generated/torch_uncertainty.metrics.classification.AUGRC", "generated/torch_uncertainty.metrics.classification.AURC", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError", "generated/torch_uncertainty.metrics.classification.BrierScore", "generated/torch_uncertainty.metrics.classification.CalibrationError", "generated/torch_uncertainty.metrics.classification.CategoricalNLL", "generated/torch_uncertainty.metrics.classification.CovAt5Risk", "generated/torch_uncertainty.metrics.classification.CovAtxRisk", "generated/torch_uncertainty.metrics.classification.Disagreement", "generated/torch_uncertainty.metrics.classification.Entropy", "generated/torch_uncertainty.metrics.classification.FPR95", "generated/torch_uncertainty.metrics.classification.FPRx", "generated/torch_uncertainty.metrics.classification.GroupingLoss", "generated/torch_uncertainty.metrics.classification.MeanIntersectionOverUnion", "generated/torch_uncertainty.metrics.classification.MutualInformation", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov", "generated/torch_uncertainty.metrics.classification.RiskAtxCov", "generated/torch_uncertainty.metrics.classification.VariationRatio", "generated/torch_uncertainty.metrics.regression.DistributionNLL", "generated/torch_uncertainty.metrics.regression.Log10", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError", "generated/torch_uncertainty.metrics.regression.SILog", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy", "generated/torch_uncertainty.models.CheckpointEnsemble", "generated/torch_uncertainty.models.EMA", "generated/torch_uncertainty.models.MCDropout", "generated/torch_uncertainty.models.SWA", "generated/torch_uncertainty.models.SWAG", "generated/torch_uncertainty.models.StochasticModel", "generated/torch_uncertainty.models.deep_ensembles", "generated/torch_uncertainty.models.mc_dropout", "generated/torch_uncertainty.post_processing.LaplaceApprox", "generated/torch_uncertainty.post_processing.MCBatchNorm", "generated/torch_uncertainty.post_processing.MatrixScaler", "generated/torch_uncertainty.post_processing.TemperatureScaler", "generated/torch_uncertainty.post_processing.VectorScaler", "generated/torch_uncertainty.routines.ClassificationRoutine", "generated/torch_uncertainty.routines.PixelRegressionRoutine", "generated/torch_uncertainty.routines.RegressionRoutine", "generated/torch_uncertainty.routines.SegmentationRoutine", "index", "installation", "introduction_uncertainty", "quickstart", "references", "sg_execution_times"], "filenames": ["api.rst", "auto_tutorials/index.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/tutorial_bayesian.rst", "auto_tutorials/tutorial_corruption.rst", "auto_tutorials/tutorial_der_cubic.rst", "auto_tutorials/tutorial_evidential_classification.rst", "auto_tutorials/tutorial_from_de_to_pe.rst", "auto_tutorials/tutorial_mc_batch_norm.rst", "auto_tutorials/tutorial_mc_dropout.rst", "auto_tutorials/tutorial_pe_cifar10.rst", "auto_tutorials/tutorial_scaler.rst", "cli_guide.rst", "contributing.rst", "generated/torch_uncertainty.baselines.classification.ResNetBaseline.rst", "generated/torch_uncertainty.baselines.classification.VGGBaseline.rst", "generated/torch_uncertainty.baselines.classification.WideResNetBaseline.rst", "generated/torch_uncertainty.baselines.depth.BTSBaseline.rst", "generated/torch_uncertainty.baselines.regression.MLPBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.DeepLabBaseline.rst", "generated/torch_uncertainty.baselines.segmentation.SegFormerBaseline.rst", "generated/torch_uncertainty.datamodules.BankMarketingDataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR100DataModule.rst", "generated/torch_uncertainty.datamodules.CIFAR10DataModule.rst", "generated/torch_uncertainty.datamodules.DOTA2GamesDataModule.rst", "generated/torch_uncertainty.datamodules.HTRU2DataModule.rst", "generated/torch_uncertainty.datamodules.ImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.MNISTDataModule.rst", "generated/torch_uncertainty.datamodules.OnlineShoppersDataModule.rst", "generated/torch_uncertainty.datamodules.SpamBaseDataModule.rst", "generated/torch_uncertainty.datamodules.TinyImageNetDataModule.rst", "generated/torch_uncertainty.datamodules.UCIRegressionDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CamVidDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.CityscapesDataModule.rst", "generated/torch_uncertainty.datamodules.segmentation.MUADDataModule.rst", "generated/torch_uncertainty.datasets.Fractals.rst", "generated/torch_uncertainty.datasets.FrostImages.rst", "generated/torch_uncertainty.datasets.KITTIDepth.rst", "generated/torch_uncertainty.datasets.MUAD.rst", "generated/torch_uncertainty.datasets.NYUv2.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR100N.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10C.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10H.rst", "generated/torch_uncertainty.datasets.classification.CIFAR10N.rst", "generated/torch_uncertainty.datasets.classification.ImageNetA.rst", "generated/torch_uncertainty.datasets.classification.ImageNetC.rst", "generated/torch_uncertainty.datasets.classification.ImageNetO.rst", "generated/torch_uncertainty.datasets.classification.ImageNetR.rst", "generated/torch_uncertainty.datasets.classification.MNISTC.rst", "generated/torch_uncertainty.datasets.classification.NotMNIST.rst", "generated/torch_uncertainty.datasets.classification.OpenImageO.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNet.rst", "generated/torch_uncertainty.datasets.classification.TinyImageNetC.rst", "generated/torch_uncertainty.datasets.classification.uci.BankMarketing.rst", "generated/torch_uncertainty.datasets.classification.uci.DOTA2Games.rst", "generated/torch_uncertainty.datasets.classification.uci.HTRU2.rst", "generated/torch_uncertainty.datasets.classification.uci.OnlineShoppers.rst", "generated/torch_uncertainty.datasets.classification.uci.SpamBase.rst", "generated/torch_uncertainty.datasets.regression.UCIRegression.rst", "generated/torch_uncertainty.datasets.segmentation.CamVid.rst", "generated/torch_uncertainty.datasets.segmentation.Cityscapes.rst", "generated/torch_uncertainty.layers.BatchConv2d.rst", "generated/torch_uncertainty.layers.BatchLinear.rst", "generated/torch_uncertainty.layers.MaskedConv2d.rst", "generated/torch_uncertainty.layers.MaskedLinear.rst", "generated/torch_uncertainty.layers.PackedConv2d.rst", "generated/torch_uncertainty.layers.PackedLinear.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv1d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv2d.rst", "generated/torch_uncertainty.layers.bayesian.BayesConv3d.rst", "generated/torch_uncertainty.layers.bayesian.BayesLinear.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNConv2d.rst", "generated/torch_uncertainty.layers.bayesian.LPBNNLinear.rst", "generated/torch_uncertainty.losses.BCEWithLogitsLSLoss.rst", "generated/torch_uncertainty.losses.BetaNLL.rst", "generated/torch_uncertainty.losses.ConfidencePenaltyLoss.rst", "generated/torch_uncertainty.losses.ConflictualLoss.rst", "generated/torch_uncertainty.losses.DECLoss.rst", "generated/torch_uncertainty.losses.DERLoss.rst", "generated/torch_uncertainty.losses.DistributionNLLLoss.rst", "generated/torch_uncertainty.losses.ELBOLoss.rst", "generated/torch_uncertainty.losses.FocalLoss.rst", "generated/torch_uncertainty.losses.KLDiv.rst", "generated/torch_uncertainty.metrics.AUSE.rst", "generated/torch_uncertainty.metrics.classification.AUGRC.rst", "generated/torch_uncertainty.metrics.classification.AURC.rst", "generated/torch_uncertainty.metrics.classification.AdaptiveCalibrationError.rst", "generated/torch_uncertainty.metrics.classification.BrierScore.rst", "generated/torch_uncertainty.metrics.classification.CalibrationError.rst", "generated/torch_uncertainty.metrics.classification.CategoricalNLL.rst", "generated/torch_uncertainty.metrics.classification.CovAt5Risk.rst", "generated/torch_uncertainty.metrics.classification.CovAtxRisk.rst", "generated/torch_uncertainty.metrics.classification.Disagreement.rst", "generated/torch_uncertainty.metrics.classification.Entropy.rst", "generated/torch_uncertainty.metrics.classification.FPR95.rst", "generated/torch_uncertainty.metrics.classification.FPRx.rst", "generated/torch_uncertainty.metrics.classification.GroupingLoss.rst", "generated/torch_uncertainty.metrics.classification.MeanIntersectionOverUnion.rst", "generated/torch_uncertainty.metrics.classification.MutualInformation.rst", "generated/torch_uncertainty.metrics.classification.RiskAt80Cov.rst", "generated/torch_uncertainty.metrics.classification.RiskAtxCov.rst", "generated/torch_uncertainty.metrics.classification.VariationRatio.rst", "generated/torch_uncertainty.metrics.regression.DistributionNLL.rst", "generated/torch_uncertainty.metrics.regression.Log10.rst", "generated/torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.rst", "generated/torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.rst", "generated/torch_uncertainty.metrics.regression.MeanSquaredLogError.rst", "generated/torch_uncertainty.metrics.regression.SILog.rst", "generated/torch_uncertainty.metrics.regression.ThresholdAccuracy.rst", "generated/torch_uncertainty.models.CheckpointEnsemble.rst", "generated/torch_uncertainty.models.EMA.rst", "generated/torch_uncertainty.models.MCDropout.rst", "generated/torch_uncertainty.models.SWA.rst", "generated/torch_uncertainty.models.SWAG.rst", "generated/torch_uncertainty.models.StochasticModel.rst", "generated/torch_uncertainty.models.deep_ensembles.rst", "generated/torch_uncertainty.models.mc_dropout.rst", "generated/torch_uncertainty.post_processing.LaplaceApprox.rst", "generated/torch_uncertainty.post_processing.MCBatchNorm.rst", "generated/torch_uncertainty.post_processing.MatrixScaler.rst", "generated/torch_uncertainty.post_processing.TemperatureScaler.rst", "generated/torch_uncertainty.post_processing.VectorScaler.rst", "generated/torch_uncertainty.routines.ClassificationRoutine.rst", "generated/torch_uncertainty.routines.PixelRegressionRoutine.rst", "generated/torch_uncertainty.routines.RegressionRoutine.rst", "generated/torch_uncertainty.routines.SegmentationRoutine.rst", "index.rst", "installation.rst", "introduction_uncertainty.rst", "quickstart.rst", "references.rst", "sg_execution_times.rst"], "titles": ["API Reference", "Tutorials", "Computation times", "Train a Bayesian Neural Network in Three Minutes", "Corrupting Images with TorchUncertainty to Benchmark Robustness", "Deep Evidential Regression on a Toy Example", "Deep Evidential Classification on a Toy Example", "Improved Ensemble parameter-efficiency with Packed-Ensembles", "Training a LeNet with Monte Carlo Batch Normalization", "Training a LeNet with Monte-Carlo Dropout", "From a Standard Classifier to a Packed-Ensemble", "Improve Top-label Calibration with Temperature Scaling", "CLI Guide", "Contributing", "ResNetBaseline", "VGGBaseline", "WideResNetBaseline", "BTSBaseline", "MLPBaseline", "DeepLabBaseline", "SegFormerBaseline", "BankMarketingDataModule", "CIFAR100DataModule", "CIFAR10DataModule", "DOTA2GamesDataModule", "HTRU2DataModule", "ImageNetDataModule", "MNISTDataModule", "OnlineShoppersDataModule", "SpamBaseDataModule", "TinyImageNetDataModule", "UCIRegressionDataModule", "CamVidDataModule", "CityscapesDataModule", "MUADDataModule", "Fractals", "FrostImages", "KITTIDepth", "MUAD", "NYUv2", "CIFAR100C", "CIFAR100N", "CIFAR10C", "CIFAR10H", "CIFAR10N", "ImageNetA", "ImageNetC", "ImageNetO", "ImageNetR", "MNISTC", "NotMNIST", "OpenImageO", "TinyImageNet", "TinyImageNetC", "BankMarketing", "DOTA2Games", "HTRU2", "OnlineShoppers", "SpamBase", "UCIRegression", "CamVid", "Cityscapes", "BatchConv2d", "BatchLinear", "MaskedConv2d", "MaskedLinear", "PackedConv2d", "PackedLinear", "BayesConv1d", "BayesConv2d", "BayesConv3d", "BayesLinear", "LPBNNConv2d", "LPBNNLinear", "BCEWithLogitsLSLoss", "BetaNLL", "ConfidencePenaltyLoss", "ConflictualLoss", "DECLoss", "DERLoss", "DistributionNLLLoss", "ELBOLoss", "FocalLoss", "KLDiv", "AUSE", "AUGRC", "AURC", "AdaptiveCalibrationError", "BrierScore", "CalibrationError", "CategoricalNLL", "CovAt5Risk", "CovAtxRisk", "Disagreement", "Entropy", "FPR95", "FPRx", "GroupingLoss", "MeanIntersectionOverUnion", "MutualInformation", "RiskAt80Cov", "RiskAtxCov", "VariationRatio", "DistributionNLL", "Log10", "MeanAbsoluteErrorInverse", "MeanGTRelativeAbsoluteError", "MeanGTRelativeSquaredError", "MeanSquaredErrorInverse", "MeanSquaredLogError", "SILog", "ThresholdAccuracy", "CheckpointEnsemble", "EMA", "MCDropout", "SWA", "SWAG", "StochasticModel", "torch_uncertainty.models.deep_ensembles", "torch_uncertainty.models.mc_dropout", "LaplaceApprox", "MCBatchNorm", "MatrixScaler", "TemperatureScaler", "VectorScaler", "ClassificationRoutine", "PixelRegressionRoutine", "RegressionRoutine", "SegmentationRoutine", "Welcome to Torch Uncertainty", "Installation", "Introduction to Classification Uncertainty", "Quickstart", "References", "Computation times"], "terms": {"The": [0, 4, 7, 10, 11, 12, 21, 24, 25, 28, 29, 31, 38, 42, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 110, 111, 112, 113, 114, 116, 118, 125, 126, 127, 128, 129, 132, 133], "ar": [0, 3, 4, 7, 8, 10, 11, 12, 13, 20, 38, 62, 63, 66, 67, 88, 90, 91, 92, 93, 97, 99, 102, 103, 105, 108, 125, 131, 132, 133], "main": [0, 3, 7, 10, 11, 13, 85, 86], "build": [0, 11, 42, 49, 118, 128], "block": [0, 62, 64, 65, 66, 72, 116], "librari": [0, 3, 4, 7, 13, 120, 132, 133], "thei": [0, 7, 9, 10, 11, 12, 84], "defin": [0, 3, 5, 6, 7, 8, 11, 118, 125, 127, 128], "framework": [0, 8], "which": [0, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 20, 22, 23, 26, 27, 61, 72, 73, 92, 96, 101, 102, 112, 132], "train": [0, 1, 2, 11, 12, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 43, 44, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 81, 112, 113, 114, 115, 116, 121, 125, 126, 127, 128, 129, 131, 133, 134], "evalu": [0, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 26, 27, 32, 33, 85, 86, 112, 114, 125, 126, 127, 128, 132, 133], "allow": [0, 7, 10, 11], "easi": [0, 132], "comput": [0, 3, 7, 9, 49, 51, 65, 67, 76, 77, 80, 81, 83, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 125, 128, 132, 133], "differ": [0, 4, 7, 8, 12, 54, 55, 56, 57, 58, 59, 112, 116, 132], "crucial": 0, "uncertainti": [0, 3, 5, 6, 9, 10, 13, 64, 65, 71, 72, 73, 75, 77, 78, 84, 85, 86, 99, 116, 118, 120, 121, 130], "context": 0, "name": [0, 12, 13, 31, 42, 49, 59, 85, 86], "torchuncertainti": [0, 1, 2, 54, 55, 56, 57, 58, 59, 129, 134], "provid": [0, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 20, 32, 33, 34, 84, 85, 86, 89, 99, 132], "lightn": [0, 6, 7, 11, 125, 129], "base": [0, 3, 5, 6, 7, 8, 9, 12, 22, 23, 26, 27, 32, 33, 84, 85, 86, 88, 90, 93, 94, 97, 98, 99, 103, 115, 116, 129, 130, 131, 133], "can": [0, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 32, 33, 34, 38, 62, 99, 125, 127, 128, 130, 132, 133], "easili": [0, 11, 132], "These": [0, 4, 7, 132], "inherit": [0, 12], "from": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 32, 33, 34, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 81, 83, 84, 90, 93, 94, 96, 99, 105, 106, 107, 108, 109, 110, 112, 116, 120, 125, 126, 128, 129, 132, 133, 134], "specif": [0, 3, 5, 13, 132], "design": 0, "benchmark": [0, 1, 2, 42, 46, 49, 53, 129, 132, 133, 134], "similar": [0, 7, 125], "set": [0, 3, 5, 7, 10, 12, 14, 15, 16, 22, 23, 26, 27, 30, 43, 44, 54, 55, 56, 57, 58, 59, 60, 71, 80, 81, 84, 88, 90, 93, 94, 97, 99, 103, 104, 106, 107, 108, 109, 110, 111, 114, 121, 122, 123, 124, 125, 128, 131, 132], "here": [0, 3, 7, 8, 9, 10, 11, 12, 62, 63, 125, 127, 128, 132], "constant": [0, 82], "architectur": [0, 12, 14, 15, 20, 129, 132], "On": [1, 11, 75, 77, 122, 123, 124, 131, 133], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 32, 33, 34, 49, 62, 63, 65, 66, 67, 74, 79, 81, 84, 85, 86, 91, 112, 114, 120, 121, 129, 131, 132, 133], "page": [1, 13, 129, 131, 132], "you": [1, 5, 7, 8, 9, 10, 11, 12, 13, 38, 49, 59, 64, 65, 66, 67, 81, 114, 125, 127, 128, 129, 130, 132], "find": [1, 7, 9, 125, 127, 128, 132, 133], "insight": 1, "don": [1, 7, 8, 9, 10, 11], "t": [1, 7, 8, 9, 10, 11, 60, 63, 82, 88, 115, 133], "hesit": [1, 132], "open": [1, 4, 7, 10, 11, 13, 51, 133], "an": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 32, 33, 34, 49, 62, 63, 75, 84, 85, 86, 93, 99, 125, 126, 127, 132, 133], "issu": [1, 7, 10, 11, 13, 49, 132], "have": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 129, 130, 131, 132], "ani": [1, 7, 10, 11, 13, 14, 15, 16, 62, 63, 64, 65, 132], "question": [1, 7], "suggest": [1, 8, 13], "improv": [1, 2, 3, 5, 6, 8, 9, 96, 131, 133, 134], "top": [1, 2, 3, 7, 87, 88, 89, 97, 134], "label": [1, 2, 3, 5, 6, 7, 8, 9, 10, 42, 49, 74, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 101, 102, 103, 110, 122, 123, 124, 134], "calibr": [1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 77, 85, 86, 87, 89, 97, 122, 123, 124, 125, 128, 131, 132, 134], "temperatur": [1, 2, 13, 122, 123, 124, 132, 134], "scale": [1, 2, 13, 14, 15, 16, 32, 33, 34, 51, 64, 65, 105, 106, 107, 108, 109, 110, 116, 122, 123, 124, 132, 134], "lenet": [1, 2, 7, 134], "mont": [1, 2, 13, 14, 15, 16, 121, 134], "carlo": [1, 2, 13, 14, 15, 16, 121, 134], "dropout": [1, 2, 13, 14, 15, 16, 114, 119, 134], "batch": [1, 2, 3, 5, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 63, 64, 65, 74, 84, 88, 90, 93, 94, 97, 99, 103, 104, 110, 114, 120, 121, 125, 126, 127, 128, 134], "normal": [1, 2, 5, 7, 14, 33, 34, 68, 69, 70, 71, 79, 85, 86, 88, 90, 93, 97, 99, 103, 121, 131, 134], "deep": [1, 2, 3, 9, 13, 78, 79, 85, 86, 87, 110, 116, 118, 120, 121, 132, 134], "evidenti": [1, 2, 78, 79, 134], "regress": [1, 2, 12, 18, 31, 59, 79, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 120, 126, 127, 132, 134], "toi": [1, 2, 134], "exampl": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 62, 63, 128, 130, 133, 134], "bayesian": [1, 2, 6, 8, 9, 11, 13, 68, 69, 70, 71, 72, 73, 76, 81, 83, 89, 116, 120, 121, 129, 134], "neural": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 42, 46, 53, 71, 72, 73, 75, 76, 81, 83, 85, 86, 97, 122, 123, 124, 129, 134], "network": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 42, 46, 53, 66, 67, 71, 72, 73, 75, 76, 81, 83, 85, 86, 97, 110, 121, 122, 123, 124, 129, 134], "three": [1, 2, 63, 132, 134], "minut": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 134], "classif": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 21, 24, 25, 28, 29, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 78, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 118, 120, 125, 132, 134], "corrupt": [1, 2, 22, 23, 42, 46, 49, 53, 133, 134], "imag": [1, 2, 3, 6, 7, 8, 9, 22, 23, 26, 27, 32, 33, 34, 38, 42, 43, 44, 49, 50, 51, 53, 60, 61, 62, 64, 66, 110, 126, 130, 133, 134], "robust": [1, 2, 42, 46, 49, 53, 133, 134], "standard": [1, 2, 3, 7, 12, 71, 72, 73, 132, 134], "classifi": [1, 2, 3, 7, 8, 9, 134], "pack": [1, 2, 12, 14, 15, 16, 66, 67, 129, 132, 134], "ensembl": [1, 2, 3, 8, 9, 13, 14, 15, 16, 20, 62, 63, 64, 66, 67, 93, 99, 112, 113, 118, 125, 126, 127, 129, 132, 134], "paramet": [1, 2, 3, 5, 6, 10, 11, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134], "effici": [1, 2, 9, 11, 62, 63, 129, 132, 133, 134], "download": [1, 3, 4, 5, 6, 8, 9, 10, 11, 27, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60], "all": [1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 40, 42, 49, 53, 62, 64, 66, 121, 130, 132, 134], "python": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 129, 130, 132], "sourc": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "code": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 132], "auto_tutorials_python": 1, "zip": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "jupyt": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "notebook": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "auto_tutorials_jupyt": 1, "galleri": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 134], "gener": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 85, 99, 115], "sphinx": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 130], "09": [2, 7, 11, 134], "38": [2, 5, 6, 7, 8, 10, 11, 134], "072": [2, 7, 134], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 134], "execut": [2, 7, 10, 11, 12, 67, 134], "9": [2, 5, 6, 7, 9, 10, 11, 12, 134], "file": [2, 3, 4, 7, 10, 11, 14, 15, 16, 26, 43, 44, 129, 130, 132, 134], "auto_tutori": 2, "mem": [2, 134], "mb": [2, 134], "tutorial_from_de_to_p": [2, 7, 134], "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 132, 134], "03": [2, 7, 10, 11, 134], "26": [2, 5, 7, 10, 11, 134], "823": [2, 7, 134], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 39, 49, 54, 55, 56, 57, 58, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 80, 85, 86, 88, 96, 103, 110, 116, 121, 122, 123, 124, 128, 131, 134], "tutorial_pe_cifar10": [2, 10, 134], "01": [2, 4, 6, 7, 9, 10, 11, 19, 72, 73, 128, 134], "55": [2, 6, 7, 10, 11, 134], "850": [2, 5, 7, 10, 134], "tutorial_evidential_classif": [2, 6, 134], "00": [2, 3, 4, 5, 7, 8, 9, 10, 11, 134], "56": [2, 3, 5, 6, 7, 10, 11, 134], "159": [2, 6, 7, 134], "tutorial_bayesian": [2, 3, 134], "54": [2, 3, 7, 11, 134], "876": [2, 3, 7, 134], "tutorial_mc_dropout": [2, 9, 134], "50": [2, 5, 7, 9, 10, 11, 12, 14, 134], "321": [2, 5, 7, 9, 134], "tutorial_mc_batch_norm": [2, 8, 134], "087": [2, 7, 8, 134], "tutorial_scal": [2, 11, 134], "34": [2, 5, 7, 11, 12, 134], "356": [2, 7, 11, 134], "tutorial_corrupt": [2, 4, 134], "15": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 19, 125, 128, 134], "245": [2, 4, 7, 134], "tutorial_der_cub": [2, 5, 134], "06": [2, 7, 9, 10, 11, 76, 116, 134], "355": [2, 5, 7, 134], "go": [3, 4, 5, 6, 8, 9, 10, 11, 132], "end": [3, 4, 5, 6, 7, 8, 9, 10, 11, 116], "full": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "In": [3, 5, 6, 7, 8, 9, 10, 11, 12, 42, 46, 49, 51, 53, 62, 84, 85, 86, 87, 89, 97, 112, 115, 116, 118, 120, 121, 122, 123, 124, 131, 132, 133], "tutori": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 129, 131, 132], "we": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 62, 63, 116, 131, 132], "variat": [3, 14, 15, 16, 102, 125], "infer": [3, 7, 8, 34], "bnn": 3, "mnist": [3, 6, 7, 8, 9, 27, 49], "dataset": [3, 5, 6, 8, 9, 11, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 121, 122, 123, 124, 125, 129, 132], "class": [3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132], "estim": [3, 5, 6, 7, 8, 9, 12, 14, 15, 16, 20, 62, 63, 64, 65, 66, 67, 75, 84, 85, 86, 88, 93, 94, 97, 99, 102, 106, 107, 109, 110, 114, 116, 118, 119, 120, 121, 129, 131, 132, 133], "predict": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 20, 80, 85, 86, 90, 92, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 125, 131, 133], "via": [3, 7, 10, 11, 130, 132], "weight": [3, 5, 7, 11, 12, 13, 14, 62, 63, 66, 71, 74, 75, 76, 77, 78, 79, 81, 82, 85, 115, 116, 120, 122, 124], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 32, 33, 34, 35, 38, 39, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 72, 73, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 99, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 118, 120, 121, 125, 126, 127, 130, 131, 132], "achiev": [3, 7], "consid": [3, 5, 6, 7, 8, 9, 120, 133], "random": [3, 7, 10, 116], "learn": [3, 6, 7, 9, 12, 13, 62, 63, 78, 87, 116, 120, 122, 123, 124, 133], "posterior": [3, 9, 68, 69, 70, 71, 72, 73, 116, 120, 129, 133], "distribut": [3, 5, 6, 7, 9, 11, 13, 18, 22, 23, 26, 27, 30, 51, 71, 76, 79, 80, 103, 125, 126, 127, 128, 131, 132, 133], "contrast": [3, 4, 33, 34, 85, 86], "onli": [3, 4, 6, 7, 10, 13, 14, 15, 16, 66, 67, 88, 114, 115, 116, 119, 121, 132], "singl": [3, 6, 7, 20, 94, 110, 112, 126, 127, 133], "seen": [3, 7, 12], "dirac": 3, "For": [3, 4, 7, 9, 12, 13, 43, 44, 110, 113, 116, 130, 132, 133], "more": [3, 5, 8, 9, 10, 11, 12, 120, 125, 127, 128, 131, 133], "inform": [3, 7, 9, 14, 15, 16, 35, 50, 99, 125], "reader": [3, 9], "follow": [3, 4, 5, 6, 7, 8, 9, 12, 13, 32, 33, 34, 85, 86, 105, 106, 107, 108, 109, 130, 131, 132, 133], "resourc": [3, 9], "icml2015": 3, "hand": 3, "user": [3, 7, 10, 11, 12, 132], "ieee": [3, 7, 129, 133], "intellig": 3, "magazin": 3, "part": [3, 5, 6, 7, 8, 9, 13], "alreadi": [3, 5, 6, 7, 8, 9, 10, 11, 13, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 130], "implement": [3, 5, 6, 8, 9, 12, 13, 62, 63, 67, 74, 82, 99, 133], "tu": [3, 5, 6, 8, 9], "To": [3, 5, 6, 8, 9, 11, 12, 13, 129, 130, 131, 132], "modul": [3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 20, 62, 63, 81, 83, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132], "our": [3, 5, 6, 8, 9, 10, 12, 89, 132], "tutrain": [3, 5, 6, 7, 8, 9, 132], "bayesian_lenet": 3, "li": [3, 6, 8, 133], "torch_uncertainti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132], "object": [3, 5, 6, 7, 10, 11, 13, 51, 81, 82, 84, 85, 86, 133], "elboloss": 3, "datamodul": [3, 5, 6, 7, 8, 9, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 129, 132], "handl": [3, 6, 7, 8, 9, 11, 132], "dataload": [3, 5, 6, 7, 8, 9, 10, 22, 23, 26, 27, 30, 32, 33, 34, 116, 132], "mnistdatamodul": [3, 6, 8, 9], "also": [3, 4, 5, 6, 7, 8, 9, 11, 13, 99, 129, 131, 132], "need": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 132], "torch": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 32, 33, 34, 38, 60, 61, 62, 63, 66, 67, 72, 73, 93, 94, 96, 97, 99, 103, 112, 116, 120, 121, 125, 127, 128, 130, 132], "pytorch": [3, 6, 7, 10, 11, 12, 13, 62, 63, 74, 82, 115, 116, 126, 127, 129, 130], "": [3, 4, 5, 6, 7, 8, 9, 10, 12, 38, 49, 54, 55, 56, 57, 58, 59, 66, 67, 71, 88, 97, 129, 131, 133], "nn": [3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 81, 83, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132], "pathlib": [3, 6, 8, 9], "import": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 32, 33, 34, 132], "path": [3, 6, 8, 9, 10, 26, 32, 33, 34, 39, 42, 49], "classificationroutin": [3, 6, 7, 8, 9, 12, 81, 132], "adam": [3, 5, 6, 132, 133], "default": [3, 6, 7, 10, 11, 12, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 38, 39, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 76, 80, 82, 84, 85, 86, 88, 90, 93, 94, 99, 103, 110, 111, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "rate": [3, 5, 6, 7, 12, 14, 15, 16, 86, 95, 96, 122, 123, 124, 128], "001": [3, 6, 10], "def": [3, 4, 5, 6, 7, 8, 9, 10, 12, 132], "optim_lenet": [3, 6], "lr": [3, 5, 6, 7, 10, 12, 122, 123, 124, 132], "1e": [3, 5, 6, 39, 72, 73, 76, 116, 128, 132], "return": [3, 4, 5, 6, 7, 10, 12, 14, 15, 16, 22, 23, 26, 27, 30, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 76, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 116, 118, 125, 126, 127, 128, 132], "instanti": [3, 9], "trainer": [3, 5, 6, 7, 8, 11, 12, 132], "root": [3, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 110, 116, 132], "log": [3, 5, 6, 7, 8, 9, 11, 14, 15, 16, 75, 78, 79, 80, 90, 103, 109, 110, 125, 126, 128], "transform": [3, 4, 6, 7, 8, 9, 10, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "pleas": [3, 5, 7, 8, 10, 11, 13, 131, 133], "note": [3, 5, 7, 8, 10, 12, 54, 55, 56, 57, 58, 59, 66, 67], "ood": [3, 7, 10, 14, 15, 16, 96, 125], "detect": [3, 7, 10, 13, 14, 15, 16, 51, 82, 125, 132, 133], "eval_ood": [3, 7, 11, 14, 15, 16, 22, 23, 26, 27, 30, 125, 132], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 89, 98, 102, 107, 108, 109, 110, 112, 114, 119, 120, 121, 122, 123, 124, 127, 131, 132], "final": [3, 5, 11, 88, 97, 112, 131, 132], "blueprint": [3, 9], "acceler": [3, 5, 6, 7, 8, 9, 12], "cpu": [3, 5, 6, 7, 8, 9, 11, 121, 122, 123, 124, 129, 130], "enable_progress_bar": [3, 5, 6, 8, 9], "fals": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 22, 23, 26, 27, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 88, 89, 95, 96, 107, 108, 109, 110, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 132], "max_epoch": [3, 5, 6, 7, 8, 9, 12, 132], "data": [3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 60, 62, 63, 64, 65, 71, 72, 73, 75, 122, 123, 124, 129, 132], "batch_siz": [3, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 67, 119, 120, 132], "128": [3, 6, 7, 8, 9, 12], "num_channel": [3, 6, 8, 9], "num_class": [3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 19, 20, 87, 88, 89, 97, 98, 122, 124, 125, 128, 132], "Then": [3, 5, 6, 12, 13, 130], "just": [3, 7, 11, 132], "dure": [3, 5, 6, 7, 10, 11, 32, 33, 34, 81, 114, 132], "do": [3, 5, 7, 9, 10, 11, 12, 13, 125, 127, 128, 132], "redefin": 3, "elbo": [3, 81], "partial": 3, "function": [3, 5, 6, 7, 8, 9, 11, 12, 13, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 81, 89, 114, 120, 125, 126, 127, 128, 131, 132, 133], "functool": 3, "hyperparamet": [3, 12], "propos": [3, 4], "blitz": 3, "As": [3, 7, 8, 85, 86, 105, 106, 107, 108, 109, 132], "crossentropyloss": [3, 7, 8, 9, 10, 12, 132], "likelihood": [3, 5, 6, 7, 8, 9, 11, 75, 79, 80, 90, 99, 103, 131], "inner_loss": [3, 81], "kl_weight": [3, 81], "10000": [3, 7, 10], "num_sampl": [3, 5, 81, 117], "optim_recip": [3, 5, 6, 7, 8, 9, 14, 15, 16, 125, 126, 127, 128, 132], "is_ensembl": [3, 7, 9, 125, 126, 127], "now": [3, 5, 6, 7, 8, 9, 11, 12, 13], "prepar": [3, 7], "wrapper": [3, 7, 8, 9, 12, 89, 114, 119, 120, 121, 132], "includ": [3, 7, 13, 14, 15, 16, 112, 125, 130, 131], "well": [3, 11, 89, 129, 132, 133], "eval": [3, 6, 8, 9, 116, 121], "logic": [3, 7], "automat": [3, 7, 9, 11, 12, 81, 126, 127, 130, 132], "folder": [3, 13, 129, 130, 132], "save": [3, 7, 8, 10, 12, 14, 15, 16, 43, 44, 60, 98, 112, 122, 123, 124, 125], "fit": [3, 5, 6, 7, 8, 9, 12, 121, 122, 123, 124, 132], "opt": [3, 5, 6, 7, 8, 9, 11], "hostedtoolcach": [3, 5, 6, 7, 8, 9, 11], "10": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 39, 42, 70, 87, 89, 104, 129, 130, 132], "x64": [3, 5, 6, 7, 8, 9, 11], "lib": [3, 5, 6, 7, 8, 9, 11], "python3": [3, 5, 6, 7, 8, 9, 11, 13], "site": [3, 5, 6, 7, 8, 9, 11], "packag": [3, 5, 6, 7, 8, 9, 10, 11, 13, 130, 132], "connector": [3, 5, 6, 7, 8, 9], "data_connector": [3, 5, 6, 7, 8, 9], "424": [3, 5, 6, 7, 8, 9], "val_dataload": [3, 5, 6, 7, 8, 9, 30], "doe": [3, 5, 6, 7, 8, 9, 13, 49, 74], "mani": [3, 5, 6, 7, 8, 9, 21, 24, 25, 28, 29, 31, 132, 133], "worker": [3, 5, 6, 7, 8, 9, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34], "mai": [3, 5, 6, 7, 8, 9, 11, 13, 35, 50, 54, 55, 56, 57, 58, 59, 131], "bottleneck": [3, 5, 6, 7, 8, 9], "increas": [3, 5, 6, 7, 8, 9, 13, 66, 67, 119], "valu": [3, 5, 6, 7, 8, 9, 10, 11, 12, 38, 39, 62, 63, 76, 77, 80, 81, 84, 85, 86, 88, 91, 92, 96, 97, 99, 103, 104, 105, 106, 107, 108, 109, 110, 122, 123, 124, 131], "num_work": [3, 5, 6, 7, 8, 9, 10, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "argument": [3, 5, 6, 7, 8, 9, 12, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 132], "perform": [3, 5, 6, 7, 8, 9, 10, 12, 22, 26, 85, 86, 114, 116, 119, 125, 126, 127, 128], "train_dataload": [3, 5, 6, 7, 8, 9, 22, 23, 30], "test_dataload": [3, 5, 6, 7, 8, 9, 11, 22, 23, 26, 27, 30], "metric": [3, 5, 6, 7, 8, 9, 11, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 125, 126, 128, 129], "acc": [3, 6, 7, 8, 9], "95": [3, 7, 95], "07": [3, 7, 11], "brier": [3, 6, 7, 8, 9, 88, 97], "07452": 3, "entropi": [3, 6, 7, 8, 9, 10, 11, 14, 15, 16, 74, 125, 132], "19231": 3, "nll": [3, 5, 6, 7, 8, 9, 80, 90, 103], "15997": 3, "ec": [3, 6, 7, 8, 9], "01316": 3, "aec": [3, 6, 7, 8, 9], "01283": 3, "select": [3, 6, 8, 9, 85, 86, 114, 133], "augrc": [3, 6, 7, 8, 9], "39": [3, 5, 6, 7, 10, 11], "aurc": [3, 6, 7, 8, 9, 85], "44": [3, 5, 6, 7, 11], "cov": [3, 6, 7, 8, 9, 85, 86], "5risk": [3, 6, 7, 8, 9], "100": [3, 4, 5, 7, 8, 9, 10, 11, 122, 123, 124, 132], "risk": [3, 6, 7, 8, 9, 85, 86, 91, 92, 100, 101], "80cov": [3, 6, 7, 8, 9], "cal": [3, 6], "01316485833376646": 3, "012833844870328903": 3, "cl": [3, 6, 7], "9506999850273132": 3, "07451875507831573": 3, "15996992588043213": 3, "sc": [3, 6, 85, 86], "0039479900151491165": 3, "00444554490968585": 3, "005625000223517418": 3, "19230850040912628": 3, "ens_disagr": [3, 7], "008258333429694176": 3, "ens_entropi": [3, 7], "1914074420928955": 3, "ens_mi": [3, 7], "0009010148933157325": 3, "let": [3, 6, 7, 8, 9, 10, 12, 13, 131, 132], "appli": [3, 7, 8, 14, 15, 16, 22, 23, 26, 27, 32, 33, 39, 42, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 80, 114, 119, 133], "reshap": [3, 8, 9], "logit": [3, 8, 9, 10, 11, 14, 15, 16, 51, 74, 76, 77, 122, 123, 124, 125, 131, 132], "determin": [3, 8, 14, 15, 16, 20, 88, 90, 93, 94, 99, 103], "dimens": [3, 8, 88, 90, 93, 94, 99, 103], "correspond": [3, 7, 8, 13, 14, 15, 16, 62, 63, 75, 84, 85, 86, 91, 92, 131, 132], "merg": [3, 8], "order": [3, 7, 8], "num_estim": [3, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 62, 63, 64, 65, 66, 67, 72, 73, 88, 97, 114, 116, 118, 119, 121, 132], "x": [3, 5, 7, 8, 10, 63, 92, 96, 112, 114, 116, 132], "matplotlib": [3, 4, 5, 6, 8, 9, 10, 61, 84, 85, 86], "pyplot": [3, 4, 5, 6, 8, 9, 10], "plt": [3, 4, 5, 6, 8, 9, 10], "numpi": [3, 4, 6, 8, 9, 10, 13, 54, 55, 56, 57, 58, 59], "np": [3, 6, 8, 9, 10, 42, 49], "torchvis": [3, 4, 6, 7, 8, 9, 10, 32, 33, 34], "imshow": [3, 4, 6, 8, 9, 10], "img": [3, 6, 8, 9, 10], "npimg": [3, 6, 8, 9, 10], "transpos": [3, 6, 8, 9, 10], "axi": [3, 4, 6, 8, 9, 10, 61, 84, 85, 86], "off": [3, 4, 6, 8, 9, 10], "tight_layout": [3, 8, 9], "show": [3, 4, 6, 8, 9, 10, 11, 122, 123, 124], "datait": [3, 6, 8, 9, 10], "iter": [3, 6, 8, 9, 10, 122, 123, 124], "next": [3, 5, 6, 8, 9, 10], "print": [3, 6, 7, 8, 9, 10, 11, 62, 63, 85, 86], "make_grid": [3, 6, 8, 9, 10], "ground": [3, 5, 6, 7, 8, 9, 85, 86, 88, 90, 92, 97, 101, 103, 105, 106, 107, 108, 109, 110], "truth": [3, 5, 6, 7, 8, 9, 85, 86, 88, 90, 92, 97, 101, 103, 105, 106, 107, 108, 109, 110], "join": [3, 6, 8, 9, 10], "f": [3, 4, 6, 7, 8, 9, 10, 11, 52, 97, 132, 133], "j": [3, 4, 6, 7, 8, 9, 10, 116, 133], "rang": [3, 4, 6, 7, 8, 9, 10, 75], "put": [3, 7, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 85], "mode": [3, 7, 9, 10, 11, 13, 61, 112, 114, 116, 121, 125, 130], "sever": [3, 4, 22, 23, 49, 62], "sampl": [3, 5, 7, 9, 10, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 39, 42, 49, 60, 61, 62, 71, 72, 73, 81, 85, 86, 88, 90, 93, 94, 99, 103, 116, 128], "16": [3, 5, 7, 8, 9, 10, 11, 15, 62, 116, 121, 132], "softmax": [3, 7, 8, 9, 10, 11, 14, 15, 16, 125, 131], "averag": [3, 7, 88, 90, 93, 94, 99, 103, 113, 115, 116], "over": [3, 5, 6, 7, 10, 12, 62, 88, 90, 93, 94, 98, 99, 103, 105, 106, 109], "prob": [3, 6, 8, 9, 11, 43, 44, 86, 88, 90, 92, 93, 94, 97, 99, 101, 103], "dim": [3, 5, 6, 8, 9, 10], "avg_prob": 3, "mean": [3, 5, 7, 9, 10, 14, 15, 16, 33, 34, 71, 74, 75, 76, 77, 78, 79, 80, 82, 84, 88, 90, 93, 94, 97, 98, 99, 102, 103, 105, 106, 107, 108, 109, 116, 125], "var_prob": 3, "std": [3, 12, 14, 15, 16, 20, 33, 34, 125], "_": [3, 4, 7, 10], "max": [3, 8, 9, 10, 111, 125], "digit": [3, 6, 7, 8, 133], "dev": [3, 13, 130], "score": [3, 7, 11, 84, 86, 88, 90, 92, 93, 94, 96, 97, 98, 99, 101, 103, 132], "7": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 71], "00232": 3, "9e": 3, "05": [3, 4, 6, 7, 11, 12], "000428": 3, "00775": 3, "varianc": [3, 5, 8, 9, 110, 116], "non": [3, 21, 24, 25, 28, 29, 118], "intuit": 3, "wai": [3, 132], "divers": [3, 7], "ideal": [3, 7], "should": [3, 7, 11, 12, 66, 67, 132], "high": [3, 7, 75], "when": [3, 7, 11, 12, 13, 62, 63, 66, 67, 85, 86, 114, 116, 118, 132], "incorrect": [3, 7, 85, 86], "lecun": [3, 7, 9, 133], "y": [3, 5, 7, 11, 63, 82, 105, 106, 107, 108, 109, 122, 123, 124, 131, 133], "bottou": [3, 7, 133], "l": [3, 7, 78, 133], "bengio": [3, 7, 133], "haffner": [3, 7, 133], "p": [3, 7, 11, 82, 115], "1998": [3, 133], "gradient": [3, 7, 10, 133], "document": [3, 7, 129, 130, 133], "recognit": [3, 7, 133], "proceed": [3, 7, 133], "blundel": [3, 71, 118, 133], "c": [3, 7, 10, 11, 22, 23, 42, 46, 49, 53, 86, 88, 90, 92, 93, 94, 97, 99, 101, 103, 122, 123, 124, 131, 132], "cornebis": [3, 133], "kavukcuoglu": [3, 133], "k": [3, 5, 7, 11, 62, 63, 82, 111, 121, 122, 123, 124, 131, 133], "wierstra": [3, 133], "d": [3, 4, 75, 79, 115, 133], "2015": [3, 11, 71, 89, 133], "icml": [3, 9, 11, 71, 121, 122, 123, 124, 131, 133], "kingma": 3, "ba": [3, 133], "2014": [3, 110], "A": [3, 13, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 74, 75, 76, 79, 82, 84, 85, 86, 88, 93, 94, 97, 99, 105, 106, 107, 108, 109, 110, 115, 116, 129, 132], "method": [3, 5, 6, 8, 9, 11, 12, 14, 15, 16, 26, 62, 63, 112, 114, 121, 125, 129, 132], "stochast": [3, 7, 8, 115, 116, 121], "iclr": [3, 4, 7, 42, 46, 53, 97, 129, 132, 133], "run": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 130, 132], "time": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 32, 33, 34, 62, 66, 67, 114, 115, 116, 125], "script": [3, 4, 5, 6, 7, 8, 9, 10, 11, 132], "second": [3, 4, 5, 6, 7, 8, 9, 10, 11, 71], "ipynb": [3, 4, 5, 6, 7, 8, 9, 10, 11], "impact": [4, 85, 86], "avail": [4, 10, 11, 12, 125], "were": 4, "first": [4, 7, 8, 9, 10, 11, 13, 66, 67, 71, 116], "paper": [4, 5, 6, 7, 13, 62, 63, 71, 82, 84, 129, 132, 133], "common": [4, 42, 46, 49, 53, 85, 129, 133], "perturb": [4, 42, 46, 53, 133], "dan": [4, 42, 46, 53, 133], "hendryck": [4, 42, 46, 53, 96, 133], "thoma": [4, 42, 46, 53, 133], "dietterich": [4, 42, 46, 53, 133], "load": [4, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], "util": [4, 7, 10], "compos": [4, 6, 7, 10, 32, 33, 34, 62], "totensor": [4, 7, 10], "resiz": [4, 26, 32, 33, 34], "centercrop": [4, 7], "pil": [4, 7, 38, 42, 43, 44, 49, 50, 51, 53, 60, 61], "urllib": 4, "request": [4, 13], "url": 4, "http": [4, 7, 9, 10, 11, 38, 52, 75, 76, 78, 79, 96, 116, 130, 133], "upload": 4, "wikimedia": 4, "org": [4, 75, 76, 78, 79, 133], "wikipedia": 4, "d9": 4, "carduelis_tristis_": 4, "michigan": 4, "2c_usa_": 4, "male": 4, "8": [4, 5, 6, 7, 8, 11, 12, 62, 63], "jpg": 4, "5d": [4, 10], "border_collie_blanca_y_negra_hembra_": 4, "28belen": 4, "2c_border_collie_los_bagan": 4, "29": [4, 5, 7, 11], "png": 4, "f8": 4, "birmakatze_s": 4, "point": [4, 7, 75, 112], "a9": 4, "garranos_fight": 4, "8b": 4, "cottontail_rabbit": 4, "download_img": 4, "urlretriev": 4, "tmp_": 4, "convert": [4, 8, 120, 121], "rgb": [4, 61], "images_d": 4, "enumer": [4, 10], "get_imag": 4, "main_corrupt": 4, "index": [4, 61, 129, 131], "int": [4, 6, 7, 12, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 42, 53, 62, 63, 64, 65, 66, 67, 71, 72, 73, 78, 81, 85, 86, 88, 95, 96, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132], "creat": [4, 9, 12, 13, 54, 55, 56, 57, 58, 59, 116, 130, 132], "6": [4, 7, 9, 10, 12, 68, 69, 76, 132], "level": [4, 7, 49, 96, 132], "given": [4, 7, 65, 67, 74, 80, 81, 91, 92, 101, 105, 108, 112, 131], "256": [4, 5, 7, 12, 120], "antialia": [4, 33, 34], "224": [4, 7, 26, 33, 34], "append": [4, 7], "permut": 4, "show_imag": 4, "effect": [4, 8], "num_corrupt": 4, "len": [4, 11], "ax": [4, 5, 11, 61, 84, 85, 86], "subplot": [4, 5], "figsiz": [4, 10], "text": [4, 10, 32, 33, 34, 62, 63, 66, 67, 104, 105, 106, 107, 108, 109, 110], "__name__": [4, 12], "transax": 4, "rotat": [4, 6], "vertic": 4, "horizontalalign": 4, "right": [4, 62, 110], "verticalalign": 4, "center": [4, 132], "fontsiz": 4, "12": [4, 5, 6, 7, 10, 11], "set_titl": 4, "origin": [4, 5, 6, 11, 13, 14, 15, 16, 20, 51, 74, 89, 116, 118, 133], "elif": 4, "gaussiannois": 4, "shotnois": 4, "impulsenois": 4, "motionblur": 4, "glassblur": 4, "defocusblur": 4, "zoomblur": 4, "frost": 4, "snow": 4, "fog": 4, "zenodo": 4, "record": 4, "10438904": 4, "78m": 4, "b": [4, 7, 9, 10, 11, 62, 63, 84, 88, 90, 93, 94, 97, 99, 103, 114], "32": [4, 5, 7, 8, 10, 11, 14, 32, 60, 62, 72, 73, 121, 132], "8k": [4, 7, 10, 11], "08": [4, 7, 9], "195kb": 4, "65": [4, 6, 7], "5k": [4, 7], "208kb": 4, "131k": [4, 7], "327kb": [4, 7], "262k": 4, "02": [4, 6, 7, 10, 11], "551kb": 4, "524k": 4, "989kb": 4, "61": [4, 7], "08m": [4, 9, 11], "92mb": 4, "93mb": 4, "extract": [4, 7, 9, 10, 11, 54, 55, 59], "bright": [4, 33, 34], "elast": 4, "jpegcompress": 4, "pixel": [4, 7, 126], "us": [4, 7, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 42, 43, 44, 49, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 71, 80, 81, 89, 110, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "gaussianblur": 4, "specklenois": 4, "satur": [4, 33, 34], "2019": [4, 42, 46, 49, 53, 79, 87, 116, 133], "introduct": [5, 129], "probabilist": [5, 75, 102, 118, 126, 127, 133], "present": [5, 62, 63], "practic": [5, 6, 7, 12], "demonstr": [5, 6], "applic": [5, 6, 7, 13, 132], "tackl": [5, 6], "problem": [5, 6, 8, 9, 13], "multi": [5, 6, 82, 84, 106, 107, 109, 110], "layer": [5, 6, 7, 8, 9, 10, 14, 15, 16, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 114, 119, 121, 129, 131], "perceptron": [5, 6], "output": [5, 6, 8, 10, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 105, 106, 107, 108, 109, 112, 114, 126, 127, 131], "normalinversegamma": 5, "through": [5, 9, 11, 114], "its": [5, 10, 60, 62, 63, 66, 67, 85, 86, 111, 114, 131, 132], "neg": [5, 7, 9, 75, 79, 80, 90, 99, 103], "repres": [5, 6, 7, 9, 11, 131, 133], "approach": [5, 6, 62, 63, 133], "quantifi": [5, 6, 78, 133], "epistem": [5, 77, 99, 133], "aleator": 5, "involv": [5, 6], "introduc": [5, 6, 7, 62, 63], "prior": [5, 6, 68, 69, 70, 71, 120], "gaussian": [5, 69, 70, 116], "derloss": 5, "contain": [5, 7, 11, 12, 13, 26, 42, 49, 85, 86, 114, 126, 127, 129, 132], "classic": [5, 12, 132], "regular": [5, 6, 76, 77, 78, 79, 110, 133], "term": [5, 6, 71, 76, 77, 78, 79, 81], "noisi": [5, 133], "cubic": 5, "within": [5, 6, 8, 9, 14, 15, 16, 81], "lightningdatamodul": [5, 12], "regressionroutin": 5, "normalinversegammalay": 5, "5e": 5, "optim_regress": 5, "learning_r": 5, "float": [5, 7, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 38, 39, 64, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 91, 92, 96, 101, 113, 116, 122, 123, 124, 128], "weight_decai": [5, 6], "same": [5, 6, 7, 8, 11, 12, 14, 16, 114], "synthet": 5, "simpl": [5, 7, 116, 118, 132, 133], "hidden": [5, 72, 73], "64": [5, 7, 10, 11, 66], "neuron": 5, "each": [5, 7, 12, 13, 14, 15, 16, 62, 63, 64, 66, 67, 74, 82, 85, 86, 114, 116], "finish": [5, 10, 13], "interpret": [5, 32, 33, 34, 99], "invers": [5, 79, 105, 108, 111], "gamma": [5, 6, 10, 14, 15, 16, 18, 66, 67, 72, 79, 82, 132], "train_d": 5, "1000": [5, 7, 11], "val_d": 5, "300": [5, 7], "from_dataset": 5, "val_dataset": 5, "test_dataset": [5, 11], "training_task": 5, "in_featur": [5, 18, 63, 65, 67, 71, 73], "num_output": [5, 107, 108], "hidden_dim": [5, 18], "final_lay": 5, "final_layer_arg": 5, "after": [5, 6, 11, 12, 32, 33, 34, 116], "reg_weight": [5, 6, 76, 77, 78, 79], "output_dim": [5, 18, 126, 127], "saniti": [5, 7], "check": [5, 7, 12, 13, 54, 55, 56, 57, 58, 59, 129, 130, 132], "429": [5, 7], "79it": [5, 7], "499": [5, 7], "65it": [5, 7], "loop": [5, 10, 114, 119], "fit_loop": 5, "298": [5, 7], "number": [5, 7, 8, 9, 12, 13, 14, 15, 16, 20, 22, 23, 26, 27, 32, 33, 34, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 81, 85, 86, 88, 90, 93, 94, 97, 99, 103, 107, 108, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 132], "smaller": [5, 32, 33, 34], "than": [5, 11, 116, 118], "interv": 5, "log_every_n_step": 5, "lower": [5, 7, 81, 84, 93, 94], "want": [5, 7, 8, 12, 49, 59, 130], "see": [5, 7, 8, 9, 10, 11, 12, 13, 66, 67, 84, 88, 89, 90, 93, 94, 97, 99, 103, 104, 106, 107, 109, 110, 111, 120, 131], "epoch": [5, 6, 7, 10, 12, 112, 113, 115, 116], "230": [5, 7], "57it": [5, 7], "218": [5, 7], "31it": [5, 7], "v_num": [5, 7], "train_loss": [5, 7], "150": [5, 7], "267": [5, 7], "20it": [5, 7], "260": [5, 7], "06it": [5, 7, 11], "40": [5, 7, 10, 11], "284": [5, 7], "08it": [5, 7], "278": [5, 7], "63it": [5, 7], "292": [5, 7], "81it": [5, 7, 11], "288": [5, 7], "50it": [5, 7], "470": [5, 7], "62it": [5, 7], "295": [5, 7], "00it": [5, 7, 11], "11": [5, 7, 9, 10, 11, 15, 32, 60], "60": [5, 7, 10, 11], "19": [5, 7, 9, 11, 15], "303": [5, 7], "45it": [5, 7], "35it": [5, 7], "790": [5, 7], "22": [5, 7, 8, 10, 11], "305": [5, 7], "80it": [5, 7], "12it": [5, 7, 11], "880": [5, 7], "25": [5, 7, 10, 11, 12, 111], "308": [5, 7], "306": [5, 7], "04it": [5, 7, 11], "130": [5, 7], "28": [5, 7, 9, 10, 11], "310": [5, 7], "307": [5, 7], "69it": [5, 7], "730": [5, 7], "31": [5, 7, 9, 10, 11], "311": [5, 7], "60it": [5, 7], "309": [5, 7], "680": [5, 7], "313": [5, 7], "15it": [5, 7], "314": [5, 7], "312": [5, 7], "32it": [5, 7], "860": [5, 7], "41": [5, 7, 10, 11], "13": [5, 6, 7, 9, 10, 11, 15], "315": [5, 7], "390": [5, 7], "14": [5, 6, 7, 9, 11, 62], "316": [5, 7], "23it": [5, 7], "38it": [5, 7], "760": [5, 7], "47": [5, 7, 10, 11], "61it": [5, 7], "25it": [5, 7], "520": [5, 7], "317": [5, 7], "21it": [5, 7], "94it": [5, 7], "190": [5, 7], "53": [5, 7, 11], "17": [5, 6, 7, 10, 11], "930": [5, 7], "18": [5, 7, 8, 10, 11, 12, 14, 132], "318": [5, 7], "39it": [5, 7], "24it": [5, 7], "740": [5, 7], "59": [5, 7, 10, 11], "319": [5, 7], "07it": [5, 7], "800": [5, 7], "62": [5, 7, 10, 11], "20": [5, 6, 7, 8, 9, 11, 63, 116], "66": [5, 7, 11], "21": [5, 7, 10, 11], "320": [5, 7], "11it": [5, 7], "13it": [5, 7], "710": [5, 7], "69": [5, 7, 10, 11], "40it": [5, 7], "46it": [5, 7], "72": [5, 7, 10, 11], "23": [5, 7, 10, 11], "89it": [5, 7], "97it": [5, 7, 11], "75": [5, 7, 8, 11, 12], "24": [5, 7, 10, 11], "78": [5, 7, 9, 11], "58it": [5, 7], "180": [5, 7], "81": [5, 7, 10, 11], "78it": [5, 7], "620": [5, 7, 10], "84": [5, 7, 10, 11, 132], "27": [5, 7, 11], "322": [5, 7], "09it": [5, 7], "530": [5, 7], "88": [5, 7, 10, 11], "960": [5, 7, 32], "91": [5, 7, 10, 11], "72it": [5, 7], "94": [5, 6, 7, 11], "30": [5, 7, 11, 63, 116], "18it": [5, 7], "97": [5, 7, 8, 10, 11], "19it": [5, 7], "51it": [5, 7], "570": [5, 7], "52it": [5, 7], "86it": [5, 7], "160": [5, 7], "valid": [5, 7, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "695": [5, 7], "652": [5, 7], "636": [5, 7], "633": [5, 7], "48it": [5, 7], "628": [5, 7], "627": [5, 7], "22it": [5, 7], "70": [5, 7], "80": [5, 6, 7, 10, 11, 37, 100], "625": [5, 7], "28it": [5, 7], "90": [5, 6, 7], "626": [5, 7], "76it": [5, 7], "264": [5, 7, 10], "73it": [5, 7], "rmse": [5, 108], "263": [5, 7], "56it": [5, 7], "293": [5, 7], "14it": [5, 7], "870": [5, 7], "10it": [5, 7], "630": [5, 7], "49it": [5, 7], "590": [5, 7], "90it": [5, 7], "720": [5, 7, 32], "324": [5, 7], "250": [5, 7], "88it": [5, 7], "840": [5, 7], "810": [5, 7], "325": [5, 7], "17it": [5, 7], "360": [5, 7], "323": [5, 7], "33it": [5, 7], "890": [5, 7], "326": [5, 7], "110": [5, 7], "000": [5, 7], "54it": [5, 7], "340": [5, 7], "37it": [5, 7], "080": [5, 7], "64it": [5, 7], "16it": [5, 7], "75it": [5, 7], "600": [5, 7], "41it": [5, 7], "82it": [5, 7], "77it": [5, 7], "93it": [5, 7], "67it": [5, 7], "99it": [5, 7], "200": [5, 7, 122, 124], "30it": [5, 7], "44it": [5, 7], "42it": [5, 7], "440": [5, 7], "370": [5, 7], "05it": [5, 7, 11], "220": [5, 7], "98it": [5, 7, 11], "27it": [5, 7], "480": [5, 7], "26it": [5, 7], "675": [5, 7], "85it": [5, 7], "644": [5, 7], "43it": [5, 7], "629": [5, 7], "621": [5, 7], "619": [5, 7], "617": [5, 7], "266": [5, 7], "265": [5, 7], "74it": [5, 7], "95it": [5, 7], "289": [5, 7], "500": [5, 7], "92it": [5, 7], "830": [5, 7], "34it": [5, 7], "290": [5, 7], "53it": [5, 7], "050": [5, 7], "87it": [5, 7], "610": [5, 7], "910": [5, 7], "66it": [5, 7], "940": [5, 7], "140": [5, 7], "327": [5, 7], "29it": [5, 7], "780": [5, 7], "240": [5, 7], "170": [5, 7], "430": [5, 7], "950": [5, 7], "328": [5, 7], "380": [5, 7], "01it": [5, 7, 11], "688": [5, 7], "83it": [5, 7, 11], "642": [5, 7], "635": [5, 7], "268": [5, 7], "36it": [5, 7], "296": [5, 7], "420": [5, 7], "280": [5, 7], "71it": [5, 7], "090": [5, 7], "03it": [5, 7, 11], "120": [5, 7, 10, 132], "070": [5, 7], "47it": [5, 7], "060": [5, 7], "68it": [5, 7], "96it": [5, 7], "689": [5, 7], "643": [5, 7, 10], "632": [5, 7], "55it": [5, 7], "593": [5, 7], "567": [5, 7], "555": [5, 7], "546": [5, 7], "542": [5, 7], "259": [5, 7], "257": [5, 7], "261": [5, 7], "244": [5, 7], "258": [5, 7], "252": [5, 7], "59it": [5, 7], "254": [5, 7], "255": [5, 7], "920": [5, 7], "640": [5, 7, 32], "262": [5, 7], "269": [5, 7], "272": [5, 7], "271": [5, 7], "275": [5, 7], "274": [5, 7], "010": [5, 7], "277": [5, 7], "279": [5, 7], "282": [5, 7], "281": [5, 7], "283": [5, 7], "285": [5, 7], "287": [5, 7], "286": [5, 7], "291": [5, 7], "294": [5, 7], "297": [5, 7], "70it": [5, 7], "671": [5, 7], "623": [5, 7], "622": [5, 7], "247": [5, 7], "246": [5, 7], "900": [5, 7], "650": [5, 7], "820": [5, 7], "770": [5, 7], "020": [5, 7], "330": [5, 7], "460": [5, 7], "661": [5, 7], "614": [5, 6, 7], "608": [5, 7], "605": [5, 7], "607": [5, 7], "609": [5, 7, 10], "660": [5, 7], "302": [5, 7], "700": [5, 7], "690": [5, 7], "510": [5, 7], "91it": [5, 7, 11], "210": [5, 7], "030": [5, 7], "750": [5, 7], "618": [5, 7], "615": [5, 7], "613": [5, 7], "970": [5, 7], "670": [5, 7], "631": [5, 7, 10], "990": [5, 7], "02it": [5, 7, 11], "84it": [5, 7], "580": [5, 7], "686": [5, 7], "624": [5, 7], "040": [5, 7], "270": [5, 7], "673": [5, 7], "560": [5, 7], "638": [5, 7], "273": [5, 7], "299": [5, 7], "540": [5, 7], "400": [5, 7], "658": [5, 7], "634": [5, 7], "276": [5, 7], "301": [5, 7], "550": [5, 7], "410": [5, 7], "637": [5, 7], "304": [5, 7], "655": [5, 7], "350": [5, 7], "665": [5, 7], "490": [5, 7], "679": [5, 7], "450": [5, 7], "672": [5, 7], "669": [5, 7], "683": [5, 7], "687": [5, 7], "646": [5, 7], "329": [5, 7], "598": [5, 6, 7], "601": [5, 7], "604": [5, 7], "249": [5, 7], "653": [5, 7], "681": [5, 7, 10], "704": [5, 7], "657": [5, 7], "980": [5, 7], "684": [5, 7], "639": [5, 7], "251": [5, 7], "611": [5, 7], "33": [5, 7, 10, 11], "696": [5, 7], "648": [5, 7], "641": [5, 7], "35": [5, 7, 10, 11], "666": [5, 7], "36": [5, 7, 10, 11], "493": [5, 7], "485": [5, 7, 33, 34], "483": [5, 7], "484": [5, 7], "488": [5, 7], "37": [5, 7], "647": [5, 7], "682": [5, 7], "42": [5, 7, 10, 11, 31, 59], "706": [5, 7], "649": [5, 7], "43": [5, 6, 7, 10, 11], "45": [5, 6, 7, 10, 11], "676": [5, 7], "46": [5, 7, 11], "664": [5, 7], "694": [5, 7], "48": [5, 7, 10], "651": [5, 7], "49": [5, 7, 11], "662": [5, 7], "659": [5, 7], "663": [5, 7], "522": [5, 7], "mae": 5, "14331": 5, "mse": [5, 78, 108], "08153": 5, "75876": 5, "36824": 5, "reg": 5, "143312931060791": 5, "081531524658203": 5, "368241310119629": 5, "758760929107666": 5, "plot": [5, 8, 11, 14, 15, 16, 61, 84, 85, 86, 89, 125, 126, 128], "case": [5, 7, 10, 11, 12, 62, 131, 132], "reproduc": [5, 13, 132], "result": [5, 7, 8, 9, 10, 12, 14, 15, 16, 99, 125, 128, 132], "no_grad": [5, 6], "linspac": 5, "dist": [5, 80, 103], "unsqueez": 5, "loc": 5, "squeez": [5, 126, 127], "sqrt": [5, 62, 63, 110], "variance_loc": 5, "fig": [5, 11], "r": [5, 10, 82], "zorder": 5, "fill_between": 5, "linewidth": 5, "alpha": [5, 6, 7, 10, 12, 14, 15, 16, 18, 66, 67, 82, 125, 132], "edgecolor": 5, "none": [5, 6, 7, 10, 12, 14, 15, 16, 18, 22, 23, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 97, 98, 99, 103, 112, 113, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132], "facecolor": 5, "blue": 5, "els": 5, "gca": 5, "set_ylim": 5, "set_xlim": 5, "legend": 5, "upper": 5, "left": [5, 62, 110], "grid": 5, "alexand": [5, 118, 133], "amini": [5, 79, 133], "wilko": [5, 133], "schwart": [5, 79, 133], "ava": [5, 133], "soleimani": [5, 79, 133], "daniela": [5, 133], "ru": [5, 79, 133], "neurip": [5, 6, 9, 78, 85, 86, 110, 116, 118, 120, 133], "2020": [5, 82, 133], "aim": 6, "introductori": 6, "overview": 6, "mlp": [6, 12, 18], "dirichlet": [6, 78], "minim": [6, 7, 11, 81, 133], "squar": [6, 7, 32, 33, 34, 62, 107, 108, 109, 110, 116], "error": [6, 7, 9, 11, 13, 75, 84, 86, 87, 89, 92, 101, 105, 106, 107, 108, 109, 110], "kl": [6, 81, 83], "diverg": [6, 81, 83, 99], "categor": [6, 131], "decloss": 6, "offici": [6, 62, 63], "step": [6, 10, 13, 78, 130], "schedul": [6, 7, 12, 112, 125, 126, 127, 128], "dict": [6, 14, 15, 16, 116, 125, 126, 127, 128, 132], "005": 6, "exp_lr_schedul": 6, "lr_schedul": [6, 7, 12], "steplr": 6, "step_siz": 6, "sake": [6, 7], "in_channel": [6, 7, 8, 9, 11, 12, 14, 15, 16, 62, 64, 66, 68, 69, 70, 72, 132], "10936": 6, "01731": 6, "inf": 6, "05210": 6, "05140": 6, "96": [6, 7, 10], "98": [6, 7, 9], "05209675058722496": 6, "05140246823430061": 6, "9413999915122986": 6, "10936404764652252": 6, "009615732356905937": 6, "015481188893318176": 6, "9800999760627747": 6, "015625": 6, "01730724237859249": 6, "rotated_mnist": 6, "angl": 6, "confid": [6, 7, 76, 85, 93, 94, 96], "arg": [6, 7, 116], "degre": 6, "rotated_imag": 6, "evid": [6, 81], "relu": [6, 7, 10, 132], "strength": 6, "sum": [6, 8, 74, 75, 76, 77, 78, 79, 80, 82, 88, 90, 93, 94, 97, 99, 103, 131], "keepdim": 6, "argmax": 6, "77": [6, 7, 11], "89": [6, 7, 10], "978": [6, 7], "957": [6, 7], "82": [6, 7], "58": [6, 7, 11, 13], "murat": [6, 133], "sensoi": [6, 78, 133], "lanc": [6, 133], "kaplan": [6, 78, 133], "melih": [6, 133], "kandemir": [6, 78, 133], "2018": [6, 78, 84, 112, 115, 121, 133], "adapt": [7, 87, 89], "lectur": 7, "helmholtz": 7, "ai": [7, 130], "confer": [7, 129], "haicon24": 7, "de": 7, "sebastian": 7, "stark": 7, "peter": 7, "steinbach": 7, "gianni": [7, 129, 133], "franchi": [7, 129, 133], "olivi": [7, 129, 133], "laurent": [7, 129, 132, 133], "work": [7, 10, 114, 131], "wa": [7, 61, 85, 86], "corinna": 7, "cort": 7, "christoph": 7, "burg": 7, "later": [7, 67, 84, 86, 92, 101, 129, 130], "modifi": [7, 10, 32, 33, 34], "yann": [7, 9, 133], "foundat": 7, "consist": [7, 10, 43, 44, 51, 62, 63, 113], "handwritten": 7, "grayscal": 7, "28x28": 7, "size": [7, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 62, 63, 64, 66, 72, 73, 74, 84, 88, 90, 93, 94, 97, 99, 103, 104, 110, 114, 120, 121], "task": [7, 11, 12, 82, 87, 89, 118, 120, 125, 126, 127, 128, 129, 132], "respect": [7, 12], "accuraci": [7, 111, 133], "proport": [7, 102], "correctli": 7, "measur": [7, 85, 86, 87, 132, 133], "qualiti": [7, 31, 59, 84, 85, 86], "probabl": [7, 11, 14, 15, 16, 85, 86, 88, 89, 90, 92, 93, 94, 97, 99, 101, 103, 122, 123, 124, 125, 131, 133], "test": [7, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 49, 54, 55, 56, 57, 58, 59, 60, 115, 116, 125, 126, 127, 128, 132], "throughout": 7, "abstract": 7, "process": [7, 10, 112, 122, 123, 124, 125, 129, 130], "similarli": 7, "kera": 7, "tensorflow": [7, 62, 63], "interfac": 7, "simplifi": 7, "partli": 7, "built": [7, 11, 131], "tool": [7, 12, 129], "quantif": [7, 10, 13, 72, 73, 129, 133], "preprocess": 7, "them": [7, 10, 12, 132], "purpos": [7, 12, 38], "few": 7, "bit": 7, "what": [7, 9, 10, 12, 14, 15, 16], "some": [7, 9, 10, 12], "low": [7, 75], "train_transform": [7, 32, 33, 34], "crop": [7, 26, 32, 33, 34], "augment": [7, 14, 15, 16, 22, 23, 26, 27, 32, 33, 35, 125, 129], "randomcrop": [7, 33, 34, 42, 43, 44, 49, 50, 51, 53], "pad": [7, 9, 62, 64, 66, 68, 69, 70, 72, 80, 103], "mnist1d": 7, "1307": 7, "3081": 7, "test_transform": [7, 32, 33, 34], "num_output_channel": 7, "subset": [7, 11, 40, 42, 49, 50, 53, 120], "fashionmnist": [7, 27], "train_data": 7, "test_data": 7, "take": [7, 12, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 131, 132], "10k": 7, "ood_data": 7, "indic": [7, 8, 14, 15, 16, 125, 126, 127, 128], "train_dl": 7, "shuffl": [7, 10, 59], "test_dl": 7, "ood_dl": 7, "fashion": [7, 27], "s3": [7, 9], "websit": [7, 129], "eu": 7, "central": 7, "amazonaw": [7, 9], "com": [7, 9, 10, 11, 52, 82, 96, 116, 130, 133], "idx3": [7, 9], "ubyt": [7, 9], "gz": [7, 9, 10, 11], "raw": [7, 9], "4m": [7, 10, 11], "57": [7, 10], "225kb": 7, "229k": [7, 10, 11], "464kb": 7, "492k": 7, "945kb": 7, "950k": 7, "69mb": [7, 9], "93m": 7, "34mb": 7, "83m": 7, "42mb": 7, "91m": [7, 9], "0mb": [7, 10, 11], "99m": 7, "1mb": [7, 10, 11], "1m": [7, 10, 11], "3mb": [7, 9, 10, 11], "9m": [7, 10], "8mb": [7, 10, 11], "idx1": [7, 9], "202kb": 7, "t10k": [7, 9], "42m": 7, "226kb": 7, "329kb": 7, "5": [7, 12, 20, 33, 34, 42, 53, 62, 63, 75, 91, 132], "467kb": 7, "426k": 7, "787kb": 7, "885k": [7, 10], "60mb": 7, "74m": 7, "99mb": 7, "79": [7, 10], "47m": 7, "85mb": 7, "80mb": [7, 11], "15k": 7, "could": [7, 10, 11, 99], "replac": [7, 13, 121], "cell": 7, "simpli": 7, "viz_data": 7, "without": [7, 11], "unchang": 7, "ood_viz_data": 7, "0x7fa5b2d7ad10": 7, "out": [7, 11, 12, 13, 22, 23, 26, 27, 30, 51, 62, 63, 118, 132, 133], "0x7fa5b2d797b0": 7, "convolut": [7, 10, 14, 15, 16, 62, 64, 66, 72, 133], "cnn": 7, "__init__": [7, 9, 10, 12, 114, 132], "self": [7, 10, 12, 32, 33, 34, 125, 132], "super": [7, 10, 132], "conv1": [7, 10, 132], "conv2d": [7, 10, 62, 64, 66, 69], "conv2": [7, 10, 132], "pool": [7, 10, 132], "adaptiveavgpool2d": 7, "fc1": [7, 10, 132], "linear": [7, 10, 63, 65, 67, 71, 73], "fc2": [7, 10, 132], "fc3": [7, 10, 132], "forward": [7, 9, 10, 62, 63, 76, 77, 80, 81, 83, 85, 86, 105, 106, 107, 108, 109, 112, 114, 116, 125, 126, 127, 128, 132], "tensor": [7, 10, 12, 38, 60, 61, 62, 63, 64, 65, 74, 76, 77, 80, 81, 82, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 125, 126, 127, 128], "max_pool2d": 7, "flatten": [7, 10, 132], "No": [7, 125], "so": [7, 10, 12, 66, 67], "channel": [7, 14, 15, 16, 62, 64, 65, 66, 67, 72], "optim": [7, 8, 9, 12, 14, 15, 16, 86, 120, 122, 123, 124, 125, 126, 127, 128, 132], "recip": [7, 8, 9, 14, 15, 16, 132], "descent": 7, "sgd": [7, 10, 12], "cosin": 7, "anneal": [7, 78], "lr_mult": 7, "cosineannealinglr": 7, "t_max": 7, "develop": [7, 130], "eas": [7, 12], "supervis": 7, "most": [7, 8, 9, 13, 85, 132], "often": [7, 67, 111], "cross": [7, 10, 11, 74], "With": [7, 62, 63, 132], "decai": 7, "amount": [7, 8, 102], "maximum": [7, 14, 15, 16, 38, 39, 91, 92, 116, 122, 123, 124, 125], "posteriori": 7, "map": [7, 110], "like": [7, 10, 12, 13, 32, 33, 34, 132], "input": [7, 10, 11, 14, 15, 16, 31, 32, 33, 34, 60, 62, 63, 64, 65, 66, 67, 71, 72, 73, 76, 80, 81, 84, 85, 86, 88, 90, 93, 94, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 112, 114, 125, 126, 127, 128, 131], "routin": [7, 11, 12, 125, 126, 127, 128, 129], "etc": [7, 13, 132], "avoid": [7, 8, 11, 13, 59, 76, 85, 99], "torchmetr": 7, "userwarn": 7, "fpr95": 7, "target": [7, 11, 38, 39, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 76, 77, 80, 81, 85, 86, 88, 90, 92, 93, 96, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111], "buffer": [7, 62, 63], "larg": [7, 12, 50, 133], "lead": [7, 115, 133], "memori": [7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 114, 119, 128], "footprint": [7, 119], "warn": 7, "kwarg": [7, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "noqa": 7, "b028": 7, "core": [7, 114], "377": 7, "found": [7, 39], "unsupport": 7, "kei": [7, 10, 11, 42, 49, 53], "configur": [7, 129, 132], "1875": 7, "67": [7, 10], "73": [7, 11], "74": [7, 10], "76": [7, 10], "51": [7, 9], "52": [7, 10, 11], "63": [7, 11], "68": [7, 10], "71": [7, 10], "83": [7, 11], "85": [7, 9], "86": [7, 10, 11], "87": 7, "92": [7, 9, 11], "93": [7, 10], "99": [7, 10], "101": [7, 14], "102": 7, "103": 7, "104": 7, "105": 7, "106": 7, "107": 7, "108": 7, "109": 7, "111": [7, 8], "112": 7, "113": 7, "114": 7, "115": 7, "116": 7, "117": 7, "118": 7, "119": 7, "121": 7, "122": 7, "123": 7, "124": 7, "125": 7, "126": 7, "127": 7, "129": 7, "131": 7, "132": 7, "133": 7, "134": 7, "135": 7, "136": 7, "137": 7, "138": 7, "139": 7, "141": 7, "142": 7, "143": 7, "144": 7, "145": 7, "146": 7, "147": 7, "148": 7, "149": 7, "151": 7, "152": [7, 14], "153": 7, "154": 7, "155": 7, "156": 7, "157": 7, "158": 7, "161": 7, "162": 7, "163": 7, "164": 7, "165": 7, "166": 7, "167": 7, "168": [7, 10], "169": 7, "171": 7, "172": 7, "173": 7, "174": 7, "175": 7, "176": 7, "177": 7, "178": 7, "179": 7, "181": 7, "182": 7, "183": 7, "184": 7, "185": 7, "186": 7, "187": 7, "188": 7, "189": 7, "191": 7, "192": 7, "193": 7, "194": 7, "195": 7, "196": 7, "197": 7, "198": 7, "199": 7, "201": 7, "202": 7, "203": 7, "204": 7, "205": 7, "206": 7, "207": 7, "208": 7, "209": 7, "211": 7, "212": 7, "213": 7, "214": 7, "215": 7, "216": 7, "217": 7, "219": 7, "221": 7, "222": 7, "223": 7, "225": [7, 33, 34], "226": 7, "227": 7, "228": 7, "229": [7, 33, 34], "231": 7, "232": 7, "233": 7, "234": 7, "235": 7, "236": 7, "237": 7, "238": 7, "239": 7, "241": 7, "242": 7, "243": 7, "248": 7, "253": 7, "04": [7, 10, 11], "875": 7, "984": 7, "873": 7, "331": 7, "914": 7, "332": 7, "333": 7, "334": 7, "335": 7, "336": 7, "337": 7, "338": 7, "339": 7, "341": 7, "342": 7, "343": 7, "344": 7, "345": 7, "346": 7, "906": 7, "347": 7, "348": 7, "988": 7, "349": 7, "809": 7, "351": 7, "352": 7, "353": 7, "354": 7, "989": 7, "357": 7, "883": 7, "358": 7, "359": 7, "911": 7, "927": 7, "361": 7, "362": 7, "363": 7, "364": 7, "365": 7, "366": 7, "367": 7, "368": 7, "369": 7, "371": 7, "741": 7, "372": 7, "892": 7, "373": 7, "948": 7, "374": 7, "786": 7, "375": 7, "376": 7, "378": 7, "379": 7, "976": 7, "381": 7, "382": 7, "738": [7, 11], "383": 7, "384": 7, "385": 7, "386": 7, "387": 7, "388": 7, "389": 7, "697": 7, "391": 7, "893": 7, "392": 7, "781": 7, "393": 7, "394": 7, "395": 7, "739": 7, "396": 7, "732": 7, "397": 7, "854": 7, "398": 7, "938": 7, "399": 7, "401": 7, "402": 7, "403": [7, 9], "404": 7, "405": 7, "406": [7, 33, 34], "407": 7, "793": 7, "408": 7, "409": 7, "964": 7, "411": 7, "756": 7, "412": 7, "561": 7, "413": 7, "414": 7, "415": 7, "942": 7, "416": 7, "734": 7, "417": 7, "418": 7, "656": 7, "419": 7, "421": 7, "808": [7, 10], "422": 7, "954": [7, 10], "423": 7, "886": 7, "597": 7, "425": 7, "654": 7, "426": 7, "427": 7, "428": 7, "587": 7, "431": 7, "801": 7, "432": 7, "871": 7, "433": 7, "434": 7, "435": 7, "746": 7, "436": 7, "437": 7, "818": 7, "438": 7, "489": 7, "439": 7, "998": 7, "441": 7, "588": 7, "442": 7, "443": 7, "444": 7, "445": 7, "446": 7, "718": 7, "447": 7, "448": 7, "736": 7, "449": 7, "451": 7, "452": 7, "599": 7, "453": 7, "757": 7, "454": 7, "925": 7, "455": 7, "868": 7, "456": [7, 33, 34], "457": 7, "773": 7, "458": 7, "692": 7, "459": 7, "552": 7, "461": 7, "462": 7, "817": 7, "463": 7, "877": 7, "464": 7, "465": 7, "937": 7, "466": 7, "745": 7, "467": 7, "468": 7, "728": 7, "469": 7, "492": 7, "471": 7, "933": 7, "472": 7, "966": 7, "473": 7, "761": 7, "474": 7, "475": 7, "916": 7, "476": 7, "579": 7, "477": 7, "478": 7, "479": 7, "836": 7, "674": 7, "481": 7, "482": 7, "606": 7, "494": 7, "486": 7, "752": 7, "487": 7, "516": 7, "491": 7, "772": 7, "806": 7, "495": 7, "496": 7, "743": 7, "497": 7, "498": 7, "833": 7, "501": 7, "691": 7, "502": 7, "982": 7, "503": 7, "811": 7, "504": 7, "824": 7, "505": 7, "838": 7, "506": 7, "507": 7, "553": 7, "508": 7, "509": 7, "511": 7, "512": 7, "513": 7, "881": 7, "514": 7, "794": 7, "515": 7, "878": 7, "517": 7, "518": 7, "551": 7, "519": 7, "574": 7, "521": 7, "523": 7, "524": 7, "711": 7, "525": 7, "526": 7, "527": 7, "528": 7, "719": 7, "529": 7, "742": 7, "531": 7, "532": 7, "533": 7, "534": 7, "535": 7, "541": 7, "536": 7, "537": 7, "538": 7, "539": 7, "698": 7, "543": 7, "544": 7, "685": 7, "545": 7, "866": 7, "547": 7, "548": 7, "549": 7, "603": 7, "709": 7, "554": 7, "908": 7, "556": 7, "557": 7, "558": 7, "585": 7, "559": 7, "852": 7, "562": 7, "563": 7, "564": 7, "565": 7, "566": 7, "568": 7, "569": 7, "571": 7, "572": 7, "573": [7, 10], "575": 7, "576": 7, "577": 7, "578": 7, "581": 7, "582": 7, "583": 7, "584": 7, "586": 7, "589": 7, "831": 7, "591": 7, "592": 7, "594": 7, "595": 7, "596": 7, "703": 7, "612": 7, "602": 7, "941": 7, "616": 7, "724": 7, "885": 7, "889": 7, "714": 7, "765": 7, "645": 7, "667": 7, "668": 7, "677": 7, "678": 7, "693": 7, "975": 7, "845": 7, "699": 7, "784": 7, "858": 7, "701": 7, "702": 7, "705": 7, "707": 7, "708": 7, "712": 7, "713": 7, "715": 7, "716": 7, "717": 7, "721": 7, "722": [7, 10], "723": 7, "725": 7, "726": 7, "727": 7, "729": 7, "731": 7, "733": 7, "735": 7, "897": 7, "737": 7, "744": 7, "747": 7, "748": 7, "749": 7, "767": 7, "751": 7, "753": 7, "754": 7, "755": 7, "0864": 7, "758": 7, "759": 7, "762": 7, "763": 7, "764": 7, "766": 7, "768": 7, "769": 7, "771": 7, "774": 7, "775": 7, "776": 7, "777": 7, "778": 7, "779": 7, "782": 7, "783": 7, "785": 7, "787": 7, "788": [7, 11], "789": 7, "791": 7, "792": 7, "795": 7, "796": 7, "797": 7, "798": 7, "799": 7, "802": 7, "803": 7, "804": 7, "805": 7, "807": 7, "812": 7, "813": 7, "814": 7, "815": 7, "816": 7, "819": 7, "821": 7, "822": 7, "825": 7, "826": 7, "827": 7, "828": 7, "829": 7, "832": 7, "834": 7, "835": 7, "837": 7, "839": 7, "841": 7, "842": 7, "843": 7, "844": 7, "846": 7, "847": 7, "848": 7, "849": 7, "851": 7, "853": 7, "855": 7, "856": 7, "857": 7, "859": 7, "861": 7, "862": 7, "863": [7, 10], "864": 7, "865": 7, "867": 7, "869": 7, "872": 7, "874": 7, "879": 7, "882": 7, "884": 7, "887": 7, "888": 7, "891": 7, "894": 7, "895": 7, "896": 7, "898": 7, "899": 7, "901": 7, "902": 7, "903": 7, "0877": 7, "904": 7, "905": 7, "907": 7, "909": 7, "912": 7, "913": 7, "915": 7, "917": 7, "918": 7, "919": 7, "921": 7, "922": 7, "923": 7, "924": 7, "926": 7, "928": 7, "929": 7, "931": 7, "932": 7, "934": 7, "935": 7, "936": 7, "939": 7, "943": 7, "944": 7, "945": 7, "946": 7, "947": 7, "949": 7, "951": 7, "952": 7, "953": 7, "0629": 7, "955": 7, "956": 7, "958": 7, "959": 7, "961": 7, "962": 7, "963": 7, "965": 7, "967": 7, "968": 7, "969": 7, "971": 7, "972": 7, "973": 7, "974": 7, "977": 7, "979": 7, "981": 7, "983": 7, "985": 7, "986": 7, "987": 7, "991": 7, "992": 7, "993": 7, "994": 7, "995": 7, "996": 7, "997": 7, "999": 7, "0473": 7, "1001": 7, "1002": 7, "0672": 7, "1003": 7, "1004": 7, "1005": 7, "1006": 7, "1007": 7, "1008": 7, "1009": 7, "1010": 7, "1011": 7, "1012": 7, "1013": 7, "1014": 7, "1015": 7, "1016": 7, "1017": 7, "1018": 7, "1019": 7, "1020": 7, "1021": 7, "1022": 7, "1023": 7, "1024": [7, 33, 34], "1025": 7, "1026": 7, "1027": 7, "1028": 7, "1029": 7, "1030": 7, "1031": 7, "1032": 7, "1033": 7, "1034": 7, "1035": 7, "1036": 7, "1037": 7, "1038": 7, "1039": 7, "1040": 7, "1041": 7, "1042": 7, "1043": 7, "1044": 7, "1045": 7, "1046": 7, "1047": 7, "1048": 7, "1049": 7, "1050": 7, "1051": 7, "1052": 7, "1053": 7, "1054": 7, "1055": 7, "1056": 7, "1057": 7, "1058": 7, "1059": 7, "1060": 7, "1061": 7, "1062": 7, "1063": 7, "1064": 7, "1065": 7, "1066": 7, "1067": 7, "1068": 7, "1069": 7, "1070": 7, "1071": 7, "1072": 7, "1073": 7, "1074": 7, "1075": 7, "1076": 7, "1077": 7, "1078": 7, "1079": 7, "1080": 7, "1081": 7, "1082": 7, "1083": 7, "1084": 7, "1085": 7, "1086": 7, "1087": 7, "1088": 7, "1089": 7, "1090": 7, "1091": 7, "1092": 7, "1093": 7, "1094": 7, "1095": 7, "1096": 7, "1097": 7, "1098": 7, "0624": 7, "1099": 7, "0661": 7, "1100": 7, "1101": 7, "1102": 7, "1103": 7, "1104": 7, "1105": 7, "1106": 7, "0675": 7, "1107": 7, "1108": 7, "1109": 7, "1110": 7, "1111": 7, "1112": 7, "1113": 7, "1114": 7, "1115": 7, "1116": 7, "1117": 7, "1118": 7, "1119": 7, "1120": 7, "1121": 7, "1122": 7, "1123": 7, "1124": 7, "1125": 7, "1126": 7, "054": 7, "1127": 7, "1128": 7, "1129": 7, "1130": 7, "0875": 7, "1131": 7, "0584": 7, "1132": 7, "1133": 7, "1134": 7, "1135": 7, "1136": 7, "1137": 7, "1138": 7, "1139": 7, "1140": 7, "1141": 7, "1142": 7, "1143": 7, "1144": 7, "1145": 7, "1146": 7, "1147": 7, "081": 7, "1148": 7, "1149": 7, "082": 7, "1150": 7, "1151": 7, "1152": 7, "1153": 7, "1154": 7, "1155": 7, "0334": 7, "1156": 7, "1157": 7, "1158": 7, "1159": 7, "1160": 7, "1161": 7, "1162": 7, "1163": 7, "1164": 7, "1165": 7, "1166": 7, "1167": 7, "0729": 7, "1168": 7, "0129": 7, "1169": 7, "1170": 7, "1171": 7, "0652": 7, "1172": 7, "1173": 7, "1174": 7, "1175": 7, "1176": 7, "1177": 7, "1178": 7, "1179": 7, "1180": 7, "1181": 7, "1182": 7, "1183": 7, "1184": 7, "1185": 7, "1186": 7, "1187": 7, "1188": 7, "1189": 7, "0574": 7, "1190": 7, "1191": 7, "1192": 7, "1193": 7, "0798": 7, "1194": 7, "1195": 7, "1196": 7, "1197": 7, "1198": 7, "0741": 7, "1199": 7, "1200": 7, "1201": 7, "1202": 7, "1203": 7, "1204": 7, "1205": 7, "1206": 7, "1207": 7, "1208": 7, "1209": 7, "1210": 7, "1211": 7, "1212": 7, "1213": 7, "1214": 7, "1215": 7, "1216": 7, "1217": 7, "1218": 7, "1219": 7, "1220": 7, "1221": 7, "1222": 7, "1223": 7, "1224": 7, "1225": 7, "1226": 7, "1227": 7, "1228": 7, "1229": 7, "1230": 7, "1231": 7, "1232": 7, "1233": 7, "1234": 7, "1235": 7, "1236": 7, "1237": 7, "1238": 7, "1239": 7, "1240": 7, "1241": 7, "1242": 7, "1243": 7, "088": 7, "1244": 7, "0997": 7, "1245": 7, "1246": 7, "1247": 7, "1248": 7, "1249": 7, "0924": 7, "1250": 7, "1251": 7, "1252": 7, "1253": 7, "1254": 7, "1255": 7, "1256": 7, "1257": 7, "1258": 7, "1259": 7, "1260": 7, "1261": 7, "1262": 7, "1263": 7, "1264": 7, "1265": 7, "1266": 7, "1267": 7, "1268": 7, "1269": 7, "0848": 7, "1270": 7, "1271": 7, "1272": 7, "1273": 7, "1274": 7, "1275": 7, "1276": 7, "1277": 7, "1278": 7, "1279": 7, "1280": 7, "1281": 7, "1282": 7, "0876": 7, "1283": 7, "1284": 7, "1285": 7, "1286": 7, "1287": 7, "1288": 7, "1289": 7, "1290": 7, "1291": 7, "1292": 7, "1293": 7, "1294": 7, "1295": 7, "0789": 7, "1296": 7, "1297": 7, "1298": 7, "1299": 7, "1300": 7, "1301": 7, "1302": 7, "1303": 7, "1304": 7, "0953": 7, "1305": 7, "1306": 7, "1308": 7, "1309": 7, "1310": 7, "1311": 7, "0644": 7, "1312": 7, "1313": 7, "1314": 7, "1315": 7, "1316": 7, "1317": 7, "1318": 7, "1319": 7, "1320": 7, "1321": 7, "1322": 7, "1323": 7, "1324": 7, "1325": 7, "1326": 7, "1327": 7, "1328": 7, "1329": 7, "1330": 7, "1331": 7, "1332": 7, "1333": 7, "1334": 7, "1335": 7, "1336": 7, "1337": 7, "1338": 7, "1339": 7, "1340": 7, "1341": 7, "1342": 7, "1343": 7, "1344": 7, "1345": 7, "1346": 7, "0963": 7, "1347": 7, "1348": 7, "0701": 7, "1349": 7, "1350": 7, "1351": 7, "0317": 7, "1352": 7, "0568": 7, "1353": 7, "1354": 7, "1355": 7, "1356": 7, "0772": 7, "1357": 7, "1358": 7, "1359": 7, "1360": 7, "1361": 7, "1362": 7, "1363": 7, "1364": 7, "0978": 7, "1365": 7, "1366": 7, "1367": 7, "1368": 7, "1369": 7, "1370": 7, "1371": 7, "1372": 7, "0886": 7, "1373": 7, "1374": 7, "1375": 7, "1376": 7, "1377": 7, "1378": 7, "1379": 7, "066": 7, "1380": 7, "1381": 7, "0563": 7, "1382": 7, "1383": 7, "1384": 7, "1385": 7, "1386": 7, "1387": 7, "0865": 7, "1388": 7, "1389": 7, "0593": 7, "1390": 7, "1391": 7, "1392": 7, "0926": 7, "1393": 7, "0502": 7, "1394": 7, "1395": 7, "1396": 7, "1397": 7, "1398": 7, "1399": 7, "1400": 7, "1401": 7, "0788": 7, "1402": 7, "1403": 7, "1404": 7, "1405": 7, "1406": 7, "1407": 7, "1408": 7, "1409": 7, "1410": 7, "1411": 7, "1412": 7, "1413": 7, "1414": 7, "1415": 7, "1416": 7, "1417": 7, "1418": 7, "1419": 7, "1420": 7, "1421": 7, "1422": 7, "0688": 7, "1423": 7, "0943": 7, "1424": 7, "1425": 7, "1426": 7, "1427": 7, "1428": 7, "1429": 7, "0959": 7, "1430": 7, "1431": 7, "1432": 7, "1433": 7, "1434": 7, "1435": 7, "1436": 7, "1437": 7, "1438": 7, "1439": 7, "1440": 7, "1441": 7, "1442": 7, "1443": 7, "0472": 7, "1444": 7, "1445": 7, "0795": 7, "1446": 7, "0256": 7, "1447": 7, "0313": 7, "1448": 7, "1449": 7, "1450": 7, "1451": 7, "1452": 7, "1453": 7, "1454": 7, "1455": 7, "043": 7, "1456": 7, "1457": 7, "1458": 7, "1459": 7, "1460": 7, "1461": 7, "0366": 7, "1462": 7, "1463": 7, "1464": 7, "0383": 7, "1465": 7, "1466": 7, "1467": 7, "1468": 7, "1469": 7, "1470": 7, "0722": 7, "1471": 7, "0866": 7, "1472": 7, "1473": 7, "1474": 7, "1475": 7, "1476": 7, "1477": 7, "1478": 7, "1479": 7, "1480": 7, "1481": 7, "1482": 7, "1483": 7, "1484": 7, "1485": 7, "1486": 7, "1487": 7, "1488": 7, "1489": 7, "1490": 7, "1491": 7, "1492": 7, "0774": 7, "1493": 7, "1494": 7, "1495": 7, "1496": 7, "1497": 7, "0712": 7, "1498": 7, "1499": 7, "1500": 7, "1501": 7, "1502": 7, "1503": 7, "1504": 7, "1505": 7, "1506": 7, "1507": 7, "1508": 7, "1509": 7, "1510": 7, "1511": 7, "1512": 7, "1513": 7, "1514": 7, "1515": 7, "0882": 7, "1516": 7, "1517": 7, "1518": 7, "1519": 7, "1520": 7, "1521": 7, "1522": 7, "1523": 7, "1524": 7, "1525": 7, "1526": 7, "1527": 7, "1528": 7, "1529": 7, "1530": 7, "1531": 7, "1532": 7, "1533": 7, "1534": 7, "1535": 7, "1536": 7, "1537": 7, "1538": 7, "1539": 7, "1540": 7, "1541": 7, "0678": 7, "1542": 7, "1543": 7, "1544": 7, "1545": 7, "1546": 7, "1547": 7, "1548": 7, "1549": 7, "1550": 7, "1551": 7, "1552": 7, "1553": 7, "1554": 7, "1555": 7, "0856": 7, "1556": 7, "1557": 7, "0613": 7, "1558": 7, "1559": 7, "0977": 7, "1560": 7, "1561": 7, "1562": 7, "0307": 7, "1563": 7, "1564": 7, "1565": 7, "1566": 7, "0545": 7, "1567": 7, "0417": 7, "1568": 7, "1569": 7, "1570": 7, "039": 7, "1571": 7, "1572": 7, "1573": 7, "1574": 7, "1575": 7, "1576": 7, "1577": 7, "1578": 7, "1579": 7, "1580": 7, "0951": 7, "1581": 7, "1582": 7, "0214": 7, "1583": 7, "1584": 7, "1585": 7, "1586": 7, "1587": 7, "1588": 7, "1589": 7, "1590": 7, "1591": 7, "1592": 7, "1593": 7, "1594": 7, "1595": 7, "1596": 7, "1597": 7, "1598": 7, "0453": 7, "1599": 7, "1600": 7, "1601": 7, "1602": 7, "1603": 7, "1604": 7, "1605": 7, "068": 7, "1606": 7, "1607": 7, "1608": 7, "1609": 7, "1610": 7, "1611": 7, "1612": 7, "1613": 7, "1614": 7, "1615": 7, "0905": 7, "1616": 7, "1617": 7, "0779": 7, "1618": 7, "1619": 7, "1620": 7, "0589": 7, "1621": 7, "1622": 7, "097": 7, "1623": 7, "1624": 7, "1625": 7, "1626": 7, "1627": 7, "1628": 7, "1629": 7, "1630": 7, "1631": 7, "1632": 7, "1633": 7, "1634": 7, "1635": 7, "1636": 7, "1637": 7, "1638": 7, "1639": 7, "1640": 7, "1641": 7, "1642": 7, "0952": 7, "1643": 7, "1644": 7, "1645": 7, "1646": 7, "1647": 7, "1648": 7, "1649": 7, "1650": 7, "1651": 7, "0306": 7, "1652": 7, "1653": 7, "1654": 7, "069": 7, "1655": 7, "1656": 7, "1657": 7, "098": 7, "1658": 7, "1659": 7, "1660": 7, "1661": 7, "1662": 7, "1663": 7, "1664": 7, "1665": 7, "0505": 7, "1666": 7, "1667": 7, "0916": 7, "1668": 7, "095": 7, "1669": 7, "1670": 7, "1671": 7, "1672": 7, "0992": 7, "1673": 7, "1674": 7, "1675": 7, "0683": 7, "1676": 7, "1677": 7, "1678": 7, "0758": 7, "1679": 7, "1680": 7, "1681": 7, "011": 7, "1682": 7, "1683": 7, "1684": 7, "1685": 7, "1686": 7, "1687": 7, "0663": 7, "1688": 7, "1689": 7, "1690": 7, "1691": 7, "0938": 7, "1692": 7, "1693": 7, "1694": 7, "1695": 7, "1696": 7, "1697": 7, "1698": 7, "1699": 7, "1700": 7, "0454": 7, "1701": [7, 76], "0483": 7, "1702": 7, "0489": 7, "1703": 7, "1704": 7, "1705": 7, "1706": 7, "1707": 7, "1708": 7, "1709": 7, "1710": 7, "1711": 7, "1712": 7, "0752": 7, "1713": 7, "0645": 7, "1714": 7, "1715": 7, "1716": 7, "0391": 7, "1717": 7, "1718": 7, "1719": 7, "1720": 7, "1721": 7, "0372": 7, "1722": 7, "1723": 7, "1724": 7, "0323": 7, "1725": 7, "0895": 7, "1726": 7, "1727": 7, "1728": 7, "1729": 7, "1730": 7, "1731": 7, "1732": 7, "1733": 7, "1734": 7, "1735": 7, "0855": 7, "1736": 7, "1737": 7, "1738": 7, "0364": 7, "1739": 7, "0236": 7, "1740": 7, "1741": 7, "0925": 7, "1742": 7, "1743": 7, "0763": 7, "1744": 7, "1745": 7, "1746": 7, "1747": 7, "1748": 7, "1749": 7, "1750": 7, "1751": 7, "1752": 7, "1753": 7, "1754": 7, "1755": 7, "1756": 7, "1757": 7, "1758": 7, "1759": 7, "0631": 7, "1760": 7, "1761": 7, "1762": 7, "1763": 7, "1764": 7, "1765": 7, "1766": 7, "1767": 7, "1768": 7, "1769": 7, "0373": 7, "1770": 7, "1771": 7, "1772": 7, "1773": 7, "1774": 7, "1775": 7, "1776": 7, "1777": 7, "1778": 7, "1779": 7, "1780": 7, "1781": 7, "1782": 7, "0459": 7, "1783": 7, "0485": 7, "1784": 7, "1785": 7, "1786": 7, "1787": 7, "0217": 7, "1788": 7, "1789": 7, "1790": 7, "1791": 7, "0793": 7, "1792": 7, "0968": 7, "1793": 7, "0209": 7, "1794": 7, "0581": 7, "1795": 7, "0903": 7, "1796": 7, "0988": 7, "1797": 7, "0369": 7, "1798": 7, "1799": 7, "1800": 7, "1801": 7, "061": 7, "1802": 7, "1803": 7, "0415": 7, "1804": 7, "1805": 7, "1806": [7, 78], "1807": 7, "1808": 7, "1809": 7, "1810": 7, "1811": 7, "1812": 7, "1813": 7, "1814": 7, "1815": 7, "1816": 7, "0919": 7, "1817": 7, "1818": 7, "1819": 7, "1820": 7, "1821": 7, "1822": 7, "1823": 7, "1824": 7, "1825": 7, "1826": 7, "1827": 7, "0824": 7, "1828": 7, "1829": 7, "0522": 7, "1830": 7, "1831": 7, "1832": 7, "1833": 7, "0723": 7, "1834": 7, "0932": 7, "1835": 7, "1836": 7, "0511": 7, "1837": 7, "1838": 7, "1839": 7, "0627": 7, "1840": 7, "045": 7, "1841": 7, "1842": 7, "0353": 7, "1843": 7, "1844": 7, "1845": 7, "0967": 7, "1846": 7, "1847": 7, "1848": 7, "1849": 7, "1850": 7, "0567": 7, "1851": 7, "1852": 7, "1853": 7, "1854": 7, "1855": 7, "1856": 7, "033": 7, "1857": 7, "1858": 7, "1859": 7, "1860": 7, "0301": 7, "1861": 7, "1862": 7, "1863": 7, "1864": 7, "1865": 7, "1866": 7, "1867": 7, "0915": 7, "1868": 7, "1869": 7, "1870": 7, "1871": 7, "1872": 7, "1873": 7, "1874": 7, "034": 7, "0154": 7, "0822": 7, "0552": 7, "0996": 7, "0697": 7, "0889": 7, "0651": 7, "0674": 7, "0617": 7, "0921": 7, "0573": 7, "0707": 7, "0825": 7, "0849": 7, "0744": 7, "083": 7, "0792": 7, "0838": 7, "0987": 7, "0198": 7, "0479": 7, "0556": 7, "0195": 7, "0743": 7, "0612": 7, "0495": 7, "0311": 7, "0944": 7, "0765": 7, "0833": 7, "0371": 7, "0757": 7, "0906": 7, "0538": 7, "0392": 7, "0457": 7, "0562": 7, "0516": 7, "0989": 7, "0327": 7, "0632": 7, "0509": 7, "0429": 7, "053": 7, "0719": 7, "0878": 7, "096": 7, "0725": 7, "0748": 7, "0818": 7, "042": 7, "0426": 7, "0519": 7, "0557": 7, "0394": 7, "0269": 7, "0577": 7, "049": 7, "0881": 7, "0633": 7, "0203": 7, "0412": 7, "0696": 7, "0507": 7, "0367": 7, "0955": 7, "0814": 7, "078": 7, "0381": 7, "0586": 7, "0247": 7, "032": 7, "0547": 7, "0345": 7, "0303": 7, "0141": 7, "0481": 7, "0346": 7, "0463": 7, "0376": 7, "0973": 7, "093": 7, "046": 7, "0413": 7, "0338": 7, "0805": 7, "0172": 7, "0929": 7, "0694": 7, "0531": 7, "0163": 7, "0228": 7, "0773": 7, "0821": 7, "0416": 7, "0219": 7, "0713": 7, "0933": 7, "0804": 7, "0377": 7, "0252": 7, "0221": 7, "0716": 7, "0962": 7, "0854": 7, "0685": 7, "0655": 7, "0813": 7, "0455": 7, "0403": 7, "0835": 7, "0396": 7, "0868": 7, "0116": 7, "0476": 7, "0576": 7, "0799": 7, "0554": 7, "0291": 7, "0647": 7, "0561": 7, "0266": 7, "0174": 7, "0388": 7, "099": 7, "0281": 7, "059": 7, "0331": 7, "0768": 7, "019": 7, "0465": 7, "0896": 7, "0295": 7, "0601": 7, "051": 7, "0592": 7, "038": 7, "0837": 7, "0984": 7, "0344": 7, "0846": 7, "0328": 7, "0215": 7, "0187": 7, "014": 7, "0934": 7, "0969": 7, "0352": 7, "0931": 7, "0518": 7, "0777": 7, "0456": 7, "0706": 7, "0144": 7, "0524": 7, "0308": 7, "0235": 7, "0885": 7, "0447": 7, "0917": 7, "067": 7, "0859": 7, "0711": 7, "0945": 7, "0551": 7, "0614": 7, "0726": 7, "0679": 7, "0126": 7, "0693": 7, "0766": 7, "0165": 7, "0682": 7, "0797": 7, "0204": 7, "0177": 7, "0872": 7, "055": 7, "0196": 7, "0753": 7, "0147": 7, "0225": 7, "0166": 7, "0272": 7, "0912": 7, "0484": 7, "0626": 7, "0703": 7, "0666": 7, "0121": 7, "0817": 7, "0263": 7, "0535": 7, "0115": 7, "0784": 7, "0702": 7, "0192": 7, "0128": 7, "0705": 7, "0649": 7, "0491": 7, "0258": 7, "0332": 7, "0276": 7, "0611": 7, "0735": 7, "0638": 7, "0769": 7, "0775": 7, "013": 7, "0957": 7, "0939": 7, "0283": 7, "0936": 7, "0836": 7, "0169": 7, "0621": 7, "0131": 7, "0603": 7, "0665": 7, "0362": 7, "0218": 7, "0427": 7, "0374": 7, "0684": 7, "0902": 7, "0776": 7, "0588": 7, "0732": 7, "0478": 7, "00739": 7, "0184": 7, "0305": 7, "0528": 7, "0385": 7, "089": 7, "0336": 7, "0998": 7, "0329": 7, "0159": 7, "0445": 7, "0466": 7, "0999": 7, "0884": 7, "0767": 7, "0691": 7, "0954": 7, "0464": 7, "0599": 7, "0143": 7, "0112": 7, "0648": 7, "0446": 7, "0728": 7, "0293": 7, "0636": 7, "0829": 7, "0888": 7, "0585": 7, "0708": 7, "091": 7, "0347": 7, "0826": 7, "0285": 7, "0565": 7, "0669": 7, "0104": 7, "0119": 7, "0598": 7, "0493": 7, "0759": 7, "0226": 7, "0958": 7, "058": 7, "0879": 7, "0229": 7, "0689": 7, "0913": 7, "0762": 7, "0553": 7, "0409": 7, "017": 7, "076": 7, "00753": 7, "0513": 7, "0257": 7, "029": 7, "0407": 7, "0262": 7, "0749": 7, "037": 7, "0299": 7, "0136": 7, "0278": 7, "0337": 7, "0227": 7, "0232": 7, "0461": 7, "0976": 7, "0541": 7, "0279": 7, "0991": 7, "0529": 7, "0343": 7, "0956": 7, "0315": 7, "0643": 7, "0213": 7, "0699": 7, "0194": 7, "031": 7, "0806": 7, "0755": 7, "0333": 7, "0238": 7, "0149": 7, "0302": 7, "0965": 7, "0436": 7, "0869": 7, "0897": 7, "023": 7, "0527": 7, "0721": 7, "0544": 7, "036": 7, "0414": 7, "062": 7, "0109": 7, "0425": 7, "0548": 7, "0671": 7, "0319": 7, "0123": 7, "0175": 7, "0892": 7, "0462": 7, "00249": 7, "027": 7, "0324": 7, "0532": 7, "0656": 7, "0117": 7, "0605": 7, "063": 7, "0205": 7, "0261": 7, "0139": 7, "0827": 7, "0379": 7, "0274": 7, "0349": 7, "0146": 7, "0102": 7, "0623": 7, "0358": 7, "0901": 7, "0745": 7, "0664": 7, "0993": 7, "0579": 7, "0164": 7, "0606": 7, "0185": 7, "0243": 7, "021": 7, "0802": 7, "0468": 7, "00923": 7, "0604": 7, "0994": 7, "0794": 7, "0966": 7, "00747": 7, "0207": 7, "00327": 7, "0658": 7, "0861": 7, "0242": 7, "0148": 7, "0312": 7, "0961": 7, "0783": 7, "0537": 7, "0582": 7, "0698": 7, "026": 7, "065": 7, "0942": 7, "0375": 7, "0421": 7, "0947": 7, "0893": 7, "0731": 7, "0883": 7, "0486": 7, "0681": 7, "0197": 7, "0733": 7, "0452": 7, "0356": 7, "022": 7, "0348": 7, "0433": 7, "073": 7, "0127": 7, "0458": 7, "0292": 7, "0873": 7, "00316": 7, "035": 7, "00876": 7, "0781": 7, "00238": 7, "0832": 7, "0168": 7, "0796": 7, "0304": 7, "0975": 7, "0496": 7, "0449": 7, "0536": 7, "0569": 7, "00896": 7, "0273": 7, "0355": 7, "0928": 7, "0539": 7, "0325": 7, "0949": 7, "0704": 7, "0326": 7, "0482": 7, "052": 7, "0386": 7, "0114": 7, "0267": 7, "00387": 7, "0411": 7, "0113": 7, "0839": 7, "pai": 7, "attent": 7, "perf": [7, 8], "03399": 7, "07988": 7, "07046": 7, "00319": 7, "00305": 7, "aupr": 7, "auroc": 7, "94633": 7, "tabl": [7, 9], "lot": 7, "binari": [7, 21, 24, 25, 28, 29, 54, 55, 56, 57, 58, 74, 97], "v": 7, "higher": [7, 84, 93, 94, 99], "better": [7, 11, 12, 115, 132, 133], "reliabl": [7, 11], "expect": [7, 8, 11, 14, 15, 16], "precis": [7, 62, 120], "version": [7, 12, 14, 15, 16, 17, 18, 19, 20, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 89, 130], "ratio": [7, 14, 15, 16, 102, 111, 125], "talk": 7, "about": [7, 12], "section": [7, 132, 133], "two": 7, "option": [7, 13, 14, 15, 16, 20, 21, 24, 25, 28, 29, 31, 32, 33, 34, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 90, 93, 94, 99, 103, 112, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "either": [7, 12, 14, 15, 16, 49, 114, 130, 132], "directli": [7, 11, 12, 130, 132], "enough": 7, "otherwis": [7, 11, 54, 55, 56, 57, 58, 59, 112, 114, 115, 116, 119], "independ": [7, 133], "sometim": [7, 8], "call": [7, 8, 9, 11, 12, 62, 63, 116, 131], "sequenti": 7, "choic": [7, 132], "between": [7, 9, 42, 53, 62, 63, 64, 66, 75, 85, 86, 102, 115, 116], "multipl": [7, 9, 10, 91, 92, 116, 129, 133], "gpu": [7, 11, 12, 21, 24, 25, 28, 29, 31, 129, 130, 132], "pre": [7, 11, 13, 130], "deep_ensembl": 7, "replic": [7, 66, 72], "chang": [7, 13, 66, 67], "initi": [7, 11, 32, 33, 34, 62, 63, 71, 89, 114, 116, 122, 123, 124, 132], "your": [7, 12, 13, 130], "ensur": [7, 12, 13, 132], "repeattarget": 7, "reset_model_paramet": [7, 118], "ens_routin": 7, "format_batch_fn": [7, 125, 126, 127, 128, 132], "how": [7, 10, 11, 12, 21, 24, 25, 28, 29, 31, 84, 88, 90, 93, 94, 99, 103, 120, 132], "compar": [7, 111], "scheme": 7, "dictionnari": 7, "relat": [7, 10, 11], "ens_perf": 7, "0914": 7, "0981": 7, "0964": 7, "092": 7, "0738": 7, "0971": 7, "0847": 7, "0618": 7, "0363": 7, "0659": 7, "0843": 7, "0506": 7, "0692": 7, "0995": 7, "0909": 7, "0764": 7, "0608": 7, "0812": 7, "0314": 7, "0321": 7, "0439": 7, "0687": 7, "0853": 7, "0448": 7, "0785": 7, "0408": 7, "0727": 7, "0898": 7, "0619": 7, "0911": 7, "0406": 7, "0972": 7, "0754": 7, "0717": 7, "0441": 7, "0512": 7, "0948": 7, "0751": 7, "0558": 7, "0922": 7, "0625": 7, "04753": 7, "15047": 7, "10053": 7, "01795": 7, "01808": 7, "15031": 7, "53580": 7, "95554": 7, "19477": 7, "sinc": [7, 8], "one": [7, 11, 12, 42, 49, 50, 53, 88, 90, 93, 94, 97, 99, 103, 105, 108, 126, 127, 132], "reduc": [7, 13, 66, 67, 88, 90, 93, 94, 99, 103, 119], "github": [7, 10, 11, 38, 52, 82, 96, 116, 130, 132], "usag": [7, 129], "feel": [7, 13, 132], "free": [7, 132, 133], "machin": [7, 13], "longer": [7, 10, 11], "durat": 7, "multipli": [7, 13, 66, 67, 72, 73], "account": [7, 132], "fact": 7, "hug": [7, 11, 13], "face": [7, 11, 13, 133], "hf_hub_download": 7, "below": [7, 9, 133], "therefor": [7, 66, 67, 131], "other": [7, 11, 32, 33, 34, 129], "pretrain": [7, 14], "huggingfac": 7, "hub": [7, 11], "all_model": 7, "repo_id": 7, "ensta": [7, 130], "u2i": [7, 130], "filenam": [7, 12], "version_": [7, 12], "ckpt": [7, 12], "local_dir": 7, "state_dict": [7, 10, 116], "map_loc": [7, 11], "item": [7, 8, 9, 10], "load_state_dict": [7, 10, 11], "home": [7, 10], "runner": [7, 10], "auto_tutorials_sourc": [7, 10, 134], "futurewarn": [7, 10, 11], "weights_onli": [7, 10, 11], "current": [7, 10, 11, 13, 88, 94, 99, 112, 113, 116, 131], "pickl": [7, 10, 11], "implicitli": [7, 10, 11], "It": [7, 9, 10, 11, 12, 35, 50, 65, 67, 81, 85, 86, 116, 130, 131, 132], "possibl": [7, 10, 11, 13, 66], "construct": [7, 10, 11], "malici": [7, 10, 11], "arbitrari": [7, 10, 11], "unpickl": [7, 10, 11], "blob": [7, 10, 11], "secur": [7, 10, 11], "md": [7, 10, 11], "untrust": [7, 10, 11], "detail": [7, 10, 11, 12, 89, 120, 125, 127, 128, 129, 131], "futur": [7, 10, 11], "releas": [7, 10, 11, 49], "flip": [7, 10, 11], "limit": [7, 10, 11], "unless": [7, 10, 11], "explicitli": [7, 10, 11, 13], "allowlist": [7, 10, 11], "serial": [7, 10, 11], "add_safe_glob": [7, 10, 11], "recommend": [7, 10, 11], "start": [7, 10, 11, 13, 64, 65, 115, 116], "where": [7, 10, 11, 38, 39, 43, 44, 60, 62, 63, 75, 84, 88, 90, 93, 94, 97, 99, 103, 104, 105, 106, 107, 108, 109, 110], "control": [7, 8, 10, 11, 71, 75], "experiment": [7, 10, 11], "featur": [7, 10, 11, 63, 65, 67, 71, 73, 97, 125, 133], "00677": 7, "02816": 7, "01454": 7, "00459": 7, "00451": 7, "25233": 7, "38779": 7, "01787": 7, "23446": 7, "publish": 7, "intern": [7, 51], "represent": [7, 66, 67], "2023": [7, 97, 129, 132, 133], "modif": 7, "make": [7, 9, 13, 42, 62, 63, 66, 67, 88, 90, 93, 97, 99, 103, 114, 129, 132, 133], "computation": [7, 9, 99], "idea": [7, 131, 132], "member": [7, 62, 63, 66, 67], "u": [7, 10, 13, 62, 63, 130, 132], "pass": [7, 9, 12, 13, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 112, 114, 116, 125, 126, 127, 128, 132], "particularli": [7, 13], "updat": [7, 11, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 130], "equival": [7, 99], "link": [7, 13, 120], "einop": [7, 10, 132], "rearrang": [7, 10, 67, 132], "packedconv2d": [7, 10, 132], "packedlinear": [7, 10, 132], "packedlenet": 7, "last": [7, 10, 12, 14, 15, 16, 66, 67, 114, 119, 131, 132], "e": [7, 8, 10, 12, 13, 32, 33, 34, 42, 43, 44, 49, 50, 51, 53, 84, 92, 106, 107, 109, 126, 127, 130, 132, 133], "m": [7, 10, 11, 13, 62, 63, 75, 78, 105, 108, 121, 132, 133], "h": [7, 10, 32, 33, 34, 51, 121, 132], "w": [7, 10, 32, 33, 34, 63, 79, 116, 132], "again": [7, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 130], "packed_model": 7, "packed_routin": 7, "packed_perf": 7, "0497": 7, "0686": 7, "0737": 7, "0923": 7, "0791": 7, "0778": 7, "0595": 7, "0474": 7, "0816": 7, "0904": 7, "0609": 7, "0787": 7, "0351": 7, "094": 7, "0974": 7, "0677": 7, "0887": 7, "0546": 7, "0862": 7, "085": 7, "0438": 7, "084": 7, "0803": 7, "0602": 7, "056": 7, "0983": 7, "0801": 7, "0402": 7, "0782": 7, "0746": 7, "0451": 7, "0815": 7, "0858": 7, "0863": 7, "0714": 7, "0935": 7, "0559": 7, "0841": 7, "048": [7, 10], "03623": 7, "16983": 7, "08241": 7, "03024": 7, "26263": 7, "57685": 7, "90327": 7, "35936": 7, "approxim": [7, 8, 9, 120], "befor": [7, 11, 13, 38, 54, 55, 56, 57, 58, 59], "howev": [7, 11, 12, 13, 66, 67, 131], "veri": [7, 11, 132, 133], "small": [7, 50, 76, 85, 86, 106, 107, 109, 110], "henc": 7, "complet": 7, "underus": 7, "would": [7, 12, 13, 132], "observ": [7, 85, 86], "larger": [7, 8], "read": [7, 38, 133], "medium": 7, "post": [7, 8, 122, 123, 124, 125, 129], "look": [7, 10, 11, 13, 132], "lightning_log": [7, 12], "If": [7, 10, 11, 12, 13, 14, 15, 16, 32, 33, 34, 38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 72, 73, 74, 84, 85, 86, 88, 90, 91, 92, 93, 94, 97, 99, 103, 107, 108, 109, 110, 112, 118, 125, 127, 130, 132], "own": [7, 114], "try": [7, 9, 10, 13], "curv": [7, 84, 85, 86], "tensorboard": [7, 11], "logdir": 7, "add": [7, 8, 12, 13, 62, 63, 64, 65, 66, 67, 72, 73, 74, 84, 85, 86, 116], "made": [7, 32, 33, 34], "sub": 7, "think": [7, 10, 132], "help": [7, 12, 13], "identifi": 7, "reject": 7, "paradigm": 7, "awar": [7, 129], "decid": 7, "threshold": [7, 92, 101, 111], "real": [7, 11, 133], "world": [7, 11, 133], "cost": 7, "wrong": 7, "constrast": 7, "best": [7, 12, 13], "correct": [7, 85, 86], "abov": [7, 10, 12], "area": [7, 84, 85, 86], "under": [7, 49, 84, 85, 86, 132], "coverag": [7, 13, 85, 86, 91, 92, 100, 101], "express": 7, "evolv": [7, 13], "abl": 7, "perfectli": 7, "separ": [7, 19], "fix": [7, 78, 122, 123, 124], "interest": [7, 12, 13, 132], "certain": 7, "requir": [7, 132], "technic": 7, "constraint": [7, 66, 67], "egal": 7, "orthogon": 7, "glest": 7, "eval_grouping_loss": [7, 14, 15, 16, 125, 132], "hoc": [8, 125], "mc": [8, 14, 15, 16, 114, 119, 120, 121], "mc_batch_norm": 8, "post_process": [8, 11, 120, 121, 122, 123, 124, 125], "optim_cifar10_resnet18": [8, 9], "norm": [8, 87, 89], "batchnorm2d": [8, 14, 121], "04141": 8, "10287": 8, "08572": 8, "00475": 8, "00328": 8, "specifi": [8, 13, 74, 75, 76, 77, 78, 79, 80, 118], "batchnorm": [8, 14, 116, 121], "mc_batch_siz": [8, 121], "author": [8, 49, 129, 133], "good": [8, 10, 131], "highlight": 8, "forget": [8, 9], "enabl": [8, 9, 12], "uncertain": 8, "highest": 8, "most_uncertain": 8, "sort": 8, "var": 8, "topk": 8, "str": [8, 9, 14, 15, 16, 20, 22, 23, 26, 27, 32, 33, 34, 35, 38, 39, 42, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 72, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 88, 90, 93, 94, 99, 103, 120, 125], "image_id": [8, 9], "mostli": [8, 13], "erron": 8, "depend": [8, 12, 105, 108, 114, 130, 131, 133], "refer": [9, 10, 13, 38, 42, 46, 49, 51, 53, 62, 63, 64, 65, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 96, 97, 106, 107, 109, 110, 112, 115, 116, 118, 120, 121, 122, 123, 124, 129, 132], "2016": [9, 133], "vision": [9, 49, 51, 133], "2017": [9, 11, 82, 85, 86, 118, 122, 123, 124, 131, 133], "mc_dropout": 9, "wrap": [9, 114, 119, 132], "sure": [9, 62, 63, 64, 65, 66, 67, 88, 90, 93, 97, 99, 103, 114, 129], "moreov": 9, "dropout_r": [9, 14, 15, 16, 18], "mc_model": 9, "last_lay": [9, 114, 119, 120], "tell": 9, "exdb": 9, "fail": 9, "forbidden": 9, "ossci": 9, "3k": 9, "882kb": 9, "295k": 9, "39mb": 9, "25m": 9, "63mb": 9, "4mb": [9, 10, 11], "9k": 9, "553kb": 9, "65m": 9, "947kb": 9, "328k": 9, "28m": 9, "08mb": 9, "25mb": 9, "54k": 9, "6mb": [9, 10, 11], "26113": 9, "33410": 9, "62065": 9, "32262": 9, "get": [9, 10, 11, 13, 22, 23, 26, 27, 30, 81, 132, 133], "disagr": [9, 102], "heavili": [10, 62, 63], "inspir": [10, 13, 52, 62, 63, 82], "dive": 10, "60000": 10, "32x32": 10, "colour": 10, "6000": 10, "per": [10, 22, 23, 26, 27, 32, 33, 34, 66, 88, 90, 93, 94, 99, 103], "There": [10, 11, 35, 50], "50000": 10, "cifar": [10, 11, 12, 42, 43, 44], "outlin": 10, "set_num_thread": 10, "pilimag": 10, "window": 10, "brokenpipeerror": 10, "trainset": 10, "trainload": 10, "testset": 10, "testload": 10, "plane": [10, 62], "car": 10, "bird": 10, "cat": 10, "deer": 10, "dog": 10, "frog": 10, "hors": 10, "ship": 10, "truck": 10, "www": [10, 11], "toronto": [10, 11], "edu": [10, 11], "kriz": [10, 11], "tar": [10, 11], "170m": 10, "240kb": 10, "940kb": 10, "68mb": 10, "51m": 10, "16mb": 10, "63m": 10, "7m": [10, 11], "5mb": [10, 11], "3m": [10, 11], "2mb": 10, "5m": [10, 11], "7mb": [10, 11], "6m": [10, 11], "0m": [10, 11], "2m": [10, 11], "9mb": [10, 11], "8m": 10, "101m": 10, "105m": 10, "110m": 10, "114m": 10, "118m": 10, "122m": 10, "126m": [10, 11], "130m": [10, 11], "134m": 10, "138m": 10, "142m": 10, "146m": 10, "151m": 10, "155m": 10, "159m": [10, 11], "164m": [10, 11], "168m": [10, 11], "verifi": [10, 11, 38], "fun": 10, "unnorm": 10, "figur": [10, 11, 84, 85, 86], "pad_valu": 10, "net": 10, "maxpool2d": [10, 132], "packednet": [10, 132], "packed_net": [10, 132], "momentum": [10, 113], "criterion": [10, 14, 15, 16, 125], "running_loss": 10, "list": [10, 11, 13, 22, 23, 26, 27, 30, 112, 118, 129, 132, 133], "zero": [10, 66, 68, 69, 70, 72, 99], "zero_grad": 10, "backward": 10, "repeat": [10, 12, 14, 16, 64, 65, 114], "statist": [10, 116], "2000": [10, 11], "1999": 10, "everi": [10, 112, 115, 116], "mini": 10, "3f": 10, "4000": 10, "8000": 10, "12000": 10, "model": [10, 12, 13, 20, 72, 73, 77, 81, 83, 85, 86, 90, 93, 94, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131], "cifar_packed_net": 10, "pth": 10, "displai": [10, 12], "familiar": 10, "groundtruth": 10, "back": 10, "re": 10, "wasn": 10, "necessari": [10, 67], "did": 10, "illustr": 10, "match": [10, 11, 12, 32, 33, 34, 51, 133], "successfulli": [10, 11], "n": [10, 62, 63, 85, 86, 88, 92, 93, 94, 97, 99, 101, 104, 105, 106, 107, 108, 109, 110, 130], "probs_per_est": 10, "seem": 10, "pretti": 10, "underli": [11, 66], "extens": 11, "temperaturescal": 11, "done": 11, "calibration_set": [11, 14, 15, 16, 122, 123, 124, 125, 132], "val": [11, 14, 15, 16, 31, 38, 39, 60, 123, 125, 132], "outsid": 11, "diagram": 11, "resnet": [11, 12, 14, 16, 132], "log_plot": [11, 14, 15, 16, 19, 125, 126, 128, 132], "flag": [11, 13, 121], "cifar100datamodul": 11, "calibrationerror": 11, "load_hf": 11, "scratch": 11, "liner": 11, "arch": [11, 12, 14, 15, 17, 19, 20, 132], "style": [11, 12, 13, 14, 15, 16, 19, 62, 63, 64, 65, 66, 67, 72, 73], "conv_bia": 11, "config": [11, 12, 132], "resnet18_c100": 11, "weight_path": 11, "devic": [11, 12, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 116, 121, 122, 123, 124], "prepare_data": [11, 27, 31], "setup": [11, 31], "element": [11, 62, 64, 66, 74], "dm": [11, 132], "unus": [11, 51], "169m": 11, "241kb": 11, "941kb": 11, "918k": 11, "60m": 11, "102m": 11, "107m": 11, "111m": 11, "116m": 11, "121m": 11, "135m": 11, "140m": 11, "145m": 11, "149m": 11, "154m": 11, "split": [11, 26, 27, 31, 37, 38, 39, 45, 46, 47, 48, 49, 51, 52, 60, 61, 132], "proper": [11, 132], "associ": [11, 84, 86, 92, 101], "lengthi": 11, "restrict": 11, "random_split": 11, "cal_dataset": 11, "multiclass": 11, "ha": [11, 74, 85, 86], "temper": 11, "scaled_model": 11, "reset": [11, 118, 121], "mix": 11, "previou": [11, 12, 67], "sai": 11, "drawn": 11, "hold": 11, "shift": [11, 14, 15, 16, 22, 23, 26, 27, 125, 126, 127, 128, 132], "happen": 11, "naeini": [11, 89, 133], "cooper": [11, 133], "g": [11, 12, 13, 42, 43, 44, 49, 50, 51, 53, 75, 106, 107, 109, 115, 122, 123, 124, 131], "hauskrecht": [11, 133], "obtain": [11, 89, 133], "bin": [11, 14, 89, 125, 128, 133], "aaai": [11, 89, 133], "guo": [11, 122, 123, 124, 131, 133], "pleiss": [11, 122, 123, 124, 131, 133], "sun": [11, 122, 123, 124, 131, 133], "weinberg": [11, 122, 123, 124, 131, 133], "q": [11, 122, 123, 124, 131, 133], "modern": [11, 97, 122, 123, 124, 131, 133], "instanci": 12, "around": [12, 89, 132], "subcommand": 12, "lightningmodul": [12, 14, 15, 16, 125, 127, 128, 132], "lightningcli": 12, "tulightningcli": 12, "new": [12, 88, 94, 99, 130], "eval_after_fit": 12, "know": [12, 13], "whether": [12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 54, 55, 56, 57, 58, 60, 66, 67, 71, 84, 85, 86, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "phase": 12, "cifar10": [12, 23, 132], "lightningargumentpars": 12, "baselin": [12, 14, 15, 16, 17, 18, 19, 20, 116, 129, 133], "resnetbaselin": 12, "cifar10datamodul": [12, 132], "resnetcli": 12, "add_arguments_to_pars": 12, "parser": 12, "add_optimizer_arg": 12, "add_lr_scheduler_arg": 12, "multisteplr": 12, "cli_main": 12, "__main__": 12, "fast_dev_run": 12, "_get": 12, "ckpt_path": 12, "both": [12, 66, 67, 72, 105, 108], "instanc": [12, 61], "subclass": 12, "seemlessli": 12, "But": 12, "command": [12, 130, 132], "whichev": 12, "up": 12, "line": 12, "1": [12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 42, 53, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 86, 88, 96, 98, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 121, 122, 123, 124, 131, 132, 133], "3": [12, 20, 39, 62, 63, 111, 128, 129, 130, 132], "loss": [12, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 97, 103, 110, 125, 126, 127, 128, 129, 132], "mileston": 12, "prefix": [12, 116], "conveni": 12, "store": [12, 39, 72, 73, 84, 86, 92, 101, 116, 125], "burden": 12, "support": [12, 14, 15, 16, 18, 20, 60, 74, 85, 86, 132], "eventu": 12, "By": 12, "yaml": [12, 26, 132], "format": [12, 13, 125, 126, 127, 128], "content": [12, 133], "directori": [12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60], "state": [12, 13, 90, 93, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116], "checkpoint": [12, 112, 133], "addit": [12, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111], "advis": [12, 13, 132], "explor": [12, 129], "mainli": 12, "organ": 12, "vgg": [12, 15], "wideresnet": 12, "cifar100": [12, 22], "uci_dataset": 12, "segment": [12, 13, 19, 20, 32, 33, 34, 60, 61, 118, 128, 132], "cityscap": [12, 33], "segform": [12, 20], "muad": [12, 34, 129], "uci": [12, 21, 24, 25, 28, 29, 31, 54, 55, 56, 57, 58, 59], "backbon": [12, 14, 15, 16, 20, 132], "predefin": 12, "resnet18": [12, 132], "choos": [12, 42, 49, 130, 132], "overrid": [12, 32, 33, 34, 114], "dict_kwarg": 12, "2": [12, 13, 20, 21, 24, 25, 28, 29, 33, 34, 54, 55, 56, 57, 58, 62, 72, 73, 107, 108, 109, 110, 111, 118, 128, 132], "4": [12, 20, 49, 62, 71, 126, 132], "yet": [12, 132], "miss": 12, "doc": [12, 13, 130], "earli": 13, "stage": [13, 31], "contributor": 13, "comprehens": [13, 129], "comment": 13, "project": [13, 130], "host": 13, "roughli": 13, "field": 13, "environ": [13, 130], "continu": 13, "integr": 13, "break": 13, "system": [13, 85, 130, 133], "clone": [13, 130], "repositori": [13, 130, 132], "edit": [13, 130], "pip": [13, 129, 130], "commit": [13, 130], "hook": [13, 130], "reinstal": 13, "group": [13, 14, 15, 16, 32, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 97, 125, 132], "navig": 13, "html": 13, "noplot": 13, "instead": [13, 32, 33, 34], "ruff": [13, 130], "lint": 13, "drop": 13, "black": 13, "isort": 13, "flake8": 13, "properli": 13, "push": 13, "pr": 13, "featureless": 13, "pytest": 13, "emoji": 13, "messag": 13, "pull": 13, "branch": 13, "person": 13, "fork": 13, "compli": [13, 38, 66, 67], "condit": 13, "nor": 13, "signatur": 13, "type": [13, 14, 15, 16, 20, 22, 23, 26, 27, 30, 38, 42, 49, 60, 61, 62, 63, 64, 65, 71, 72, 73, 76, 77, 78, 81, 84, 85, 86, 88, 92, 96, 97, 101, 102, 112, 114, 116, 118, 120, 125, 126, 127, 129], "clear": 13, "docstr": 13, "come": 13, "rememb": 13, "paperswithcod": 13, "solv": 13, "rais": [13, 14, 15, 16, 49, 88, 90, 93, 94, 97, 99, 103, 111, 118, 121, 132], "explain": 13, "maintain": 13, "intend": 13, "popular": 13, "scikit": [13, 130], "api": [13, 43, 44, 51, 113, 129, 132], "except": [13, 114], "arrai": [13, 54, 55, 56, 57, 58, 59], "obstacl": 13, "reconsid": 13, "remain": 13, "apach": 13, "imagenet": [14, 15, 16, 26, 46], "normalization_lay": 14, "mixup_param": [14, 15, 16, 125], "last_layer_dropout": [14, 15, 16], "width_multipli": 14, "rho": [14, 16], "batch_repeat": [14, 16], "ood_criterion": [14, 15, 16, 125, 132], "msp": [14, 15, 16, 125, 132], "save_in_csv": [14, 15, 16, 125, 132], "eval_shift": [14, 15, 16, 22, 23, 26, 27, 30, 125, 126, 127, 128], "num_calibration_bin": [14, 19, 125, 128], "variou": [14, 15, 16, 18, 20, 132], "configure_optim": [14, 15, 16, 125, 127, 128], "batchensembl": [14, 16, 62, 63], "mask": [14, 15, 16, 32, 33, 34, 64, 65, 80, 103], "masksembl": [14, 16, 64, 65, 132], "mimo": [14, 16, 132], "mixup": [14, 15, 16, 125], "mixtyp": [14, 15, 16], "mixmod": [14, 15, 16], "dist_sim": [14, 15, 16], "kernel_tau_max": [14, 15, 16], "kernel_tau_std": [14, 15, 16], "mixup_alpha": [14, 15, 16], "cutmix_alpha": [14, 15, 16], "expans": [14, 15, 16], "factor": [14, 15, 16, 72, 73, 74, 105, 108], "affect": [14, 15, 16], "width": [14, 15, 16, 32, 33, 34, 67], "bool": [14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 38, 39, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 71, 72, 73, 84, 85, 86, 88, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132], "share": [14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 62, 63], "mi": [14, 15, 16, 125, 132], "mutual": [14, 15, 16, 99, 125], "vr": [14, 15, 16, 125, 132], "csv": [14, 15, 16, 125], "callabl": [14, 15, 16, 38, 39, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60], "valueerror": [14, 15, 16, 88, 90, 93, 94, 97, 99, 103, 118], "readi": [14, 15, 16, 132], "wide": 16, "resnet28x10": 16, "depth": [17, 38, 39, 106, 107, 109, 110], "max_depth": [17, 37, 38, 39], "pretrained_backbon": [17, 19], "output_strid": 19, "metric_subsampling_r": [19, 128], "b0": 20, "b1": 20, "b2": 20, "b3": 20, "b4": 20, "b5": 20, "val_split": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "test_split": [21, 24, 25, 28, 29, 54, 55, 56, 57, 58], "pin_memori": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "persistent_work": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "bank": [21, 29, 54], "market": [21, 29, 54], "string": [21, 24, 25, 28, 29, 31, 43, 44], "among": [21, 24, 25, 28, 29], "subprocess": [21, 24, 25, 28, 29, 31], "pin": [21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34], "persist": [21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34], "shift_sever": [22, 23, 26, 30, 40, 42, 53], "basic_aug": [22, 23, 26, 27, 30, 32, 33], "cutout": [22, 23, 27], "randaug": [22, 23, 26], "auto_aug": [22, 23], "num_dataload": [22, 23], "auto": [22, 23], "test_alt": [23, 26], "dota2": 24, "game": [24, 55], "htru2": 25, "ood_d": [26, 27, 30], "openimag": [26, 51], "o": [26, 51, 132], "procedur": 26, "train_siz": 26, "interpol": [26, 30], "bilinear": [26, 30], "rand_augment_opt": [26, 30], "id": [26, 96], "textur": 26, "stand": 27, "notmnist": 27, "onlin": [28, 57], "shopper": [28, 57], "intent": [28, 57], "svhn": 30, "tinyimagenet": [30, 53], "dataset_nam": [31, 59], "input_shap": 31, "split_se": [31, 54, 55, 56, 57, 58], "One": [31, 59], "boston": [31, 59], "hous": [31, 59, 129], "concret": [31, 59], "energi": [31, 59, 125, 132], "kin8nm": [31, 59], "naval": [31, 59], "propuls": [31, 59], "plant": [31, 59], "power": [31, 59, 111], "protein": [31, 59], "wine": [31, 59], "red": [31, 59], "yacht": [31, 59], "tupl": [31, 38, 42, 49, 62, 64, 66, 72, 84, 85, 86], "shape": [31, 62, 63, 67, 84, 85, 86, 88, 92, 97, 99, 101, 110, 114], "seed": [31, 59, 116], "crop_siz": [32, 33, 34], "eval_s": [32, 33, 34], "group_class": [32, 60], "camvid": 32, "sequenc": [32, 33, 34], "desir": [32, 33, 34, 64, 65, 132], "length": [32, 33, 34, 116, 118], "edg": [32, 33, 34], "height": [32, 33, 34], "rescal": [32, 33, 34, 74, 116], "superclass": [32, 60], "inject": [32, 33, 34], "v2": [32, 33, 34], "todtyp": [32, 33, 34], "dtype": [32, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "tv_tensor": [32, 33, 34], "float32": [32, 33, 34], "int64": [32, 33, 34], "behavior": [32, 33, 34], "2048": [33, 34], "toimag": [33, 34], "randomrescal": [33, 34], "min_scal": [33, 34], "max_scal": [33, 34], "pad_if_need": [33, 34], "colorjitt": [33, 34], "randomhorizontalflip": [33, 34], "target_transform": [35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61], "pixmix": 35, "licens": [35, 38, 49, 50, 54, 55, 56, 57, 58, 59, 129], "suitabl": [35, 50], "commerci": [35, 38, 50], "min_depth": [37, 38, 39], "remove_unus": 37, "target_typ": [38, 61], "semant": 38, "leftimg8bit": 38, "leftlabel": 38, "leftdepth": 38, "locat": 38, "internet": [38, 42, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60], "io": 38, "cannot": 38, "carefulli": 38, "encode_target": [38, 60, 61], "encod": [38, 60, 61, 72, 73, 129, 133], "liter": [39, 118, 120, 121, 122, 123, 124, 132], "minimum": [39, 116], "file_arg": [41, 44], "fine_label": 41, "cifarc_subset": [42, 53], "make_dataset": [42, 49], "accord": [42, 49], "chosen": [42, 49, 102], "gather": [42, 49, 81, 83], "ndarrai": [42, 49], "10h": [43, 44], "npy": [43, 44], "exist": [43, 44, 60], "aggre_label": 44, "10n": 44, "mnistc_subset": 49, "mu": [49, 133], "norman": [49, 133], "justin": [49, 133], "gilmer": [49, 133], "icmlw": [49, 133], "creativ": 49, "attribut": [49, 71, 125], "someon": 49, "investig": 49, "v4": [51, 133], "unifi": [51, 133], "visual": [51, 133], "relationship": [51, 133], "kuznetsova": [51, 133], "et": [51, 71, 77, 85, 87, 89, 116, 120, 132, 133], "al": [51, 71, 77, 85, 87, 89, 116, 120, 132, 133], "journal": [51, 129], "curat": [51, 133], "vim": [51, 133], "Of": 51, "virtual": [51, 133], "wang": [51, 133], "cvpr": [51, 133], "2022": [51, 75, 129, 133], "gist": 52, "z": 52, "b862013c0dc2b540cf96a123a6766e54": 52, "21893027": [54, 55, 56, 57, 58], "dota": 55, "ethic": 59, "becaus": 59, "concern": 59, "entri": 60, "properti": [60, 61, 66], "color_palett": [60, 61], "color": [60, 61], "palett": [60, 61], "decode_target": [60, 61], "decod": [60, 61], "doesn": 60, "fine": 61, "classmethod": 61, "plot_sampl": 61, "out_channel": [62, 64, 66, 68, 69, 70, 72], "kernel_s": [62, 64, 66, 68, 69, 70, 72], "stride": [62, 64, 66, 68, 69, 70, 72], "dilat": [62, 64, 66, 68, 69, 70], "bia": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 122, 124], "2d": [62, 72], "signal": 62, "incom": [62, 63], "simplest": 62, "c_": 62, "h_": [62, 63], "w_": 62, "describ": [62, 82, 132], "n_i": 62, "_j": 62, "widehat": [62, 63], "s_": [62, 63], "n_": 62, "sum_": [62, 88, 104, 110], "star": 62, "r_": [62, 63], "altern": [62, 63, 133], "lifelong": [62, 63, 133], "produc": [62, 64, 65, 66, 67], "convolv": [62, 64, 66, 72], "kernel": [62, 64, 66, 72, 125, 133], "ad": [62, 64, 66, 72, 132], "four": [62, 64, 66], "side": [62, 64, 66, 72], "space": [62, 64, 66], "connect": [62, 65, 67, 72], "learnabl": [62, 63, 64, 65, 66, 67, 72, 73], "variabl": [62, 63, 71], "frac": [62, 63, 66, 67, 88, 104, 105, 106, 107, 108, 109, 110], "mathcal": [62, 63], "prod_": 62, "r_group": [62, 63], "matric": [62, 63], "row": [62, 63], "vector": [62, 63, 124, 131], "th": [62, 63], "s_group": [62, 63], "lfloor": 62, "rfloor": 62, "divid": [62, 63, 74], "equal": [62, 75, 131], "conv2db": 62, "randn": [62, 63], "out_featur": [63, 65, 67, 71, 73], "circ": 63, "linearb": 63, "connexion": [64, 66], "Be": [64, 65], "nikita": [64, 65, 133], "durasov": [64, 65, 133], "timur": [64, 65, 133], "bagautdinov": [64, 65, 133], "pierr": [64, 65, 133], "baqu": [64, 65, 133], "pascal": [64, 65, 133], "fua": [64, 65, 133], "fulli": [65, 67], "oper": [65, 67], "minimum_channels_per_group": 66, "padding_mod": [66, 68, 69, 70, 72], "smallest": 66, "reflect": [66, 72], "circular": [66, 72], "explan": [66, 67, 132], "capac": [66, 67], "divis": [66, 67], "legaci": 67, "compat": 67, "n_estim": 67, "prior_sigma_1": [68, 69, 70, 71], "prior_sigma_2": [68, 69, 70, 71], "002": [68, 69, 70], "prior_pi": [68, 69, 70, 71], "mu_init": [68, 69, 70, 71], "sigma_init": [68, 69, 70, 71], "frozen": [68, 69, 70, 71], "conv1d": 68, "mixtur": [68, 69, 70, 71], "conv3d": 70, "deviat": [71, 72, 73], "freez": 71, "charl": [71, 118, 133], "unfreez": 71, "hidden_s": [72, 73], "std_factor": [72, 73], "lpbnn": [72, 73], "latent": [72, 73, 129, 133], "nois": [72, 73], "reduct": [74, 75, 76, 77, 78, 79, 80, 82, 88, 90, 93, 94, 97, 99, 102, 103], "label_smooth": 74, "smooth": 74, "bcewithlogitsloss": 74, "manual": 74, "nbatch": 74, "beta": 75, "tparamet": 75, "rel": [75, 106, 107, 109], "seitzer": [75, 133], "tavakoli": [75, 133], "antic": [75, 133], "martiu": [75, 133], "pitfal": [75, 133], "heteroscedast": [75, 133], "arxiv": [75, 76, 78, 79, 85, 112, 133], "ab": [75, 78, 79], "2203": [75, 133], "09168": 75, "ep": 76, "penalti": 76, "numer": [76, 99], "instabl": [76, 99], "gabriel": 76, "pereyra": 76, "penal": 76, "pdf": [76, 133], "06548": 76, "conflictu": 77, "moham": [77, 133], "fellaji": [77, 133], "principl": [77, 133], "paradox": [77, 133], "annealing_step": 78, "loss_typ": 78, "digamma": 78, "01768": 78, "combin": 79, "1910": 79, "02600": 79, "padding_mask": [80, 103], "bound": 81, "seek": 81, "fill": 81, "aggreg": 81, "focal": 82, "lin": [82, 133], "goyal": [82, 133], "girshick": [82, 133], "he": [82, 133], "doll\u00e1r": [82, 133], "dens": [82, 133], "tpami": [82, 129, 133], "adeelh": 82, "sparsif": 84, "much": [84, 85], "coincid": 84, "keyword": [84, 85, 86, 88, 90, 93, 94, 97, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111], "advanc": [84, 88, 90, 93, 94, 97, 99, 103, 104, 106, 107, 109, 110, 111], "hypothes": 84, "optic": 84, "flow": 84, "eccv": 84, "plot_oracl": 84, "plot_valu": [84, 85, 86], "oracl": [84, 86], "assess": [85, 86], "too": 85, "accept": [85, 86, 105, 106, 107, 108, 109], "pred": [85, 86, 104, 105, 106, 107, 108, 109, 110, 111], "scalar": [85, 86], "traub": [85, 133], "overcom": [85, 133], "flaw": [85, 133], "abil": [85, 86, 132], "discrimin": [85, 86], "rank": [85, 86], "geifman": [85, 86, 133], "el": [85, 86, 133], "yaniv": [85, 86, 133], "partial_comput": 86, "rc": 86, "num_bin": [87, 89], "l1": [87, 89], "ignore_index": [87, 89, 98], "validate_arg": [87, 89, 98], "nixon": [87, 133], "cvprw": [87, 133], "top_class": 88, "across": [88, 90, 93, 94, 99, 103], "3d": 88, "ie": 88, "previous": [90, 94, 99, 103], "nan": [91, 92], "risk_threshold": 92, "monoton": 92, "shannon": [94, 99], "pos_label": [95, 96], "posit": [95, 96], "recal": [95, 96, 131], "recall_level": 96, "fpr": 96, "anomali": 96, "seg": 96, "translat": 96, "conf": 96, "perez": [97, 133], "lebel": [97, 133], "alexandr": [97, 133], "le": [97, 133], "morvan": [97, 133], "marin": [97, 133], "varoquaux": [97, 133], "ga\u00ebl": [97, 133], "beyond": [97, 133], "accumul": [97, 121], "num_featur": 97, "top_k": 98, "multidim_averag": 98, "global": 98, "meanintersect": 98, "union": 98, "iou": 98, "intersect": 98, "miou": 98, "jensen": 99, "gjsd": 99, "clamp": 99, "appear": 99, "due": 99, "cov_threshold": 101, "log_": 104, "y_i": [104, 105, 106, 107, 108, 109, 110], "hat": [104, 105, 106, 107, 108, 109, 110], "unit": [105, 108], "km": [105, 108], "absolut": [105, 106, 109], "ima": 105, "sum_i": [105, 106, 107, 108, 109], "unit_factor": [105, 108], "mean_absolute_inverse_error": 105, "must": [105, 108, 125, 127, 128], "mm": [105, 108], "defaut": [105, 108], "maerel": 106, "arerel": 106, "rel_mean_absolute_error": 106, "big": [106, 107, 109, 110], "local": [106, 107, 109, 110], "planar": [106, 107, 109, 110], "guidanc": [106, 107, 109, 110], "monocular": [106, 107, 109, 110], "mserel": 107, "sre": 107, "rel_mean_squared_error": 107, "rmserel": 107, "multioutput": [107, 108], "ims": 108, "mean_squared_error": 108, "mselog": 109, "mse_log": 109, "emselog": 109, "lmbda": [110, 111], "invari": 110, "logarithm": 110, "david": [110, 129, 133], "eigen": 110, "christian": [110, 133], "puhrsch": 110, "rob": 110, "fergu": 110, "jin": 110, "han": 110, "lee": [110, 112, 133], "myung": 110, "kyu": 110, "dong": [110, 133], "wook": 110, "ko": 110, "il": 110, "hong": 110, "suh": 110, "d1": 111, "d2": 111, "d3": 111, "save_schedul": 112, "use_final_checkpoint": 112, "trajectori": 112, "hugh": [112, 133], "chen": [112, 133], "scott": [112, 133], "lundberg": [112, 133], "su": [112, 133], "eval_forward": [112, 116], "update_wrapp": [112, 113, 116], "exponenti": [113, 131], "move": 113, "on_batch": [114, 119], "constrain": 114, "declar": 114, "constructor": 114, "disabl": 114, "lastli": 114, "submodul": 114, "itself": 114, "cycle_start": [115, 116], "cycle_length": [115, 116], "izmailov": [115, 133], "podoprikhin": [115, 133], "garipov": [115, 133], "vetrov": [115, 133], "wilson": [115, 133], "wider": [115, 133], "optima": [115, 133], "uai": [115, 133], "diag_covari": 116, "max_num_model": 116, "var_clamp": 116, "minu": 116, "bn_updat": 116, "beginin": 116, "cycl": 116, "occur": 116, "attr": [116, 118], "diagon": 116, "covari": 116, "maddox": [116, 133], "wjmaddox": 116, "swa_gaussian": 116, "loader": 116, "bachnorm": 116, "initialize_stat": 116, "dictionari": 116, "coeffici": 116, "destin": 116, "keep_var": 116, "greater": 116, "pixel_regress": 118, "_deepensembl": 118, "singleton": 118, "less": 118, "while": [118, 131, 132], "balaji": [118, 133], "lakshminarayanan": [118, 133], "pritzel": [118, 133], "scalabl": [118, 133], "weight_subset": 120, "hessian_struct": 120, "kron": 120, "pred_typ": 120, "glm": 120, "link_approx": 120, "probit": 120, "optimize_prior_precis": 120, "laplac": 120, "structur": [120, 132], "hessian": 120, "matrix": [120, 122], "bridg": 120, "bridge_norm": 120, "daxberg": [120, 133], "redux": [120, 133], "effortless": [120, 133], "2021": [120, 133], "cuda": [121, 122, 123, 124], "tey": [121, 133], "azizpour": [121, 133], "smith": [121, 133], "popul": 121, "raise_count": 121, "counter": 121, "replace_lay": 121, "mcbatchnorm2d": 121, "reset_count": 121, "set_accumul": 121, "init_w": [122, 124], "init_b": [122, 124], "max_it": [122, 123, 124], "save_logit": [122, 123, 124], "progress": [122, 123, 124, 131], "bar": [122, 123, 124], "set_temperatur": [122, 123, 124], "val_w": [122, 124], "val_b": [122, 124], "init_v": 123, "ident": 125, "distanc": 125, "tau": 125, "cutmix": 125, "logsumexp": 125, "postprocess": 125, "cli": [125, 127, 128, 129], "anyth": [125, 127, 128], "save_feat": 125, "num_image_plot": 126, "dimension": [126, 127], "num_samples_to_plot": 128, "subsampl": 128, "consum": 128, "log_segmentation_plot": 128, "contribut": [129, 130], "mind": 129, "major": 129, "symmetri": 129, "emanuel": [129, 133], "aldea": [129, 133], "2024": [129, 133], "andrei": [129, 133], "bursuc": [129, 133], "severin": [129, 133], "dubuisson": [129, 133], "isabel": [129, 133], "bloch": [129, 133], "adrien": [129, 133], "lafag": [129, 132, 133], "enzo": [129, 133], "tartaglion": [129, 133], "geoffrei": [129, 133], "daniel": [129, 133], "jean": [129, 133], "marc": [129, 133], "martinez": [129, 133], "autonom": [129, 133], "drive": [129, 133], "xuanlong": [129, 133], "yu": [129, 133], "angel": 129, "tena": 129, "r\u00e9mi": 129, "kazmierczak": 129, "s\u00e9verin": 129, "filliat": 129, "bmvc": [129, 133], "pypi": 129, "quickstart": 129, "guid": [129, 132], "experi": [129, 130, 132], "scope": 129, "guidelin": 129, "search": 129, "latter": 130, "access": [130, 132], "git": 130, "cd": 130, "conda": 130, "activ": [130, 131], "latest": 130, "opencv": 130, "tabular": 130, "panda": 130, "aforement": 130, "mandatori": 130, "IN": 131, "wait": 131, "pointwis": 131, "multinoulli": 131, "belong": 131, "conceptu": 131, "known": 131, "trust": 131, "why": 131, "monitor": 132, "leverag": 132, "benefit": 132, "ligthn": 132, "custom": 132, "along": 132, "mymodel": 132, "uncalibr": 132, "begin": 132, "ts_": 132, "insur": 132, "cover": 132, "particular": 132, "prefer": 132, "pipelin": 132, "packed_resnet": 132, "might": 132, "actual": 132, "exhaust": 133, "cite": 133, "maximilian": 133, "arash": 133, "dimitrij": 133, "georg": 133, "julien": 133, "korai": 133, "daan": 133, "yarin": 133, "gal": 133, "zoubin": 133, "ghahramani": 133, "pavel": 133, "dmitrii": 133, "dmitri": 133, "andrew": 133, "gordon": 133, "weslei": 133, "snapshot": 133, "gao": 133, "huang": 133, "yixuan": 133, "geoff": 133, "zhuang": 133, "liu": 133, "john": 133, "hopcroft": 133, "kilian": 133, "yeme": 133, "wen": 133, "dustin": 133, "tran": 133, "jimmi": 133, "subnetwork": 133, "marton": 133, "havasi": 133, "rodolph": 133, "jenatton": 133, "stanislav": 133, "fort": 133, "jeremiah": 133, "zhe": 133, "jasper": 133, "snoek": 133, "dai": 133, "empir": 133, "hongyi": 133, "zhang": 133, "moustapha": 133, "ciss": 133, "dauphin": 133, "lopez": 133, "paz": 133, "surprisingli": 133, "francesco": 133, "pinto": 133, "harri": 133, "yang": 133, "ser": 133, "nam": 133, "lim": 133, "philip": 133, "torr": 133, "puneet": 133, "dokania": 133, "deng": 133, "bao": 133, "lanq": 133, "peilin": 133, "zhao": 133, "pheng": 133, "ann": 133, "heng": 133, "min": 133, "ling": 133, "openaccess": 133, "thecvf": 133, "cvpr2023": 133, "wang_on_the_pitfall_of_mixup_for_uncertainty_calibration_cvpr_2023_pap": 133, "__": 133, "tailor": 133, "quentin": 133, "bouniot": 133, "pavlo": 133, "mozharovskyi": 133, "florenc": 133, "alch\u00e9": 133, "buc": 133, "chuan": 133, "mathia": 133, "hossein": 133, "kevin": 133, "erik": 133, "agustinu": 133, "kristiadi": 133, "immer": 133, "runa": 133, "eschenhagen": 133, "matthia": 133, "bauer": 133, "philipp": 133, "hennig": 133, "tsung": 133, "yi": 133, "priya": 133, "ross": 133, "kaim": 133, "piotr": 133, "fr\u00e9d\u00e9ric": 133, "pennerath": 133, "brieuc": 133, "conan": 133, "guez": 133, "miguel": 133, "couceiro": 133, "rethink": 133, "incept": 133, "szegedi": 133, "vincent": 133, "vanhouck": 133, "sergei": 133, "ioff": 133, "jonathon": 133, "shlen": 133, "zbigniew": 133, "wojna": 133, "mahdi": 133, "pakdaman": 133, "gregori": 133, "milo": 133, "jeremi": 133, "mike": 133, "dusenberri": 133, "ghassen": 133, "jerfel": 133, "timothi": 133, "nguyen": 133, "linchuan": 133, "yonatan": 133, "ran": 133, "jeremia": 133, "till": 133, "bungert": 133, "carsten": 133, "l\u00fcth": 133, "michael": 133, "baumgartn": 133, "klau": 133, "maier": 133, "hein": 133, "lena": 133, "paul": 133, "jaeger": 133, "leon": 133, "yoshua": 133, "patrick": 133, "yaroslav": 133, "bulatov": 133, "alex": 133, "krizhevski": 133, "mit": 133, "tech": 133, "report": 133, "human": 133, "joshua": 133, "peterson": 133, "ruairidh": 133, "battledai": 133, "griffith": 133, "olga": 133, "russakovski": 133, "iccv": 133, "revisit": 133, "studi": 133, "annot": 133, "jiaheng": 133, "wei": 133, "zhaowei": 133, "zhu": 133, "hao": 133, "cheng": 133, "tongliang": 133, "gang": 133, "niu": 133, "natur": 133, "unsupervis": 133, "yuval": 133, "netzer": 133, "tao": 133, "coat": 133, "alessandro": 133, "bissacco": 133, "bo": 133, "wu": 133, "ng": 133, "workshop": 133, "2011": 133, "hierarch": 133, "databas": 133, "jia": 133, "richard": 133, "socher": 133, "kai": 133, "fei": 133, "2009": 133, "adversari": 133, "steven": 133, "basart": 133, "jacob": 133, "steinhardt": 133, "dawn": 133, "song": 133, "critic": 133, "analysi": 133, "saurav": 133, "kadavath": 133, "frank": 133, "evan": 133, "dorundo": 133, "rahul": 133, "desai": 133, "tyler": 133, "samyak": 133, "parajuli": 133, "haoqi": 133, "zhizhong": 133, "litong": 133, "feng": 133, "wayn": 133, "alina": 133, "hassan": 133, "rom": 133, "neil": 133, "alldrin": 133, "uijl": 133, "ivan": 133, "krasin": 133, "jordi": 133, "pont": 133, "tuset": 133, "shahab": 133, "kamali": 133, "ijcv": 133, "01437": 133, "residu": 133, "xiangyu": 133, "shaoq": 133, "ren": 133, "jian": 133, "zagoruyko": 133, "niko": 133, "komodaki": 133, "karen": 133, "simonyan": 133, "zisserman": 133, "filter": 133, "respons": 133, "elimin": 133, "saurabh": 133, "singh": 133, "shankar": 133, "krishnan": 133}, "objects": {"torch_uncertainty.baselines.classification": [[14, 0, 1, "", "ResNetBaseline"], [15, 0, 1, "", "VGGBaseline"], [16, 0, 1, "", "WideResNetBaseline"]], "torch_uncertainty.baselines.depth": [[17, 0, 1, "", "BTSBaseline"]], "torch_uncertainty.baselines.regression": [[18, 0, 1, "", "MLPBaseline"]], "torch_uncertainty.baselines.segmentation": [[19, 0, 1, "", "DeepLabBaseline"], [20, 0, 1, "", "SegFormerBaseline"]], "torch_uncertainty.datamodules": [[21, 0, 1, "", "BankMarketingDataModule"], [22, 0, 1, "", "CIFAR100DataModule"], [23, 0, 1, "", "CIFAR10DataModule"], [24, 0, 1, "", "DOTA2GamesDataModule"], [25, 0, 1, "", "HTRU2DataModule"], [26, 0, 1, "", "ImageNetDataModule"], [27, 0, 1, "", "MNISTDataModule"], [28, 0, 1, "", "OnlineShoppersDataModule"], [29, 0, 1, "", "SpamBaseDataModule"], [30, 0, 1, "", "TinyImageNetDataModule"], [31, 0, 1, "", "UCIRegressionDataModule"]], "torch_uncertainty.datamodules.CIFAR100DataModule": [[22, 1, 1, "", "test_dataloader"], [22, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.CIFAR10DataModule": [[23, 1, 1, "", "test_dataloader"], [23, 1, 1, "", "train_dataloader"]], "torch_uncertainty.datamodules.ImageNetDataModule": [[26, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.MNISTDataModule": [[27, 1, 1, "", "prepare_data"], [27, 1, 1, "", "test_dataloader"]], "torch_uncertainty.datamodules.TinyImageNetDataModule": [[30, 1, 1, "", "test_dataloader"], [30, 1, 1, "", "train_dataloader"], [30, 1, 1, "", "val_dataloader"]], "torch_uncertainty.datamodules.UCIRegressionDataModule": [[31, 1, 1, "", "prepare_data"], [31, 1, 1, "", "setup"]], "torch_uncertainty.datamodules.segmentation": [[32, 0, 1, "", "CamVidDataModule"], [33, 0, 1, "", "CityscapesDataModule"], [34, 0, 1, "", "MUADDataModule"]], "torch_uncertainty.datasets": [[35, 0, 1, "", "Fractals"], [36, 0, 1, "", "FrostImages"], [37, 0, 1, "", "KITTIDepth"], [38, 0, 1, "", "MUAD"], [39, 0, 1, "", "NYUv2"]], "torch_uncertainty.datasets.MUAD": [[38, 1, 1, "", "encode_target"]], "torch_uncertainty.datasets.classification": [[40, 0, 1, "", "CIFAR100C"], [41, 0, 1, "", "CIFAR100N"], [42, 0, 1, "", "CIFAR10C"], [43, 0, 1, "", "CIFAR10H"], [44, 0, 1, "", "CIFAR10N"], [45, 0, 1, "", "ImageNetA"], [46, 0, 1, "", "ImageNetC"], [47, 0, 1, "", "ImageNetO"], [48, 0, 1, "", "ImageNetR"], [49, 0, 1, "", "MNISTC"], [50, 0, 1, "", "NotMNIST"], [51, 0, 1, "", "OpenImageO"], [52, 0, 1, "", "TinyImageNet"], [53, 0, 1, "", "TinyImageNetC"]], "torch_uncertainty.datasets.classification.CIFAR10C": [[42, 1, 1, "", "download"], [42, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.MNISTC": [[49, 1, 1, "", "download"], [49, 1, 1, "", "make_dataset"]], "torch_uncertainty.datasets.classification.TinyImageNetC": [[53, 1, 1, "", "download"]], "torch_uncertainty.datasets.classification.uci": [[54, 0, 1, "", "BankMarketing"], [55, 0, 1, "", "DOTA2Games"], [56, 0, 1, "", "HTRU2"], [57, 0, 1, "", "OnlineShoppers"], [58, 0, 1, "", "SpamBase"]], "torch_uncertainty.datasets.classification.uci.BankMarketing": [[54, 1, 1, "", "download"]], "torch_uncertainty.datasets.classification.uci.DOTA2Games": [[55, 1, 1, "", "download"]], "torch_uncertainty.datasets.regression": [[59, 0, 1, "", "UCIRegression"]], "torch_uncertainty.datasets.regression.UCIRegression": [[59, 1, 1, "", "download"]], "torch_uncertainty.datasets.segmentation": [[60, 0, 1, "", "CamVid"], [61, 0, 1, "", "Cityscapes"]], "torch_uncertainty.datasets.segmentation.CamVid": [[60, 2, 1, "", "color_palette"], [60, 1, 1, "", "decode_target"], [60, 1, 1, "", "download"], [60, 1, 1, "", "encode_target"]], "torch_uncertainty.datasets.segmentation.Cityscapes": [[61, 2, 1, "", "color_palette"], [61, 1, 1, "", "decode_target"], [61, 1, 1, "", "encode_target"], [61, 1, 1, "", "plot_sample"]], "torch_uncertainty.layers": [[62, 0, 1, "", "BatchConv2d"], [63, 0, 1, "", "BatchLinear"], [64, 0, 1, "", "MaskedConv2d"], [65, 0, 1, "", "MaskedLinear"], [66, 0, 1, "", "PackedConv2d"], [67, 0, 1, "", "PackedLinear"]], "torch_uncertainty.layers.PackedConv2d": [[66, 2, 1, "", "bias"], [66, 2, 1, "", "weight"]], "torch_uncertainty.layers.bayesian": [[68, 0, 1, "", "BayesConv1d"], [69, 0, 1, "", "BayesConv2d"], [70, 0, 1, "", "BayesConv3d"], [71, 0, 1, "", "BayesLinear"], [72, 0, 1, "", "LPBNNConv2d"], [73, 0, 1, "", "LPBNNLinear"]], "torch_uncertainty.layers.bayesian.BayesLinear": [[71, 1, 1, "", "freeze"], [71, 1, 1, "", "sample"], [71, 1, 1, "", "unfreeze"]], "torch_uncertainty.losses": [[74, 0, 1, "", "BCEWithLogitsLSLoss"], [75, 0, 1, "", "BetaNLL"], [76, 0, 1, "", "ConfidencePenaltyLoss"], [77, 0, 1, "", "ConflictualLoss"], [78, 0, 1, "", "DECLoss"], [79, 0, 1, "", "DERLoss"], [80, 0, 1, "", "DistributionNLLLoss"], [81, 0, 1, "", "ELBOLoss"], [82, 0, 1, "", "FocalLoss"], [83, 0, 1, "", "KLDiv"]], "torch_uncertainty.losses.ConfidencePenaltyLoss": [[76, 1, 1, "", "forward"]], "torch_uncertainty.losses.ConflictualLoss": [[77, 1, 1, "", "forward"]], "torch_uncertainty.losses.DistributionNLLLoss": [[80, 1, 1, "", "forward"]], "torch_uncertainty.losses.ELBOLoss": [[81, 1, 1, "", "forward"]], "torch_uncertainty.metrics": [[84, 0, 1, "", "AUSE"]], "torch_uncertainty.metrics.AUSE": [[84, 1, 1, "", "compute"], [84, 1, 1, "", "plot"], [84, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification": [[85, 0, 1, "", "AUGRC"], [86, 0, 1, "", "AURC"], [87, 0, 1, "", "AdaptiveCalibrationError"], [88, 0, 1, "", "BrierScore"], [89, 0, 1, "", "CalibrationError"], [90, 0, 1, "", "CategoricalNLL"], [91, 0, 1, "", "CovAt5Risk"], [92, 0, 1, "", "CovAtxRisk"], [93, 0, 1, "", "Disagreement"], [94, 0, 1, "", "Entropy"], [95, 0, 1, "", "FPR95"], [96, 0, 1, "", "FPRx"], [97, 0, 1, "", "GroupingLoss"], [98, 0, 1, "", "MeanIntersectionOverUnion"], [99, 0, 1, "", "MutualInformation"], [100, 0, 1, "", "RiskAt80Cov"], [101, 0, 1, "", "RiskAtxCov"], [102, 0, 1, "", "VariationRatio"]], "torch_uncertainty.metrics.classification.AUGRC": [[85, 1, 1, "", "compute"], [85, 1, 1, "", "plot"]], "torch_uncertainty.metrics.classification.AURC": [[86, 1, 1, "", "compute"], [86, 1, 1, "", "partial_compute"], [86, 1, 1, "", "plot"], [86, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.BrierScore": [[88, 1, 1, "", "compute"], [88, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CategoricalNLL": [[90, 1, 1, "", "compute"], [90, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.CovAtxRisk": [[92, 1, 1, "", "compute"], [92, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Disagreement": [[93, 1, 1, "", "compute"], [93, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.Entropy": [[94, 1, 1, "", "compute"], [94, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.FPRx": [[96, 1, 1, "", "compute"], [96, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.GroupingLoss": [[97, 1, 1, "", "compute"], [97, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion": [[98, 1, 1, "", "compute"]], "torch_uncertainty.metrics.classification.MutualInformation": [[99, 1, 1, "", "compute"], [99, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.RiskAtxCov": [[101, 1, 1, "", "compute"], [101, 1, 1, "", "update"]], "torch_uncertainty.metrics.classification.VariationRatio": [[102, 1, 1, "", "compute"]], "torch_uncertainty.metrics.regression": [[103, 0, 1, "", "DistributionNLL"], [104, 0, 1, "", "Log10"], [105, 0, 1, "", "MeanAbsoluteErrorInverse"], [106, 0, 1, "", "MeanGTRelativeAbsoluteError"], [107, 0, 1, "", "MeanGTRelativeSquaredError"], [108, 0, 1, "", "MeanSquaredErrorInverse"], [109, 0, 1, "", "MeanSquaredLogError"], [110, 0, 1, "", "SILog"], [111, 0, 1, "", "ThresholdAccuracy"]], "torch_uncertainty.metrics.regression.DistributionNLL": [[103, 1, 1, "", "compute"], [103, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.Log10": [[104, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse": [[105, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError": [[106, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError": [[107, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse": [[108, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.MeanSquaredLogError": [[109, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.SILog": [[110, 1, 1, "", "compute"], [110, 1, 1, "", "update"]], "torch_uncertainty.metrics.regression.ThresholdAccuracy": [[111, 1, 1, "", "compute"], [111, 1, 1, "", "update"]], "torch_uncertainty.models": [[112, 0, 1, "", "CheckpointEnsemble"], [113, 0, 1, "", "EMA"], [114, 0, 1, "", "MCDropout"], [115, 0, 1, "", "SWA"], [116, 0, 1, "", "SWAG"], [117, 0, 1, "", "StochasticModel"], [118, 3, 1, "", "deep_ensembles"], [119, 3, 1, "", "mc_dropout"]], "torch_uncertainty.models.CheckpointEnsemble": [[112, 1, 1, "", "eval_forward"], [112, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.EMA": [[113, 1, 1, "", "update_wrapper"]], "torch_uncertainty.models.MCDropout": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "train"]], "torch_uncertainty.models.SWAG": [[116, 1, 1, "", "bn_update"], [116, 1, 1, "", "eval_forward"], [116, 1, 1, "", "initialize_stats"], [116, 1, 1, "", "sample"], [116, 1, 1, "", "state_dict"], [116, 1, 1, "", "update_wrapper"]], "torch_uncertainty.post_processing": [[120, 0, 1, "", "LaplaceApprox"], [121, 0, 1, "", "MCBatchNorm"], [122, 0, 1, "", "MatrixScaler"], [123, 0, 1, "", "TemperatureScaler"], [124, 0, 1, "", "VectorScaler"]], "torch_uncertainty.post_processing.MCBatchNorm": [[121, 1, 1, "", "fit"], [121, 1, 1, "", "raise_counters"], [121, 1, 1, "", "replace_layers"], [121, 1, 1, "", "reset_counters"], [121, 1, 1, "", "set_accumulate"]], "torch_uncertainty.post_processing.MatrixScaler": [[122, 1, 1, "", "fit"], [122, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.TemperatureScaler": [[123, 1, 1, "", "fit"], [123, 1, 1, "", "set_temperature"]], "torch_uncertainty.post_processing.VectorScaler": [[124, 1, 1, "", "fit"], [124, 1, 1, "", "set_temperature"]], "torch_uncertainty.routines": [[125, 0, 1, "", "ClassificationRoutine"], [126, 0, 1, "", "PixelRegressionRoutine"], [127, 0, 1, "", "RegressionRoutine"], [128, 0, 1, "", "SegmentationRoutine"]], "torch_uncertainty.routines.ClassificationRoutine": [[125, 1, 1, "", "forward"]], "torch_uncertainty.routines.PixelRegressionRoutine": [[126, 1, 1, "", "forward"]], "torch_uncertainty.routines.RegressionRoutine": [[127, 1, 1, "", "forward"]], "torch_uncertainty.routines.SegmentationRoutine": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "log_segmentation_plots"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": [0, 3, 4, 5, 6, 11, 131, 133], "routin": [0, 3, 5, 6, 8, 9, 132], "classif": [0, 6, 7, 131, 133], "segment": 0, "regress": [0, 5, 133], "pixelwis": 0, "baselin": 0, "monocular": 0, "depth": 0, "estim": 0, "layer": [0, 132, 133], "ensembl": [0, 7, 10, 133], "bayesian": [0, 3, 133], "model": [0, 3, 5, 6, 7, 8, 9, 11, 118, 119, 132, 133], "wrapper": [0, 6], "function": [0, 10], "class": 0, "metric": [0, 132, 133], "proper": 0, "score": 0, "out": 0, "distribut": 0, "detect": 0, "select": [0, 7], "calibr": [0, 11, 133], "divers": 0, "other": [0, 4, 132], "loss": [0, 3, 5, 6, 7, 8, 9, 10, 133], "post": [0, 13, 133], "process": [0, 13, 133], "method": [0, 13, 133], "scale": [0, 11, 133], "datamodul": [0, 11, 13], "uci": 0, "tabular": 0, "dataset": [0, 7, 10, 13, 133], "cross": [0, 133], "categori": 0, "tutori": 1, "comput": [2, 11, 134], "time": [2, 134], "train": [3, 5, 6, 7, 8, 9, 10, 132], "neural": [3, 131, 133], "network": [3, 131, 133], "three": 3, "minut": 3, "foreword": 3, "lenet": [3, 6, 8, 9], "us": [3, 5, 6, 8, 9, 132], "torchuncertainti": [3, 4, 5, 6, 7, 8, 9, 11, 13, 132], "lightn": [3, 5, 8, 9, 12, 132], "1": [3, 4, 5, 6, 7, 8, 9, 10, 11], "load": [3, 5, 6, 8, 9, 10, 11], "util": [3, 5, 6, 8, 9, 11], "2": [3, 4, 5, 6, 7, 8, 9, 10, 11], "The": [3, 5, 6, 8, 9, 13, 131], "optim": [3, 5, 6, 10], "recip": [3, 5], "3": [3, 4, 5, 6, 7, 8, 9, 10, 11], "creat": [3, 5, 6, 7, 8], "necessari": [3, 5, 6, 8], "variabl": [3, 5, 6, 8], "4": [3, 4, 5, 6, 7, 8, 9, 10, 11], "5": [3, 4, 5, 6, 8, 9, 10, 11], "gather": [3, 5, 6, 8, 9], "everyth": [3, 5, 6, 8, 9], "6": [3, 5, 6, 8, 11], "test": [3, 5, 6, 8, 9, 10], "corrupt": 4, "imag": [4, 10], "benchmark": 4, "robust": 4, "nois": 4, "blur": 4, "weather": 4, "unus": 4, "deep": [5, 6, 7, 133], "evidenti": [5, 6, 133], "toi": [5, 6], "exampl": [5, 6, 132], "mlp": 5, "der": 5, "pytorch": [5, 8, 9, 132], "dec": 6, "improv": [7, 11], "paramet": 7, "effici": 7, "pack": [7, 10, 133], "download": 7, "instanti": 7, "visual": 7, "an": [7, 10], "from": [7, 10, 11, 130], "To": 7, "go": 7, "further": 7, "more": [7, 132], "concept": 7, "uncertainti": [7, 129, 131, 132, 133], "ml": 7, "group": [7, 133], "mont": [8, 9, 133], "carlo": [8, 9, 133], "batch": [8, 133], "normal": [8, 10, 133], "mcbn": 8, "wrap": 8, "mcbatchnorm": [8, 121], "dropout": [9, 133], "mc": 9, "defin": [9, 10], "trainer": 9, "standard": 10, "classifi": 10, "cifar10": 10, "data": [10, 133], "top": 11, "label": [11, 133], "temperatur": [11, 133], "": [11, 132], "hf": 11, "set": 11, "up": 11, "dataload": 11, "iter": 11, "ec": 11, "fit": 11, "scaler": 11, "again": 11, "note": 11, "cli": [12, 132], "guid": 12, "introduct": [12, 131], "configur": 12, "file": 12, "experi": 12, "folder": 12, "usag": [12, 132], "contribut": 13, "scope": 13, "common": 13, "guidelin": 13, "clean": 13, "develop": 13, "instal": [13, 129, 130], "build": [13, 132], "document": 13, "local": 13, "licens": 13, "resnetbaselin": 14, "vggbaselin": 15, "wideresnetbaselin": 16, "btsbaselin": 17, "mlpbaselin": 18, "deeplabbaselin": 19, "segformerbaselin": 20, "bankmarketingdatamodul": 21, "cifar100datamodul": 22, "cifar10datamodul": 23, "dota2gamesdatamodul": 24, "htru2datamodul": 25, "imagenetdatamodul": 26, "mnistdatamodul": 27, "onlineshoppersdatamodul": 28, "spambasedatamodul": 29, "tinyimagenetdatamodul": 30, "uciregressiondatamodul": 31, "camviddatamodul": 32, "cityscapesdatamodul": 33, "muaddatamodul": 34, "fractal": 35, "frostimag": 36, "kittidepth": 37, "muad": [38, 133], "nyuv2": 39, "cifar100c": 40, "cifar100n": 41, "cifar10c": 42, "cifar10h": 43, "cifar10n": 44, "imageneta": 45, "imagenetc": 46, "imageneto": 47, "imagenetr": 48, "mnistc": 49, "notmnist": 50, "openimageo": 51, "tinyimagenet": 52, "tinyimagenetc": 53, "bankmarket": 54, "dota2gam": 55, "htru2": 56, "onlineshopp": 57, "spambas": 58, "uciregress": 59, "camvid": 60, "cityscap": 61, "batchconv2d": 62, "batchlinear": 63, "maskedconv2d": 64, "maskedlinear": 65, "packedconv2d": 66, "packedlinear": 67, "bayesconv1d": 68, "bayesconv2d": 69, "bayesconv3d": 70, "bayeslinear": 71, "lpbnnconv2d": 72, "lpbnnlinear": 73, "bcewithlogitslsloss": 74, "betanl": 75, "confidencepenaltyloss": 76, "conflictualloss": 77, "decloss": 78, "derloss": 79, "distributionnllloss": 80, "elboloss": 81, "focalloss": 82, "kldiv": 83, "aus": 84, "augrc": 85, "aurc": 86, "adaptivecalibrationerror": 87, "brierscor": 88, "calibrationerror": 89, "categoricalnl": 90, "covat5risk": 91, "covatxrisk": 92, "disagr": 93, "entropi": [94, 133], "fpr95": 95, "fprx": 96, "groupingloss": 97, "meanintersectionoverunion": 98, "mutualinform": 99, "riskat80cov": 100, "riskatxcov": 101, "variationratio": 102, "distributionnl": 103, "log10": 104, "meanabsoluteerrorinvers": 105, "meangtrelativeabsoluteerror": 106, "meangtrelativesquarederror": 107, "meansquarederrorinvers": 108, "meansquaredlogerror": 109, "silog": 110, "thresholdaccuraci": 111, "checkpointensembl": [112, 133], "ema": 113, "mcdropout": 114, "swa": 115, "swag": 116, "stochasticmodel": 117, "torch_uncertainti": [118, 119], "deep_ensembl": 118, "mc_dropout": 119, "laplaceapprox": 120, "matrixscal": 122, "temperaturescal": 123, "vectorscal": 124, "classificationroutin": 125, "pixelregressionroutin": 126, "regressionroutin": 127, "segmentationroutin": 128, "welcom": 129, "torch": 129, "offici": 129, "implement": 129, "content": 129, "indic": 129, "tabl": 129, "pypi": 130, "sourc": 130, "option": 130, "short": 131, "background": 131, "overconfid": 131, "quickstart": 132, "awar": 132, "your": 132, "first": 132, "tool": 132, "procedur": 132, "base": 132, "beta": 133, "nll": 133, "variat": 133, "infer": 133, "stochast": 133, "weight": 133, "averag": 133, "gaussian": 133, "snapshotensembl": 133, "batchensembl": 133, "masksembl": 133, "mimo": 133, "lpbnn": 133, "augment": 133, "mixup": 133, "regmixup": 133, "mixupio": 133, "warp": 133, "vector": 133, "matrix": 133, "laplac": 133, "approxim": 133, "focal": 133, "conflictu": 133, "binari": 133, "logit": 133, "smooth": 133, "expect": 133, "error": 133, "adapt": 133, "area": 133, "under": 133, "risk": 133, "coverag": 133, "curv": 133, "gener": 133, "mnist": 133, "c": 133, "Not": 133, "cifar": 133, "10": 133, "100": 133, "tini": 133, "imagenet": 133, "h": 133, "n": 133, "svhn": 133, "A": 133, "0": 133, "r": 133, "textur": 133, "openimag": 133, "o": 133, "architectur": 133, "resnet": 133, "wide": 133, "vgg": 133}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_codeautolink": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Routines": [[0, "routines"]], "Classification": [[0, "classification"], [0, "id1"], [0, "id4"], [0, "id8"], [0, "id11"]], "Segmentation": [[0, "segmentation"], [0, "id3"], [0, "id6"], [0, "id10"], [0, "id14"]], "Regression": [[0, "regression"], [0, "id2"], [0, "id5"], [0, "id9"], [0, "id13"]], "Pixelwise Regression": [[0, "pixelwise-regression"]], "Baselines": [[0, "baselines"]], "Monocular Depth Estimation": [[0, "monocular-depth-estimation"]], "Layers": [[0, "layers"], [133, "layers"]], "Ensemble layers": [[0, "ensemble-layers"]], "Bayesian layers": [[0, "bayesian-layers"]], "Models": [[0, "models"]], "Wrappers": [[0, "wrappers"]], "Functions": [[0, "functions"]], "Classes": [[0, "classes"]], "Metrics": [[0, "metrics"], [133, "metrics"]], "Proper Scores": [[0, "proper-scores"]], "Out-of-Distribution Detection": [[0, "out-of-distribution-detection"]], "Selective Classification": [[0, "selective-classification"], [7, "selective-classification"]], "Calibration": [[0, "calibration"]], "Diversity": [[0, "diversity"]], "Others": [[0, "others"], [0, "id7"]], "Losses": [[0, "losses"], [133, "losses"]], "Post-Processing Methods": [[0, "post-processing-methods"], [133, "post-processing-methods"]], "Scaling Methods": [[0, "scaling-methods"]], "Datamodules": [[0, "datamodules"]], "UCI Tabular Classification": [[0, "uci-tabular-classification"], [0, "id12"]], "Datasets": [[0, "datasets"], [133, "datasets"]], "Others & Cross-Categories": [[0, "others-cross-categories"]], "Tutorials": [[1, "tutorials"]], "Computation times": [[2, "computation-times"], [134, "computation-times"]], "Train a Bayesian Neural Network in Three Minutes": [[3, "train-a-bayesian-neural-network-in-three-minutes"]], "Foreword on Bayesian Neural Networks": [[3, "foreword-on-bayesian-neural-networks"]], "Training a Bayesian LeNet using TorchUncertainty models and Lightning": [[3, "training-a-bayesian-lenet-using-torchuncertainty-models-and-lightning"]], "1. Loading the utilities": [[3, "loading-the-utilities"], [5, "loading-the-utilities"], [6, "loading-the-utilities"], [8, "loading-the-utilities"], [9, "loading-the-utilities"]], "2. The Optimization Recipe": [[3, "the-optimization-recipe"], [5, "the-optimization-recipe"]], "3. Creating the necessary variables": [[3, "creating-the-necessary-variables"], [5, "creating-the-necessary-variables"], [6, "creating-the-necessary-variables"]], "4. The Loss and the Training Routine": [[3, "the-loss-and-the-training-routine"], [5, "the-loss-and-the-training-routine"], [6, "the-loss-and-the-training-routine"]], "5. Gathering Everything and Training the Model": [[3, "gathering-everything-and-training-the-model"], [5, "gathering-everything-and-training-the-model"], [6, "gathering-everything-and-training-the-model"]], "6. Testing the Model": [[3, "testing-the-model"], [5, "testing-the-model"], [6, "testing-the-model"], [8, "testing-the-model"]], "References": [[3, "references"], [6, "references"], [11, "references"], [131, "references"], [133, "references"]], "Corrupting Images with TorchUncertainty to Benchmark Robustness": [[4, "corrupting-images-with-torchuncertainty-to-benchmark-robustness"]], "1. Noise Corruptions": [[4, "noise-corruptions"]], "2. Blur Corruptions": [[4, "blur-corruptions"]], "3. Weather Corruptions": [[4, "weather-corruptions"]], "4. Other Corruptions": [[4, "other-corruptions"]], "5. Unused Corruptions": [[4, "unused-corruptions"]], "Reference": [[4, "reference"], [5, "reference"]], "Deep Evidential Regression on a Toy Example": [[5, "deep-evidential-regression-on-a-toy-example"]], "Training a MLP with DER using TorchUncertainty models and PyTorch Lightning": [[5, "training-a-mlp-with-der-using-torchuncertainty-models-and-pytorch-lightning"]], "Deep Evidential Classification on a Toy Example": [[6, "deep-evidential-classification-on-a-toy-example"]], "Training a LeNet with DEC using TorchUncertainty models": [[6, "training-a-lenet-with-dec-using-torchuncertainty-models"]], "2. Creating the Optimizer Wrapper": [[6, "creating-the-optimizer-wrapper"]], "Improved Ensemble parameter-efficiency with Packed-Ensembles": [[7, "improved-ensemble-parameter-efficiency-with-packed-ensembles"]], "1. Download, instantiate and visualize the datasets": [[7, "download-instantiate-and-visualize-the-datasets"]], "2. Create & train the model": [[7, "create-train-the-model"]], "3. Training an ensemble of models with TorchUncertainty": [[7, "training-an-ensemble-of-models-with-torchuncertainty"]], "4. From Deep Ensembles to Packed-Ensembles": [[7, "from-deep-ensembles-to-packed-ensembles"]], "To Go Further & More Concepts of Uncertainty in ML": [[7, "to-go-further-more-concepts-of-uncertainty-in-ml"]], "Grouping Loss": [[7, "grouping-loss"], [133, "grouping-loss"]], "Training a LeNet with Monte Carlo Batch Normalization": [[8, "training-a-lenet-with-monte-carlo-batch-normalization"]], "Training a LeNet with MCBN using TorchUncertainty models and PyTorch Lightning": [[8, "training-a-lenet-with-mcbn-using-torchuncertainty-models-and-pytorch-lightning"]], "2. Creating the necessary variables": [[8, "creating-the-necessary-variables"]], "3. The Loss and the Training Routine": [[8, "the-loss-and-the-training-routine"], [9, "the-loss-and-the-training-routine"]], "4. Gathering Everything and Training the Model": [[8, "gathering-everything-and-training-the-model"], [9, "gathering-everything-and-training-the-model"]], "5. Wrapping the Model in a MCBatchNorm": [[8, "wrapping-the-model-in-a-mcbatchnorm"]], "Training a LeNet with Monte-Carlo Dropout": [[9, "training-a-lenet-with-monte-carlo-dropout"]], "Training a LeNet with MC Dropout using TorchUncertainty models and PyTorch Lightning": [[9, "training-a-lenet-with-mc-dropout-using-torchuncertainty-models-and-pytorch-lightning"]], "2. Defining the Model and the Trainer": [[9, "defining-the-model-and-the-trainer"]], "5. Testing the Model": [[9, "testing-the-model"]], "From a Standard Classifier to a Packed-Ensemble": [[10, "from-a-standard-classifier-to-a-packed-ensemble"]], "Dataset": [[10, "dataset"]], "Training an image Packed-Ensemble classifier": [[10, "training-an-image-packed-ensemble-classifier"]], "1. Load and normalize CIFAR10": [[10, "load-and-normalize-cifar10"]], "2. Define a Packed-Ensemble from a standard classifier": [[10, "define-a-packed-ensemble-from-a-standard-classifier"]], "3. Define a Loss function and optimizer": [[10, "define-a-loss-function-and-optimizer"]], "4. Train the Packed-Ensemble on the training data": [[10, "train-the-packed-ensemble-on-the-training-data"]], "5. Test the Packed-Ensemble on the test data": [[10, "test-the-packed-ensemble-on-the-test-data"]], "Improve Top-label Calibration with Temperature Scaling": [[11, "improve-top-label-calibration-with-temperature-scaling"]], "1. Loading the Utilities": [[11, "loading-the-utilities"]], "2. Loading a model from TorchUncertainty\u2019s HF": [[11, "loading-a-model-from-torchuncertainty-s-hf"]], "3. Setting up the Datamodule and Dataloaders": [[11, "setting-up-the-datamodule-and-dataloaders"]], "4. Iterating on the Dataloader and Computing the ECE": [[11, "iterating-on-the-dataloader-and-computing-the-ece"]], "5. Fitting the Scaler to Improve the Calibration": [[11, "fitting-the-scaler-to-improve-the-calibration"]], "6. Iterating Again to Compute the Improved ECE": [[11, "iterating-again-to-compute-the-improved-ece"]], "Notes": [[11, "notes"]], "CLI Guide": [[12, "cli-guide"]], "Introduction to the Lightning CLI": [[12, "introduction-to-the-lightning-cli"]], "Configuration files": [[12, "configuration-files"]], "Experiment folder usage": [[12, "experiment-folder-usage"]], "Contributing": [[13, "contributing"]], "The scope of TorchUncertainty": [[13, "the-scope-of-torchuncertainty"]], "Common guidelines": [[13, "common-guidelines"]], "Clean development install of TorchUncertainty": [[13, "clean-development-install-of-torchuncertainty"]], "Build the documentation locally": [[13, "build-the-documentation-locally"]], "Guidelines": [[13, "guidelines"]], "Datasets & Datamodules": [[13, "datasets-datamodules"]], "Post-processing methods": [[13, "post-processing-methods"]], "License": [[13, "license"]], "ResNetBaseline": [[14, "resnetbaseline"]], "VGGBaseline": [[15, "vggbaseline"]], "WideResNetBaseline": [[16, "wideresnetbaseline"]], "BTSBaseline": [[17, "btsbaseline"]], "MLPBaseline": [[18, "mlpbaseline"]], "DeepLabBaseline": [[19, "deeplabbaseline"]], "SegFormerBaseline": [[20, "segformerbaseline"]], "BankMarketingDataModule": [[21, "bankmarketingdatamodule"]], "CIFAR100DataModule": [[22, "cifar100datamodule"]], "CIFAR10DataModule": [[23, "cifar10datamodule"]], "DOTA2GamesDataModule": [[24, "dota2gamesdatamodule"]], "HTRU2DataModule": [[25, "htru2datamodule"]], "ImageNetDataModule": [[26, "imagenetdatamodule"]], "MNISTDataModule": [[27, "mnistdatamodule"]], "OnlineShoppersDataModule": [[28, "onlineshoppersdatamodule"]], "SpamBaseDataModule": [[29, "spambasedatamodule"]], "TinyImageNetDataModule": [[30, "tinyimagenetdatamodule"]], "UCIRegressionDataModule": [[31, "uciregressiondatamodule"]], "CamVidDataModule": [[32, "camviddatamodule"]], "CityscapesDataModule": [[33, "cityscapesdatamodule"]], "MUADDataModule": [[34, "muaddatamodule"]], "Fractals": [[35, "fractals"]], "FrostImages": [[36, "frostimages"]], "KITTIDepth": [[37, "kittidepth"]], "MUAD": [[38, "muad"], [133, "muad"]], "NYUv2": [[39, "nyuv2"]], "CIFAR100C": [[40, "cifar100c"]], "CIFAR100N": [[41, "cifar100n"]], "CIFAR10C": [[42, "cifar10c"]], "CIFAR10H": [[43, "cifar10h"]], "CIFAR10N": [[44, "cifar10n"]], "ImageNetA": [[45, "imageneta"]], "ImageNetC": [[46, "imagenetc"]], "ImageNetO": [[47, "imageneto"]], "ImageNetR": [[48, "imagenetr"]], "MNISTC": [[49, "mnistc"]], "NotMNIST": [[50, "notmnist"]], "OpenImageO": [[51, "openimageo"]], "TinyImageNet": [[52, "tinyimagenet"]], "TinyImageNetC": [[53, "tinyimagenetc"]], "BankMarketing": [[54, "bankmarketing"]], "DOTA2Games": [[55, "dota2games"]], "HTRU2": [[56, "htru2"]], "OnlineShoppers": [[57, "onlineshoppers"]], "SpamBase": [[58, "spambase"]], "UCIRegression": [[59, "uciregression"]], "CamVid": [[60, "camvid"]], "Cityscapes": [[61, "cityscapes"]], "BatchConv2d": [[62, "batchconv2d"]], "BatchLinear": [[63, "batchlinear"]], "MaskedConv2d": [[64, "maskedconv2d"]], "MaskedLinear": [[65, "maskedlinear"]], "PackedConv2d": [[66, "packedconv2d"]], "PackedLinear": [[67, "packedlinear"]], "BayesConv1d": [[68, "bayesconv1d"]], "BayesConv2d": [[69, "bayesconv2d"]], "BayesConv3d": [[70, "bayesconv3d"]], "BayesLinear": [[71, "bayeslinear"]], "LPBNNConv2d": [[72, "lpbnnconv2d"]], "LPBNNLinear": [[73, "lpbnnlinear"]], "BCEWithLogitsLSLoss": [[74, "bcewithlogitslsloss"]], "BetaNLL": [[75, "betanll"]], "ConfidencePenaltyLoss": [[76, "confidencepenaltyloss"]], "ConflictualLoss": [[77, "conflictualloss"]], "DECLoss": [[78, "decloss"]], "DERLoss": [[79, "derloss"]], "DistributionNLLLoss": [[80, "distributionnllloss"]], "ELBOLoss": [[81, "elboloss"]], "FocalLoss": [[82, "focalloss"]], "KLDiv": [[83, "kldiv"]], "AUSE": [[84, "ause"]], "AUGRC": [[85, "augrc"]], "AURC": [[86, "aurc"]], "AdaptiveCalibrationError": [[87, "adaptivecalibrationerror"]], "BrierScore": [[88, "brierscore"]], "CalibrationError": [[89, "calibrationerror"]], "CategoricalNLL": [[90, "categoricalnll"]], "CovAt5Risk": [[91, "covat5risk"]], "CovAtxRisk": [[92, "covatxrisk"]], "Disagreement": [[93, "disagreement"]], "Entropy": [[94, "entropy"]], "FPR95": [[95, "fpr95"]], "FPRx": [[96, "fprx"]], "GroupingLoss": [[97, "groupingloss"]], "MeanIntersectionOverUnion": [[98, "meanintersectionoverunion"]], "MutualInformation": [[99, "mutualinformation"]], "RiskAt80Cov": [[100, "riskat80cov"]], "RiskAtxCov": [[101, "riskatxcov"]], "VariationRatio": [[102, "variationratio"]], "DistributionNLL": [[103, "distributionnll"]], "Log10": [[104, "log10"]], "MeanAbsoluteErrorInverse": [[105, "meanabsoluteerrorinverse"]], "MeanGTRelativeAbsoluteError": [[106, "meangtrelativeabsoluteerror"]], "MeanGTRelativeSquaredError": [[107, "meangtrelativesquarederror"]], "MeanSquaredErrorInverse": [[108, "meansquarederrorinverse"]], "MeanSquaredLogError": [[109, "meansquaredlogerror"]], "SILog": [[110, "silog"]], "ThresholdAccuracy": [[111, "thresholdaccuracy"]], "CheckpointEnsemble": [[112, "checkpointensemble"], [133, "checkpointensemble"]], "EMA": [[113, "ema"]], "MCDropout": [[114, "mcdropout"]], "SWA": [[115, "swa"]], "SWAG": [[116, "swag"]], "StochasticModel": [[117, "stochasticmodel"]], "torch_uncertainty.models.deep_ensembles": [[118, "torch-uncertainty-models-deep-ensembles"]], "torch_uncertainty.models.mc_dropout": [[119, "torch-uncertainty-models-mc-dropout"]], "LaplaceApprox": [[120, "laplaceapprox"]], "MCBatchNorm": [[121, "mcbatchnorm"]], "MatrixScaler": [[122, "matrixscaler"]], "TemperatureScaler": [[123, "temperaturescaler"]], "VectorScaler": [[124, "vectorscaler"]], "ClassificationRoutine": [[125, "classificationroutine"]], "PixelRegressionRoutine": [[126, "pixelregressionroutine"]], "RegressionRoutine": [[127, "regressionroutine"]], "SegmentationRoutine": [[128, "segmentationroutine"]], "Welcome to Torch Uncertainty": [[129, "welcome-to-torch-uncertainty"]], "Installation": [[129, "installation"], [130, "installation"]], "Official Implementations": [[129, "official-implementations"]], "Contents:": [[129, null]], "Indices and tables": [[129, "indices-and-tables"]], "From PyPI": [[130, "from-pypi"]], "From source": [[130, "from-source"]], "Options": [[130, "options"]], "Introduction to Classification Uncertainty": [[131, "introduction-to-classification-uncertainty"]], "Short Background": [[131, "short-background"]], "The Overconfidence of Neural Networks": [[131, "the-overconfidence-of-neural-networks"]], "Quickstart": [[132, "quickstart"]], "Training with TorchUncertainty\u2019s Uncertainty-aware Routines": [[132, "training-with-torchuncertainty-s-uncertainty-aware-routines"]], "Building your First Routine": [[132, "building-your-first-routine"]], "Training with the Routine": [[132, "training-with-the-routine"]], "More metrics": [[132, "more-metrics"]], "Using the Lightning CLI tool": [[132, "using-the-lightning-cli-tool"]], "Procedure": [[132, "procedure"], [132, "id1"], [132, "id3"]], "Example": [[132, "example"], [132, "id2"], [132, "id4"]], "Using the PyTorch-based models": [[132, "using-the-pytorch-based-models"]], "Using the PyTorch-based layers": [[132, "using-the-pytorch-based-layers"]], "Other usage": [[132, "other-usage"]], "Uncertainty Models": [[133, "uncertainty-models"]], "Deep Evidential Classification": [[133, "deep-evidential-classification"]], "Beta NLL in Deep Regression": [[133, "beta-nll-in-deep-regression"]], "Deep Evidential Regression": [[133, "deep-evidential-regression"]], "Variational Inference Bayesian Neural Networks": [[133, "variational-inference-bayesian-neural-networks"]], "Deep Ensembles": [[133, "deep-ensembles"]], "Monte-Carlo Dropout": [[133, "monte-carlo-dropout"]], "Stochastic Weight Averaging": [[133, "stochastic-weight-averaging"]], "Stochastic Weight Averaging Gaussian": [[133, "stochastic-weight-averaging-gaussian"]], "SnapshotEnsemble": [[133, "snapshotensemble"]], "BatchEnsemble": [[133, "batchensemble"]], "Masksembles": [[133, "masksembles"]], "MIMO": [[133, "mimo"]], "Packed-Ensembles": [[133, "packed-ensembles"]], "LPBNN": [[133, "lpbnn"]], "Data Augmentation Methods": [[133, "data-augmentation-methods"]], "Mixup": [[133, "mixup"]], "RegMixup": [[133, "regmixup"]], "MixupIO": [[133, "mixupio"]], "Warping Mixup": [[133, "warping-mixup"]], "Temperature, Vector, & Matrix scaling": [[133, "temperature-vector-matrix-scaling"]], "Monte-Carlo Batch Normalization": [[133, "monte-carlo-batch-normalization"]], "Laplace Approximation": [[133, "laplace-approximation"]], "Focal Loss": [[133, "focal-loss"]], "Conflictual Loss": [[133, "conflictual-loss"]], "Binary Cross-Entropy with Logits Loss with Label Smoothing": [[133, "binary-cross-entropy-with-logits-loss-with-label-smoothing"]], "Expected Calibration Error": [[133, "expected-calibration-error"]], "Adaptive Calibration Error": [[133, "adaptive-calibration-error"]], "Area Under the Risk-Coverage curve": [[133, "area-under-the-risk-coverage-curve"]], "Area Under the Generalized Risk-Coverage curve": [[133, "area-under-the-generalized-risk-coverage-curve"]], "MNIST": [[133, "mnist"]], "MNIST-C": [[133, "mnist-c"]], "Not-MNIST": [[133, "not-mnist"]], "CIFAR-10 & CIFAR-100": [[133, "cifar-10-cifar-100"]], "CIFAR-C, Tiny-ImageNet-C, ImageNet-C": [[133, "cifar-c-tiny-imagenet-c-imagenet-c"]], "CIFAR-10 H": [[133, "cifar-10-h"]], "CIFAR-10 N / CIFAR-100 N": [[133, "cifar-10-n-cifar-100-n"]], "SVHN": [[133, "svhn"]], "ImageNet": [[133, "imagenet"]], "ImageNet-A & ImageNet-0": [[133, "imagenet-a-imagenet-0"]], "ImageNet-R": [[133, "imagenet-r"]], "Textures": [[133, "textures"]], "OpenImage-O": [[133, "openimage-o"]], "Architectures": [[133, "architectures"]], "ResNet": [[133, "resnet"]], "Wide-ResNet": [[133, "wide-resnet"]], "VGG": [[133, "vgg"]]}, "indexentries": {"resnetbaseline (class in torch_uncertainty.baselines.classification)": [[14, "torch_uncertainty.baselines.classification.ResNetBaseline"]], "vggbaseline (class in torch_uncertainty.baselines.classification)": [[15, "torch_uncertainty.baselines.classification.VGGBaseline"]], "wideresnetbaseline (class in torch_uncertainty.baselines.classification)": [[16, "torch_uncertainty.baselines.classification.WideResNetBaseline"]], "btsbaseline (class in torch_uncertainty.baselines.depth)": [[17, "torch_uncertainty.baselines.depth.BTSBaseline"]], "mlpbaseline (class in torch_uncertainty.baselines.regression)": [[18, "torch_uncertainty.baselines.regression.MLPBaseline"]], "deeplabbaseline (class in torch_uncertainty.baselines.segmentation)": [[19, "torch_uncertainty.baselines.segmentation.DeepLabBaseline"]], "segformerbaseline (class in torch_uncertainty.baselines.segmentation)": [[20, "torch_uncertainty.baselines.segmentation.SegFormerBaseline"]], "bankmarketingdatamodule (class in torch_uncertainty.datamodules)": [[21, "torch_uncertainty.datamodules.BankMarketingDataModule"]], "cifar100datamodule (class in torch_uncertainty.datamodules)": [[22, "torch_uncertainty.datamodules.CIFAR100DataModule"]], "test_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[22, "torch_uncertainty.datamodules.CIFAR100DataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.cifar100datamodule method)": [[22, "torch_uncertainty.datamodules.CIFAR100DataModule.train_dataloader"]], "cifar10datamodule (class in torch_uncertainty.datamodules)": [[23, "torch_uncertainty.datamodules.CIFAR10DataModule"]], "test_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[23, "torch_uncertainty.datamodules.CIFAR10DataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.cifar10datamodule method)": [[23, "torch_uncertainty.datamodules.CIFAR10DataModule.train_dataloader"]], "dota2gamesdatamodule (class in torch_uncertainty.datamodules)": [[24, "torch_uncertainty.datamodules.DOTA2GamesDataModule"]], "htru2datamodule (class in torch_uncertainty.datamodules)": [[25, "torch_uncertainty.datamodules.HTRU2DataModule"]], "imagenetdatamodule (class in torch_uncertainty.datamodules)": [[26, "torch_uncertainty.datamodules.ImageNetDataModule"]], "test_dataloader() (torch_uncertainty.datamodules.imagenetdatamodule method)": [[26, "torch_uncertainty.datamodules.ImageNetDataModule.test_dataloader"]], "mnistdatamodule (class in torch_uncertainty.datamodules)": [[27, "torch_uncertainty.datamodules.MNISTDataModule"]], "prepare_data() (torch_uncertainty.datamodules.mnistdatamodule method)": [[27, "torch_uncertainty.datamodules.MNISTDataModule.prepare_data"]], "test_dataloader() (torch_uncertainty.datamodules.mnistdatamodule method)": [[27, "torch_uncertainty.datamodules.MNISTDataModule.test_dataloader"]], "onlineshoppersdatamodule (class in torch_uncertainty.datamodules)": [[28, "torch_uncertainty.datamodules.OnlineShoppersDataModule"]], "spambasedatamodule (class in torch_uncertainty.datamodules)": [[29, "torch_uncertainty.datamodules.SpamBaseDataModule"]], "tinyimagenetdatamodule (class in torch_uncertainty.datamodules)": [[30, "torch_uncertainty.datamodules.TinyImageNetDataModule"]], "test_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[30, "torch_uncertainty.datamodules.TinyImageNetDataModule.test_dataloader"]], "train_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[30, "torch_uncertainty.datamodules.TinyImageNetDataModule.train_dataloader"]], "val_dataloader() (torch_uncertainty.datamodules.tinyimagenetdatamodule method)": [[30, "torch_uncertainty.datamodules.TinyImageNetDataModule.val_dataloader"]], "uciregressiondatamodule (class in torch_uncertainty.datamodules)": [[31, "torch_uncertainty.datamodules.UCIRegressionDataModule"]], "prepare_data() (torch_uncertainty.datamodules.uciregressiondatamodule method)": [[31, "torch_uncertainty.datamodules.UCIRegressionDataModule.prepare_data"]], "setup() (torch_uncertainty.datamodules.uciregressiondatamodule method)": [[31, "torch_uncertainty.datamodules.UCIRegressionDataModule.setup"]], "camviddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[32, "torch_uncertainty.datamodules.segmentation.CamVidDataModule"]], "cityscapesdatamodule (class in torch_uncertainty.datamodules.segmentation)": [[33, "torch_uncertainty.datamodules.segmentation.CityscapesDataModule"]], "muaddatamodule (class in torch_uncertainty.datamodules.segmentation)": [[34, "torch_uncertainty.datamodules.segmentation.MUADDataModule"]], "fractals (class in torch_uncertainty.datasets)": [[35, "torch_uncertainty.datasets.Fractals"]], "frostimages (class in torch_uncertainty.datasets)": [[36, "torch_uncertainty.datasets.FrostImages"]], "kittidepth (class in torch_uncertainty.datasets)": [[37, "torch_uncertainty.datasets.KITTIDepth"]], "muad (class in torch_uncertainty.datasets)": [[38, "torch_uncertainty.datasets.MUAD"]], "encode_target() (torch_uncertainty.datasets.muad method)": [[38, "torch_uncertainty.datasets.MUAD.encode_target"]], "nyuv2 (class in torch_uncertainty.datasets)": [[39, "torch_uncertainty.datasets.NYUv2"]], "cifar100c (class in torch_uncertainty.datasets.classification)": [[40, "torch_uncertainty.datasets.classification.CIFAR100C"]], "cifar100n (class in torch_uncertainty.datasets.classification)": [[41, "torch_uncertainty.datasets.classification.CIFAR100N"]], "cifar10c (class in torch_uncertainty.datasets.classification)": [[42, "torch_uncertainty.datasets.classification.CIFAR10C"]], "download() (torch_uncertainty.datasets.classification.cifar10c method)": [[42, "torch_uncertainty.datasets.classification.CIFAR10C.download"]], "make_dataset() (torch_uncertainty.datasets.classification.cifar10c method)": [[42, "torch_uncertainty.datasets.classification.CIFAR10C.make_dataset"]], "cifar10h (class in torch_uncertainty.datasets.classification)": [[43, "torch_uncertainty.datasets.classification.CIFAR10H"]], "cifar10n (class in torch_uncertainty.datasets.classification)": [[44, "torch_uncertainty.datasets.classification.CIFAR10N"]], "imageneta (class in torch_uncertainty.datasets.classification)": [[45, "torch_uncertainty.datasets.classification.ImageNetA"]], "imagenetc (class in torch_uncertainty.datasets.classification)": [[46, "torch_uncertainty.datasets.classification.ImageNetC"]], "imageneto (class in torch_uncertainty.datasets.classification)": [[47, "torch_uncertainty.datasets.classification.ImageNetO"]], "imagenetr (class in torch_uncertainty.datasets.classification)": [[48, "torch_uncertainty.datasets.classification.ImageNetR"]], "mnistc (class in torch_uncertainty.datasets.classification)": [[49, "torch_uncertainty.datasets.classification.MNISTC"]], "download() (torch_uncertainty.datasets.classification.mnistc method)": [[49, "torch_uncertainty.datasets.classification.MNISTC.download"]], "make_dataset() (torch_uncertainty.datasets.classification.mnistc method)": [[49, "torch_uncertainty.datasets.classification.MNISTC.make_dataset"]], "notmnist (class in torch_uncertainty.datasets.classification)": [[50, "torch_uncertainty.datasets.classification.NotMNIST"]], "openimageo (class in torch_uncertainty.datasets.classification)": [[51, "torch_uncertainty.datasets.classification.OpenImageO"]], "tinyimagenet (class in torch_uncertainty.datasets.classification)": [[52, "torch_uncertainty.datasets.classification.TinyImageNet"]], "tinyimagenetc (class in torch_uncertainty.datasets.classification)": [[53, "torch_uncertainty.datasets.classification.TinyImageNetC"]], "download() (torch_uncertainty.datasets.classification.tinyimagenetc method)": [[53, "torch_uncertainty.datasets.classification.TinyImageNetC.download"]], "bankmarketing (class in torch_uncertainty.datasets.classification.uci)": [[54, "torch_uncertainty.datasets.classification.uci.BankMarketing"]], "download() (torch_uncertainty.datasets.classification.uci.bankmarketing method)": [[54, "torch_uncertainty.datasets.classification.uci.BankMarketing.download"]], "dota2games (class in torch_uncertainty.datasets.classification.uci)": [[55, "torch_uncertainty.datasets.classification.uci.DOTA2Games"]], "download() (torch_uncertainty.datasets.classification.uci.dota2games method)": [[55, "torch_uncertainty.datasets.classification.uci.DOTA2Games.download"]], "htru2 (class in torch_uncertainty.datasets.classification.uci)": [[56, "torch_uncertainty.datasets.classification.uci.HTRU2"]], "onlineshoppers (class in torch_uncertainty.datasets.classification.uci)": [[57, "torch_uncertainty.datasets.classification.uci.OnlineShoppers"]], "spambase (class in torch_uncertainty.datasets.classification.uci)": [[58, "torch_uncertainty.datasets.classification.uci.SpamBase"]], "uciregression (class in torch_uncertainty.datasets.regression)": [[59, "torch_uncertainty.datasets.regression.UCIRegression"]], "download() (torch_uncertainty.datasets.regression.uciregression method)": [[59, "torch_uncertainty.datasets.regression.UCIRegression.download"]], "camvid (class in torch_uncertainty.datasets.segmentation)": [[60, "torch_uncertainty.datasets.segmentation.CamVid"]], "color_palette (torch_uncertainty.datasets.segmentation.camvid property)": [[60, "torch_uncertainty.datasets.segmentation.CamVid.color_palette"]], "decode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[60, "torch_uncertainty.datasets.segmentation.CamVid.decode_target"]], "download() (torch_uncertainty.datasets.segmentation.camvid method)": [[60, "torch_uncertainty.datasets.segmentation.CamVid.download"]], "encode_target() (torch_uncertainty.datasets.segmentation.camvid method)": [[60, "torch_uncertainty.datasets.segmentation.CamVid.encode_target"]], "cityscapes (class in torch_uncertainty.datasets.segmentation)": [[61, "torch_uncertainty.datasets.segmentation.Cityscapes"]], "color_palette (torch_uncertainty.datasets.segmentation.cityscapes property)": [[61, "torch_uncertainty.datasets.segmentation.Cityscapes.color_palette"]], "decode_target() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[61, "torch_uncertainty.datasets.segmentation.Cityscapes.decode_target"]], "encode_target() (torch_uncertainty.datasets.segmentation.cityscapes class method)": [[61, "torch_uncertainty.datasets.segmentation.Cityscapes.encode_target"]], "plot_sample() (torch_uncertainty.datasets.segmentation.cityscapes method)": [[61, "torch_uncertainty.datasets.segmentation.Cityscapes.plot_sample"]], "batchconv2d (class in torch_uncertainty.layers)": [[62, "torch_uncertainty.layers.BatchConv2d"]], "batchlinear (class in torch_uncertainty.layers)": [[63, "torch_uncertainty.layers.BatchLinear"]], "maskedconv2d (class in torch_uncertainty.layers)": [[64, "torch_uncertainty.layers.MaskedConv2d"]], "maskedlinear (class in torch_uncertainty.layers)": [[65, "torch_uncertainty.layers.MaskedLinear"]], "packedconv2d (class in torch_uncertainty.layers)": [[66, "torch_uncertainty.layers.PackedConv2d"]], "bias (torch_uncertainty.layers.packedconv2d property)": [[66, "torch_uncertainty.layers.PackedConv2d.bias"]], "weight (torch_uncertainty.layers.packedconv2d property)": [[66, "torch_uncertainty.layers.PackedConv2d.weight"]], "packedlinear (class in torch_uncertainty.layers)": [[67, "torch_uncertainty.layers.PackedLinear"]], "bayesconv1d (class in torch_uncertainty.layers.bayesian)": [[68, "torch_uncertainty.layers.bayesian.BayesConv1d"]], "bayesconv2d (class in torch_uncertainty.layers.bayesian)": [[69, "torch_uncertainty.layers.bayesian.BayesConv2d"]], "bayesconv3d (class in torch_uncertainty.layers.bayesian)": [[70, "torch_uncertainty.layers.bayesian.BayesConv3d"]], "bayeslinear (class in torch_uncertainty.layers.bayesian)": [[71, "torch_uncertainty.layers.bayesian.BayesLinear"]], "freeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[71, "torch_uncertainty.layers.bayesian.BayesLinear.freeze"]], "sample() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[71, "torch_uncertainty.layers.bayesian.BayesLinear.sample"]], "unfreeze() (torch_uncertainty.layers.bayesian.bayeslinear method)": [[71, "torch_uncertainty.layers.bayesian.BayesLinear.unfreeze"]], "lpbnnconv2d (class in torch_uncertainty.layers.bayesian)": [[72, "torch_uncertainty.layers.bayesian.LPBNNConv2d"]], "lpbnnlinear (class in torch_uncertainty.layers.bayesian)": [[73, "torch_uncertainty.layers.bayesian.LPBNNLinear"]], "bcewithlogitslsloss (class in torch_uncertainty.losses)": [[74, "torch_uncertainty.losses.BCEWithLogitsLSLoss"]], "betanll (class in torch_uncertainty.losses)": [[75, "torch_uncertainty.losses.BetaNLL"]], "confidencepenaltyloss (class in torch_uncertainty.losses)": [[76, "torch_uncertainty.losses.ConfidencePenaltyLoss"]], "forward() (torch_uncertainty.losses.confidencepenaltyloss method)": [[76, "torch_uncertainty.losses.ConfidencePenaltyLoss.forward"]], "conflictualloss (class in torch_uncertainty.losses)": [[77, "torch_uncertainty.losses.ConflictualLoss"]], "forward() (torch_uncertainty.losses.conflictualloss method)": [[77, "torch_uncertainty.losses.ConflictualLoss.forward"]], "decloss (class in torch_uncertainty.losses)": [[78, "torch_uncertainty.losses.DECLoss"]], "derloss (class in torch_uncertainty.losses)": [[79, "torch_uncertainty.losses.DERLoss"]], "distributionnllloss (class in torch_uncertainty.losses)": [[80, "torch_uncertainty.losses.DistributionNLLLoss"]], "forward() (torch_uncertainty.losses.distributionnllloss method)": [[80, "torch_uncertainty.losses.DistributionNLLLoss.forward"]], "elboloss (class in torch_uncertainty.losses)": [[81, "torch_uncertainty.losses.ELBOLoss"]], "forward() (torch_uncertainty.losses.elboloss method)": [[81, "torch_uncertainty.losses.ELBOLoss.forward"]], "focalloss (class in torch_uncertainty.losses)": [[82, "torch_uncertainty.losses.FocalLoss"]], "kldiv (class in torch_uncertainty.losses)": [[83, "torch_uncertainty.losses.KLDiv"]], "ause (class in torch_uncertainty.metrics)": [[84, "torch_uncertainty.metrics.AUSE"]], "compute() (torch_uncertainty.metrics.ause method)": [[84, "torch_uncertainty.metrics.AUSE.compute"]], "plot() (torch_uncertainty.metrics.ause method)": [[84, "torch_uncertainty.metrics.AUSE.plot"]], "update() (torch_uncertainty.metrics.ause method)": [[84, "torch_uncertainty.metrics.AUSE.update"]], "augrc (class in torch_uncertainty.metrics.classification)": [[85, "torch_uncertainty.metrics.classification.AUGRC"]], "compute() (torch_uncertainty.metrics.classification.augrc method)": [[85, "torch_uncertainty.metrics.classification.AUGRC.compute"]], "plot() (torch_uncertainty.metrics.classification.augrc method)": [[85, "torch_uncertainty.metrics.classification.AUGRC.plot"]], "aurc (class in torch_uncertainty.metrics.classification)": [[86, "torch_uncertainty.metrics.classification.AURC"]], "compute() (torch_uncertainty.metrics.classification.aurc method)": [[86, "torch_uncertainty.metrics.classification.AURC.compute"]], "partial_compute() (torch_uncertainty.metrics.classification.aurc method)": [[86, "torch_uncertainty.metrics.classification.AURC.partial_compute"]], "plot() (torch_uncertainty.metrics.classification.aurc method)": [[86, "torch_uncertainty.metrics.classification.AURC.plot"]], "update() (torch_uncertainty.metrics.classification.aurc method)": [[86, "torch_uncertainty.metrics.classification.AURC.update"]], "adaptivecalibrationerror (class in torch_uncertainty.metrics.classification)": [[87, "torch_uncertainty.metrics.classification.AdaptiveCalibrationError"]], "brierscore (class in torch_uncertainty.metrics.classification)": [[88, "torch_uncertainty.metrics.classification.BrierScore"]], "compute() (torch_uncertainty.metrics.classification.brierscore method)": [[88, "torch_uncertainty.metrics.classification.BrierScore.compute"]], "update() (torch_uncertainty.metrics.classification.brierscore method)": [[88, "torch_uncertainty.metrics.classification.BrierScore.update"]], "calibrationerror (class in torch_uncertainty.metrics.classification)": [[89, "torch_uncertainty.metrics.classification.CalibrationError"]], "categoricalnll (class in torch_uncertainty.metrics.classification)": [[90, "torch_uncertainty.metrics.classification.CategoricalNLL"]], "compute() (torch_uncertainty.metrics.classification.categoricalnll method)": [[90, "torch_uncertainty.metrics.classification.CategoricalNLL.compute"]], "update() (torch_uncertainty.metrics.classification.categoricalnll method)": [[90, "torch_uncertainty.metrics.classification.CategoricalNLL.update"]], "covat5risk (class in torch_uncertainty.metrics.classification)": [[91, "torch_uncertainty.metrics.classification.CovAt5Risk"]], "covatxrisk (class in torch_uncertainty.metrics.classification)": [[92, "torch_uncertainty.metrics.classification.CovAtxRisk"]], "compute() (torch_uncertainty.metrics.classification.covatxrisk method)": [[92, "torch_uncertainty.metrics.classification.CovAtxRisk.compute"]], "update() (torch_uncertainty.metrics.classification.covatxrisk method)": [[92, "torch_uncertainty.metrics.classification.CovAtxRisk.update"]], "disagreement (class in torch_uncertainty.metrics.classification)": [[93, "torch_uncertainty.metrics.classification.Disagreement"]], "compute() (torch_uncertainty.metrics.classification.disagreement method)": [[93, "torch_uncertainty.metrics.classification.Disagreement.compute"]], "update() (torch_uncertainty.metrics.classification.disagreement method)": [[93, "torch_uncertainty.metrics.classification.Disagreement.update"]], "entropy (class in torch_uncertainty.metrics.classification)": [[94, "torch_uncertainty.metrics.classification.Entropy"]], "compute() (torch_uncertainty.metrics.classification.entropy method)": [[94, "torch_uncertainty.metrics.classification.Entropy.compute"]], "update() (torch_uncertainty.metrics.classification.entropy method)": [[94, "torch_uncertainty.metrics.classification.Entropy.update"]], "fpr95 (class in torch_uncertainty.metrics.classification)": [[95, "torch_uncertainty.metrics.classification.FPR95"]], "fprx (class in torch_uncertainty.metrics.classification)": [[96, "torch_uncertainty.metrics.classification.FPRx"]], "compute() (torch_uncertainty.metrics.classification.fprx method)": [[96, "torch_uncertainty.metrics.classification.FPRx.compute"]], "update() (torch_uncertainty.metrics.classification.fprx method)": [[96, "torch_uncertainty.metrics.classification.FPRx.update"]], "groupingloss (class in torch_uncertainty.metrics.classification)": [[97, "torch_uncertainty.metrics.classification.GroupingLoss"]], "compute() (torch_uncertainty.metrics.classification.groupingloss method)": [[97, "torch_uncertainty.metrics.classification.GroupingLoss.compute"]], "update() (torch_uncertainty.metrics.classification.groupingloss method)": [[97, "torch_uncertainty.metrics.classification.GroupingLoss.update"]], "meanintersectionoverunion (class in torch_uncertainty.metrics.classification)": [[98, "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion"]], "compute() (torch_uncertainty.metrics.classification.meanintersectionoverunion method)": [[98, "torch_uncertainty.metrics.classification.MeanIntersectionOverUnion.compute"]], "mutualinformation (class in torch_uncertainty.metrics.classification)": [[99, "torch_uncertainty.metrics.classification.MutualInformation"]], "compute() (torch_uncertainty.metrics.classification.mutualinformation method)": [[99, "torch_uncertainty.metrics.classification.MutualInformation.compute"]], "update() (torch_uncertainty.metrics.classification.mutualinformation method)": [[99, "torch_uncertainty.metrics.classification.MutualInformation.update"]], "riskat80cov (class in torch_uncertainty.metrics.classification)": [[100, "torch_uncertainty.metrics.classification.RiskAt80Cov"]], "riskatxcov (class in torch_uncertainty.metrics.classification)": [[101, "torch_uncertainty.metrics.classification.RiskAtxCov"]], "compute() (torch_uncertainty.metrics.classification.riskatxcov method)": [[101, "torch_uncertainty.metrics.classification.RiskAtxCov.compute"]], "update() (torch_uncertainty.metrics.classification.riskatxcov method)": [[101, "torch_uncertainty.metrics.classification.RiskAtxCov.update"]], "variationratio (class in torch_uncertainty.metrics.classification)": [[102, "torch_uncertainty.metrics.classification.VariationRatio"]], "compute() (torch_uncertainty.metrics.classification.variationratio method)": [[102, "torch_uncertainty.metrics.classification.VariationRatio.compute"]], "distributionnll (class in torch_uncertainty.metrics.regression)": [[103, "torch_uncertainty.metrics.regression.DistributionNLL"]], "compute() (torch_uncertainty.metrics.regression.distributionnll method)": [[103, "torch_uncertainty.metrics.regression.DistributionNLL.compute"]], "update() (torch_uncertainty.metrics.regression.distributionnll method)": [[103, "torch_uncertainty.metrics.regression.DistributionNLL.update"]], "log10 (class in torch_uncertainty.metrics.regression)": [[104, "torch_uncertainty.metrics.regression.Log10"]], "update() (torch_uncertainty.metrics.regression.log10 method)": [[104, "torch_uncertainty.metrics.regression.Log10.update"]], "meanabsoluteerrorinverse (class in torch_uncertainty.metrics.regression)": [[105, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse"]], "update() (torch_uncertainty.metrics.regression.meanabsoluteerrorinverse method)": [[105, "torch_uncertainty.metrics.regression.MeanAbsoluteErrorInverse.update"]], "meangtrelativeabsoluteerror (class in torch_uncertainty.metrics.regression)": [[106, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError"]], "update() (torch_uncertainty.metrics.regression.meangtrelativeabsoluteerror method)": [[106, "torch_uncertainty.metrics.regression.MeanGTRelativeAbsoluteError.update"]], "meangtrelativesquarederror (class in torch_uncertainty.metrics.regression)": [[107, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError"]], "update() (torch_uncertainty.metrics.regression.meangtrelativesquarederror method)": [[107, "torch_uncertainty.metrics.regression.MeanGTRelativeSquaredError.update"]], "meansquarederrorinverse (class in torch_uncertainty.metrics.regression)": [[108, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse"]], "update() (torch_uncertainty.metrics.regression.meansquarederrorinverse method)": [[108, "torch_uncertainty.metrics.regression.MeanSquaredErrorInverse.update"]], "meansquaredlogerror (class in torch_uncertainty.metrics.regression)": [[109, "torch_uncertainty.metrics.regression.MeanSquaredLogError"]], "update() (torch_uncertainty.metrics.regression.meansquaredlogerror method)": [[109, "torch_uncertainty.metrics.regression.MeanSquaredLogError.update"]], "silog (class in torch_uncertainty.metrics.regression)": [[110, "torch_uncertainty.metrics.regression.SILog"]], "compute() (torch_uncertainty.metrics.regression.silog method)": [[110, "torch_uncertainty.metrics.regression.SILog.compute"]], "update() (torch_uncertainty.metrics.regression.silog method)": [[110, "torch_uncertainty.metrics.regression.SILog.update"]], "thresholdaccuracy (class in torch_uncertainty.metrics.regression)": [[111, "torch_uncertainty.metrics.regression.ThresholdAccuracy"]], "compute() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[111, "torch_uncertainty.metrics.regression.ThresholdAccuracy.compute"]], "update() (torch_uncertainty.metrics.regression.thresholdaccuracy method)": [[111, "torch_uncertainty.metrics.regression.ThresholdAccuracy.update"]], "checkpointensemble (class in torch_uncertainty.models)": [[112, "torch_uncertainty.models.CheckpointEnsemble"]], "eval_forward() (torch_uncertainty.models.checkpointensemble method)": [[112, "torch_uncertainty.models.CheckpointEnsemble.eval_forward"]], "update_wrapper() (torch_uncertainty.models.checkpointensemble method)": [[112, "torch_uncertainty.models.CheckpointEnsemble.update_wrapper"]], "ema (class in torch_uncertainty.models)": [[113, "torch_uncertainty.models.EMA"]], "update_wrapper() (torch_uncertainty.models.ema method)": [[113, "torch_uncertainty.models.EMA.update_wrapper"]], "mcdropout (class in torch_uncertainty.models)": [[114, "torch_uncertainty.models.MCDropout"]], "forward() (torch_uncertainty.models.mcdropout method)": [[114, "torch_uncertainty.models.MCDropout.forward"]], "train() (torch_uncertainty.models.mcdropout method)": [[114, "torch_uncertainty.models.MCDropout.train"]], "swa (class in torch_uncertainty.models)": [[115, "torch_uncertainty.models.SWA"]], "swag (class in torch_uncertainty.models)": [[116, "torch_uncertainty.models.SWAG"]], "bn_update() (torch_uncertainty.models.swag method)": [[116, "torch_uncertainty.models.SWAG.bn_update"]], "eval_forward() (torch_uncertainty.models.swag method)": [[116, "torch_uncertainty.models.SWAG.eval_forward"]], "initialize_stats() (torch_uncertainty.models.swag method)": [[116, "torch_uncertainty.models.SWAG.initialize_stats"]], "sample() (torch_uncertainty.models.swag method)": [[116, "torch_uncertainty.models.SWAG.sample"]], "state_dict() (torch_uncertainty.models.swag method)": [[116, "torch_uncertainty.models.SWAG.state_dict"]], "update_wrapper() (torch_uncertainty.models.swag method)": [[116, "torch_uncertainty.models.SWAG.update_wrapper"]], "stochasticmodel (class in torch_uncertainty.models)": [[117, "torch_uncertainty.models.StochasticModel"]], "deep_ensembles() (in module torch_uncertainty.models)": [[118, "torch_uncertainty.models.deep_ensembles"]], "mc_dropout() (in module torch_uncertainty.models)": [[119, "torch_uncertainty.models.mc_dropout"]], "laplaceapprox (class in torch_uncertainty.post_processing)": [[120, "torch_uncertainty.post_processing.LaplaceApprox"]], "mcbatchnorm (class in torch_uncertainty.post_processing)": [[121, "torch_uncertainty.post_processing.MCBatchNorm"]], "fit() (torch_uncertainty.post_processing.mcbatchnorm method)": [[121, "torch_uncertainty.post_processing.MCBatchNorm.fit"]], "raise_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[121, "torch_uncertainty.post_processing.MCBatchNorm.raise_counters"]], "replace_layers() (torch_uncertainty.post_processing.mcbatchnorm method)": [[121, "torch_uncertainty.post_processing.MCBatchNorm.replace_layers"]], "reset_counters() (torch_uncertainty.post_processing.mcbatchnorm method)": [[121, "torch_uncertainty.post_processing.MCBatchNorm.reset_counters"]], "set_accumulate() (torch_uncertainty.post_processing.mcbatchnorm method)": [[121, "torch_uncertainty.post_processing.MCBatchNorm.set_accumulate"]], "matrixscaler (class in torch_uncertainty.post_processing)": [[122, "torch_uncertainty.post_processing.MatrixScaler"]], "fit() (torch_uncertainty.post_processing.matrixscaler method)": [[122, "torch_uncertainty.post_processing.MatrixScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.matrixscaler method)": [[122, "torch_uncertainty.post_processing.MatrixScaler.set_temperature"]], "temperaturescaler (class in torch_uncertainty.post_processing)": [[123, "torch_uncertainty.post_processing.TemperatureScaler"]], "fit() (torch_uncertainty.post_processing.temperaturescaler method)": [[123, "torch_uncertainty.post_processing.TemperatureScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.temperaturescaler method)": [[123, "torch_uncertainty.post_processing.TemperatureScaler.set_temperature"]], "vectorscaler (class in torch_uncertainty.post_processing)": [[124, "torch_uncertainty.post_processing.VectorScaler"]], "fit() (torch_uncertainty.post_processing.vectorscaler method)": [[124, "torch_uncertainty.post_processing.VectorScaler.fit"]], "set_temperature() (torch_uncertainty.post_processing.vectorscaler method)": [[124, "torch_uncertainty.post_processing.VectorScaler.set_temperature"]], "classificationroutine (class in torch_uncertainty.routines)": [[125, "torch_uncertainty.routines.ClassificationRoutine"]], "forward() (torch_uncertainty.routines.classificationroutine method)": [[125, "torch_uncertainty.routines.ClassificationRoutine.forward"]], "pixelregressionroutine (class in torch_uncertainty.routines)": [[126, "torch_uncertainty.routines.PixelRegressionRoutine"]], "forward() (torch_uncertainty.routines.pixelregressionroutine method)": [[126, "torch_uncertainty.routines.PixelRegressionRoutine.forward"]], "regressionroutine (class in torch_uncertainty.routines)": [[127, "torch_uncertainty.routines.RegressionRoutine"]], "forward() (torch_uncertainty.routines.regressionroutine method)": [[127, "torch_uncertainty.routines.RegressionRoutine.forward"]], "segmentationroutine (class in torch_uncertainty.routines)": [[128, "torch_uncertainty.routines.SegmentationRoutine"]], "forward() (torch_uncertainty.routines.segmentationroutine method)": [[128, "torch_uncertainty.routines.SegmentationRoutine.forward"]], "log_segmentation_plots() (torch_uncertainty.routines.segmentationroutine method)": [[128, "torch_uncertainty.routines.SegmentationRoutine.log_segmentation_plots"]]}})