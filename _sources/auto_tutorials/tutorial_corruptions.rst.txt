
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/tutorial_corruptions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_tutorials_tutorial_corruptions.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_tutorial_corruptions.py:


Image Corruptions
=================

This tutorial shows the impact of the different corruptions available in the
TorchUncertainty library. These corruptions were first proposed in the paper
Benchmarking Neural Network Robustness to Common Corruptions and Perturbations
by Dan Hendrycks and Thomas Dietterich.

For this tutorial, we will only load the corruption transforms available in 
torch_uncertainty.transforms.corruptions. We also need to load utilities from
torchvision and matplotlib.

.. GENERATED FROM PYTHON SOURCE LINES 14-42

.. code-block:: Python

    import torch
    from torchvision.datasets import CIFAR10
    from torchvision.transforms import Compose, ToTensor, Resize

    from torchvision.utils import make_grid
    import matplotlib.pyplot as plt
    plt.axis('off')
    ds = CIFAR10("./data", train=False, download=True)

    def get_images(main_transform, severity):
        ds_transforms = Compose([ToTensor(), main_transform(severity), Resize(256)])
        ds = CIFAR10("./data", train=False, download=False, transform=ds_transforms)
        return make_grid([ds[i][0] for i in range(6)]).permute(1, 2, 0)

    def show_images(transform):
        print("Original Images")
        with torch.no_grad():
            plt.axis('off')
            plt.imshow(get_images(transform, 0))
            plt.show()

        for severity in range(1, 6):
            print(f"Severity {severity}")
            with torch.no_grad():
                plt.axis('off')
                plt.imshow(get_images(transform, severity))
                plt.show()




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_001.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./data/cifar-10-python.tar.gz
      0%|          | 0/170498071 [00:00<?, ?it/s]      0%|          | 32768/170498071 [00:00<10:20, 274528.16it/s]      0%|          | 229376/170498071 [00:00<02:39, 1067672.80it/s]      1%|          | 917504/170498071 [00:00<00:53, 3177427.72it/s]      2%|▏         | 3604480/170498071 [00:00<00:14, 11217948.90it/s]      5%|▌         | 9240576/170498071 [00:00<00:06, 26032629.39it/s]      7%|▋         | 12746752/170498071 [00:00<00:05, 28823297.92it/s]     11%|█         | 18907136/170498071 [00:00<00:04, 37018435.89it/s]     14%|█▍        | 24674304/170498071 [00:00<00:03, 43130242.29it/s]     17%|█▋        | 29065216/170498071 [00:00<00:03, 41903976.50it/s]     20%|██        | 34603008/170498071 [00:01<00:02, 45754258.84it/s]     23%|██▎       | 39419904/170498071 [00:01<00:02, 46444807.14it/s]     26%|██▌       | 44498944/170498071 [00:01<00:02, 47496402.89it/s]     29%|██▉       | 49807360/170498071 [00:01<00:02, 49122540.64it/s]     32%|███▏      | 54755328/170498071 [00:01<00:02, 46971067.75it/s]     35%|███▌      | 60227584/170498071 [00:01<00:02, 48391453.37it/s]     38%|███▊      | 65634304/170498071 [00:01<00:02, 49996615.25it/s]     41%|████▏     | 70680576/170498071 [00:01<00:02, 47648632.50it/s]     45%|████▍     | 76185600/170498071 [00:01<00:01, 49101659.21it/s]     48%|████▊     | 81461248/170498071 [00:02<00:01, 50046585.27it/s]     51%|█████     | 86507520/170498071 [00:02<00:01, 47795285.38it/s]     54%|█████▍    | 92110848/170498071 [00:02<00:01, 50034921.55it/s]     57%|█████▋    | 97157120/170498071 [00:02<00:01, 49757955.85it/s]     60%|█████▉    | 102170624/170498071 [00:02<00:01, 47456128.70it/s]     63%|██████▎   | 107937792/170498071 [00:02<00:01, 50270608.86it/s]     66%|██████▋   | 113016832/170498071 [00:02<00:01, 47731723.30it/s]     69%|██████▉   | 117866496/170498071 [00:02<00:01, 46923231.53it/s]     72%|███████▏  | 123109376/170498071 [00:02<00:00, 48449004.15it/s]     75%|███████▌  | 128122880/170498071 [00:03<00:00, 48904551.41it/s]     78%|███████▊  | 133070848/170498071 [00:03<00:00, 48793403.28it/s]     81%|████████  | 137986048/170498071 [00:03<00:00, 47209112.73it/s]     84%|████████▍ | 142934016/170498071 [00:03<00:00, 47852691.49it/s]     87%|████████▋ | 147750912/170498071 [00:03<00:00, 47506297.99it/s]     90%|████████▉ | 153092096/170498071 [00:03<00:00, 49210757.75it/s]     93%|█████████▎| 158040064/170498071 [00:03<00:00, 49289797.22it/s]     96%|█████████▌| 162988032/170498071 [00:03<00:00, 47874536.57it/s]     98%|█████████▊| 167804928/170498071 [00:03<00:00, 47716840.11it/s]    100%|██████████| 170498071/170498071 [00:03<00:00, 43778001.17it/s]
    Extracting ./data/cifar-10-python.tar.gz to ./data




.. GENERATED FROM PYTHON SOURCE LINES 43-45

1. Gaussian Noise
~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    from torch_uncertainty.transforms.corruptions import GaussianNoise

    show_images(GaussianNoise)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_002.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    /opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
      warnings.warn(
    Severity 1
    Severity 2
    Severity 3
    Severity 4
    Severity 5




.. GENERATED FROM PYTHON SOURCE LINES 50-52

2. Shot Noise
~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 52-56

.. code-block:: Python

    from torch_uncertainty.transforms.corruptions import ShotNoise

    show_images(ShotNoise)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_003.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    Severity 1
    Severity 2
    Severity 3
    Severity 4
    Severity 5




.. GENERATED FROM PYTHON SOURCE LINES 57-59

3. Impulse Noise
~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 59-63

.. code-block:: Python

    from torch_uncertainty.transforms.corruptions import ImpulseNoise

    show_images(ImpulseNoise)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_004.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    Severity 1
    Severity 2
    Severity 3
    Severity 4
    Severity 5




.. GENERATED FROM PYTHON SOURCE LINES 64-66

4. Speckle Noise
~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 66-70

.. code-block:: Python

    from torch_uncertainty.transforms.corruptions import SpeckleNoise

    show_images(SpeckleNoise)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_005.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    Severity 1
    Severity 2
    Severity 3
    Severity 4
    Severity 5




.. GENERATED FROM PYTHON SOURCE LINES 71-73

5. Gaussian Blur
~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 73-77

.. code-block:: Python

    from torch_uncertainty.transforms.corruptions import GaussianBlur

    show_images(GaussianBlur)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_006.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    Severity 1
    Severity 2
    Severity 3
    Severity 4
    Severity 5




.. GENERATED FROM PYTHON SOURCE LINES 78-80

6. Glass Blur
~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 80-84

.. code-block:: Python

    from torch_uncertainty.transforms.corruptions import GlassBlur

    show_images(GlassBlur)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_007.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    Severity 1
    Severity 2
    Severity 3
    Severity 4
    Severity 5




.. GENERATED FROM PYTHON SOURCE LINES 85-87

7. Defocus Blur
~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 87-92

.. code-block:: Python


    from torch_uncertainty.transforms.corruptions import DefocusBlur

    show_images(DefocusBlur)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_008.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_008.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    Severity 1
    Severity 2
    Severity 3
    Severity 4
    Severity 5




.. GENERATED FROM PYTHON SOURCE LINES 93-95

8. JPEG Compression
~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 95-99

.. code-block:: Python

    from torch_uncertainty.transforms.corruptions import JPEGCompression

    show_images(JPEGCompression)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_009.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_009.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    Severity 1
    Severity 2
    Severity 3
    Severity 4
    Severity 5




.. GENERATED FROM PYTHON SOURCE LINES 100-102

9. Pixelate
~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 102-106

.. code-block:: Python

    from torch_uncertainty.transforms.corruptions import Pixelate

    show_images(Pixelate)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_010.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_010.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    Severity 1
    Severity 2
    Severity 3
    Severity 4
    Severity 5




.. GENERATED FROM PYTHON SOURCE LINES 107-109

10. Frost
~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 109-113

.. code-block:: Python

    from torch_uncertainty.transforms.corruptions import Frost

    show_images(Frost)




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruptions_011.png
   :alt: tutorial corruptions
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruptions_011.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Original Images
    Downloading https://zenodo.org/records/10438904/files/frost.zip to data/frost.zip
      0%|          | 0/1780178 [00:00<?, ?it/s]      2%|▏         | 32768/1780178 [00:00<00:08, 204331.60it/s]      4%|▎         | 65536/1780178 [00:00<00:08, 203956.68it/s]      7%|▋         | 131072/1780178 [00:00<00:05, 296143.71it/s]     13%|█▎        | 229376/1780178 [00:00<00:03, 421159.31it/s]     26%|██▌       | 458752/1780178 [00:00<00:01, 783493.83it/s]     50%|████▉     | 884736/1780178 [00:00<00:00, 1417714.48it/s]     98%|█████████▊| 1736704/1780178 [00:01<00:00, 2685719.76it/s]    100%|██████████| 1780178/1780178 [00:01<00:00, 1580305.67it/s]
    Extracting data/frost.zip to data
    Downloaded frost.zip to data
    Severity 1
    Files already downloaded and verified
    Severity 2
    Files already downloaded and verified
    Severity 3
    Files already downloaded and verified
    Severity 4
    Files already downloaded and verified
    Severity 5
    Files already downloaded and verified




.. GENERATED FROM PYTHON SOURCE LINES 114-118

Reference
---------

- **Benchmarking Neural Network Robustness to Common Corruptions and Perturbations**, Dan Hendrycks and Thomas Dietterich. `ICLR 2019 <https://arxiv.org/pdf/1903.12261>`_.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 30.677 seconds)


.. _sphx_glr_download_auto_tutorials_tutorial_corruptions.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tutorial_corruptions.ipynb <tutorial_corruptions.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tutorial_corruptions.py <tutorial_corruptions.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
