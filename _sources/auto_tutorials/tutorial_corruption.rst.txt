
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/tutorial_corruption.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_tutorials_tutorial_corruption.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_tutorial_corruption.py:


Corrupting Images with TorchUncertainty to Benchmark Robustness
===============================================================

This tutorial shows the impact of the different corruption transforms available in the
TorchUncertainty library. These corruption transforms were first proposed in the paper
Benchmarking Neural Network Robustness to Common Corruptions and Perturbations
by Dan Hendrycks and Thomas Dietterich.

For this tutorial, we will only load the corruption transforms available in 
torch_uncertainty.transforms.corruption. We also need to load utilities from
torchvision and matplotlib.

.. GENERATED FROM PYTHON SOURCE LINES 15-73

.. code-block:: Python

    from torchvision.transforms import Compose, ToTensor, Resize, CenterCrop

    import matplotlib.pyplot as plt
    from PIL import Image
    from urllib import request

    urls = [
        "https://upload.wikimedia.org/wikipedia/commons/d/d9/Carduelis_tristis_-Michigan%2C_USA_-male-8.jpg",
        "https://upload.wikimedia.org/wikipedia/commons/5/5d/Border_Collie_Blanca_y_Negra_Hembra_%28Belen%2C_Border_Collie_Los_Baganes%29.png",
        "https://upload.wikimedia.org/wikipedia/commons/f/f8/Birmakatze_Seal-Point.jpg",
        "https://upload.wikimedia.org/wikipedia/commons/a/a9/Garranos_fight.jpg",
        "https://upload.wikimedia.org/wikipedia/commons/8/8b/Cottontail_Rabbit.jpg",
    ]

    def download_img(url, i):
        request.urlretrieve(url, f"tmp_{i}.png")
        return Image.open(f"tmp_{i}.png").convert('RGB')

    images_ds = [download_img(url, i) for i, url in enumerate(urls)]


    def get_images(main_corruption, index: int = 0):
        """Create an image showing the 6 levels of corruption of a given transform."""
        images = []
        for severity in range(6):
            transforms = Compose(
                [Resize(256, antialias=True), CenterCrop(256), ToTensor(), main_corruption(severity), CenterCrop(224)]
            )
            images.append(transforms(images_ds[index]).permute(1, 2, 0).numpy())
        return images


    def show_images(transforms):
        """Show the effect of all given transforms."""
        num_corruptions = len(transforms)
        _, ax = plt.subplots(num_corruptions, 6, figsize=(10, int(1.5 * num_corruptions)))
        for i, transform in enumerate(transforms):
            images = get_images(transform, index=i)
            ax[i][0].text(
                -0.1,
                0.5,
                transform.__name__,
                transform=ax[i][0].transAxes,
                rotation="vertical",
                horizontalalignment="right",
                verticalalignment="center",
                fontsize=12,
            )
            for j in range(6):
                ax[i][j].imshow(images[j])
                if i == 0 and j == 0:
                    ax[i][j].set_title("Original")
                elif i == 0:
                    ax[i][j].set_title(f"Severity {j}")
                ax[i][j].axis("off")
        plt.show()









.. GENERATED FROM PYTHON SOURCE LINES 74-76

1. Noise Corruptions
~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 76-90

.. code-block:: Python

    from torch_uncertainty.transforms.corruption import (
        GaussianNoise,
        ShotNoise,
        ImpulseNoise,
    )

    show_images(
        [
            GaussianNoise,
            ShotNoise,
            ImpulseNoise,
        ]
    )




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruption_001.png
   :alt: Original, Severity 1, Severity 2, Severity 3, Severity 4, Severity 5
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruption_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-93

2. Blur Corruptions
~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: Python

    from torch_uncertainty.transforms.corruption import (
        MotionBlur,
        GlassBlur,
        DefocusBlur,
        ZoomBlur,
    )

    show_images(
        [
            GlassBlur,
            MotionBlur,
            DefocusBlur,
            ZoomBlur,
        ]
    )




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruption_002.png
   :alt: Original, Severity 1, Severity 2, Severity 3, Severity 4, Severity 5
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruption_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 110-112

3. Weather Corruptions
~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 112-126

.. code-block:: Python

    from torch_uncertainty.transforms.corruption import (
        Frost,
        Snow,
        Fog,
    )

    show_images(
        [
            Fog,
            Frost,
            Snow,
        ]
    )




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruption_003.png
   :alt: Original, Severity 1, Severity 2, Severity 3, Severity 4, Severity 5
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruption_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0.00/1.78M [00:00<?, ?B/s]     52%|█████▏    | 918k/1.78M [00:00<00:00, 9.16MB/s]    100%|██████████| 1.78M/1.78M [00:00<00:00, 15.1MB/s]




.. GENERATED FROM PYTHON SOURCE LINES 127-129

4. Other Corruptions
~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 129-143

.. code-block:: Python


    from torch_uncertainty.transforms.corruption import (
        Brightness, Contrast, Elastic, JPEGCompression, Pixelate)

    show_images(
        [
            Brightness,
            Contrast,
            JPEGCompression,
            Pixelate,
            Elastic,
        ]
    )




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruption_004.png
   :alt: Original, Severity 1, Severity 2, Severity 3, Severity 4, Severity 5
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruption_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 144-146

5. Unused Corruptions
~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 146-163

.. code-block:: Python


    # The following corruptions are not used in the paper Benchmarking Neural Network Robustness to Common Corruptions and Perturbations.

    from torch_uncertainty.transforms.corruption import (
        GaussianBlur,
        SpeckleNoise,
        Saturation,
    )

    show_images(
        [
            GaussianBlur,
            SpeckleNoise,
            Saturation,
        ]
    )




.. image-sg:: /auto_tutorials/images/sphx_glr_tutorial_corruption_005.png
   :alt: Original, Severity 1, Severity 2, Severity 3, Severity 4, Severity 5
   :srcset: /auto_tutorials/images/sphx_glr_tutorial_corruption_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-168

Reference
---------

- **Benchmarking Neural Network Robustness to Common Corruptions and Perturbations**, Dan Hendrycks and Thomas Dietterich. `ICLR 2019 <https://arxiv.org/pdf/1903.12261>`_.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 5.311 seconds)


.. _sphx_glr_download_auto_tutorials_tutorial_corruption.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tutorial_corruption.ipynb <tutorial_corruption.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tutorial_corruption.py <tutorial_corruption.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: tutorial_corruption.zip <tutorial_corruption.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
